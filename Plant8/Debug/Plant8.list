
Plant8.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004550  080000c0  080000c0  000010c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000258  08004610  08004610  00005610  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004868  08004868  00005870  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08004868  08004868  00005870  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08004868  08004870  00005870  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004868  08004868  00005868  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800486c  0800486c  0000586c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00005870  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000002ec  20000000  08004870  00006000  2**3
                  ALLOC
 10 ._user_heap_stack 00000604  200002ec  08004870  000062ec  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00005870  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002476  00000000  00000000  00005898  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000cb4  00000000  00000000  00007d0e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000278  00000000  00000000  000089c8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000001d7  00000000  00000000  00008c40  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00018f74  00000000  00000000  00008e17  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00004061  00000000  00000000  00021d8b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00091652  00000000  00000000  00025dec  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000b743e  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b0c  00000000  00000000  000b7484  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000062  00000000  00000000  000b7f90  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	@ (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	@ (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	@ (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000000 	.word	0x20000000
 80000e0:	00000000 	.word	0x00000000
 80000e4:	080045f8 	.word	0x080045f8

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	@ (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	@ (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	@ (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			@ (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000004 	.word	0x20000004
 8000104:	080045f8 	.word	0x080045f8

08000108 <__udivsi3>:
 8000108:	2200      	movs	r2, #0
 800010a:	0843      	lsrs	r3, r0, #1
 800010c:	428b      	cmp	r3, r1
 800010e:	d374      	bcc.n	80001fa <__udivsi3+0xf2>
 8000110:	0903      	lsrs	r3, r0, #4
 8000112:	428b      	cmp	r3, r1
 8000114:	d35f      	bcc.n	80001d6 <__udivsi3+0xce>
 8000116:	0a03      	lsrs	r3, r0, #8
 8000118:	428b      	cmp	r3, r1
 800011a:	d344      	bcc.n	80001a6 <__udivsi3+0x9e>
 800011c:	0b03      	lsrs	r3, r0, #12
 800011e:	428b      	cmp	r3, r1
 8000120:	d328      	bcc.n	8000174 <__udivsi3+0x6c>
 8000122:	0c03      	lsrs	r3, r0, #16
 8000124:	428b      	cmp	r3, r1
 8000126:	d30d      	bcc.n	8000144 <__udivsi3+0x3c>
 8000128:	22ff      	movs	r2, #255	@ 0xff
 800012a:	0209      	lsls	r1, r1, #8
 800012c:	ba12      	rev	r2, r2
 800012e:	0c03      	lsrs	r3, r0, #16
 8000130:	428b      	cmp	r3, r1
 8000132:	d302      	bcc.n	800013a <__udivsi3+0x32>
 8000134:	1212      	asrs	r2, r2, #8
 8000136:	0209      	lsls	r1, r1, #8
 8000138:	d065      	beq.n	8000206 <__udivsi3+0xfe>
 800013a:	0b03      	lsrs	r3, r0, #12
 800013c:	428b      	cmp	r3, r1
 800013e:	d319      	bcc.n	8000174 <__udivsi3+0x6c>
 8000140:	e000      	b.n	8000144 <__udivsi3+0x3c>
 8000142:	0a09      	lsrs	r1, r1, #8
 8000144:	0bc3      	lsrs	r3, r0, #15
 8000146:	428b      	cmp	r3, r1
 8000148:	d301      	bcc.n	800014e <__udivsi3+0x46>
 800014a:	03cb      	lsls	r3, r1, #15
 800014c:	1ac0      	subs	r0, r0, r3
 800014e:	4152      	adcs	r2, r2
 8000150:	0b83      	lsrs	r3, r0, #14
 8000152:	428b      	cmp	r3, r1
 8000154:	d301      	bcc.n	800015a <__udivsi3+0x52>
 8000156:	038b      	lsls	r3, r1, #14
 8000158:	1ac0      	subs	r0, r0, r3
 800015a:	4152      	adcs	r2, r2
 800015c:	0b43      	lsrs	r3, r0, #13
 800015e:	428b      	cmp	r3, r1
 8000160:	d301      	bcc.n	8000166 <__udivsi3+0x5e>
 8000162:	034b      	lsls	r3, r1, #13
 8000164:	1ac0      	subs	r0, r0, r3
 8000166:	4152      	adcs	r2, r2
 8000168:	0b03      	lsrs	r3, r0, #12
 800016a:	428b      	cmp	r3, r1
 800016c:	d301      	bcc.n	8000172 <__udivsi3+0x6a>
 800016e:	030b      	lsls	r3, r1, #12
 8000170:	1ac0      	subs	r0, r0, r3
 8000172:	4152      	adcs	r2, r2
 8000174:	0ac3      	lsrs	r3, r0, #11
 8000176:	428b      	cmp	r3, r1
 8000178:	d301      	bcc.n	800017e <__udivsi3+0x76>
 800017a:	02cb      	lsls	r3, r1, #11
 800017c:	1ac0      	subs	r0, r0, r3
 800017e:	4152      	adcs	r2, r2
 8000180:	0a83      	lsrs	r3, r0, #10
 8000182:	428b      	cmp	r3, r1
 8000184:	d301      	bcc.n	800018a <__udivsi3+0x82>
 8000186:	028b      	lsls	r3, r1, #10
 8000188:	1ac0      	subs	r0, r0, r3
 800018a:	4152      	adcs	r2, r2
 800018c:	0a43      	lsrs	r3, r0, #9
 800018e:	428b      	cmp	r3, r1
 8000190:	d301      	bcc.n	8000196 <__udivsi3+0x8e>
 8000192:	024b      	lsls	r3, r1, #9
 8000194:	1ac0      	subs	r0, r0, r3
 8000196:	4152      	adcs	r2, r2
 8000198:	0a03      	lsrs	r3, r0, #8
 800019a:	428b      	cmp	r3, r1
 800019c:	d301      	bcc.n	80001a2 <__udivsi3+0x9a>
 800019e:	020b      	lsls	r3, r1, #8
 80001a0:	1ac0      	subs	r0, r0, r3
 80001a2:	4152      	adcs	r2, r2
 80001a4:	d2cd      	bcs.n	8000142 <__udivsi3+0x3a>
 80001a6:	09c3      	lsrs	r3, r0, #7
 80001a8:	428b      	cmp	r3, r1
 80001aa:	d301      	bcc.n	80001b0 <__udivsi3+0xa8>
 80001ac:	01cb      	lsls	r3, r1, #7
 80001ae:	1ac0      	subs	r0, r0, r3
 80001b0:	4152      	adcs	r2, r2
 80001b2:	0983      	lsrs	r3, r0, #6
 80001b4:	428b      	cmp	r3, r1
 80001b6:	d301      	bcc.n	80001bc <__udivsi3+0xb4>
 80001b8:	018b      	lsls	r3, r1, #6
 80001ba:	1ac0      	subs	r0, r0, r3
 80001bc:	4152      	adcs	r2, r2
 80001be:	0943      	lsrs	r3, r0, #5
 80001c0:	428b      	cmp	r3, r1
 80001c2:	d301      	bcc.n	80001c8 <__udivsi3+0xc0>
 80001c4:	014b      	lsls	r3, r1, #5
 80001c6:	1ac0      	subs	r0, r0, r3
 80001c8:	4152      	adcs	r2, r2
 80001ca:	0903      	lsrs	r3, r0, #4
 80001cc:	428b      	cmp	r3, r1
 80001ce:	d301      	bcc.n	80001d4 <__udivsi3+0xcc>
 80001d0:	010b      	lsls	r3, r1, #4
 80001d2:	1ac0      	subs	r0, r0, r3
 80001d4:	4152      	adcs	r2, r2
 80001d6:	08c3      	lsrs	r3, r0, #3
 80001d8:	428b      	cmp	r3, r1
 80001da:	d301      	bcc.n	80001e0 <__udivsi3+0xd8>
 80001dc:	00cb      	lsls	r3, r1, #3
 80001de:	1ac0      	subs	r0, r0, r3
 80001e0:	4152      	adcs	r2, r2
 80001e2:	0883      	lsrs	r3, r0, #2
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d301      	bcc.n	80001ec <__udivsi3+0xe4>
 80001e8:	008b      	lsls	r3, r1, #2
 80001ea:	1ac0      	subs	r0, r0, r3
 80001ec:	4152      	adcs	r2, r2
 80001ee:	0843      	lsrs	r3, r0, #1
 80001f0:	428b      	cmp	r3, r1
 80001f2:	d301      	bcc.n	80001f8 <__udivsi3+0xf0>
 80001f4:	004b      	lsls	r3, r1, #1
 80001f6:	1ac0      	subs	r0, r0, r3
 80001f8:	4152      	adcs	r2, r2
 80001fa:	1a41      	subs	r1, r0, r1
 80001fc:	d200      	bcs.n	8000200 <__udivsi3+0xf8>
 80001fe:	4601      	mov	r1, r0
 8000200:	4152      	adcs	r2, r2
 8000202:	4610      	mov	r0, r2
 8000204:	4770      	bx	lr
 8000206:	e7ff      	b.n	8000208 <__udivsi3+0x100>
 8000208:	b501      	push	{r0, lr}
 800020a:	2000      	movs	r0, #0
 800020c:	f000 f8f0 	bl	80003f0 <__aeabi_idiv0>
 8000210:	bd02      	pop	{r1, pc}
 8000212:	46c0      	nop			@ (mov r8, r8)

08000214 <__aeabi_uidivmod>:
 8000214:	2900      	cmp	r1, #0
 8000216:	d0f7      	beq.n	8000208 <__udivsi3+0x100>
 8000218:	e776      	b.n	8000108 <__udivsi3>
 800021a:	4770      	bx	lr

0800021c <__divsi3>:
 800021c:	4603      	mov	r3, r0
 800021e:	430b      	orrs	r3, r1
 8000220:	d47f      	bmi.n	8000322 <__divsi3+0x106>
 8000222:	2200      	movs	r2, #0
 8000224:	0843      	lsrs	r3, r0, #1
 8000226:	428b      	cmp	r3, r1
 8000228:	d374      	bcc.n	8000314 <__divsi3+0xf8>
 800022a:	0903      	lsrs	r3, r0, #4
 800022c:	428b      	cmp	r3, r1
 800022e:	d35f      	bcc.n	80002f0 <__divsi3+0xd4>
 8000230:	0a03      	lsrs	r3, r0, #8
 8000232:	428b      	cmp	r3, r1
 8000234:	d344      	bcc.n	80002c0 <__divsi3+0xa4>
 8000236:	0b03      	lsrs	r3, r0, #12
 8000238:	428b      	cmp	r3, r1
 800023a:	d328      	bcc.n	800028e <__divsi3+0x72>
 800023c:	0c03      	lsrs	r3, r0, #16
 800023e:	428b      	cmp	r3, r1
 8000240:	d30d      	bcc.n	800025e <__divsi3+0x42>
 8000242:	22ff      	movs	r2, #255	@ 0xff
 8000244:	0209      	lsls	r1, r1, #8
 8000246:	ba12      	rev	r2, r2
 8000248:	0c03      	lsrs	r3, r0, #16
 800024a:	428b      	cmp	r3, r1
 800024c:	d302      	bcc.n	8000254 <__divsi3+0x38>
 800024e:	1212      	asrs	r2, r2, #8
 8000250:	0209      	lsls	r1, r1, #8
 8000252:	d065      	beq.n	8000320 <__divsi3+0x104>
 8000254:	0b03      	lsrs	r3, r0, #12
 8000256:	428b      	cmp	r3, r1
 8000258:	d319      	bcc.n	800028e <__divsi3+0x72>
 800025a:	e000      	b.n	800025e <__divsi3+0x42>
 800025c:	0a09      	lsrs	r1, r1, #8
 800025e:	0bc3      	lsrs	r3, r0, #15
 8000260:	428b      	cmp	r3, r1
 8000262:	d301      	bcc.n	8000268 <__divsi3+0x4c>
 8000264:	03cb      	lsls	r3, r1, #15
 8000266:	1ac0      	subs	r0, r0, r3
 8000268:	4152      	adcs	r2, r2
 800026a:	0b83      	lsrs	r3, r0, #14
 800026c:	428b      	cmp	r3, r1
 800026e:	d301      	bcc.n	8000274 <__divsi3+0x58>
 8000270:	038b      	lsls	r3, r1, #14
 8000272:	1ac0      	subs	r0, r0, r3
 8000274:	4152      	adcs	r2, r2
 8000276:	0b43      	lsrs	r3, r0, #13
 8000278:	428b      	cmp	r3, r1
 800027a:	d301      	bcc.n	8000280 <__divsi3+0x64>
 800027c:	034b      	lsls	r3, r1, #13
 800027e:	1ac0      	subs	r0, r0, r3
 8000280:	4152      	adcs	r2, r2
 8000282:	0b03      	lsrs	r3, r0, #12
 8000284:	428b      	cmp	r3, r1
 8000286:	d301      	bcc.n	800028c <__divsi3+0x70>
 8000288:	030b      	lsls	r3, r1, #12
 800028a:	1ac0      	subs	r0, r0, r3
 800028c:	4152      	adcs	r2, r2
 800028e:	0ac3      	lsrs	r3, r0, #11
 8000290:	428b      	cmp	r3, r1
 8000292:	d301      	bcc.n	8000298 <__divsi3+0x7c>
 8000294:	02cb      	lsls	r3, r1, #11
 8000296:	1ac0      	subs	r0, r0, r3
 8000298:	4152      	adcs	r2, r2
 800029a:	0a83      	lsrs	r3, r0, #10
 800029c:	428b      	cmp	r3, r1
 800029e:	d301      	bcc.n	80002a4 <__divsi3+0x88>
 80002a0:	028b      	lsls	r3, r1, #10
 80002a2:	1ac0      	subs	r0, r0, r3
 80002a4:	4152      	adcs	r2, r2
 80002a6:	0a43      	lsrs	r3, r0, #9
 80002a8:	428b      	cmp	r3, r1
 80002aa:	d301      	bcc.n	80002b0 <__divsi3+0x94>
 80002ac:	024b      	lsls	r3, r1, #9
 80002ae:	1ac0      	subs	r0, r0, r3
 80002b0:	4152      	adcs	r2, r2
 80002b2:	0a03      	lsrs	r3, r0, #8
 80002b4:	428b      	cmp	r3, r1
 80002b6:	d301      	bcc.n	80002bc <__divsi3+0xa0>
 80002b8:	020b      	lsls	r3, r1, #8
 80002ba:	1ac0      	subs	r0, r0, r3
 80002bc:	4152      	adcs	r2, r2
 80002be:	d2cd      	bcs.n	800025c <__divsi3+0x40>
 80002c0:	09c3      	lsrs	r3, r0, #7
 80002c2:	428b      	cmp	r3, r1
 80002c4:	d301      	bcc.n	80002ca <__divsi3+0xae>
 80002c6:	01cb      	lsls	r3, r1, #7
 80002c8:	1ac0      	subs	r0, r0, r3
 80002ca:	4152      	adcs	r2, r2
 80002cc:	0983      	lsrs	r3, r0, #6
 80002ce:	428b      	cmp	r3, r1
 80002d0:	d301      	bcc.n	80002d6 <__divsi3+0xba>
 80002d2:	018b      	lsls	r3, r1, #6
 80002d4:	1ac0      	subs	r0, r0, r3
 80002d6:	4152      	adcs	r2, r2
 80002d8:	0943      	lsrs	r3, r0, #5
 80002da:	428b      	cmp	r3, r1
 80002dc:	d301      	bcc.n	80002e2 <__divsi3+0xc6>
 80002de:	014b      	lsls	r3, r1, #5
 80002e0:	1ac0      	subs	r0, r0, r3
 80002e2:	4152      	adcs	r2, r2
 80002e4:	0903      	lsrs	r3, r0, #4
 80002e6:	428b      	cmp	r3, r1
 80002e8:	d301      	bcc.n	80002ee <__divsi3+0xd2>
 80002ea:	010b      	lsls	r3, r1, #4
 80002ec:	1ac0      	subs	r0, r0, r3
 80002ee:	4152      	adcs	r2, r2
 80002f0:	08c3      	lsrs	r3, r0, #3
 80002f2:	428b      	cmp	r3, r1
 80002f4:	d301      	bcc.n	80002fa <__divsi3+0xde>
 80002f6:	00cb      	lsls	r3, r1, #3
 80002f8:	1ac0      	subs	r0, r0, r3
 80002fa:	4152      	adcs	r2, r2
 80002fc:	0883      	lsrs	r3, r0, #2
 80002fe:	428b      	cmp	r3, r1
 8000300:	d301      	bcc.n	8000306 <__divsi3+0xea>
 8000302:	008b      	lsls	r3, r1, #2
 8000304:	1ac0      	subs	r0, r0, r3
 8000306:	4152      	adcs	r2, r2
 8000308:	0843      	lsrs	r3, r0, #1
 800030a:	428b      	cmp	r3, r1
 800030c:	d301      	bcc.n	8000312 <__divsi3+0xf6>
 800030e:	004b      	lsls	r3, r1, #1
 8000310:	1ac0      	subs	r0, r0, r3
 8000312:	4152      	adcs	r2, r2
 8000314:	1a41      	subs	r1, r0, r1
 8000316:	d200      	bcs.n	800031a <__divsi3+0xfe>
 8000318:	4601      	mov	r1, r0
 800031a:	4152      	adcs	r2, r2
 800031c:	4610      	mov	r0, r2
 800031e:	4770      	bx	lr
 8000320:	e05d      	b.n	80003de <__divsi3+0x1c2>
 8000322:	0fca      	lsrs	r2, r1, #31
 8000324:	d000      	beq.n	8000328 <__divsi3+0x10c>
 8000326:	4249      	negs	r1, r1
 8000328:	1003      	asrs	r3, r0, #32
 800032a:	d300      	bcc.n	800032e <__divsi3+0x112>
 800032c:	4240      	negs	r0, r0
 800032e:	4053      	eors	r3, r2
 8000330:	2200      	movs	r2, #0
 8000332:	469c      	mov	ip, r3
 8000334:	0903      	lsrs	r3, r0, #4
 8000336:	428b      	cmp	r3, r1
 8000338:	d32d      	bcc.n	8000396 <__divsi3+0x17a>
 800033a:	0a03      	lsrs	r3, r0, #8
 800033c:	428b      	cmp	r3, r1
 800033e:	d312      	bcc.n	8000366 <__divsi3+0x14a>
 8000340:	22fc      	movs	r2, #252	@ 0xfc
 8000342:	0189      	lsls	r1, r1, #6
 8000344:	ba12      	rev	r2, r2
 8000346:	0a03      	lsrs	r3, r0, #8
 8000348:	428b      	cmp	r3, r1
 800034a:	d30c      	bcc.n	8000366 <__divsi3+0x14a>
 800034c:	0189      	lsls	r1, r1, #6
 800034e:	1192      	asrs	r2, r2, #6
 8000350:	428b      	cmp	r3, r1
 8000352:	d308      	bcc.n	8000366 <__divsi3+0x14a>
 8000354:	0189      	lsls	r1, r1, #6
 8000356:	1192      	asrs	r2, r2, #6
 8000358:	428b      	cmp	r3, r1
 800035a:	d304      	bcc.n	8000366 <__divsi3+0x14a>
 800035c:	0189      	lsls	r1, r1, #6
 800035e:	d03a      	beq.n	80003d6 <__divsi3+0x1ba>
 8000360:	1192      	asrs	r2, r2, #6
 8000362:	e000      	b.n	8000366 <__divsi3+0x14a>
 8000364:	0989      	lsrs	r1, r1, #6
 8000366:	09c3      	lsrs	r3, r0, #7
 8000368:	428b      	cmp	r3, r1
 800036a:	d301      	bcc.n	8000370 <__divsi3+0x154>
 800036c:	01cb      	lsls	r3, r1, #7
 800036e:	1ac0      	subs	r0, r0, r3
 8000370:	4152      	adcs	r2, r2
 8000372:	0983      	lsrs	r3, r0, #6
 8000374:	428b      	cmp	r3, r1
 8000376:	d301      	bcc.n	800037c <__divsi3+0x160>
 8000378:	018b      	lsls	r3, r1, #6
 800037a:	1ac0      	subs	r0, r0, r3
 800037c:	4152      	adcs	r2, r2
 800037e:	0943      	lsrs	r3, r0, #5
 8000380:	428b      	cmp	r3, r1
 8000382:	d301      	bcc.n	8000388 <__divsi3+0x16c>
 8000384:	014b      	lsls	r3, r1, #5
 8000386:	1ac0      	subs	r0, r0, r3
 8000388:	4152      	adcs	r2, r2
 800038a:	0903      	lsrs	r3, r0, #4
 800038c:	428b      	cmp	r3, r1
 800038e:	d301      	bcc.n	8000394 <__divsi3+0x178>
 8000390:	010b      	lsls	r3, r1, #4
 8000392:	1ac0      	subs	r0, r0, r3
 8000394:	4152      	adcs	r2, r2
 8000396:	08c3      	lsrs	r3, r0, #3
 8000398:	428b      	cmp	r3, r1
 800039a:	d301      	bcc.n	80003a0 <__divsi3+0x184>
 800039c:	00cb      	lsls	r3, r1, #3
 800039e:	1ac0      	subs	r0, r0, r3
 80003a0:	4152      	adcs	r2, r2
 80003a2:	0883      	lsrs	r3, r0, #2
 80003a4:	428b      	cmp	r3, r1
 80003a6:	d301      	bcc.n	80003ac <__divsi3+0x190>
 80003a8:	008b      	lsls	r3, r1, #2
 80003aa:	1ac0      	subs	r0, r0, r3
 80003ac:	4152      	adcs	r2, r2
 80003ae:	d2d9      	bcs.n	8000364 <__divsi3+0x148>
 80003b0:	0843      	lsrs	r3, r0, #1
 80003b2:	428b      	cmp	r3, r1
 80003b4:	d301      	bcc.n	80003ba <__divsi3+0x19e>
 80003b6:	004b      	lsls	r3, r1, #1
 80003b8:	1ac0      	subs	r0, r0, r3
 80003ba:	4152      	adcs	r2, r2
 80003bc:	1a41      	subs	r1, r0, r1
 80003be:	d200      	bcs.n	80003c2 <__divsi3+0x1a6>
 80003c0:	4601      	mov	r1, r0
 80003c2:	4663      	mov	r3, ip
 80003c4:	4152      	adcs	r2, r2
 80003c6:	105b      	asrs	r3, r3, #1
 80003c8:	4610      	mov	r0, r2
 80003ca:	d301      	bcc.n	80003d0 <__divsi3+0x1b4>
 80003cc:	4240      	negs	r0, r0
 80003ce:	2b00      	cmp	r3, #0
 80003d0:	d500      	bpl.n	80003d4 <__divsi3+0x1b8>
 80003d2:	4249      	negs	r1, r1
 80003d4:	4770      	bx	lr
 80003d6:	4663      	mov	r3, ip
 80003d8:	105b      	asrs	r3, r3, #1
 80003da:	d300      	bcc.n	80003de <__divsi3+0x1c2>
 80003dc:	4240      	negs	r0, r0
 80003de:	b501      	push	{r0, lr}
 80003e0:	2000      	movs	r0, #0
 80003e2:	f000 f805 	bl	80003f0 <__aeabi_idiv0>
 80003e6:	bd02      	pop	{r1, pc}

080003e8 <__aeabi_idivmod>:
 80003e8:	2900      	cmp	r1, #0
 80003ea:	d0f8      	beq.n	80003de <__divsi3+0x1c2>
 80003ec:	e716      	b.n	800021c <__divsi3>
 80003ee:	4770      	bx	lr

080003f0 <__aeabi_idiv0>:
 80003f0:	4770      	bx	lr
 80003f2:	46c0      	nop			@ (mov r8, r8)

080003f4 <__aeabi_cdrcmple>:
 80003f4:	4684      	mov	ip, r0
 80003f6:	0010      	movs	r0, r2
 80003f8:	4662      	mov	r2, ip
 80003fa:	468c      	mov	ip, r1
 80003fc:	0019      	movs	r1, r3
 80003fe:	4663      	mov	r3, ip
 8000400:	e000      	b.n	8000404 <__aeabi_cdcmpeq>
 8000402:	46c0      	nop			@ (mov r8, r8)

08000404 <__aeabi_cdcmpeq>:
 8000404:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8000406:	f000 ffe3 	bl	80013d0 <__ledf2>
 800040a:	2800      	cmp	r0, #0
 800040c:	d401      	bmi.n	8000412 <__aeabi_cdcmpeq+0xe>
 800040e:	2100      	movs	r1, #0
 8000410:	42c8      	cmn	r0, r1
 8000412:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

08000414 <__aeabi_dcmpeq>:
 8000414:	b510      	push	{r4, lr}
 8000416:	f000 ff27 	bl	8001268 <__eqdf2>
 800041a:	4240      	negs	r0, r0
 800041c:	3001      	adds	r0, #1
 800041e:	bd10      	pop	{r4, pc}

08000420 <__aeabi_dcmplt>:
 8000420:	b510      	push	{r4, lr}
 8000422:	f000 ffd5 	bl	80013d0 <__ledf2>
 8000426:	2800      	cmp	r0, #0
 8000428:	db01      	blt.n	800042e <__aeabi_dcmplt+0xe>
 800042a:	2000      	movs	r0, #0
 800042c:	bd10      	pop	{r4, pc}
 800042e:	2001      	movs	r0, #1
 8000430:	bd10      	pop	{r4, pc}
 8000432:	46c0      	nop			@ (mov r8, r8)

08000434 <__aeabi_dcmple>:
 8000434:	b510      	push	{r4, lr}
 8000436:	f000 ffcb 	bl	80013d0 <__ledf2>
 800043a:	2800      	cmp	r0, #0
 800043c:	dd01      	ble.n	8000442 <__aeabi_dcmple+0xe>
 800043e:	2000      	movs	r0, #0
 8000440:	bd10      	pop	{r4, pc}
 8000442:	2001      	movs	r0, #1
 8000444:	bd10      	pop	{r4, pc}
 8000446:	46c0      	nop			@ (mov r8, r8)

08000448 <__aeabi_dcmpgt>:
 8000448:	b510      	push	{r4, lr}
 800044a:	f000 ff51 	bl	80012f0 <__gedf2>
 800044e:	2800      	cmp	r0, #0
 8000450:	dc01      	bgt.n	8000456 <__aeabi_dcmpgt+0xe>
 8000452:	2000      	movs	r0, #0
 8000454:	bd10      	pop	{r4, pc}
 8000456:	2001      	movs	r0, #1
 8000458:	bd10      	pop	{r4, pc}
 800045a:	46c0      	nop			@ (mov r8, r8)

0800045c <__aeabi_dcmpge>:
 800045c:	b510      	push	{r4, lr}
 800045e:	f000 ff47 	bl	80012f0 <__gedf2>
 8000462:	2800      	cmp	r0, #0
 8000464:	da01      	bge.n	800046a <__aeabi_dcmpge+0xe>
 8000466:	2000      	movs	r0, #0
 8000468:	bd10      	pop	{r4, pc}
 800046a:	2001      	movs	r0, #1
 800046c:	bd10      	pop	{r4, pc}
 800046e:	46c0      	nop			@ (mov r8, r8)

08000470 <__aeabi_d2uiz>:
 8000470:	b570      	push	{r4, r5, r6, lr}
 8000472:	2200      	movs	r2, #0
 8000474:	4b0c      	ldr	r3, [pc, #48]	@ (80004a8 <__aeabi_d2uiz+0x38>)
 8000476:	0004      	movs	r4, r0
 8000478:	000d      	movs	r5, r1
 800047a:	f7ff ffef 	bl	800045c <__aeabi_dcmpge>
 800047e:	2800      	cmp	r0, #0
 8000480:	d104      	bne.n	800048c <__aeabi_d2uiz+0x1c>
 8000482:	0020      	movs	r0, r4
 8000484:	0029      	movs	r1, r5
 8000486:	f001 ff01 	bl	800228c <__aeabi_d2iz>
 800048a:	bd70      	pop	{r4, r5, r6, pc}
 800048c:	4b06      	ldr	r3, [pc, #24]	@ (80004a8 <__aeabi_d2uiz+0x38>)
 800048e:	2200      	movs	r2, #0
 8000490:	0020      	movs	r0, r4
 8000492:	0029      	movs	r1, r5
 8000494:	f001 faf0 	bl	8001a78 <__aeabi_dsub>
 8000498:	f001 fef8 	bl	800228c <__aeabi_d2iz>
 800049c:	2380      	movs	r3, #128	@ 0x80
 800049e:	061b      	lsls	r3, r3, #24
 80004a0:	469c      	mov	ip, r3
 80004a2:	4460      	add	r0, ip
 80004a4:	e7f1      	b.n	800048a <__aeabi_d2uiz+0x1a>
 80004a6:	46c0      	nop			@ (mov r8, r8)
 80004a8:	41e00000 	.word	0x41e00000

080004ac <__aeabi_dadd>:
 80004ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80004ae:	464f      	mov	r7, r9
 80004b0:	4646      	mov	r6, r8
 80004b2:	46d6      	mov	lr, sl
 80004b4:	b5c0      	push	{r6, r7, lr}
 80004b6:	b082      	sub	sp, #8
 80004b8:	9000      	str	r0, [sp, #0]
 80004ba:	9101      	str	r1, [sp, #4]
 80004bc:	030e      	lsls	r6, r1, #12
 80004be:	004c      	lsls	r4, r1, #1
 80004c0:	0fcd      	lsrs	r5, r1, #31
 80004c2:	0a71      	lsrs	r1, r6, #9
 80004c4:	9e00      	ldr	r6, [sp, #0]
 80004c6:	005f      	lsls	r7, r3, #1
 80004c8:	0f76      	lsrs	r6, r6, #29
 80004ca:	430e      	orrs	r6, r1
 80004cc:	9900      	ldr	r1, [sp, #0]
 80004ce:	9200      	str	r2, [sp, #0]
 80004d0:	9301      	str	r3, [sp, #4]
 80004d2:	00c9      	lsls	r1, r1, #3
 80004d4:	4689      	mov	r9, r1
 80004d6:	0319      	lsls	r1, r3, #12
 80004d8:	0d7b      	lsrs	r3, r7, #21
 80004da:	4698      	mov	r8, r3
 80004dc:	9b01      	ldr	r3, [sp, #4]
 80004de:	0a49      	lsrs	r1, r1, #9
 80004e0:	0fdb      	lsrs	r3, r3, #31
 80004e2:	469c      	mov	ip, r3
 80004e4:	9b00      	ldr	r3, [sp, #0]
 80004e6:	9a00      	ldr	r2, [sp, #0]
 80004e8:	0f5b      	lsrs	r3, r3, #29
 80004ea:	430b      	orrs	r3, r1
 80004ec:	4641      	mov	r1, r8
 80004ee:	0d64      	lsrs	r4, r4, #21
 80004f0:	00d2      	lsls	r2, r2, #3
 80004f2:	1a61      	subs	r1, r4, r1
 80004f4:	4565      	cmp	r5, ip
 80004f6:	d100      	bne.n	80004fa <__aeabi_dadd+0x4e>
 80004f8:	e0a6      	b.n	8000648 <__aeabi_dadd+0x19c>
 80004fa:	2900      	cmp	r1, #0
 80004fc:	dd72      	ble.n	80005e4 <__aeabi_dadd+0x138>
 80004fe:	4647      	mov	r7, r8
 8000500:	2f00      	cmp	r7, #0
 8000502:	d100      	bne.n	8000506 <__aeabi_dadd+0x5a>
 8000504:	e0dd      	b.n	80006c2 <__aeabi_dadd+0x216>
 8000506:	4fcc      	ldr	r7, [pc, #816]	@ (8000838 <__aeabi_dadd+0x38c>)
 8000508:	42bc      	cmp	r4, r7
 800050a:	d100      	bne.n	800050e <__aeabi_dadd+0x62>
 800050c:	e19a      	b.n	8000844 <__aeabi_dadd+0x398>
 800050e:	2701      	movs	r7, #1
 8000510:	2938      	cmp	r1, #56	@ 0x38
 8000512:	dc17      	bgt.n	8000544 <__aeabi_dadd+0x98>
 8000514:	2780      	movs	r7, #128	@ 0x80
 8000516:	043f      	lsls	r7, r7, #16
 8000518:	433b      	orrs	r3, r7
 800051a:	291f      	cmp	r1, #31
 800051c:	dd00      	ble.n	8000520 <__aeabi_dadd+0x74>
 800051e:	e1dd      	b.n	80008dc <__aeabi_dadd+0x430>
 8000520:	2720      	movs	r7, #32
 8000522:	1a78      	subs	r0, r7, r1
 8000524:	001f      	movs	r7, r3
 8000526:	4087      	lsls	r7, r0
 8000528:	46ba      	mov	sl, r7
 800052a:	0017      	movs	r7, r2
 800052c:	40cf      	lsrs	r7, r1
 800052e:	4684      	mov	ip, r0
 8000530:	0038      	movs	r0, r7
 8000532:	4657      	mov	r7, sl
 8000534:	4307      	orrs	r7, r0
 8000536:	4660      	mov	r0, ip
 8000538:	4082      	lsls	r2, r0
 800053a:	40cb      	lsrs	r3, r1
 800053c:	1e50      	subs	r0, r2, #1
 800053e:	4182      	sbcs	r2, r0
 8000540:	1af6      	subs	r6, r6, r3
 8000542:	4317      	orrs	r7, r2
 8000544:	464b      	mov	r3, r9
 8000546:	1bdf      	subs	r7, r3, r7
 8000548:	45b9      	cmp	r9, r7
 800054a:	4180      	sbcs	r0, r0
 800054c:	4240      	negs	r0, r0
 800054e:	1a36      	subs	r6, r6, r0
 8000550:	0233      	lsls	r3, r6, #8
 8000552:	d400      	bmi.n	8000556 <__aeabi_dadd+0xaa>
 8000554:	e0ff      	b.n	8000756 <__aeabi_dadd+0x2aa>
 8000556:	0276      	lsls	r6, r6, #9
 8000558:	0a76      	lsrs	r6, r6, #9
 800055a:	2e00      	cmp	r6, #0
 800055c:	d100      	bne.n	8000560 <__aeabi_dadd+0xb4>
 800055e:	e13c      	b.n	80007da <__aeabi_dadd+0x32e>
 8000560:	0030      	movs	r0, r6
 8000562:	f001 ff21 	bl	80023a8 <__clzsi2>
 8000566:	0003      	movs	r3, r0
 8000568:	3b08      	subs	r3, #8
 800056a:	2120      	movs	r1, #32
 800056c:	0038      	movs	r0, r7
 800056e:	1aca      	subs	r2, r1, r3
 8000570:	40d0      	lsrs	r0, r2
 8000572:	409e      	lsls	r6, r3
 8000574:	0002      	movs	r2, r0
 8000576:	409f      	lsls	r7, r3
 8000578:	4332      	orrs	r2, r6
 800057a:	429c      	cmp	r4, r3
 800057c:	dd00      	ble.n	8000580 <__aeabi_dadd+0xd4>
 800057e:	e1a6      	b.n	80008ce <__aeabi_dadd+0x422>
 8000580:	1b18      	subs	r0, r3, r4
 8000582:	3001      	adds	r0, #1
 8000584:	1a09      	subs	r1, r1, r0
 8000586:	003e      	movs	r6, r7
 8000588:	408f      	lsls	r7, r1
 800058a:	40c6      	lsrs	r6, r0
 800058c:	1e7b      	subs	r3, r7, #1
 800058e:	419f      	sbcs	r7, r3
 8000590:	0013      	movs	r3, r2
 8000592:	408b      	lsls	r3, r1
 8000594:	4337      	orrs	r7, r6
 8000596:	431f      	orrs	r7, r3
 8000598:	40c2      	lsrs	r2, r0
 800059a:	003b      	movs	r3, r7
 800059c:	0016      	movs	r6, r2
 800059e:	2400      	movs	r4, #0
 80005a0:	4313      	orrs	r3, r2
 80005a2:	d100      	bne.n	80005a6 <__aeabi_dadd+0xfa>
 80005a4:	e1df      	b.n	8000966 <__aeabi_dadd+0x4ba>
 80005a6:	077b      	lsls	r3, r7, #29
 80005a8:	d100      	bne.n	80005ac <__aeabi_dadd+0x100>
 80005aa:	e332      	b.n	8000c12 <__aeabi_dadd+0x766>
 80005ac:	230f      	movs	r3, #15
 80005ae:	003a      	movs	r2, r7
 80005b0:	403b      	ands	r3, r7
 80005b2:	2b04      	cmp	r3, #4
 80005b4:	d004      	beq.n	80005c0 <__aeabi_dadd+0x114>
 80005b6:	1d3a      	adds	r2, r7, #4
 80005b8:	42ba      	cmp	r2, r7
 80005ba:	41bf      	sbcs	r7, r7
 80005bc:	427f      	negs	r7, r7
 80005be:	19f6      	adds	r6, r6, r7
 80005c0:	0233      	lsls	r3, r6, #8
 80005c2:	d400      	bmi.n	80005c6 <__aeabi_dadd+0x11a>
 80005c4:	e323      	b.n	8000c0e <__aeabi_dadd+0x762>
 80005c6:	4b9c      	ldr	r3, [pc, #624]	@ (8000838 <__aeabi_dadd+0x38c>)
 80005c8:	3401      	adds	r4, #1
 80005ca:	429c      	cmp	r4, r3
 80005cc:	d100      	bne.n	80005d0 <__aeabi_dadd+0x124>
 80005ce:	e0b4      	b.n	800073a <__aeabi_dadd+0x28e>
 80005d0:	4b9a      	ldr	r3, [pc, #616]	@ (800083c <__aeabi_dadd+0x390>)
 80005d2:	0564      	lsls	r4, r4, #21
 80005d4:	401e      	ands	r6, r3
 80005d6:	0d64      	lsrs	r4, r4, #21
 80005d8:	0777      	lsls	r7, r6, #29
 80005da:	08d2      	lsrs	r2, r2, #3
 80005dc:	0276      	lsls	r6, r6, #9
 80005de:	4317      	orrs	r7, r2
 80005e0:	0b36      	lsrs	r6, r6, #12
 80005e2:	e0ac      	b.n	800073e <__aeabi_dadd+0x292>
 80005e4:	2900      	cmp	r1, #0
 80005e6:	d100      	bne.n	80005ea <__aeabi_dadd+0x13e>
 80005e8:	e07e      	b.n	80006e8 <__aeabi_dadd+0x23c>
 80005ea:	4641      	mov	r1, r8
 80005ec:	1b09      	subs	r1, r1, r4
 80005ee:	2c00      	cmp	r4, #0
 80005f0:	d000      	beq.n	80005f4 <__aeabi_dadd+0x148>
 80005f2:	e160      	b.n	80008b6 <__aeabi_dadd+0x40a>
 80005f4:	0034      	movs	r4, r6
 80005f6:	4648      	mov	r0, r9
 80005f8:	4304      	orrs	r4, r0
 80005fa:	d100      	bne.n	80005fe <__aeabi_dadd+0x152>
 80005fc:	e1c9      	b.n	8000992 <__aeabi_dadd+0x4e6>
 80005fe:	1e4c      	subs	r4, r1, #1
 8000600:	2901      	cmp	r1, #1
 8000602:	d100      	bne.n	8000606 <__aeabi_dadd+0x15a>
 8000604:	e22e      	b.n	8000a64 <__aeabi_dadd+0x5b8>
 8000606:	4d8c      	ldr	r5, [pc, #560]	@ (8000838 <__aeabi_dadd+0x38c>)
 8000608:	42a9      	cmp	r1, r5
 800060a:	d100      	bne.n	800060e <__aeabi_dadd+0x162>
 800060c:	e224      	b.n	8000a58 <__aeabi_dadd+0x5ac>
 800060e:	2701      	movs	r7, #1
 8000610:	2c38      	cmp	r4, #56	@ 0x38
 8000612:	dc11      	bgt.n	8000638 <__aeabi_dadd+0x18c>
 8000614:	0021      	movs	r1, r4
 8000616:	291f      	cmp	r1, #31
 8000618:	dd00      	ble.n	800061c <__aeabi_dadd+0x170>
 800061a:	e20b      	b.n	8000a34 <__aeabi_dadd+0x588>
 800061c:	2420      	movs	r4, #32
 800061e:	0037      	movs	r7, r6
 8000620:	4648      	mov	r0, r9
 8000622:	1a64      	subs	r4, r4, r1
 8000624:	40a7      	lsls	r7, r4
 8000626:	40c8      	lsrs	r0, r1
 8000628:	4307      	orrs	r7, r0
 800062a:	4648      	mov	r0, r9
 800062c:	40a0      	lsls	r0, r4
 800062e:	40ce      	lsrs	r6, r1
 8000630:	1e44      	subs	r4, r0, #1
 8000632:	41a0      	sbcs	r0, r4
 8000634:	1b9b      	subs	r3, r3, r6
 8000636:	4307      	orrs	r7, r0
 8000638:	1bd7      	subs	r7, r2, r7
 800063a:	42ba      	cmp	r2, r7
 800063c:	4192      	sbcs	r2, r2
 800063e:	4252      	negs	r2, r2
 8000640:	4665      	mov	r5, ip
 8000642:	4644      	mov	r4, r8
 8000644:	1a9e      	subs	r6, r3, r2
 8000646:	e783      	b.n	8000550 <__aeabi_dadd+0xa4>
 8000648:	2900      	cmp	r1, #0
 800064a:	dc00      	bgt.n	800064e <__aeabi_dadd+0x1a2>
 800064c:	e09c      	b.n	8000788 <__aeabi_dadd+0x2dc>
 800064e:	4647      	mov	r7, r8
 8000650:	2f00      	cmp	r7, #0
 8000652:	d167      	bne.n	8000724 <__aeabi_dadd+0x278>
 8000654:	001f      	movs	r7, r3
 8000656:	4317      	orrs	r7, r2
 8000658:	d100      	bne.n	800065c <__aeabi_dadd+0x1b0>
 800065a:	e0e4      	b.n	8000826 <__aeabi_dadd+0x37a>
 800065c:	1e48      	subs	r0, r1, #1
 800065e:	2901      	cmp	r1, #1
 8000660:	d100      	bne.n	8000664 <__aeabi_dadd+0x1b8>
 8000662:	e19b      	b.n	800099c <__aeabi_dadd+0x4f0>
 8000664:	4f74      	ldr	r7, [pc, #464]	@ (8000838 <__aeabi_dadd+0x38c>)
 8000666:	42b9      	cmp	r1, r7
 8000668:	d100      	bne.n	800066c <__aeabi_dadd+0x1c0>
 800066a:	e0eb      	b.n	8000844 <__aeabi_dadd+0x398>
 800066c:	2701      	movs	r7, #1
 800066e:	0001      	movs	r1, r0
 8000670:	2838      	cmp	r0, #56	@ 0x38
 8000672:	dc11      	bgt.n	8000698 <__aeabi_dadd+0x1ec>
 8000674:	291f      	cmp	r1, #31
 8000676:	dd00      	ble.n	800067a <__aeabi_dadd+0x1ce>
 8000678:	e1c7      	b.n	8000a0a <__aeabi_dadd+0x55e>
 800067a:	2720      	movs	r7, #32
 800067c:	1a78      	subs	r0, r7, r1
 800067e:	001f      	movs	r7, r3
 8000680:	4684      	mov	ip, r0
 8000682:	4087      	lsls	r7, r0
 8000684:	0010      	movs	r0, r2
 8000686:	40c8      	lsrs	r0, r1
 8000688:	4307      	orrs	r7, r0
 800068a:	4660      	mov	r0, ip
 800068c:	4082      	lsls	r2, r0
 800068e:	40cb      	lsrs	r3, r1
 8000690:	1e50      	subs	r0, r2, #1
 8000692:	4182      	sbcs	r2, r0
 8000694:	18f6      	adds	r6, r6, r3
 8000696:	4317      	orrs	r7, r2
 8000698:	444f      	add	r7, r9
 800069a:	454f      	cmp	r7, r9
 800069c:	4180      	sbcs	r0, r0
 800069e:	4240      	negs	r0, r0
 80006a0:	1836      	adds	r6, r6, r0
 80006a2:	0233      	lsls	r3, r6, #8
 80006a4:	d557      	bpl.n	8000756 <__aeabi_dadd+0x2aa>
 80006a6:	4b64      	ldr	r3, [pc, #400]	@ (8000838 <__aeabi_dadd+0x38c>)
 80006a8:	3401      	adds	r4, #1
 80006aa:	429c      	cmp	r4, r3
 80006ac:	d045      	beq.n	800073a <__aeabi_dadd+0x28e>
 80006ae:	2101      	movs	r1, #1
 80006b0:	4b62      	ldr	r3, [pc, #392]	@ (800083c <__aeabi_dadd+0x390>)
 80006b2:	087a      	lsrs	r2, r7, #1
 80006b4:	401e      	ands	r6, r3
 80006b6:	4039      	ands	r1, r7
 80006b8:	430a      	orrs	r2, r1
 80006ba:	07f7      	lsls	r7, r6, #31
 80006bc:	4317      	orrs	r7, r2
 80006be:	0876      	lsrs	r6, r6, #1
 80006c0:	e771      	b.n	80005a6 <__aeabi_dadd+0xfa>
 80006c2:	001f      	movs	r7, r3
 80006c4:	4317      	orrs	r7, r2
 80006c6:	d100      	bne.n	80006ca <__aeabi_dadd+0x21e>
 80006c8:	e0ad      	b.n	8000826 <__aeabi_dadd+0x37a>
 80006ca:	1e4f      	subs	r7, r1, #1
 80006cc:	46bc      	mov	ip, r7
 80006ce:	2901      	cmp	r1, #1
 80006d0:	d100      	bne.n	80006d4 <__aeabi_dadd+0x228>
 80006d2:	e182      	b.n	80009da <__aeabi_dadd+0x52e>
 80006d4:	4f58      	ldr	r7, [pc, #352]	@ (8000838 <__aeabi_dadd+0x38c>)
 80006d6:	42b9      	cmp	r1, r7
 80006d8:	d100      	bne.n	80006dc <__aeabi_dadd+0x230>
 80006da:	e190      	b.n	80009fe <__aeabi_dadd+0x552>
 80006dc:	4661      	mov	r1, ip
 80006de:	2701      	movs	r7, #1
 80006e0:	2938      	cmp	r1, #56	@ 0x38
 80006e2:	dd00      	ble.n	80006e6 <__aeabi_dadd+0x23a>
 80006e4:	e72e      	b.n	8000544 <__aeabi_dadd+0x98>
 80006e6:	e718      	b.n	800051a <__aeabi_dadd+0x6e>
 80006e8:	4f55      	ldr	r7, [pc, #340]	@ (8000840 <__aeabi_dadd+0x394>)
 80006ea:	1c61      	adds	r1, r4, #1
 80006ec:	4239      	tst	r1, r7
 80006ee:	d000      	beq.n	80006f2 <__aeabi_dadd+0x246>
 80006f0:	e0d0      	b.n	8000894 <__aeabi_dadd+0x3e8>
 80006f2:	0031      	movs	r1, r6
 80006f4:	4648      	mov	r0, r9
 80006f6:	001f      	movs	r7, r3
 80006f8:	4301      	orrs	r1, r0
 80006fa:	4317      	orrs	r7, r2
 80006fc:	2c00      	cmp	r4, #0
 80006fe:	d000      	beq.n	8000702 <__aeabi_dadd+0x256>
 8000700:	e13d      	b.n	800097e <__aeabi_dadd+0x4d2>
 8000702:	2900      	cmp	r1, #0
 8000704:	d100      	bne.n	8000708 <__aeabi_dadd+0x25c>
 8000706:	e1bc      	b.n	8000a82 <__aeabi_dadd+0x5d6>
 8000708:	2f00      	cmp	r7, #0
 800070a:	d000      	beq.n	800070e <__aeabi_dadd+0x262>
 800070c:	e1bf      	b.n	8000a8e <__aeabi_dadd+0x5e2>
 800070e:	464b      	mov	r3, r9
 8000710:	2100      	movs	r1, #0
 8000712:	08d8      	lsrs	r0, r3, #3
 8000714:	0777      	lsls	r7, r6, #29
 8000716:	4307      	orrs	r7, r0
 8000718:	08f0      	lsrs	r0, r6, #3
 800071a:	0306      	lsls	r6, r0, #12
 800071c:	054c      	lsls	r4, r1, #21
 800071e:	0b36      	lsrs	r6, r6, #12
 8000720:	0d64      	lsrs	r4, r4, #21
 8000722:	e00c      	b.n	800073e <__aeabi_dadd+0x292>
 8000724:	4f44      	ldr	r7, [pc, #272]	@ (8000838 <__aeabi_dadd+0x38c>)
 8000726:	42bc      	cmp	r4, r7
 8000728:	d100      	bne.n	800072c <__aeabi_dadd+0x280>
 800072a:	e08b      	b.n	8000844 <__aeabi_dadd+0x398>
 800072c:	2701      	movs	r7, #1
 800072e:	2938      	cmp	r1, #56	@ 0x38
 8000730:	dcb2      	bgt.n	8000698 <__aeabi_dadd+0x1ec>
 8000732:	2780      	movs	r7, #128	@ 0x80
 8000734:	043f      	lsls	r7, r7, #16
 8000736:	433b      	orrs	r3, r7
 8000738:	e79c      	b.n	8000674 <__aeabi_dadd+0x1c8>
 800073a:	2600      	movs	r6, #0
 800073c:	2700      	movs	r7, #0
 800073e:	0524      	lsls	r4, r4, #20
 8000740:	4334      	orrs	r4, r6
 8000742:	07ed      	lsls	r5, r5, #31
 8000744:	432c      	orrs	r4, r5
 8000746:	0038      	movs	r0, r7
 8000748:	0021      	movs	r1, r4
 800074a:	b002      	add	sp, #8
 800074c:	bce0      	pop	{r5, r6, r7}
 800074e:	46ba      	mov	sl, r7
 8000750:	46b1      	mov	r9, r6
 8000752:	46a8      	mov	r8, r5
 8000754:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000756:	077b      	lsls	r3, r7, #29
 8000758:	d004      	beq.n	8000764 <__aeabi_dadd+0x2b8>
 800075a:	230f      	movs	r3, #15
 800075c:	403b      	ands	r3, r7
 800075e:	2b04      	cmp	r3, #4
 8000760:	d000      	beq.n	8000764 <__aeabi_dadd+0x2b8>
 8000762:	e728      	b.n	80005b6 <__aeabi_dadd+0x10a>
 8000764:	08f8      	lsrs	r0, r7, #3
 8000766:	4b34      	ldr	r3, [pc, #208]	@ (8000838 <__aeabi_dadd+0x38c>)
 8000768:	0777      	lsls	r7, r6, #29
 800076a:	4307      	orrs	r7, r0
 800076c:	08f0      	lsrs	r0, r6, #3
 800076e:	429c      	cmp	r4, r3
 8000770:	d000      	beq.n	8000774 <__aeabi_dadd+0x2c8>
 8000772:	e24a      	b.n	8000c0a <__aeabi_dadd+0x75e>
 8000774:	003b      	movs	r3, r7
 8000776:	4303      	orrs	r3, r0
 8000778:	d059      	beq.n	800082e <__aeabi_dadd+0x382>
 800077a:	2680      	movs	r6, #128	@ 0x80
 800077c:	0336      	lsls	r6, r6, #12
 800077e:	4306      	orrs	r6, r0
 8000780:	0336      	lsls	r6, r6, #12
 8000782:	4c2d      	ldr	r4, [pc, #180]	@ (8000838 <__aeabi_dadd+0x38c>)
 8000784:	0b36      	lsrs	r6, r6, #12
 8000786:	e7da      	b.n	800073e <__aeabi_dadd+0x292>
 8000788:	2900      	cmp	r1, #0
 800078a:	d061      	beq.n	8000850 <__aeabi_dadd+0x3a4>
 800078c:	4641      	mov	r1, r8
 800078e:	1b09      	subs	r1, r1, r4
 8000790:	2c00      	cmp	r4, #0
 8000792:	d100      	bne.n	8000796 <__aeabi_dadd+0x2ea>
 8000794:	e0b9      	b.n	800090a <__aeabi_dadd+0x45e>
 8000796:	4c28      	ldr	r4, [pc, #160]	@ (8000838 <__aeabi_dadd+0x38c>)
 8000798:	45a0      	cmp	r8, r4
 800079a:	d100      	bne.n	800079e <__aeabi_dadd+0x2f2>
 800079c:	e1a5      	b.n	8000aea <__aeabi_dadd+0x63e>
 800079e:	2701      	movs	r7, #1
 80007a0:	2938      	cmp	r1, #56	@ 0x38
 80007a2:	dc13      	bgt.n	80007cc <__aeabi_dadd+0x320>
 80007a4:	2480      	movs	r4, #128	@ 0x80
 80007a6:	0424      	lsls	r4, r4, #16
 80007a8:	4326      	orrs	r6, r4
 80007aa:	291f      	cmp	r1, #31
 80007ac:	dd00      	ble.n	80007b0 <__aeabi_dadd+0x304>
 80007ae:	e1c8      	b.n	8000b42 <__aeabi_dadd+0x696>
 80007b0:	2420      	movs	r4, #32
 80007b2:	0037      	movs	r7, r6
 80007b4:	4648      	mov	r0, r9
 80007b6:	1a64      	subs	r4, r4, r1
 80007b8:	40a7      	lsls	r7, r4
 80007ba:	40c8      	lsrs	r0, r1
 80007bc:	4307      	orrs	r7, r0
 80007be:	4648      	mov	r0, r9
 80007c0:	40a0      	lsls	r0, r4
 80007c2:	40ce      	lsrs	r6, r1
 80007c4:	1e44      	subs	r4, r0, #1
 80007c6:	41a0      	sbcs	r0, r4
 80007c8:	199b      	adds	r3, r3, r6
 80007ca:	4307      	orrs	r7, r0
 80007cc:	18bf      	adds	r7, r7, r2
 80007ce:	4297      	cmp	r7, r2
 80007d0:	4192      	sbcs	r2, r2
 80007d2:	4252      	negs	r2, r2
 80007d4:	4644      	mov	r4, r8
 80007d6:	18d6      	adds	r6, r2, r3
 80007d8:	e763      	b.n	80006a2 <__aeabi_dadd+0x1f6>
 80007da:	0038      	movs	r0, r7
 80007dc:	f001 fde4 	bl	80023a8 <__clzsi2>
 80007e0:	0003      	movs	r3, r0
 80007e2:	3318      	adds	r3, #24
 80007e4:	2b1f      	cmp	r3, #31
 80007e6:	dc00      	bgt.n	80007ea <__aeabi_dadd+0x33e>
 80007e8:	e6bf      	b.n	800056a <__aeabi_dadd+0xbe>
 80007ea:	003a      	movs	r2, r7
 80007ec:	3808      	subs	r0, #8
 80007ee:	4082      	lsls	r2, r0
 80007f0:	429c      	cmp	r4, r3
 80007f2:	dd00      	ble.n	80007f6 <__aeabi_dadd+0x34a>
 80007f4:	e083      	b.n	80008fe <__aeabi_dadd+0x452>
 80007f6:	1b1b      	subs	r3, r3, r4
 80007f8:	1c58      	adds	r0, r3, #1
 80007fa:	281f      	cmp	r0, #31
 80007fc:	dc00      	bgt.n	8000800 <__aeabi_dadd+0x354>
 80007fe:	e1b4      	b.n	8000b6a <__aeabi_dadd+0x6be>
 8000800:	0017      	movs	r7, r2
 8000802:	3b1f      	subs	r3, #31
 8000804:	40df      	lsrs	r7, r3
 8000806:	2820      	cmp	r0, #32
 8000808:	d005      	beq.n	8000816 <__aeabi_dadd+0x36a>
 800080a:	2340      	movs	r3, #64	@ 0x40
 800080c:	1a1b      	subs	r3, r3, r0
 800080e:	409a      	lsls	r2, r3
 8000810:	1e53      	subs	r3, r2, #1
 8000812:	419a      	sbcs	r2, r3
 8000814:	4317      	orrs	r7, r2
 8000816:	2400      	movs	r4, #0
 8000818:	2f00      	cmp	r7, #0
 800081a:	d00a      	beq.n	8000832 <__aeabi_dadd+0x386>
 800081c:	077b      	lsls	r3, r7, #29
 800081e:	d000      	beq.n	8000822 <__aeabi_dadd+0x376>
 8000820:	e6c4      	b.n	80005ac <__aeabi_dadd+0x100>
 8000822:	0026      	movs	r6, r4
 8000824:	e79e      	b.n	8000764 <__aeabi_dadd+0x2b8>
 8000826:	464b      	mov	r3, r9
 8000828:	000c      	movs	r4, r1
 800082a:	08d8      	lsrs	r0, r3, #3
 800082c:	e79b      	b.n	8000766 <__aeabi_dadd+0x2ba>
 800082e:	2700      	movs	r7, #0
 8000830:	4c01      	ldr	r4, [pc, #4]	@ (8000838 <__aeabi_dadd+0x38c>)
 8000832:	2600      	movs	r6, #0
 8000834:	e783      	b.n	800073e <__aeabi_dadd+0x292>
 8000836:	46c0      	nop			@ (mov r8, r8)
 8000838:	000007ff 	.word	0x000007ff
 800083c:	ff7fffff 	.word	0xff7fffff
 8000840:	000007fe 	.word	0x000007fe
 8000844:	464b      	mov	r3, r9
 8000846:	0777      	lsls	r7, r6, #29
 8000848:	08d8      	lsrs	r0, r3, #3
 800084a:	4307      	orrs	r7, r0
 800084c:	08f0      	lsrs	r0, r6, #3
 800084e:	e791      	b.n	8000774 <__aeabi_dadd+0x2c8>
 8000850:	4fcd      	ldr	r7, [pc, #820]	@ (8000b88 <__aeabi_dadd+0x6dc>)
 8000852:	1c61      	adds	r1, r4, #1
 8000854:	4239      	tst	r1, r7
 8000856:	d16b      	bne.n	8000930 <__aeabi_dadd+0x484>
 8000858:	0031      	movs	r1, r6
 800085a:	4648      	mov	r0, r9
 800085c:	4301      	orrs	r1, r0
 800085e:	2c00      	cmp	r4, #0
 8000860:	d000      	beq.n	8000864 <__aeabi_dadd+0x3b8>
 8000862:	e14b      	b.n	8000afc <__aeabi_dadd+0x650>
 8000864:	001f      	movs	r7, r3
 8000866:	4317      	orrs	r7, r2
 8000868:	2900      	cmp	r1, #0
 800086a:	d100      	bne.n	800086e <__aeabi_dadd+0x3c2>
 800086c:	e181      	b.n	8000b72 <__aeabi_dadd+0x6c6>
 800086e:	2f00      	cmp	r7, #0
 8000870:	d100      	bne.n	8000874 <__aeabi_dadd+0x3c8>
 8000872:	e74c      	b.n	800070e <__aeabi_dadd+0x262>
 8000874:	444a      	add	r2, r9
 8000876:	454a      	cmp	r2, r9
 8000878:	4180      	sbcs	r0, r0
 800087a:	18f6      	adds	r6, r6, r3
 800087c:	4240      	negs	r0, r0
 800087e:	1836      	adds	r6, r6, r0
 8000880:	0233      	lsls	r3, r6, #8
 8000882:	d500      	bpl.n	8000886 <__aeabi_dadd+0x3da>
 8000884:	e1b0      	b.n	8000be8 <__aeabi_dadd+0x73c>
 8000886:	0017      	movs	r7, r2
 8000888:	4691      	mov	r9, r2
 800088a:	4337      	orrs	r7, r6
 800088c:	d000      	beq.n	8000890 <__aeabi_dadd+0x3e4>
 800088e:	e73e      	b.n	800070e <__aeabi_dadd+0x262>
 8000890:	2600      	movs	r6, #0
 8000892:	e754      	b.n	800073e <__aeabi_dadd+0x292>
 8000894:	4649      	mov	r1, r9
 8000896:	1a89      	subs	r1, r1, r2
 8000898:	4688      	mov	r8, r1
 800089a:	45c1      	cmp	r9, r8
 800089c:	41bf      	sbcs	r7, r7
 800089e:	1af1      	subs	r1, r6, r3
 80008a0:	427f      	negs	r7, r7
 80008a2:	1bc9      	subs	r1, r1, r7
 80008a4:	020f      	lsls	r7, r1, #8
 80008a6:	d461      	bmi.n	800096c <__aeabi_dadd+0x4c0>
 80008a8:	4647      	mov	r7, r8
 80008aa:	430f      	orrs	r7, r1
 80008ac:	d100      	bne.n	80008b0 <__aeabi_dadd+0x404>
 80008ae:	e0bd      	b.n	8000a2c <__aeabi_dadd+0x580>
 80008b0:	000e      	movs	r6, r1
 80008b2:	4647      	mov	r7, r8
 80008b4:	e651      	b.n	800055a <__aeabi_dadd+0xae>
 80008b6:	4cb5      	ldr	r4, [pc, #724]	@ (8000b8c <__aeabi_dadd+0x6e0>)
 80008b8:	45a0      	cmp	r8, r4
 80008ba:	d100      	bne.n	80008be <__aeabi_dadd+0x412>
 80008bc:	e100      	b.n	8000ac0 <__aeabi_dadd+0x614>
 80008be:	2701      	movs	r7, #1
 80008c0:	2938      	cmp	r1, #56	@ 0x38
 80008c2:	dd00      	ble.n	80008c6 <__aeabi_dadd+0x41a>
 80008c4:	e6b8      	b.n	8000638 <__aeabi_dadd+0x18c>
 80008c6:	2480      	movs	r4, #128	@ 0x80
 80008c8:	0424      	lsls	r4, r4, #16
 80008ca:	4326      	orrs	r6, r4
 80008cc:	e6a3      	b.n	8000616 <__aeabi_dadd+0x16a>
 80008ce:	4eb0      	ldr	r6, [pc, #704]	@ (8000b90 <__aeabi_dadd+0x6e4>)
 80008d0:	1ae4      	subs	r4, r4, r3
 80008d2:	4016      	ands	r6, r2
 80008d4:	077b      	lsls	r3, r7, #29
 80008d6:	d000      	beq.n	80008da <__aeabi_dadd+0x42e>
 80008d8:	e73f      	b.n	800075a <__aeabi_dadd+0x2ae>
 80008da:	e743      	b.n	8000764 <__aeabi_dadd+0x2b8>
 80008dc:	000f      	movs	r7, r1
 80008de:	0018      	movs	r0, r3
 80008e0:	3f20      	subs	r7, #32
 80008e2:	40f8      	lsrs	r0, r7
 80008e4:	4684      	mov	ip, r0
 80008e6:	2920      	cmp	r1, #32
 80008e8:	d003      	beq.n	80008f2 <__aeabi_dadd+0x446>
 80008ea:	2740      	movs	r7, #64	@ 0x40
 80008ec:	1a79      	subs	r1, r7, r1
 80008ee:	408b      	lsls	r3, r1
 80008f0:	431a      	orrs	r2, r3
 80008f2:	1e53      	subs	r3, r2, #1
 80008f4:	419a      	sbcs	r2, r3
 80008f6:	4663      	mov	r3, ip
 80008f8:	0017      	movs	r7, r2
 80008fa:	431f      	orrs	r7, r3
 80008fc:	e622      	b.n	8000544 <__aeabi_dadd+0x98>
 80008fe:	48a4      	ldr	r0, [pc, #656]	@ (8000b90 <__aeabi_dadd+0x6e4>)
 8000900:	1ae1      	subs	r1, r4, r3
 8000902:	4010      	ands	r0, r2
 8000904:	0747      	lsls	r7, r0, #29
 8000906:	08c0      	lsrs	r0, r0, #3
 8000908:	e707      	b.n	800071a <__aeabi_dadd+0x26e>
 800090a:	0034      	movs	r4, r6
 800090c:	4648      	mov	r0, r9
 800090e:	4304      	orrs	r4, r0
 8000910:	d100      	bne.n	8000914 <__aeabi_dadd+0x468>
 8000912:	e0fa      	b.n	8000b0a <__aeabi_dadd+0x65e>
 8000914:	1e4c      	subs	r4, r1, #1
 8000916:	2901      	cmp	r1, #1
 8000918:	d100      	bne.n	800091c <__aeabi_dadd+0x470>
 800091a:	e0d7      	b.n	8000acc <__aeabi_dadd+0x620>
 800091c:	4f9b      	ldr	r7, [pc, #620]	@ (8000b8c <__aeabi_dadd+0x6e0>)
 800091e:	42b9      	cmp	r1, r7
 8000920:	d100      	bne.n	8000924 <__aeabi_dadd+0x478>
 8000922:	e0e2      	b.n	8000aea <__aeabi_dadd+0x63e>
 8000924:	2701      	movs	r7, #1
 8000926:	2c38      	cmp	r4, #56	@ 0x38
 8000928:	dd00      	ble.n	800092c <__aeabi_dadd+0x480>
 800092a:	e74f      	b.n	80007cc <__aeabi_dadd+0x320>
 800092c:	0021      	movs	r1, r4
 800092e:	e73c      	b.n	80007aa <__aeabi_dadd+0x2fe>
 8000930:	4c96      	ldr	r4, [pc, #600]	@ (8000b8c <__aeabi_dadd+0x6e0>)
 8000932:	42a1      	cmp	r1, r4
 8000934:	d100      	bne.n	8000938 <__aeabi_dadd+0x48c>
 8000936:	e0dd      	b.n	8000af4 <__aeabi_dadd+0x648>
 8000938:	444a      	add	r2, r9
 800093a:	454a      	cmp	r2, r9
 800093c:	4180      	sbcs	r0, r0
 800093e:	18f3      	adds	r3, r6, r3
 8000940:	4240      	negs	r0, r0
 8000942:	1818      	adds	r0, r3, r0
 8000944:	07c7      	lsls	r7, r0, #31
 8000946:	0852      	lsrs	r2, r2, #1
 8000948:	4317      	orrs	r7, r2
 800094a:	0846      	lsrs	r6, r0, #1
 800094c:	0752      	lsls	r2, r2, #29
 800094e:	d005      	beq.n	800095c <__aeabi_dadd+0x4b0>
 8000950:	220f      	movs	r2, #15
 8000952:	000c      	movs	r4, r1
 8000954:	403a      	ands	r2, r7
 8000956:	2a04      	cmp	r2, #4
 8000958:	d000      	beq.n	800095c <__aeabi_dadd+0x4b0>
 800095a:	e62c      	b.n	80005b6 <__aeabi_dadd+0x10a>
 800095c:	0776      	lsls	r6, r6, #29
 800095e:	08ff      	lsrs	r7, r7, #3
 8000960:	4337      	orrs	r7, r6
 8000962:	0900      	lsrs	r0, r0, #4
 8000964:	e6d9      	b.n	800071a <__aeabi_dadd+0x26e>
 8000966:	2700      	movs	r7, #0
 8000968:	2600      	movs	r6, #0
 800096a:	e6e8      	b.n	800073e <__aeabi_dadd+0x292>
 800096c:	4649      	mov	r1, r9
 800096e:	1a57      	subs	r7, r2, r1
 8000970:	42ba      	cmp	r2, r7
 8000972:	4192      	sbcs	r2, r2
 8000974:	1b9e      	subs	r6, r3, r6
 8000976:	4252      	negs	r2, r2
 8000978:	4665      	mov	r5, ip
 800097a:	1ab6      	subs	r6, r6, r2
 800097c:	e5ed      	b.n	800055a <__aeabi_dadd+0xae>
 800097e:	2900      	cmp	r1, #0
 8000980:	d000      	beq.n	8000984 <__aeabi_dadd+0x4d8>
 8000982:	e0c6      	b.n	8000b12 <__aeabi_dadd+0x666>
 8000984:	2f00      	cmp	r7, #0
 8000986:	d167      	bne.n	8000a58 <__aeabi_dadd+0x5ac>
 8000988:	2680      	movs	r6, #128	@ 0x80
 800098a:	2500      	movs	r5, #0
 800098c:	4c7f      	ldr	r4, [pc, #508]	@ (8000b8c <__aeabi_dadd+0x6e0>)
 800098e:	0336      	lsls	r6, r6, #12
 8000990:	e6d5      	b.n	800073e <__aeabi_dadd+0x292>
 8000992:	4665      	mov	r5, ip
 8000994:	000c      	movs	r4, r1
 8000996:	001e      	movs	r6, r3
 8000998:	08d0      	lsrs	r0, r2, #3
 800099a:	e6e4      	b.n	8000766 <__aeabi_dadd+0x2ba>
 800099c:	444a      	add	r2, r9
 800099e:	454a      	cmp	r2, r9
 80009a0:	4180      	sbcs	r0, r0
 80009a2:	18f3      	adds	r3, r6, r3
 80009a4:	4240      	negs	r0, r0
 80009a6:	1818      	adds	r0, r3, r0
 80009a8:	0011      	movs	r1, r2
 80009aa:	0203      	lsls	r3, r0, #8
 80009ac:	d400      	bmi.n	80009b0 <__aeabi_dadd+0x504>
 80009ae:	e096      	b.n	8000ade <__aeabi_dadd+0x632>
 80009b0:	4b77      	ldr	r3, [pc, #476]	@ (8000b90 <__aeabi_dadd+0x6e4>)
 80009b2:	0849      	lsrs	r1, r1, #1
 80009b4:	4018      	ands	r0, r3
 80009b6:	07c3      	lsls	r3, r0, #31
 80009b8:	430b      	orrs	r3, r1
 80009ba:	0844      	lsrs	r4, r0, #1
 80009bc:	0749      	lsls	r1, r1, #29
 80009be:	d100      	bne.n	80009c2 <__aeabi_dadd+0x516>
 80009c0:	e129      	b.n	8000c16 <__aeabi_dadd+0x76a>
 80009c2:	220f      	movs	r2, #15
 80009c4:	401a      	ands	r2, r3
 80009c6:	2a04      	cmp	r2, #4
 80009c8:	d100      	bne.n	80009cc <__aeabi_dadd+0x520>
 80009ca:	e0ea      	b.n	8000ba2 <__aeabi_dadd+0x6f6>
 80009cc:	1d1f      	adds	r7, r3, #4
 80009ce:	429f      	cmp	r7, r3
 80009d0:	41b6      	sbcs	r6, r6
 80009d2:	4276      	negs	r6, r6
 80009d4:	1936      	adds	r6, r6, r4
 80009d6:	2402      	movs	r4, #2
 80009d8:	e6c4      	b.n	8000764 <__aeabi_dadd+0x2b8>
 80009da:	4649      	mov	r1, r9
 80009dc:	1a8f      	subs	r7, r1, r2
 80009de:	45b9      	cmp	r9, r7
 80009e0:	4180      	sbcs	r0, r0
 80009e2:	1af6      	subs	r6, r6, r3
 80009e4:	4240      	negs	r0, r0
 80009e6:	1a36      	subs	r6, r6, r0
 80009e8:	0233      	lsls	r3, r6, #8
 80009ea:	d406      	bmi.n	80009fa <__aeabi_dadd+0x54e>
 80009ec:	0773      	lsls	r3, r6, #29
 80009ee:	08ff      	lsrs	r7, r7, #3
 80009f0:	2101      	movs	r1, #1
 80009f2:	431f      	orrs	r7, r3
 80009f4:	08f0      	lsrs	r0, r6, #3
 80009f6:	e690      	b.n	800071a <__aeabi_dadd+0x26e>
 80009f8:	4665      	mov	r5, ip
 80009fa:	2401      	movs	r4, #1
 80009fc:	e5ab      	b.n	8000556 <__aeabi_dadd+0xaa>
 80009fe:	464b      	mov	r3, r9
 8000a00:	0777      	lsls	r7, r6, #29
 8000a02:	08d8      	lsrs	r0, r3, #3
 8000a04:	4307      	orrs	r7, r0
 8000a06:	08f0      	lsrs	r0, r6, #3
 8000a08:	e6b4      	b.n	8000774 <__aeabi_dadd+0x2c8>
 8000a0a:	000f      	movs	r7, r1
 8000a0c:	0018      	movs	r0, r3
 8000a0e:	3f20      	subs	r7, #32
 8000a10:	40f8      	lsrs	r0, r7
 8000a12:	4684      	mov	ip, r0
 8000a14:	2920      	cmp	r1, #32
 8000a16:	d003      	beq.n	8000a20 <__aeabi_dadd+0x574>
 8000a18:	2740      	movs	r7, #64	@ 0x40
 8000a1a:	1a79      	subs	r1, r7, r1
 8000a1c:	408b      	lsls	r3, r1
 8000a1e:	431a      	orrs	r2, r3
 8000a20:	1e53      	subs	r3, r2, #1
 8000a22:	419a      	sbcs	r2, r3
 8000a24:	4663      	mov	r3, ip
 8000a26:	0017      	movs	r7, r2
 8000a28:	431f      	orrs	r7, r3
 8000a2a:	e635      	b.n	8000698 <__aeabi_dadd+0x1ec>
 8000a2c:	2500      	movs	r5, #0
 8000a2e:	2400      	movs	r4, #0
 8000a30:	2600      	movs	r6, #0
 8000a32:	e684      	b.n	800073e <__aeabi_dadd+0x292>
 8000a34:	000c      	movs	r4, r1
 8000a36:	0035      	movs	r5, r6
 8000a38:	3c20      	subs	r4, #32
 8000a3a:	40e5      	lsrs	r5, r4
 8000a3c:	2920      	cmp	r1, #32
 8000a3e:	d005      	beq.n	8000a4c <__aeabi_dadd+0x5a0>
 8000a40:	2440      	movs	r4, #64	@ 0x40
 8000a42:	1a61      	subs	r1, r4, r1
 8000a44:	408e      	lsls	r6, r1
 8000a46:	4649      	mov	r1, r9
 8000a48:	4331      	orrs	r1, r6
 8000a4a:	4689      	mov	r9, r1
 8000a4c:	4648      	mov	r0, r9
 8000a4e:	1e41      	subs	r1, r0, #1
 8000a50:	4188      	sbcs	r0, r1
 8000a52:	0007      	movs	r7, r0
 8000a54:	432f      	orrs	r7, r5
 8000a56:	e5ef      	b.n	8000638 <__aeabi_dadd+0x18c>
 8000a58:	08d2      	lsrs	r2, r2, #3
 8000a5a:	075f      	lsls	r7, r3, #29
 8000a5c:	4665      	mov	r5, ip
 8000a5e:	4317      	orrs	r7, r2
 8000a60:	08d8      	lsrs	r0, r3, #3
 8000a62:	e687      	b.n	8000774 <__aeabi_dadd+0x2c8>
 8000a64:	1a17      	subs	r7, r2, r0
 8000a66:	42ba      	cmp	r2, r7
 8000a68:	4192      	sbcs	r2, r2
 8000a6a:	1b9e      	subs	r6, r3, r6
 8000a6c:	4252      	negs	r2, r2
 8000a6e:	1ab6      	subs	r6, r6, r2
 8000a70:	0233      	lsls	r3, r6, #8
 8000a72:	d4c1      	bmi.n	80009f8 <__aeabi_dadd+0x54c>
 8000a74:	0773      	lsls	r3, r6, #29
 8000a76:	08ff      	lsrs	r7, r7, #3
 8000a78:	4665      	mov	r5, ip
 8000a7a:	2101      	movs	r1, #1
 8000a7c:	431f      	orrs	r7, r3
 8000a7e:	08f0      	lsrs	r0, r6, #3
 8000a80:	e64b      	b.n	800071a <__aeabi_dadd+0x26e>
 8000a82:	2f00      	cmp	r7, #0
 8000a84:	d07b      	beq.n	8000b7e <__aeabi_dadd+0x6d2>
 8000a86:	4665      	mov	r5, ip
 8000a88:	001e      	movs	r6, r3
 8000a8a:	4691      	mov	r9, r2
 8000a8c:	e63f      	b.n	800070e <__aeabi_dadd+0x262>
 8000a8e:	1a81      	subs	r1, r0, r2
 8000a90:	4688      	mov	r8, r1
 8000a92:	45c1      	cmp	r9, r8
 8000a94:	41a4      	sbcs	r4, r4
 8000a96:	1af1      	subs	r1, r6, r3
 8000a98:	4264      	negs	r4, r4
 8000a9a:	1b09      	subs	r1, r1, r4
 8000a9c:	2480      	movs	r4, #128	@ 0x80
 8000a9e:	0424      	lsls	r4, r4, #16
 8000aa0:	4221      	tst	r1, r4
 8000aa2:	d077      	beq.n	8000b94 <__aeabi_dadd+0x6e8>
 8000aa4:	1a10      	subs	r0, r2, r0
 8000aa6:	4282      	cmp	r2, r0
 8000aa8:	4192      	sbcs	r2, r2
 8000aaa:	0007      	movs	r7, r0
 8000aac:	1b9e      	subs	r6, r3, r6
 8000aae:	4252      	negs	r2, r2
 8000ab0:	1ab6      	subs	r6, r6, r2
 8000ab2:	4337      	orrs	r7, r6
 8000ab4:	d000      	beq.n	8000ab8 <__aeabi_dadd+0x60c>
 8000ab6:	e0a0      	b.n	8000bfa <__aeabi_dadd+0x74e>
 8000ab8:	4665      	mov	r5, ip
 8000aba:	2400      	movs	r4, #0
 8000abc:	2600      	movs	r6, #0
 8000abe:	e63e      	b.n	800073e <__aeabi_dadd+0x292>
 8000ac0:	075f      	lsls	r7, r3, #29
 8000ac2:	08d2      	lsrs	r2, r2, #3
 8000ac4:	4665      	mov	r5, ip
 8000ac6:	4317      	orrs	r7, r2
 8000ac8:	08d8      	lsrs	r0, r3, #3
 8000aca:	e653      	b.n	8000774 <__aeabi_dadd+0x2c8>
 8000acc:	1881      	adds	r1, r0, r2
 8000ace:	4291      	cmp	r1, r2
 8000ad0:	4192      	sbcs	r2, r2
 8000ad2:	18f0      	adds	r0, r6, r3
 8000ad4:	4252      	negs	r2, r2
 8000ad6:	1880      	adds	r0, r0, r2
 8000ad8:	0203      	lsls	r3, r0, #8
 8000ada:	d500      	bpl.n	8000ade <__aeabi_dadd+0x632>
 8000adc:	e768      	b.n	80009b0 <__aeabi_dadd+0x504>
 8000ade:	0747      	lsls	r7, r0, #29
 8000ae0:	08c9      	lsrs	r1, r1, #3
 8000ae2:	430f      	orrs	r7, r1
 8000ae4:	08c0      	lsrs	r0, r0, #3
 8000ae6:	2101      	movs	r1, #1
 8000ae8:	e617      	b.n	800071a <__aeabi_dadd+0x26e>
 8000aea:	08d2      	lsrs	r2, r2, #3
 8000aec:	075f      	lsls	r7, r3, #29
 8000aee:	4317      	orrs	r7, r2
 8000af0:	08d8      	lsrs	r0, r3, #3
 8000af2:	e63f      	b.n	8000774 <__aeabi_dadd+0x2c8>
 8000af4:	000c      	movs	r4, r1
 8000af6:	2600      	movs	r6, #0
 8000af8:	2700      	movs	r7, #0
 8000afa:	e620      	b.n	800073e <__aeabi_dadd+0x292>
 8000afc:	2900      	cmp	r1, #0
 8000afe:	d156      	bne.n	8000bae <__aeabi_dadd+0x702>
 8000b00:	075f      	lsls	r7, r3, #29
 8000b02:	08d2      	lsrs	r2, r2, #3
 8000b04:	4317      	orrs	r7, r2
 8000b06:	08d8      	lsrs	r0, r3, #3
 8000b08:	e634      	b.n	8000774 <__aeabi_dadd+0x2c8>
 8000b0a:	000c      	movs	r4, r1
 8000b0c:	001e      	movs	r6, r3
 8000b0e:	08d0      	lsrs	r0, r2, #3
 8000b10:	e629      	b.n	8000766 <__aeabi_dadd+0x2ba>
 8000b12:	08c1      	lsrs	r1, r0, #3
 8000b14:	0770      	lsls	r0, r6, #29
 8000b16:	4301      	orrs	r1, r0
 8000b18:	08f0      	lsrs	r0, r6, #3
 8000b1a:	2f00      	cmp	r7, #0
 8000b1c:	d062      	beq.n	8000be4 <__aeabi_dadd+0x738>
 8000b1e:	2480      	movs	r4, #128	@ 0x80
 8000b20:	0324      	lsls	r4, r4, #12
 8000b22:	4220      	tst	r0, r4
 8000b24:	d007      	beq.n	8000b36 <__aeabi_dadd+0x68a>
 8000b26:	08de      	lsrs	r6, r3, #3
 8000b28:	4226      	tst	r6, r4
 8000b2a:	d104      	bne.n	8000b36 <__aeabi_dadd+0x68a>
 8000b2c:	4665      	mov	r5, ip
 8000b2e:	0030      	movs	r0, r6
 8000b30:	08d1      	lsrs	r1, r2, #3
 8000b32:	075b      	lsls	r3, r3, #29
 8000b34:	4319      	orrs	r1, r3
 8000b36:	0f4f      	lsrs	r7, r1, #29
 8000b38:	00c9      	lsls	r1, r1, #3
 8000b3a:	08c9      	lsrs	r1, r1, #3
 8000b3c:	077f      	lsls	r7, r7, #29
 8000b3e:	430f      	orrs	r7, r1
 8000b40:	e618      	b.n	8000774 <__aeabi_dadd+0x2c8>
 8000b42:	000c      	movs	r4, r1
 8000b44:	0030      	movs	r0, r6
 8000b46:	3c20      	subs	r4, #32
 8000b48:	40e0      	lsrs	r0, r4
 8000b4a:	4684      	mov	ip, r0
 8000b4c:	2920      	cmp	r1, #32
 8000b4e:	d005      	beq.n	8000b5c <__aeabi_dadd+0x6b0>
 8000b50:	2440      	movs	r4, #64	@ 0x40
 8000b52:	1a61      	subs	r1, r4, r1
 8000b54:	408e      	lsls	r6, r1
 8000b56:	4649      	mov	r1, r9
 8000b58:	4331      	orrs	r1, r6
 8000b5a:	4689      	mov	r9, r1
 8000b5c:	4648      	mov	r0, r9
 8000b5e:	1e41      	subs	r1, r0, #1
 8000b60:	4188      	sbcs	r0, r1
 8000b62:	4661      	mov	r1, ip
 8000b64:	0007      	movs	r7, r0
 8000b66:	430f      	orrs	r7, r1
 8000b68:	e630      	b.n	80007cc <__aeabi_dadd+0x320>
 8000b6a:	2120      	movs	r1, #32
 8000b6c:	2700      	movs	r7, #0
 8000b6e:	1a09      	subs	r1, r1, r0
 8000b70:	e50e      	b.n	8000590 <__aeabi_dadd+0xe4>
 8000b72:	001e      	movs	r6, r3
 8000b74:	2f00      	cmp	r7, #0
 8000b76:	d000      	beq.n	8000b7a <__aeabi_dadd+0x6ce>
 8000b78:	e522      	b.n	80005c0 <__aeabi_dadd+0x114>
 8000b7a:	2400      	movs	r4, #0
 8000b7c:	e758      	b.n	8000a30 <__aeabi_dadd+0x584>
 8000b7e:	2500      	movs	r5, #0
 8000b80:	2400      	movs	r4, #0
 8000b82:	2600      	movs	r6, #0
 8000b84:	e5db      	b.n	800073e <__aeabi_dadd+0x292>
 8000b86:	46c0      	nop			@ (mov r8, r8)
 8000b88:	000007fe 	.word	0x000007fe
 8000b8c:	000007ff 	.word	0x000007ff
 8000b90:	ff7fffff 	.word	0xff7fffff
 8000b94:	4647      	mov	r7, r8
 8000b96:	430f      	orrs	r7, r1
 8000b98:	d100      	bne.n	8000b9c <__aeabi_dadd+0x6f0>
 8000b9a:	e747      	b.n	8000a2c <__aeabi_dadd+0x580>
 8000b9c:	000e      	movs	r6, r1
 8000b9e:	46c1      	mov	r9, r8
 8000ba0:	e5b5      	b.n	800070e <__aeabi_dadd+0x262>
 8000ba2:	08df      	lsrs	r7, r3, #3
 8000ba4:	0764      	lsls	r4, r4, #29
 8000ba6:	2102      	movs	r1, #2
 8000ba8:	4327      	orrs	r7, r4
 8000baa:	0900      	lsrs	r0, r0, #4
 8000bac:	e5b5      	b.n	800071a <__aeabi_dadd+0x26e>
 8000bae:	0019      	movs	r1, r3
 8000bb0:	08c0      	lsrs	r0, r0, #3
 8000bb2:	0777      	lsls	r7, r6, #29
 8000bb4:	4307      	orrs	r7, r0
 8000bb6:	4311      	orrs	r1, r2
 8000bb8:	08f0      	lsrs	r0, r6, #3
 8000bba:	2900      	cmp	r1, #0
 8000bbc:	d100      	bne.n	8000bc0 <__aeabi_dadd+0x714>
 8000bbe:	e5d9      	b.n	8000774 <__aeabi_dadd+0x2c8>
 8000bc0:	2180      	movs	r1, #128	@ 0x80
 8000bc2:	0309      	lsls	r1, r1, #12
 8000bc4:	4208      	tst	r0, r1
 8000bc6:	d007      	beq.n	8000bd8 <__aeabi_dadd+0x72c>
 8000bc8:	08dc      	lsrs	r4, r3, #3
 8000bca:	420c      	tst	r4, r1
 8000bcc:	d104      	bne.n	8000bd8 <__aeabi_dadd+0x72c>
 8000bce:	08d2      	lsrs	r2, r2, #3
 8000bd0:	075b      	lsls	r3, r3, #29
 8000bd2:	431a      	orrs	r2, r3
 8000bd4:	0017      	movs	r7, r2
 8000bd6:	0020      	movs	r0, r4
 8000bd8:	0f7b      	lsrs	r3, r7, #29
 8000bda:	00ff      	lsls	r7, r7, #3
 8000bdc:	08ff      	lsrs	r7, r7, #3
 8000bde:	075b      	lsls	r3, r3, #29
 8000be0:	431f      	orrs	r7, r3
 8000be2:	e5c7      	b.n	8000774 <__aeabi_dadd+0x2c8>
 8000be4:	000f      	movs	r7, r1
 8000be6:	e5c5      	b.n	8000774 <__aeabi_dadd+0x2c8>
 8000be8:	4b12      	ldr	r3, [pc, #72]	@ (8000c34 <__aeabi_dadd+0x788>)
 8000bea:	08d2      	lsrs	r2, r2, #3
 8000bec:	4033      	ands	r3, r6
 8000bee:	075f      	lsls	r7, r3, #29
 8000bf0:	025b      	lsls	r3, r3, #9
 8000bf2:	2401      	movs	r4, #1
 8000bf4:	4317      	orrs	r7, r2
 8000bf6:	0b1e      	lsrs	r6, r3, #12
 8000bf8:	e5a1      	b.n	800073e <__aeabi_dadd+0x292>
 8000bfa:	4226      	tst	r6, r4
 8000bfc:	d012      	beq.n	8000c24 <__aeabi_dadd+0x778>
 8000bfe:	4b0d      	ldr	r3, [pc, #52]	@ (8000c34 <__aeabi_dadd+0x788>)
 8000c00:	4665      	mov	r5, ip
 8000c02:	0002      	movs	r2, r0
 8000c04:	2401      	movs	r4, #1
 8000c06:	401e      	ands	r6, r3
 8000c08:	e4e6      	b.n	80005d8 <__aeabi_dadd+0x12c>
 8000c0a:	0021      	movs	r1, r4
 8000c0c:	e585      	b.n	800071a <__aeabi_dadd+0x26e>
 8000c0e:	0017      	movs	r7, r2
 8000c10:	e5a8      	b.n	8000764 <__aeabi_dadd+0x2b8>
 8000c12:	003a      	movs	r2, r7
 8000c14:	e4d4      	b.n	80005c0 <__aeabi_dadd+0x114>
 8000c16:	08db      	lsrs	r3, r3, #3
 8000c18:	0764      	lsls	r4, r4, #29
 8000c1a:	431c      	orrs	r4, r3
 8000c1c:	0027      	movs	r7, r4
 8000c1e:	2102      	movs	r1, #2
 8000c20:	0900      	lsrs	r0, r0, #4
 8000c22:	e57a      	b.n	800071a <__aeabi_dadd+0x26e>
 8000c24:	08c0      	lsrs	r0, r0, #3
 8000c26:	0777      	lsls	r7, r6, #29
 8000c28:	4307      	orrs	r7, r0
 8000c2a:	4665      	mov	r5, ip
 8000c2c:	2100      	movs	r1, #0
 8000c2e:	08f0      	lsrs	r0, r6, #3
 8000c30:	e573      	b.n	800071a <__aeabi_dadd+0x26e>
 8000c32:	46c0      	nop			@ (mov r8, r8)
 8000c34:	ff7fffff 	.word	0xff7fffff

08000c38 <__aeabi_ddiv>:
 8000c38:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000c3a:	46de      	mov	lr, fp
 8000c3c:	4645      	mov	r5, r8
 8000c3e:	4657      	mov	r7, sl
 8000c40:	464e      	mov	r6, r9
 8000c42:	b5e0      	push	{r5, r6, r7, lr}
 8000c44:	b087      	sub	sp, #28
 8000c46:	9200      	str	r2, [sp, #0]
 8000c48:	9301      	str	r3, [sp, #4]
 8000c4a:	030b      	lsls	r3, r1, #12
 8000c4c:	0b1b      	lsrs	r3, r3, #12
 8000c4e:	469b      	mov	fp, r3
 8000c50:	0fca      	lsrs	r2, r1, #31
 8000c52:	004b      	lsls	r3, r1, #1
 8000c54:	0004      	movs	r4, r0
 8000c56:	4680      	mov	r8, r0
 8000c58:	0d5b      	lsrs	r3, r3, #21
 8000c5a:	9202      	str	r2, [sp, #8]
 8000c5c:	d100      	bne.n	8000c60 <__aeabi_ddiv+0x28>
 8000c5e:	e098      	b.n	8000d92 <__aeabi_ddiv+0x15a>
 8000c60:	4a7c      	ldr	r2, [pc, #496]	@ (8000e54 <__aeabi_ddiv+0x21c>)
 8000c62:	4293      	cmp	r3, r2
 8000c64:	d037      	beq.n	8000cd6 <__aeabi_ddiv+0x9e>
 8000c66:	4659      	mov	r1, fp
 8000c68:	0f42      	lsrs	r2, r0, #29
 8000c6a:	00c9      	lsls	r1, r1, #3
 8000c6c:	430a      	orrs	r2, r1
 8000c6e:	2180      	movs	r1, #128	@ 0x80
 8000c70:	0409      	lsls	r1, r1, #16
 8000c72:	4311      	orrs	r1, r2
 8000c74:	00c2      	lsls	r2, r0, #3
 8000c76:	4690      	mov	r8, r2
 8000c78:	4a77      	ldr	r2, [pc, #476]	@ (8000e58 <__aeabi_ddiv+0x220>)
 8000c7a:	4689      	mov	r9, r1
 8000c7c:	4692      	mov	sl, r2
 8000c7e:	449a      	add	sl, r3
 8000c80:	2300      	movs	r3, #0
 8000c82:	2400      	movs	r4, #0
 8000c84:	9303      	str	r3, [sp, #12]
 8000c86:	9e00      	ldr	r6, [sp, #0]
 8000c88:	9f01      	ldr	r7, [sp, #4]
 8000c8a:	033b      	lsls	r3, r7, #12
 8000c8c:	0b1b      	lsrs	r3, r3, #12
 8000c8e:	469b      	mov	fp, r3
 8000c90:	007b      	lsls	r3, r7, #1
 8000c92:	0030      	movs	r0, r6
 8000c94:	0d5b      	lsrs	r3, r3, #21
 8000c96:	0ffd      	lsrs	r5, r7, #31
 8000c98:	2b00      	cmp	r3, #0
 8000c9a:	d059      	beq.n	8000d50 <__aeabi_ddiv+0x118>
 8000c9c:	4a6d      	ldr	r2, [pc, #436]	@ (8000e54 <__aeabi_ddiv+0x21c>)
 8000c9e:	4293      	cmp	r3, r2
 8000ca0:	d048      	beq.n	8000d34 <__aeabi_ddiv+0xfc>
 8000ca2:	4659      	mov	r1, fp
 8000ca4:	0f72      	lsrs	r2, r6, #29
 8000ca6:	00c9      	lsls	r1, r1, #3
 8000ca8:	430a      	orrs	r2, r1
 8000caa:	2180      	movs	r1, #128	@ 0x80
 8000cac:	0409      	lsls	r1, r1, #16
 8000cae:	4311      	orrs	r1, r2
 8000cb0:	468b      	mov	fp, r1
 8000cb2:	4969      	ldr	r1, [pc, #420]	@ (8000e58 <__aeabi_ddiv+0x220>)
 8000cb4:	00f2      	lsls	r2, r6, #3
 8000cb6:	468c      	mov	ip, r1
 8000cb8:	4651      	mov	r1, sl
 8000cba:	4463      	add	r3, ip
 8000cbc:	1acb      	subs	r3, r1, r3
 8000cbe:	469a      	mov	sl, r3
 8000cc0:	2100      	movs	r1, #0
 8000cc2:	9e02      	ldr	r6, [sp, #8]
 8000cc4:	406e      	eors	r6, r5
 8000cc6:	b2f6      	uxtb	r6, r6
 8000cc8:	2c0f      	cmp	r4, #15
 8000cca:	d900      	bls.n	8000cce <__aeabi_ddiv+0x96>
 8000ccc:	e0ce      	b.n	8000e6c <__aeabi_ddiv+0x234>
 8000cce:	4b63      	ldr	r3, [pc, #396]	@ (8000e5c <__aeabi_ddiv+0x224>)
 8000cd0:	00a4      	lsls	r4, r4, #2
 8000cd2:	591b      	ldr	r3, [r3, r4]
 8000cd4:	469f      	mov	pc, r3
 8000cd6:	465a      	mov	r2, fp
 8000cd8:	4302      	orrs	r2, r0
 8000cda:	4691      	mov	r9, r2
 8000cdc:	d000      	beq.n	8000ce0 <__aeabi_ddiv+0xa8>
 8000cde:	e090      	b.n	8000e02 <__aeabi_ddiv+0x1ca>
 8000ce0:	469a      	mov	sl, r3
 8000ce2:	2302      	movs	r3, #2
 8000ce4:	4690      	mov	r8, r2
 8000ce6:	2408      	movs	r4, #8
 8000ce8:	9303      	str	r3, [sp, #12]
 8000cea:	e7cc      	b.n	8000c86 <__aeabi_ddiv+0x4e>
 8000cec:	46cb      	mov	fp, r9
 8000cee:	4642      	mov	r2, r8
 8000cf0:	9d02      	ldr	r5, [sp, #8]
 8000cf2:	9903      	ldr	r1, [sp, #12]
 8000cf4:	2902      	cmp	r1, #2
 8000cf6:	d100      	bne.n	8000cfa <__aeabi_ddiv+0xc2>
 8000cf8:	e1de      	b.n	80010b8 <__aeabi_ddiv+0x480>
 8000cfa:	2903      	cmp	r1, #3
 8000cfc:	d100      	bne.n	8000d00 <__aeabi_ddiv+0xc8>
 8000cfe:	e08d      	b.n	8000e1c <__aeabi_ddiv+0x1e4>
 8000d00:	2901      	cmp	r1, #1
 8000d02:	d000      	beq.n	8000d06 <__aeabi_ddiv+0xce>
 8000d04:	e179      	b.n	8000ffa <__aeabi_ddiv+0x3c2>
 8000d06:	002e      	movs	r6, r5
 8000d08:	2200      	movs	r2, #0
 8000d0a:	2300      	movs	r3, #0
 8000d0c:	2400      	movs	r4, #0
 8000d0e:	4690      	mov	r8, r2
 8000d10:	051b      	lsls	r3, r3, #20
 8000d12:	4323      	orrs	r3, r4
 8000d14:	07f6      	lsls	r6, r6, #31
 8000d16:	4333      	orrs	r3, r6
 8000d18:	4640      	mov	r0, r8
 8000d1a:	0019      	movs	r1, r3
 8000d1c:	b007      	add	sp, #28
 8000d1e:	bcf0      	pop	{r4, r5, r6, r7}
 8000d20:	46bb      	mov	fp, r7
 8000d22:	46b2      	mov	sl, r6
 8000d24:	46a9      	mov	r9, r5
 8000d26:	46a0      	mov	r8, r4
 8000d28:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000d2a:	2200      	movs	r2, #0
 8000d2c:	2400      	movs	r4, #0
 8000d2e:	4690      	mov	r8, r2
 8000d30:	4b48      	ldr	r3, [pc, #288]	@ (8000e54 <__aeabi_ddiv+0x21c>)
 8000d32:	e7ed      	b.n	8000d10 <__aeabi_ddiv+0xd8>
 8000d34:	465a      	mov	r2, fp
 8000d36:	9b00      	ldr	r3, [sp, #0]
 8000d38:	431a      	orrs	r2, r3
 8000d3a:	4b49      	ldr	r3, [pc, #292]	@ (8000e60 <__aeabi_ddiv+0x228>)
 8000d3c:	469c      	mov	ip, r3
 8000d3e:	44e2      	add	sl, ip
 8000d40:	2a00      	cmp	r2, #0
 8000d42:	d159      	bne.n	8000df8 <__aeabi_ddiv+0x1c0>
 8000d44:	2302      	movs	r3, #2
 8000d46:	431c      	orrs	r4, r3
 8000d48:	2300      	movs	r3, #0
 8000d4a:	2102      	movs	r1, #2
 8000d4c:	469b      	mov	fp, r3
 8000d4e:	e7b8      	b.n	8000cc2 <__aeabi_ddiv+0x8a>
 8000d50:	465a      	mov	r2, fp
 8000d52:	9b00      	ldr	r3, [sp, #0]
 8000d54:	431a      	orrs	r2, r3
 8000d56:	d049      	beq.n	8000dec <__aeabi_ddiv+0x1b4>
 8000d58:	465b      	mov	r3, fp
 8000d5a:	2b00      	cmp	r3, #0
 8000d5c:	d100      	bne.n	8000d60 <__aeabi_ddiv+0x128>
 8000d5e:	e19c      	b.n	800109a <__aeabi_ddiv+0x462>
 8000d60:	4658      	mov	r0, fp
 8000d62:	f001 fb21 	bl	80023a8 <__clzsi2>
 8000d66:	0002      	movs	r2, r0
 8000d68:	0003      	movs	r3, r0
 8000d6a:	3a0b      	subs	r2, #11
 8000d6c:	271d      	movs	r7, #29
 8000d6e:	9e00      	ldr	r6, [sp, #0]
 8000d70:	1aba      	subs	r2, r7, r2
 8000d72:	0019      	movs	r1, r3
 8000d74:	4658      	mov	r0, fp
 8000d76:	40d6      	lsrs	r6, r2
 8000d78:	3908      	subs	r1, #8
 8000d7a:	4088      	lsls	r0, r1
 8000d7c:	0032      	movs	r2, r6
 8000d7e:	4302      	orrs	r2, r0
 8000d80:	4693      	mov	fp, r2
 8000d82:	9a00      	ldr	r2, [sp, #0]
 8000d84:	408a      	lsls	r2, r1
 8000d86:	4937      	ldr	r1, [pc, #220]	@ (8000e64 <__aeabi_ddiv+0x22c>)
 8000d88:	4453      	add	r3, sl
 8000d8a:	468a      	mov	sl, r1
 8000d8c:	2100      	movs	r1, #0
 8000d8e:	449a      	add	sl, r3
 8000d90:	e797      	b.n	8000cc2 <__aeabi_ddiv+0x8a>
 8000d92:	465b      	mov	r3, fp
 8000d94:	4303      	orrs	r3, r0
 8000d96:	4699      	mov	r9, r3
 8000d98:	d021      	beq.n	8000dde <__aeabi_ddiv+0x1a6>
 8000d9a:	465b      	mov	r3, fp
 8000d9c:	2b00      	cmp	r3, #0
 8000d9e:	d100      	bne.n	8000da2 <__aeabi_ddiv+0x16a>
 8000da0:	e169      	b.n	8001076 <__aeabi_ddiv+0x43e>
 8000da2:	4658      	mov	r0, fp
 8000da4:	f001 fb00 	bl	80023a8 <__clzsi2>
 8000da8:	230b      	movs	r3, #11
 8000daa:	425b      	negs	r3, r3
 8000dac:	469c      	mov	ip, r3
 8000dae:	0002      	movs	r2, r0
 8000db0:	4484      	add	ip, r0
 8000db2:	4666      	mov	r6, ip
 8000db4:	231d      	movs	r3, #29
 8000db6:	1b9b      	subs	r3, r3, r6
 8000db8:	0026      	movs	r6, r4
 8000dba:	0011      	movs	r1, r2
 8000dbc:	4658      	mov	r0, fp
 8000dbe:	40de      	lsrs	r6, r3
 8000dc0:	3908      	subs	r1, #8
 8000dc2:	4088      	lsls	r0, r1
 8000dc4:	0033      	movs	r3, r6
 8000dc6:	4303      	orrs	r3, r0
 8000dc8:	4699      	mov	r9, r3
 8000dca:	0023      	movs	r3, r4
 8000dcc:	408b      	lsls	r3, r1
 8000dce:	4698      	mov	r8, r3
 8000dd0:	4b25      	ldr	r3, [pc, #148]	@ (8000e68 <__aeabi_ddiv+0x230>)
 8000dd2:	2400      	movs	r4, #0
 8000dd4:	1a9b      	subs	r3, r3, r2
 8000dd6:	469a      	mov	sl, r3
 8000dd8:	2300      	movs	r3, #0
 8000dda:	9303      	str	r3, [sp, #12]
 8000ddc:	e753      	b.n	8000c86 <__aeabi_ddiv+0x4e>
 8000dde:	2300      	movs	r3, #0
 8000de0:	4698      	mov	r8, r3
 8000de2:	469a      	mov	sl, r3
 8000de4:	3301      	adds	r3, #1
 8000de6:	2404      	movs	r4, #4
 8000de8:	9303      	str	r3, [sp, #12]
 8000dea:	e74c      	b.n	8000c86 <__aeabi_ddiv+0x4e>
 8000dec:	2301      	movs	r3, #1
 8000dee:	431c      	orrs	r4, r3
 8000df0:	2300      	movs	r3, #0
 8000df2:	2101      	movs	r1, #1
 8000df4:	469b      	mov	fp, r3
 8000df6:	e764      	b.n	8000cc2 <__aeabi_ddiv+0x8a>
 8000df8:	2303      	movs	r3, #3
 8000dfa:	0032      	movs	r2, r6
 8000dfc:	2103      	movs	r1, #3
 8000dfe:	431c      	orrs	r4, r3
 8000e00:	e75f      	b.n	8000cc2 <__aeabi_ddiv+0x8a>
 8000e02:	469a      	mov	sl, r3
 8000e04:	2303      	movs	r3, #3
 8000e06:	46d9      	mov	r9, fp
 8000e08:	240c      	movs	r4, #12
 8000e0a:	9303      	str	r3, [sp, #12]
 8000e0c:	e73b      	b.n	8000c86 <__aeabi_ddiv+0x4e>
 8000e0e:	2300      	movs	r3, #0
 8000e10:	2480      	movs	r4, #128	@ 0x80
 8000e12:	4698      	mov	r8, r3
 8000e14:	2600      	movs	r6, #0
 8000e16:	4b0f      	ldr	r3, [pc, #60]	@ (8000e54 <__aeabi_ddiv+0x21c>)
 8000e18:	0324      	lsls	r4, r4, #12
 8000e1a:	e779      	b.n	8000d10 <__aeabi_ddiv+0xd8>
 8000e1c:	2480      	movs	r4, #128	@ 0x80
 8000e1e:	465b      	mov	r3, fp
 8000e20:	0324      	lsls	r4, r4, #12
 8000e22:	431c      	orrs	r4, r3
 8000e24:	0324      	lsls	r4, r4, #12
 8000e26:	002e      	movs	r6, r5
 8000e28:	4690      	mov	r8, r2
 8000e2a:	4b0a      	ldr	r3, [pc, #40]	@ (8000e54 <__aeabi_ddiv+0x21c>)
 8000e2c:	0b24      	lsrs	r4, r4, #12
 8000e2e:	e76f      	b.n	8000d10 <__aeabi_ddiv+0xd8>
 8000e30:	2480      	movs	r4, #128	@ 0x80
 8000e32:	464b      	mov	r3, r9
 8000e34:	0324      	lsls	r4, r4, #12
 8000e36:	4223      	tst	r3, r4
 8000e38:	d002      	beq.n	8000e40 <__aeabi_ddiv+0x208>
 8000e3a:	465b      	mov	r3, fp
 8000e3c:	4223      	tst	r3, r4
 8000e3e:	d0f0      	beq.n	8000e22 <__aeabi_ddiv+0x1ea>
 8000e40:	2480      	movs	r4, #128	@ 0x80
 8000e42:	464b      	mov	r3, r9
 8000e44:	0324      	lsls	r4, r4, #12
 8000e46:	431c      	orrs	r4, r3
 8000e48:	0324      	lsls	r4, r4, #12
 8000e4a:	9e02      	ldr	r6, [sp, #8]
 8000e4c:	4b01      	ldr	r3, [pc, #4]	@ (8000e54 <__aeabi_ddiv+0x21c>)
 8000e4e:	0b24      	lsrs	r4, r4, #12
 8000e50:	e75e      	b.n	8000d10 <__aeabi_ddiv+0xd8>
 8000e52:	46c0      	nop			@ (mov r8, r8)
 8000e54:	000007ff 	.word	0x000007ff
 8000e58:	fffffc01 	.word	0xfffffc01
 8000e5c:	0800464c 	.word	0x0800464c
 8000e60:	fffff801 	.word	0xfffff801
 8000e64:	000003f3 	.word	0x000003f3
 8000e68:	fffffc0d 	.word	0xfffffc0d
 8000e6c:	45cb      	cmp	fp, r9
 8000e6e:	d200      	bcs.n	8000e72 <__aeabi_ddiv+0x23a>
 8000e70:	e0f8      	b.n	8001064 <__aeabi_ddiv+0x42c>
 8000e72:	d100      	bne.n	8000e76 <__aeabi_ddiv+0x23e>
 8000e74:	e0f3      	b.n	800105e <__aeabi_ddiv+0x426>
 8000e76:	2301      	movs	r3, #1
 8000e78:	425b      	negs	r3, r3
 8000e7a:	469c      	mov	ip, r3
 8000e7c:	4644      	mov	r4, r8
 8000e7e:	4648      	mov	r0, r9
 8000e80:	2500      	movs	r5, #0
 8000e82:	44e2      	add	sl, ip
 8000e84:	465b      	mov	r3, fp
 8000e86:	0e17      	lsrs	r7, r2, #24
 8000e88:	021b      	lsls	r3, r3, #8
 8000e8a:	431f      	orrs	r7, r3
 8000e8c:	0c19      	lsrs	r1, r3, #16
 8000e8e:	043b      	lsls	r3, r7, #16
 8000e90:	0212      	lsls	r2, r2, #8
 8000e92:	9700      	str	r7, [sp, #0]
 8000e94:	0c1f      	lsrs	r7, r3, #16
 8000e96:	4691      	mov	r9, r2
 8000e98:	9102      	str	r1, [sp, #8]
 8000e9a:	9703      	str	r7, [sp, #12]
 8000e9c:	f7ff f9ba 	bl	8000214 <__aeabi_uidivmod>
 8000ea0:	0002      	movs	r2, r0
 8000ea2:	437a      	muls	r2, r7
 8000ea4:	040b      	lsls	r3, r1, #16
 8000ea6:	0c21      	lsrs	r1, r4, #16
 8000ea8:	4680      	mov	r8, r0
 8000eaa:	4319      	orrs	r1, r3
 8000eac:	428a      	cmp	r2, r1
 8000eae:	d909      	bls.n	8000ec4 <__aeabi_ddiv+0x28c>
 8000eb0:	9f00      	ldr	r7, [sp, #0]
 8000eb2:	2301      	movs	r3, #1
 8000eb4:	46bc      	mov	ip, r7
 8000eb6:	425b      	negs	r3, r3
 8000eb8:	4461      	add	r1, ip
 8000eba:	469c      	mov	ip, r3
 8000ebc:	44e0      	add	r8, ip
 8000ebe:	428f      	cmp	r7, r1
 8000ec0:	d800      	bhi.n	8000ec4 <__aeabi_ddiv+0x28c>
 8000ec2:	e15c      	b.n	800117e <__aeabi_ddiv+0x546>
 8000ec4:	1a88      	subs	r0, r1, r2
 8000ec6:	9902      	ldr	r1, [sp, #8]
 8000ec8:	f7ff f9a4 	bl	8000214 <__aeabi_uidivmod>
 8000ecc:	9a03      	ldr	r2, [sp, #12]
 8000ece:	0424      	lsls	r4, r4, #16
 8000ed0:	4342      	muls	r2, r0
 8000ed2:	0409      	lsls	r1, r1, #16
 8000ed4:	0c24      	lsrs	r4, r4, #16
 8000ed6:	0003      	movs	r3, r0
 8000ed8:	430c      	orrs	r4, r1
 8000eda:	42a2      	cmp	r2, r4
 8000edc:	d906      	bls.n	8000eec <__aeabi_ddiv+0x2b4>
 8000ede:	9900      	ldr	r1, [sp, #0]
 8000ee0:	3b01      	subs	r3, #1
 8000ee2:	468c      	mov	ip, r1
 8000ee4:	4464      	add	r4, ip
 8000ee6:	42a1      	cmp	r1, r4
 8000ee8:	d800      	bhi.n	8000eec <__aeabi_ddiv+0x2b4>
 8000eea:	e142      	b.n	8001172 <__aeabi_ddiv+0x53a>
 8000eec:	1aa0      	subs	r0, r4, r2
 8000eee:	4642      	mov	r2, r8
 8000ef0:	0412      	lsls	r2, r2, #16
 8000ef2:	431a      	orrs	r2, r3
 8000ef4:	4693      	mov	fp, r2
 8000ef6:	464b      	mov	r3, r9
 8000ef8:	4659      	mov	r1, fp
 8000efa:	0c1b      	lsrs	r3, r3, #16
 8000efc:	001f      	movs	r7, r3
 8000efe:	9304      	str	r3, [sp, #16]
 8000f00:	040b      	lsls	r3, r1, #16
 8000f02:	4649      	mov	r1, r9
 8000f04:	0409      	lsls	r1, r1, #16
 8000f06:	0c09      	lsrs	r1, r1, #16
 8000f08:	000c      	movs	r4, r1
 8000f0a:	0c1b      	lsrs	r3, r3, #16
 8000f0c:	435c      	muls	r4, r3
 8000f0e:	0c12      	lsrs	r2, r2, #16
 8000f10:	437b      	muls	r3, r7
 8000f12:	4688      	mov	r8, r1
 8000f14:	4351      	muls	r1, r2
 8000f16:	437a      	muls	r2, r7
 8000f18:	0c27      	lsrs	r7, r4, #16
 8000f1a:	46bc      	mov	ip, r7
 8000f1c:	185b      	adds	r3, r3, r1
 8000f1e:	4463      	add	r3, ip
 8000f20:	4299      	cmp	r1, r3
 8000f22:	d903      	bls.n	8000f2c <__aeabi_ddiv+0x2f4>
 8000f24:	2180      	movs	r1, #128	@ 0x80
 8000f26:	0249      	lsls	r1, r1, #9
 8000f28:	468c      	mov	ip, r1
 8000f2a:	4462      	add	r2, ip
 8000f2c:	0c19      	lsrs	r1, r3, #16
 8000f2e:	0424      	lsls	r4, r4, #16
 8000f30:	041b      	lsls	r3, r3, #16
 8000f32:	0c24      	lsrs	r4, r4, #16
 8000f34:	188a      	adds	r2, r1, r2
 8000f36:	191c      	adds	r4, r3, r4
 8000f38:	4290      	cmp	r0, r2
 8000f3a:	d302      	bcc.n	8000f42 <__aeabi_ddiv+0x30a>
 8000f3c:	d116      	bne.n	8000f6c <__aeabi_ddiv+0x334>
 8000f3e:	42a5      	cmp	r5, r4
 8000f40:	d214      	bcs.n	8000f6c <__aeabi_ddiv+0x334>
 8000f42:	465b      	mov	r3, fp
 8000f44:	9f00      	ldr	r7, [sp, #0]
 8000f46:	3b01      	subs	r3, #1
 8000f48:	444d      	add	r5, r9
 8000f4a:	9305      	str	r3, [sp, #20]
 8000f4c:	454d      	cmp	r5, r9
 8000f4e:	419b      	sbcs	r3, r3
 8000f50:	46bc      	mov	ip, r7
 8000f52:	425b      	negs	r3, r3
 8000f54:	4463      	add	r3, ip
 8000f56:	18c0      	adds	r0, r0, r3
 8000f58:	4287      	cmp	r7, r0
 8000f5a:	d300      	bcc.n	8000f5e <__aeabi_ddiv+0x326>
 8000f5c:	e102      	b.n	8001164 <__aeabi_ddiv+0x52c>
 8000f5e:	4282      	cmp	r2, r0
 8000f60:	d900      	bls.n	8000f64 <__aeabi_ddiv+0x32c>
 8000f62:	e129      	b.n	80011b8 <__aeabi_ddiv+0x580>
 8000f64:	d100      	bne.n	8000f68 <__aeabi_ddiv+0x330>
 8000f66:	e124      	b.n	80011b2 <__aeabi_ddiv+0x57a>
 8000f68:	9b05      	ldr	r3, [sp, #20]
 8000f6a:	469b      	mov	fp, r3
 8000f6c:	1b2c      	subs	r4, r5, r4
 8000f6e:	42a5      	cmp	r5, r4
 8000f70:	41ad      	sbcs	r5, r5
 8000f72:	9b00      	ldr	r3, [sp, #0]
 8000f74:	1a80      	subs	r0, r0, r2
 8000f76:	426d      	negs	r5, r5
 8000f78:	1b40      	subs	r0, r0, r5
 8000f7a:	4283      	cmp	r3, r0
 8000f7c:	d100      	bne.n	8000f80 <__aeabi_ddiv+0x348>
 8000f7e:	e10f      	b.n	80011a0 <__aeabi_ddiv+0x568>
 8000f80:	9902      	ldr	r1, [sp, #8]
 8000f82:	f7ff f947 	bl	8000214 <__aeabi_uidivmod>
 8000f86:	9a03      	ldr	r2, [sp, #12]
 8000f88:	040b      	lsls	r3, r1, #16
 8000f8a:	4342      	muls	r2, r0
 8000f8c:	0c21      	lsrs	r1, r4, #16
 8000f8e:	0005      	movs	r5, r0
 8000f90:	4319      	orrs	r1, r3
 8000f92:	428a      	cmp	r2, r1
 8000f94:	d900      	bls.n	8000f98 <__aeabi_ddiv+0x360>
 8000f96:	e0cb      	b.n	8001130 <__aeabi_ddiv+0x4f8>
 8000f98:	1a88      	subs	r0, r1, r2
 8000f9a:	9902      	ldr	r1, [sp, #8]
 8000f9c:	f7ff f93a 	bl	8000214 <__aeabi_uidivmod>
 8000fa0:	9a03      	ldr	r2, [sp, #12]
 8000fa2:	0424      	lsls	r4, r4, #16
 8000fa4:	4342      	muls	r2, r0
 8000fa6:	0409      	lsls	r1, r1, #16
 8000fa8:	0c24      	lsrs	r4, r4, #16
 8000faa:	0003      	movs	r3, r0
 8000fac:	430c      	orrs	r4, r1
 8000fae:	42a2      	cmp	r2, r4
 8000fb0:	d900      	bls.n	8000fb4 <__aeabi_ddiv+0x37c>
 8000fb2:	e0ca      	b.n	800114a <__aeabi_ddiv+0x512>
 8000fb4:	4641      	mov	r1, r8
 8000fb6:	1aa4      	subs	r4, r4, r2
 8000fb8:	042a      	lsls	r2, r5, #16
 8000fba:	431a      	orrs	r2, r3
 8000fbc:	9f04      	ldr	r7, [sp, #16]
 8000fbe:	0413      	lsls	r3, r2, #16
 8000fc0:	0c1b      	lsrs	r3, r3, #16
 8000fc2:	4359      	muls	r1, r3
 8000fc4:	4640      	mov	r0, r8
 8000fc6:	437b      	muls	r3, r7
 8000fc8:	469c      	mov	ip, r3
 8000fca:	0c15      	lsrs	r5, r2, #16
 8000fcc:	4368      	muls	r0, r5
 8000fce:	0c0b      	lsrs	r3, r1, #16
 8000fd0:	4484      	add	ip, r0
 8000fd2:	4463      	add	r3, ip
 8000fd4:	437d      	muls	r5, r7
 8000fd6:	4298      	cmp	r0, r3
 8000fd8:	d903      	bls.n	8000fe2 <__aeabi_ddiv+0x3aa>
 8000fda:	2080      	movs	r0, #128	@ 0x80
 8000fdc:	0240      	lsls	r0, r0, #9
 8000fde:	4684      	mov	ip, r0
 8000fe0:	4465      	add	r5, ip
 8000fe2:	0c18      	lsrs	r0, r3, #16
 8000fe4:	0409      	lsls	r1, r1, #16
 8000fe6:	041b      	lsls	r3, r3, #16
 8000fe8:	0c09      	lsrs	r1, r1, #16
 8000fea:	1940      	adds	r0, r0, r5
 8000fec:	185b      	adds	r3, r3, r1
 8000fee:	4284      	cmp	r4, r0
 8000ff0:	d327      	bcc.n	8001042 <__aeabi_ddiv+0x40a>
 8000ff2:	d023      	beq.n	800103c <__aeabi_ddiv+0x404>
 8000ff4:	2301      	movs	r3, #1
 8000ff6:	0035      	movs	r5, r6
 8000ff8:	431a      	orrs	r2, r3
 8000ffa:	4b94      	ldr	r3, [pc, #592]	@ (800124c <__aeabi_ddiv+0x614>)
 8000ffc:	4453      	add	r3, sl
 8000ffe:	2b00      	cmp	r3, #0
 8001000:	dd60      	ble.n	80010c4 <__aeabi_ddiv+0x48c>
 8001002:	0751      	lsls	r1, r2, #29
 8001004:	d000      	beq.n	8001008 <__aeabi_ddiv+0x3d0>
 8001006:	e086      	b.n	8001116 <__aeabi_ddiv+0x4de>
 8001008:	002e      	movs	r6, r5
 800100a:	08d1      	lsrs	r1, r2, #3
 800100c:	465a      	mov	r2, fp
 800100e:	01d2      	lsls	r2, r2, #7
 8001010:	d506      	bpl.n	8001020 <__aeabi_ddiv+0x3e8>
 8001012:	465a      	mov	r2, fp
 8001014:	4b8e      	ldr	r3, [pc, #568]	@ (8001250 <__aeabi_ddiv+0x618>)
 8001016:	401a      	ands	r2, r3
 8001018:	2380      	movs	r3, #128	@ 0x80
 800101a:	4693      	mov	fp, r2
 800101c:	00db      	lsls	r3, r3, #3
 800101e:	4453      	add	r3, sl
 8001020:	4a8c      	ldr	r2, [pc, #560]	@ (8001254 <__aeabi_ddiv+0x61c>)
 8001022:	4293      	cmp	r3, r2
 8001024:	dd00      	ble.n	8001028 <__aeabi_ddiv+0x3f0>
 8001026:	e680      	b.n	8000d2a <__aeabi_ddiv+0xf2>
 8001028:	465a      	mov	r2, fp
 800102a:	0752      	lsls	r2, r2, #29
 800102c:	430a      	orrs	r2, r1
 800102e:	4690      	mov	r8, r2
 8001030:	465a      	mov	r2, fp
 8001032:	055b      	lsls	r3, r3, #21
 8001034:	0254      	lsls	r4, r2, #9
 8001036:	0b24      	lsrs	r4, r4, #12
 8001038:	0d5b      	lsrs	r3, r3, #21
 800103a:	e669      	b.n	8000d10 <__aeabi_ddiv+0xd8>
 800103c:	0035      	movs	r5, r6
 800103e:	2b00      	cmp	r3, #0
 8001040:	d0db      	beq.n	8000ffa <__aeabi_ddiv+0x3c2>
 8001042:	9d00      	ldr	r5, [sp, #0]
 8001044:	1e51      	subs	r1, r2, #1
 8001046:	46ac      	mov	ip, r5
 8001048:	4464      	add	r4, ip
 800104a:	42ac      	cmp	r4, r5
 800104c:	d200      	bcs.n	8001050 <__aeabi_ddiv+0x418>
 800104e:	e09e      	b.n	800118e <__aeabi_ddiv+0x556>
 8001050:	4284      	cmp	r4, r0
 8001052:	d200      	bcs.n	8001056 <__aeabi_ddiv+0x41e>
 8001054:	e0e1      	b.n	800121a <__aeabi_ddiv+0x5e2>
 8001056:	d100      	bne.n	800105a <__aeabi_ddiv+0x422>
 8001058:	e0ee      	b.n	8001238 <__aeabi_ddiv+0x600>
 800105a:	000a      	movs	r2, r1
 800105c:	e7ca      	b.n	8000ff4 <__aeabi_ddiv+0x3bc>
 800105e:	4542      	cmp	r2, r8
 8001060:	d900      	bls.n	8001064 <__aeabi_ddiv+0x42c>
 8001062:	e708      	b.n	8000e76 <__aeabi_ddiv+0x23e>
 8001064:	464b      	mov	r3, r9
 8001066:	07dc      	lsls	r4, r3, #31
 8001068:	0858      	lsrs	r0, r3, #1
 800106a:	4643      	mov	r3, r8
 800106c:	085b      	lsrs	r3, r3, #1
 800106e:	431c      	orrs	r4, r3
 8001070:	4643      	mov	r3, r8
 8001072:	07dd      	lsls	r5, r3, #31
 8001074:	e706      	b.n	8000e84 <__aeabi_ddiv+0x24c>
 8001076:	f001 f997 	bl	80023a8 <__clzsi2>
 800107a:	2315      	movs	r3, #21
 800107c:	469c      	mov	ip, r3
 800107e:	4484      	add	ip, r0
 8001080:	0002      	movs	r2, r0
 8001082:	4663      	mov	r3, ip
 8001084:	3220      	adds	r2, #32
 8001086:	2b1c      	cmp	r3, #28
 8001088:	dc00      	bgt.n	800108c <__aeabi_ddiv+0x454>
 800108a:	e692      	b.n	8000db2 <__aeabi_ddiv+0x17a>
 800108c:	0023      	movs	r3, r4
 800108e:	3808      	subs	r0, #8
 8001090:	4083      	lsls	r3, r0
 8001092:	4699      	mov	r9, r3
 8001094:	2300      	movs	r3, #0
 8001096:	4698      	mov	r8, r3
 8001098:	e69a      	b.n	8000dd0 <__aeabi_ddiv+0x198>
 800109a:	f001 f985 	bl	80023a8 <__clzsi2>
 800109e:	0002      	movs	r2, r0
 80010a0:	0003      	movs	r3, r0
 80010a2:	3215      	adds	r2, #21
 80010a4:	3320      	adds	r3, #32
 80010a6:	2a1c      	cmp	r2, #28
 80010a8:	dc00      	bgt.n	80010ac <__aeabi_ddiv+0x474>
 80010aa:	e65f      	b.n	8000d6c <__aeabi_ddiv+0x134>
 80010ac:	9900      	ldr	r1, [sp, #0]
 80010ae:	3808      	subs	r0, #8
 80010b0:	4081      	lsls	r1, r0
 80010b2:	2200      	movs	r2, #0
 80010b4:	468b      	mov	fp, r1
 80010b6:	e666      	b.n	8000d86 <__aeabi_ddiv+0x14e>
 80010b8:	2200      	movs	r2, #0
 80010ba:	002e      	movs	r6, r5
 80010bc:	2400      	movs	r4, #0
 80010be:	4690      	mov	r8, r2
 80010c0:	4b65      	ldr	r3, [pc, #404]	@ (8001258 <__aeabi_ddiv+0x620>)
 80010c2:	e625      	b.n	8000d10 <__aeabi_ddiv+0xd8>
 80010c4:	002e      	movs	r6, r5
 80010c6:	2101      	movs	r1, #1
 80010c8:	1ac9      	subs	r1, r1, r3
 80010ca:	2938      	cmp	r1, #56	@ 0x38
 80010cc:	dd00      	ble.n	80010d0 <__aeabi_ddiv+0x498>
 80010ce:	e61b      	b.n	8000d08 <__aeabi_ddiv+0xd0>
 80010d0:	291f      	cmp	r1, #31
 80010d2:	dc7e      	bgt.n	80011d2 <__aeabi_ddiv+0x59a>
 80010d4:	4861      	ldr	r0, [pc, #388]	@ (800125c <__aeabi_ddiv+0x624>)
 80010d6:	0014      	movs	r4, r2
 80010d8:	4450      	add	r0, sl
 80010da:	465b      	mov	r3, fp
 80010dc:	4082      	lsls	r2, r0
 80010de:	4083      	lsls	r3, r0
 80010e0:	40cc      	lsrs	r4, r1
 80010e2:	1e50      	subs	r0, r2, #1
 80010e4:	4182      	sbcs	r2, r0
 80010e6:	4323      	orrs	r3, r4
 80010e8:	431a      	orrs	r2, r3
 80010ea:	465b      	mov	r3, fp
 80010ec:	40cb      	lsrs	r3, r1
 80010ee:	0751      	lsls	r1, r2, #29
 80010f0:	d009      	beq.n	8001106 <__aeabi_ddiv+0x4ce>
 80010f2:	210f      	movs	r1, #15
 80010f4:	4011      	ands	r1, r2
 80010f6:	2904      	cmp	r1, #4
 80010f8:	d005      	beq.n	8001106 <__aeabi_ddiv+0x4ce>
 80010fa:	1d11      	adds	r1, r2, #4
 80010fc:	4291      	cmp	r1, r2
 80010fe:	4192      	sbcs	r2, r2
 8001100:	4252      	negs	r2, r2
 8001102:	189b      	adds	r3, r3, r2
 8001104:	000a      	movs	r2, r1
 8001106:	0219      	lsls	r1, r3, #8
 8001108:	d400      	bmi.n	800110c <__aeabi_ddiv+0x4d4>
 800110a:	e09b      	b.n	8001244 <__aeabi_ddiv+0x60c>
 800110c:	2200      	movs	r2, #0
 800110e:	2301      	movs	r3, #1
 8001110:	2400      	movs	r4, #0
 8001112:	4690      	mov	r8, r2
 8001114:	e5fc      	b.n	8000d10 <__aeabi_ddiv+0xd8>
 8001116:	210f      	movs	r1, #15
 8001118:	4011      	ands	r1, r2
 800111a:	2904      	cmp	r1, #4
 800111c:	d100      	bne.n	8001120 <__aeabi_ddiv+0x4e8>
 800111e:	e773      	b.n	8001008 <__aeabi_ddiv+0x3d0>
 8001120:	1d11      	adds	r1, r2, #4
 8001122:	4291      	cmp	r1, r2
 8001124:	4192      	sbcs	r2, r2
 8001126:	4252      	negs	r2, r2
 8001128:	002e      	movs	r6, r5
 800112a:	08c9      	lsrs	r1, r1, #3
 800112c:	4493      	add	fp, r2
 800112e:	e76d      	b.n	800100c <__aeabi_ddiv+0x3d4>
 8001130:	9b00      	ldr	r3, [sp, #0]
 8001132:	3d01      	subs	r5, #1
 8001134:	469c      	mov	ip, r3
 8001136:	4461      	add	r1, ip
 8001138:	428b      	cmp	r3, r1
 800113a:	d900      	bls.n	800113e <__aeabi_ddiv+0x506>
 800113c:	e72c      	b.n	8000f98 <__aeabi_ddiv+0x360>
 800113e:	428a      	cmp	r2, r1
 8001140:	d800      	bhi.n	8001144 <__aeabi_ddiv+0x50c>
 8001142:	e729      	b.n	8000f98 <__aeabi_ddiv+0x360>
 8001144:	1e85      	subs	r5, r0, #2
 8001146:	4461      	add	r1, ip
 8001148:	e726      	b.n	8000f98 <__aeabi_ddiv+0x360>
 800114a:	9900      	ldr	r1, [sp, #0]
 800114c:	3b01      	subs	r3, #1
 800114e:	468c      	mov	ip, r1
 8001150:	4464      	add	r4, ip
 8001152:	42a1      	cmp	r1, r4
 8001154:	d900      	bls.n	8001158 <__aeabi_ddiv+0x520>
 8001156:	e72d      	b.n	8000fb4 <__aeabi_ddiv+0x37c>
 8001158:	42a2      	cmp	r2, r4
 800115a:	d800      	bhi.n	800115e <__aeabi_ddiv+0x526>
 800115c:	e72a      	b.n	8000fb4 <__aeabi_ddiv+0x37c>
 800115e:	1e83      	subs	r3, r0, #2
 8001160:	4464      	add	r4, ip
 8001162:	e727      	b.n	8000fb4 <__aeabi_ddiv+0x37c>
 8001164:	4287      	cmp	r7, r0
 8001166:	d000      	beq.n	800116a <__aeabi_ddiv+0x532>
 8001168:	e6fe      	b.n	8000f68 <__aeabi_ddiv+0x330>
 800116a:	45a9      	cmp	r9, r5
 800116c:	d900      	bls.n	8001170 <__aeabi_ddiv+0x538>
 800116e:	e6fb      	b.n	8000f68 <__aeabi_ddiv+0x330>
 8001170:	e6f5      	b.n	8000f5e <__aeabi_ddiv+0x326>
 8001172:	42a2      	cmp	r2, r4
 8001174:	d800      	bhi.n	8001178 <__aeabi_ddiv+0x540>
 8001176:	e6b9      	b.n	8000eec <__aeabi_ddiv+0x2b4>
 8001178:	1e83      	subs	r3, r0, #2
 800117a:	4464      	add	r4, ip
 800117c:	e6b6      	b.n	8000eec <__aeabi_ddiv+0x2b4>
 800117e:	428a      	cmp	r2, r1
 8001180:	d800      	bhi.n	8001184 <__aeabi_ddiv+0x54c>
 8001182:	e69f      	b.n	8000ec4 <__aeabi_ddiv+0x28c>
 8001184:	46bc      	mov	ip, r7
 8001186:	1e83      	subs	r3, r0, #2
 8001188:	4698      	mov	r8, r3
 800118a:	4461      	add	r1, ip
 800118c:	e69a      	b.n	8000ec4 <__aeabi_ddiv+0x28c>
 800118e:	000a      	movs	r2, r1
 8001190:	4284      	cmp	r4, r0
 8001192:	d000      	beq.n	8001196 <__aeabi_ddiv+0x55e>
 8001194:	e72e      	b.n	8000ff4 <__aeabi_ddiv+0x3bc>
 8001196:	454b      	cmp	r3, r9
 8001198:	d000      	beq.n	800119c <__aeabi_ddiv+0x564>
 800119a:	e72b      	b.n	8000ff4 <__aeabi_ddiv+0x3bc>
 800119c:	0035      	movs	r5, r6
 800119e:	e72c      	b.n	8000ffa <__aeabi_ddiv+0x3c2>
 80011a0:	4b2a      	ldr	r3, [pc, #168]	@ (800124c <__aeabi_ddiv+0x614>)
 80011a2:	4a2f      	ldr	r2, [pc, #188]	@ (8001260 <__aeabi_ddiv+0x628>)
 80011a4:	4453      	add	r3, sl
 80011a6:	4592      	cmp	sl, r2
 80011a8:	db43      	blt.n	8001232 <__aeabi_ddiv+0x5fa>
 80011aa:	2201      	movs	r2, #1
 80011ac:	2100      	movs	r1, #0
 80011ae:	4493      	add	fp, r2
 80011b0:	e72c      	b.n	800100c <__aeabi_ddiv+0x3d4>
 80011b2:	42ac      	cmp	r4, r5
 80011b4:	d800      	bhi.n	80011b8 <__aeabi_ddiv+0x580>
 80011b6:	e6d7      	b.n	8000f68 <__aeabi_ddiv+0x330>
 80011b8:	2302      	movs	r3, #2
 80011ba:	425b      	negs	r3, r3
 80011bc:	469c      	mov	ip, r3
 80011be:	9900      	ldr	r1, [sp, #0]
 80011c0:	444d      	add	r5, r9
 80011c2:	454d      	cmp	r5, r9
 80011c4:	419b      	sbcs	r3, r3
 80011c6:	44e3      	add	fp, ip
 80011c8:	468c      	mov	ip, r1
 80011ca:	425b      	negs	r3, r3
 80011cc:	4463      	add	r3, ip
 80011ce:	18c0      	adds	r0, r0, r3
 80011d0:	e6cc      	b.n	8000f6c <__aeabi_ddiv+0x334>
 80011d2:	201f      	movs	r0, #31
 80011d4:	4240      	negs	r0, r0
 80011d6:	1ac3      	subs	r3, r0, r3
 80011d8:	4658      	mov	r0, fp
 80011da:	40d8      	lsrs	r0, r3
 80011dc:	2920      	cmp	r1, #32
 80011de:	d004      	beq.n	80011ea <__aeabi_ddiv+0x5b2>
 80011e0:	4659      	mov	r1, fp
 80011e2:	4b20      	ldr	r3, [pc, #128]	@ (8001264 <__aeabi_ddiv+0x62c>)
 80011e4:	4453      	add	r3, sl
 80011e6:	4099      	lsls	r1, r3
 80011e8:	430a      	orrs	r2, r1
 80011ea:	1e53      	subs	r3, r2, #1
 80011ec:	419a      	sbcs	r2, r3
 80011ee:	2307      	movs	r3, #7
 80011f0:	0019      	movs	r1, r3
 80011f2:	4302      	orrs	r2, r0
 80011f4:	2400      	movs	r4, #0
 80011f6:	4011      	ands	r1, r2
 80011f8:	4213      	tst	r3, r2
 80011fa:	d009      	beq.n	8001210 <__aeabi_ddiv+0x5d8>
 80011fc:	3308      	adds	r3, #8
 80011fe:	4013      	ands	r3, r2
 8001200:	2b04      	cmp	r3, #4
 8001202:	d01d      	beq.n	8001240 <__aeabi_ddiv+0x608>
 8001204:	1d13      	adds	r3, r2, #4
 8001206:	4293      	cmp	r3, r2
 8001208:	4189      	sbcs	r1, r1
 800120a:	001a      	movs	r2, r3
 800120c:	4249      	negs	r1, r1
 800120e:	0749      	lsls	r1, r1, #29
 8001210:	08d2      	lsrs	r2, r2, #3
 8001212:	430a      	orrs	r2, r1
 8001214:	4690      	mov	r8, r2
 8001216:	2300      	movs	r3, #0
 8001218:	e57a      	b.n	8000d10 <__aeabi_ddiv+0xd8>
 800121a:	4649      	mov	r1, r9
 800121c:	9f00      	ldr	r7, [sp, #0]
 800121e:	004d      	lsls	r5, r1, #1
 8001220:	454d      	cmp	r5, r9
 8001222:	4189      	sbcs	r1, r1
 8001224:	46bc      	mov	ip, r7
 8001226:	4249      	negs	r1, r1
 8001228:	4461      	add	r1, ip
 800122a:	46a9      	mov	r9, r5
 800122c:	3a02      	subs	r2, #2
 800122e:	1864      	adds	r4, r4, r1
 8001230:	e7ae      	b.n	8001190 <__aeabi_ddiv+0x558>
 8001232:	2201      	movs	r2, #1
 8001234:	4252      	negs	r2, r2
 8001236:	e746      	b.n	80010c6 <__aeabi_ddiv+0x48e>
 8001238:	4599      	cmp	r9, r3
 800123a:	d3ee      	bcc.n	800121a <__aeabi_ddiv+0x5e2>
 800123c:	000a      	movs	r2, r1
 800123e:	e7aa      	b.n	8001196 <__aeabi_ddiv+0x55e>
 8001240:	2100      	movs	r1, #0
 8001242:	e7e5      	b.n	8001210 <__aeabi_ddiv+0x5d8>
 8001244:	0759      	lsls	r1, r3, #29
 8001246:	025b      	lsls	r3, r3, #9
 8001248:	0b1c      	lsrs	r4, r3, #12
 800124a:	e7e1      	b.n	8001210 <__aeabi_ddiv+0x5d8>
 800124c:	000003ff 	.word	0x000003ff
 8001250:	feffffff 	.word	0xfeffffff
 8001254:	000007fe 	.word	0x000007fe
 8001258:	000007ff 	.word	0x000007ff
 800125c:	0000041e 	.word	0x0000041e
 8001260:	fffffc02 	.word	0xfffffc02
 8001264:	0000043e 	.word	0x0000043e

08001268 <__eqdf2>:
 8001268:	b5f0      	push	{r4, r5, r6, r7, lr}
 800126a:	4657      	mov	r7, sl
 800126c:	46de      	mov	lr, fp
 800126e:	464e      	mov	r6, r9
 8001270:	4645      	mov	r5, r8
 8001272:	b5e0      	push	{r5, r6, r7, lr}
 8001274:	000d      	movs	r5, r1
 8001276:	0004      	movs	r4, r0
 8001278:	0fe8      	lsrs	r0, r5, #31
 800127a:	4683      	mov	fp, r0
 800127c:	0309      	lsls	r1, r1, #12
 800127e:	0fd8      	lsrs	r0, r3, #31
 8001280:	0b09      	lsrs	r1, r1, #12
 8001282:	4682      	mov	sl, r0
 8001284:	4819      	ldr	r0, [pc, #100]	@ (80012ec <__eqdf2+0x84>)
 8001286:	468c      	mov	ip, r1
 8001288:	031f      	lsls	r7, r3, #12
 800128a:	0069      	lsls	r1, r5, #1
 800128c:	005e      	lsls	r6, r3, #1
 800128e:	0d49      	lsrs	r1, r1, #21
 8001290:	0b3f      	lsrs	r7, r7, #12
 8001292:	0d76      	lsrs	r6, r6, #21
 8001294:	4281      	cmp	r1, r0
 8001296:	d018      	beq.n	80012ca <__eqdf2+0x62>
 8001298:	4286      	cmp	r6, r0
 800129a:	d00f      	beq.n	80012bc <__eqdf2+0x54>
 800129c:	2001      	movs	r0, #1
 800129e:	42b1      	cmp	r1, r6
 80012a0:	d10d      	bne.n	80012be <__eqdf2+0x56>
 80012a2:	45bc      	cmp	ip, r7
 80012a4:	d10b      	bne.n	80012be <__eqdf2+0x56>
 80012a6:	4294      	cmp	r4, r2
 80012a8:	d109      	bne.n	80012be <__eqdf2+0x56>
 80012aa:	45d3      	cmp	fp, sl
 80012ac:	d01c      	beq.n	80012e8 <__eqdf2+0x80>
 80012ae:	2900      	cmp	r1, #0
 80012b0:	d105      	bne.n	80012be <__eqdf2+0x56>
 80012b2:	4660      	mov	r0, ip
 80012b4:	4320      	orrs	r0, r4
 80012b6:	1e43      	subs	r3, r0, #1
 80012b8:	4198      	sbcs	r0, r3
 80012ba:	e000      	b.n	80012be <__eqdf2+0x56>
 80012bc:	2001      	movs	r0, #1
 80012be:	bcf0      	pop	{r4, r5, r6, r7}
 80012c0:	46bb      	mov	fp, r7
 80012c2:	46b2      	mov	sl, r6
 80012c4:	46a9      	mov	r9, r5
 80012c6:	46a0      	mov	r8, r4
 80012c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80012ca:	2001      	movs	r0, #1
 80012cc:	428e      	cmp	r6, r1
 80012ce:	d1f6      	bne.n	80012be <__eqdf2+0x56>
 80012d0:	4661      	mov	r1, ip
 80012d2:	4339      	orrs	r1, r7
 80012d4:	000f      	movs	r7, r1
 80012d6:	4317      	orrs	r7, r2
 80012d8:	4327      	orrs	r7, r4
 80012da:	d1f0      	bne.n	80012be <__eqdf2+0x56>
 80012dc:	465b      	mov	r3, fp
 80012de:	4652      	mov	r2, sl
 80012e0:	1a98      	subs	r0, r3, r2
 80012e2:	1e43      	subs	r3, r0, #1
 80012e4:	4198      	sbcs	r0, r3
 80012e6:	e7ea      	b.n	80012be <__eqdf2+0x56>
 80012e8:	2000      	movs	r0, #0
 80012ea:	e7e8      	b.n	80012be <__eqdf2+0x56>
 80012ec:	000007ff 	.word	0x000007ff

080012f0 <__gedf2>:
 80012f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80012f2:	4657      	mov	r7, sl
 80012f4:	464e      	mov	r6, r9
 80012f6:	4645      	mov	r5, r8
 80012f8:	46de      	mov	lr, fp
 80012fa:	b5e0      	push	{r5, r6, r7, lr}
 80012fc:	000d      	movs	r5, r1
 80012fe:	030e      	lsls	r6, r1, #12
 8001300:	0049      	lsls	r1, r1, #1
 8001302:	0d49      	lsrs	r1, r1, #21
 8001304:	468a      	mov	sl, r1
 8001306:	0fdf      	lsrs	r7, r3, #31
 8001308:	0fe9      	lsrs	r1, r5, #31
 800130a:	46bc      	mov	ip, r7
 800130c:	b083      	sub	sp, #12
 800130e:	4f2f      	ldr	r7, [pc, #188]	@ (80013cc <__gedf2+0xdc>)
 8001310:	0004      	movs	r4, r0
 8001312:	4680      	mov	r8, r0
 8001314:	9101      	str	r1, [sp, #4]
 8001316:	0058      	lsls	r0, r3, #1
 8001318:	0319      	lsls	r1, r3, #12
 800131a:	4691      	mov	r9, r2
 800131c:	0b36      	lsrs	r6, r6, #12
 800131e:	0b09      	lsrs	r1, r1, #12
 8001320:	0d40      	lsrs	r0, r0, #21
 8001322:	45ba      	cmp	sl, r7
 8001324:	d01d      	beq.n	8001362 <__gedf2+0x72>
 8001326:	42b8      	cmp	r0, r7
 8001328:	d00d      	beq.n	8001346 <__gedf2+0x56>
 800132a:	4657      	mov	r7, sl
 800132c:	2f00      	cmp	r7, #0
 800132e:	d12a      	bne.n	8001386 <__gedf2+0x96>
 8001330:	4334      	orrs	r4, r6
 8001332:	2800      	cmp	r0, #0
 8001334:	d124      	bne.n	8001380 <__gedf2+0x90>
 8001336:	430a      	orrs	r2, r1
 8001338:	d036      	beq.n	80013a8 <__gedf2+0xb8>
 800133a:	2c00      	cmp	r4, #0
 800133c:	d141      	bne.n	80013c2 <__gedf2+0xd2>
 800133e:	4663      	mov	r3, ip
 8001340:	0058      	lsls	r0, r3, #1
 8001342:	3801      	subs	r0, #1
 8001344:	e015      	b.n	8001372 <__gedf2+0x82>
 8001346:	4311      	orrs	r1, r2
 8001348:	d138      	bne.n	80013bc <__gedf2+0xcc>
 800134a:	4653      	mov	r3, sl
 800134c:	2b00      	cmp	r3, #0
 800134e:	d101      	bne.n	8001354 <__gedf2+0x64>
 8001350:	4326      	orrs	r6, r4
 8001352:	d0f4      	beq.n	800133e <__gedf2+0x4e>
 8001354:	9b01      	ldr	r3, [sp, #4]
 8001356:	4563      	cmp	r3, ip
 8001358:	d107      	bne.n	800136a <__gedf2+0x7a>
 800135a:	9b01      	ldr	r3, [sp, #4]
 800135c:	0058      	lsls	r0, r3, #1
 800135e:	3801      	subs	r0, #1
 8001360:	e007      	b.n	8001372 <__gedf2+0x82>
 8001362:	4326      	orrs	r6, r4
 8001364:	d12a      	bne.n	80013bc <__gedf2+0xcc>
 8001366:	4550      	cmp	r0, sl
 8001368:	d021      	beq.n	80013ae <__gedf2+0xbe>
 800136a:	2001      	movs	r0, #1
 800136c:	9b01      	ldr	r3, [sp, #4]
 800136e:	425f      	negs	r7, r3
 8001370:	4338      	orrs	r0, r7
 8001372:	b003      	add	sp, #12
 8001374:	bcf0      	pop	{r4, r5, r6, r7}
 8001376:	46bb      	mov	fp, r7
 8001378:	46b2      	mov	sl, r6
 800137a:	46a9      	mov	r9, r5
 800137c:	46a0      	mov	r8, r4
 800137e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001380:	2c00      	cmp	r4, #0
 8001382:	d0dc      	beq.n	800133e <__gedf2+0x4e>
 8001384:	e7e6      	b.n	8001354 <__gedf2+0x64>
 8001386:	2800      	cmp	r0, #0
 8001388:	d0ef      	beq.n	800136a <__gedf2+0x7a>
 800138a:	9b01      	ldr	r3, [sp, #4]
 800138c:	4563      	cmp	r3, ip
 800138e:	d1ec      	bne.n	800136a <__gedf2+0x7a>
 8001390:	4582      	cmp	sl, r0
 8001392:	dcea      	bgt.n	800136a <__gedf2+0x7a>
 8001394:	dbe1      	blt.n	800135a <__gedf2+0x6a>
 8001396:	428e      	cmp	r6, r1
 8001398:	d8e7      	bhi.n	800136a <__gedf2+0x7a>
 800139a:	d1de      	bne.n	800135a <__gedf2+0x6a>
 800139c:	45c8      	cmp	r8, r9
 800139e:	d8e4      	bhi.n	800136a <__gedf2+0x7a>
 80013a0:	2000      	movs	r0, #0
 80013a2:	45c8      	cmp	r8, r9
 80013a4:	d2e5      	bcs.n	8001372 <__gedf2+0x82>
 80013a6:	e7d8      	b.n	800135a <__gedf2+0x6a>
 80013a8:	2c00      	cmp	r4, #0
 80013aa:	d0e2      	beq.n	8001372 <__gedf2+0x82>
 80013ac:	e7dd      	b.n	800136a <__gedf2+0x7a>
 80013ae:	4311      	orrs	r1, r2
 80013b0:	d104      	bne.n	80013bc <__gedf2+0xcc>
 80013b2:	9b01      	ldr	r3, [sp, #4]
 80013b4:	4563      	cmp	r3, ip
 80013b6:	d1d8      	bne.n	800136a <__gedf2+0x7a>
 80013b8:	2000      	movs	r0, #0
 80013ba:	e7da      	b.n	8001372 <__gedf2+0x82>
 80013bc:	2002      	movs	r0, #2
 80013be:	4240      	negs	r0, r0
 80013c0:	e7d7      	b.n	8001372 <__gedf2+0x82>
 80013c2:	9b01      	ldr	r3, [sp, #4]
 80013c4:	4563      	cmp	r3, ip
 80013c6:	d0e6      	beq.n	8001396 <__gedf2+0xa6>
 80013c8:	e7cf      	b.n	800136a <__gedf2+0x7a>
 80013ca:	46c0      	nop			@ (mov r8, r8)
 80013cc:	000007ff 	.word	0x000007ff

080013d0 <__ledf2>:
 80013d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80013d2:	4657      	mov	r7, sl
 80013d4:	464e      	mov	r6, r9
 80013d6:	4645      	mov	r5, r8
 80013d8:	46de      	mov	lr, fp
 80013da:	b5e0      	push	{r5, r6, r7, lr}
 80013dc:	000d      	movs	r5, r1
 80013de:	030e      	lsls	r6, r1, #12
 80013e0:	0049      	lsls	r1, r1, #1
 80013e2:	0d49      	lsrs	r1, r1, #21
 80013e4:	468a      	mov	sl, r1
 80013e6:	0fdf      	lsrs	r7, r3, #31
 80013e8:	0fe9      	lsrs	r1, r5, #31
 80013ea:	46bc      	mov	ip, r7
 80013ec:	b083      	sub	sp, #12
 80013ee:	4f2e      	ldr	r7, [pc, #184]	@ (80014a8 <__ledf2+0xd8>)
 80013f0:	0004      	movs	r4, r0
 80013f2:	4680      	mov	r8, r0
 80013f4:	9101      	str	r1, [sp, #4]
 80013f6:	0058      	lsls	r0, r3, #1
 80013f8:	0319      	lsls	r1, r3, #12
 80013fa:	4691      	mov	r9, r2
 80013fc:	0b36      	lsrs	r6, r6, #12
 80013fe:	0b09      	lsrs	r1, r1, #12
 8001400:	0d40      	lsrs	r0, r0, #21
 8001402:	45ba      	cmp	sl, r7
 8001404:	d01e      	beq.n	8001444 <__ledf2+0x74>
 8001406:	42b8      	cmp	r0, r7
 8001408:	d00d      	beq.n	8001426 <__ledf2+0x56>
 800140a:	4657      	mov	r7, sl
 800140c:	2f00      	cmp	r7, #0
 800140e:	d127      	bne.n	8001460 <__ledf2+0x90>
 8001410:	4334      	orrs	r4, r6
 8001412:	2800      	cmp	r0, #0
 8001414:	d133      	bne.n	800147e <__ledf2+0xae>
 8001416:	430a      	orrs	r2, r1
 8001418:	d034      	beq.n	8001484 <__ledf2+0xb4>
 800141a:	2c00      	cmp	r4, #0
 800141c:	d140      	bne.n	80014a0 <__ledf2+0xd0>
 800141e:	4663      	mov	r3, ip
 8001420:	0058      	lsls	r0, r3, #1
 8001422:	3801      	subs	r0, #1
 8001424:	e015      	b.n	8001452 <__ledf2+0x82>
 8001426:	4311      	orrs	r1, r2
 8001428:	d112      	bne.n	8001450 <__ledf2+0x80>
 800142a:	4653      	mov	r3, sl
 800142c:	2b00      	cmp	r3, #0
 800142e:	d101      	bne.n	8001434 <__ledf2+0x64>
 8001430:	4326      	orrs	r6, r4
 8001432:	d0f4      	beq.n	800141e <__ledf2+0x4e>
 8001434:	9b01      	ldr	r3, [sp, #4]
 8001436:	4563      	cmp	r3, ip
 8001438:	d01d      	beq.n	8001476 <__ledf2+0xa6>
 800143a:	2001      	movs	r0, #1
 800143c:	9b01      	ldr	r3, [sp, #4]
 800143e:	425f      	negs	r7, r3
 8001440:	4338      	orrs	r0, r7
 8001442:	e006      	b.n	8001452 <__ledf2+0x82>
 8001444:	4326      	orrs	r6, r4
 8001446:	d103      	bne.n	8001450 <__ledf2+0x80>
 8001448:	4550      	cmp	r0, sl
 800144a:	d1f6      	bne.n	800143a <__ledf2+0x6a>
 800144c:	4311      	orrs	r1, r2
 800144e:	d01c      	beq.n	800148a <__ledf2+0xba>
 8001450:	2002      	movs	r0, #2
 8001452:	b003      	add	sp, #12
 8001454:	bcf0      	pop	{r4, r5, r6, r7}
 8001456:	46bb      	mov	fp, r7
 8001458:	46b2      	mov	sl, r6
 800145a:	46a9      	mov	r9, r5
 800145c:	46a0      	mov	r8, r4
 800145e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001460:	2800      	cmp	r0, #0
 8001462:	d0ea      	beq.n	800143a <__ledf2+0x6a>
 8001464:	9b01      	ldr	r3, [sp, #4]
 8001466:	4563      	cmp	r3, ip
 8001468:	d1e7      	bne.n	800143a <__ledf2+0x6a>
 800146a:	4582      	cmp	sl, r0
 800146c:	dce5      	bgt.n	800143a <__ledf2+0x6a>
 800146e:	db02      	blt.n	8001476 <__ledf2+0xa6>
 8001470:	428e      	cmp	r6, r1
 8001472:	d8e2      	bhi.n	800143a <__ledf2+0x6a>
 8001474:	d00e      	beq.n	8001494 <__ledf2+0xc4>
 8001476:	9b01      	ldr	r3, [sp, #4]
 8001478:	0058      	lsls	r0, r3, #1
 800147a:	3801      	subs	r0, #1
 800147c:	e7e9      	b.n	8001452 <__ledf2+0x82>
 800147e:	2c00      	cmp	r4, #0
 8001480:	d0cd      	beq.n	800141e <__ledf2+0x4e>
 8001482:	e7d7      	b.n	8001434 <__ledf2+0x64>
 8001484:	2c00      	cmp	r4, #0
 8001486:	d0e4      	beq.n	8001452 <__ledf2+0x82>
 8001488:	e7d7      	b.n	800143a <__ledf2+0x6a>
 800148a:	9b01      	ldr	r3, [sp, #4]
 800148c:	2000      	movs	r0, #0
 800148e:	4563      	cmp	r3, ip
 8001490:	d0df      	beq.n	8001452 <__ledf2+0x82>
 8001492:	e7d2      	b.n	800143a <__ledf2+0x6a>
 8001494:	45c8      	cmp	r8, r9
 8001496:	d8d0      	bhi.n	800143a <__ledf2+0x6a>
 8001498:	2000      	movs	r0, #0
 800149a:	45c8      	cmp	r8, r9
 800149c:	d2d9      	bcs.n	8001452 <__ledf2+0x82>
 800149e:	e7ea      	b.n	8001476 <__ledf2+0xa6>
 80014a0:	9b01      	ldr	r3, [sp, #4]
 80014a2:	4563      	cmp	r3, ip
 80014a4:	d0e4      	beq.n	8001470 <__ledf2+0xa0>
 80014a6:	e7c8      	b.n	800143a <__ledf2+0x6a>
 80014a8:	000007ff 	.word	0x000007ff

080014ac <__aeabi_dmul>:
 80014ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80014ae:	4657      	mov	r7, sl
 80014b0:	464e      	mov	r6, r9
 80014b2:	46de      	mov	lr, fp
 80014b4:	4645      	mov	r5, r8
 80014b6:	b5e0      	push	{r5, r6, r7, lr}
 80014b8:	001f      	movs	r7, r3
 80014ba:	030b      	lsls	r3, r1, #12
 80014bc:	0b1b      	lsrs	r3, r3, #12
 80014be:	0016      	movs	r6, r2
 80014c0:	469a      	mov	sl, r3
 80014c2:	0fca      	lsrs	r2, r1, #31
 80014c4:	004b      	lsls	r3, r1, #1
 80014c6:	0004      	movs	r4, r0
 80014c8:	4691      	mov	r9, r2
 80014ca:	b085      	sub	sp, #20
 80014cc:	0d5b      	lsrs	r3, r3, #21
 80014ce:	d100      	bne.n	80014d2 <__aeabi_dmul+0x26>
 80014d0:	e1cf      	b.n	8001872 <__aeabi_dmul+0x3c6>
 80014d2:	4acd      	ldr	r2, [pc, #820]	@ (8001808 <__aeabi_dmul+0x35c>)
 80014d4:	4293      	cmp	r3, r2
 80014d6:	d055      	beq.n	8001584 <__aeabi_dmul+0xd8>
 80014d8:	4651      	mov	r1, sl
 80014da:	0f42      	lsrs	r2, r0, #29
 80014dc:	00c9      	lsls	r1, r1, #3
 80014de:	430a      	orrs	r2, r1
 80014e0:	2180      	movs	r1, #128	@ 0x80
 80014e2:	0409      	lsls	r1, r1, #16
 80014e4:	4311      	orrs	r1, r2
 80014e6:	00c2      	lsls	r2, r0, #3
 80014e8:	4690      	mov	r8, r2
 80014ea:	4ac8      	ldr	r2, [pc, #800]	@ (800180c <__aeabi_dmul+0x360>)
 80014ec:	468a      	mov	sl, r1
 80014ee:	4693      	mov	fp, r2
 80014f0:	449b      	add	fp, r3
 80014f2:	2300      	movs	r3, #0
 80014f4:	2500      	movs	r5, #0
 80014f6:	9302      	str	r3, [sp, #8]
 80014f8:	033c      	lsls	r4, r7, #12
 80014fa:	007b      	lsls	r3, r7, #1
 80014fc:	0ffa      	lsrs	r2, r7, #31
 80014fe:	9601      	str	r6, [sp, #4]
 8001500:	0b24      	lsrs	r4, r4, #12
 8001502:	0d5b      	lsrs	r3, r3, #21
 8001504:	9200      	str	r2, [sp, #0]
 8001506:	d100      	bne.n	800150a <__aeabi_dmul+0x5e>
 8001508:	e188      	b.n	800181c <__aeabi_dmul+0x370>
 800150a:	4abf      	ldr	r2, [pc, #764]	@ (8001808 <__aeabi_dmul+0x35c>)
 800150c:	4293      	cmp	r3, r2
 800150e:	d100      	bne.n	8001512 <__aeabi_dmul+0x66>
 8001510:	e092      	b.n	8001638 <__aeabi_dmul+0x18c>
 8001512:	4abe      	ldr	r2, [pc, #760]	@ (800180c <__aeabi_dmul+0x360>)
 8001514:	4694      	mov	ip, r2
 8001516:	4463      	add	r3, ip
 8001518:	449b      	add	fp, r3
 800151a:	2d0a      	cmp	r5, #10
 800151c:	dc42      	bgt.n	80015a4 <__aeabi_dmul+0xf8>
 800151e:	00e4      	lsls	r4, r4, #3
 8001520:	0f73      	lsrs	r3, r6, #29
 8001522:	4323      	orrs	r3, r4
 8001524:	2480      	movs	r4, #128	@ 0x80
 8001526:	4649      	mov	r1, r9
 8001528:	0424      	lsls	r4, r4, #16
 800152a:	431c      	orrs	r4, r3
 800152c:	00f3      	lsls	r3, r6, #3
 800152e:	9301      	str	r3, [sp, #4]
 8001530:	9b00      	ldr	r3, [sp, #0]
 8001532:	2000      	movs	r0, #0
 8001534:	4059      	eors	r1, r3
 8001536:	b2cb      	uxtb	r3, r1
 8001538:	9303      	str	r3, [sp, #12]
 800153a:	2d02      	cmp	r5, #2
 800153c:	dc00      	bgt.n	8001540 <__aeabi_dmul+0x94>
 800153e:	e094      	b.n	800166a <__aeabi_dmul+0x1be>
 8001540:	2301      	movs	r3, #1
 8001542:	40ab      	lsls	r3, r5
 8001544:	001d      	movs	r5, r3
 8001546:	23a6      	movs	r3, #166	@ 0xa6
 8001548:	002a      	movs	r2, r5
 800154a:	00db      	lsls	r3, r3, #3
 800154c:	401a      	ands	r2, r3
 800154e:	421d      	tst	r5, r3
 8001550:	d000      	beq.n	8001554 <__aeabi_dmul+0xa8>
 8001552:	e229      	b.n	80019a8 <__aeabi_dmul+0x4fc>
 8001554:	2390      	movs	r3, #144	@ 0x90
 8001556:	009b      	lsls	r3, r3, #2
 8001558:	421d      	tst	r5, r3
 800155a:	d100      	bne.n	800155e <__aeabi_dmul+0xb2>
 800155c:	e24d      	b.n	80019fa <__aeabi_dmul+0x54e>
 800155e:	2300      	movs	r3, #0
 8001560:	2480      	movs	r4, #128	@ 0x80
 8001562:	4699      	mov	r9, r3
 8001564:	0324      	lsls	r4, r4, #12
 8001566:	4ba8      	ldr	r3, [pc, #672]	@ (8001808 <__aeabi_dmul+0x35c>)
 8001568:	0010      	movs	r0, r2
 800156a:	464a      	mov	r2, r9
 800156c:	051b      	lsls	r3, r3, #20
 800156e:	4323      	orrs	r3, r4
 8001570:	07d2      	lsls	r2, r2, #31
 8001572:	4313      	orrs	r3, r2
 8001574:	0019      	movs	r1, r3
 8001576:	b005      	add	sp, #20
 8001578:	bcf0      	pop	{r4, r5, r6, r7}
 800157a:	46bb      	mov	fp, r7
 800157c:	46b2      	mov	sl, r6
 800157e:	46a9      	mov	r9, r5
 8001580:	46a0      	mov	r8, r4
 8001582:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001584:	4652      	mov	r2, sl
 8001586:	4302      	orrs	r2, r0
 8001588:	4690      	mov	r8, r2
 800158a:	d000      	beq.n	800158e <__aeabi_dmul+0xe2>
 800158c:	e1ac      	b.n	80018e8 <__aeabi_dmul+0x43c>
 800158e:	469b      	mov	fp, r3
 8001590:	2302      	movs	r3, #2
 8001592:	4692      	mov	sl, r2
 8001594:	2508      	movs	r5, #8
 8001596:	9302      	str	r3, [sp, #8]
 8001598:	e7ae      	b.n	80014f8 <__aeabi_dmul+0x4c>
 800159a:	9b00      	ldr	r3, [sp, #0]
 800159c:	46a2      	mov	sl, r4
 800159e:	4699      	mov	r9, r3
 80015a0:	9b01      	ldr	r3, [sp, #4]
 80015a2:	4698      	mov	r8, r3
 80015a4:	9b02      	ldr	r3, [sp, #8]
 80015a6:	2b02      	cmp	r3, #2
 80015a8:	d100      	bne.n	80015ac <__aeabi_dmul+0x100>
 80015aa:	e1ca      	b.n	8001942 <__aeabi_dmul+0x496>
 80015ac:	2b03      	cmp	r3, #3
 80015ae:	d100      	bne.n	80015b2 <__aeabi_dmul+0x106>
 80015b0:	e192      	b.n	80018d8 <__aeabi_dmul+0x42c>
 80015b2:	2b01      	cmp	r3, #1
 80015b4:	d110      	bne.n	80015d8 <__aeabi_dmul+0x12c>
 80015b6:	2300      	movs	r3, #0
 80015b8:	2400      	movs	r4, #0
 80015ba:	2200      	movs	r2, #0
 80015bc:	e7d4      	b.n	8001568 <__aeabi_dmul+0xbc>
 80015be:	2201      	movs	r2, #1
 80015c0:	087b      	lsrs	r3, r7, #1
 80015c2:	403a      	ands	r2, r7
 80015c4:	4313      	orrs	r3, r2
 80015c6:	4652      	mov	r2, sl
 80015c8:	07d2      	lsls	r2, r2, #31
 80015ca:	4313      	orrs	r3, r2
 80015cc:	4698      	mov	r8, r3
 80015ce:	4653      	mov	r3, sl
 80015d0:	085b      	lsrs	r3, r3, #1
 80015d2:	469a      	mov	sl, r3
 80015d4:	9b03      	ldr	r3, [sp, #12]
 80015d6:	4699      	mov	r9, r3
 80015d8:	465b      	mov	r3, fp
 80015da:	1c58      	adds	r0, r3, #1
 80015dc:	2380      	movs	r3, #128	@ 0x80
 80015de:	00db      	lsls	r3, r3, #3
 80015e0:	445b      	add	r3, fp
 80015e2:	2b00      	cmp	r3, #0
 80015e4:	dc00      	bgt.n	80015e8 <__aeabi_dmul+0x13c>
 80015e6:	e1b1      	b.n	800194c <__aeabi_dmul+0x4a0>
 80015e8:	4642      	mov	r2, r8
 80015ea:	0752      	lsls	r2, r2, #29
 80015ec:	d00b      	beq.n	8001606 <__aeabi_dmul+0x15a>
 80015ee:	220f      	movs	r2, #15
 80015f0:	4641      	mov	r1, r8
 80015f2:	400a      	ands	r2, r1
 80015f4:	2a04      	cmp	r2, #4
 80015f6:	d006      	beq.n	8001606 <__aeabi_dmul+0x15a>
 80015f8:	4642      	mov	r2, r8
 80015fa:	1d11      	adds	r1, r2, #4
 80015fc:	4541      	cmp	r1, r8
 80015fe:	4192      	sbcs	r2, r2
 8001600:	4688      	mov	r8, r1
 8001602:	4252      	negs	r2, r2
 8001604:	4492      	add	sl, r2
 8001606:	4652      	mov	r2, sl
 8001608:	01d2      	lsls	r2, r2, #7
 800160a:	d506      	bpl.n	800161a <__aeabi_dmul+0x16e>
 800160c:	4652      	mov	r2, sl
 800160e:	4b80      	ldr	r3, [pc, #512]	@ (8001810 <__aeabi_dmul+0x364>)
 8001610:	401a      	ands	r2, r3
 8001612:	2380      	movs	r3, #128	@ 0x80
 8001614:	4692      	mov	sl, r2
 8001616:	00db      	lsls	r3, r3, #3
 8001618:	18c3      	adds	r3, r0, r3
 800161a:	4a7e      	ldr	r2, [pc, #504]	@ (8001814 <__aeabi_dmul+0x368>)
 800161c:	4293      	cmp	r3, r2
 800161e:	dd00      	ble.n	8001622 <__aeabi_dmul+0x176>
 8001620:	e18f      	b.n	8001942 <__aeabi_dmul+0x496>
 8001622:	4642      	mov	r2, r8
 8001624:	08d1      	lsrs	r1, r2, #3
 8001626:	4652      	mov	r2, sl
 8001628:	0752      	lsls	r2, r2, #29
 800162a:	430a      	orrs	r2, r1
 800162c:	4651      	mov	r1, sl
 800162e:	055b      	lsls	r3, r3, #21
 8001630:	024c      	lsls	r4, r1, #9
 8001632:	0b24      	lsrs	r4, r4, #12
 8001634:	0d5b      	lsrs	r3, r3, #21
 8001636:	e797      	b.n	8001568 <__aeabi_dmul+0xbc>
 8001638:	4b73      	ldr	r3, [pc, #460]	@ (8001808 <__aeabi_dmul+0x35c>)
 800163a:	4326      	orrs	r6, r4
 800163c:	469c      	mov	ip, r3
 800163e:	44e3      	add	fp, ip
 8001640:	2e00      	cmp	r6, #0
 8001642:	d100      	bne.n	8001646 <__aeabi_dmul+0x19a>
 8001644:	e16f      	b.n	8001926 <__aeabi_dmul+0x47a>
 8001646:	2303      	movs	r3, #3
 8001648:	4649      	mov	r1, r9
 800164a:	431d      	orrs	r5, r3
 800164c:	9b00      	ldr	r3, [sp, #0]
 800164e:	4059      	eors	r1, r3
 8001650:	b2cb      	uxtb	r3, r1
 8001652:	9303      	str	r3, [sp, #12]
 8001654:	2d0a      	cmp	r5, #10
 8001656:	dd00      	ble.n	800165a <__aeabi_dmul+0x1ae>
 8001658:	e133      	b.n	80018c2 <__aeabi_dmul+0x416>
 800165a:	2301      	movs	r3, #1
 800165c:	40ab      	lsls	r3, r5
 800165e:	001d      	movs	r5, r3
 8001660:	2303      	movs	r3, #3
 8001662:	9302      	str	r3, [sp, #8]
 8001664:	2288      	movs	r2, #136	@ 0x88
 8001666:	422a      	tst	r2, r5
 8001668:	d197      	bne.n	800159a <__aeabi_dmul+0xee>
 800166a:	4642      	mov	r2, r8
 800166c:	4643      	mov	r3, r8
 800166e:	0412      	lsls	r2, r2, #16
 8001670:	0c12      	lsrs	r2, r2, #16
 8001672:	0016      	movs	r6, r2
 8001674:	9801      	ldr	r0, [sp, #4]
 8001676:	0c1d      	lsrs	r5, r3, #16
 8001678:	0c03      	lsrs	r3, r0, #16
 800167a:	0400      	lsls	r0, r0, #16
 800167c:	0c00      	lsrs	r0, r0, #16
 800167e:	4346      	muls	r6, r0
 8001680:	46b4      	mov	ip, r6
 8001682:	001e      	movs	r6, r3
 8001684:	436e      	muls	r6, r5
 8001686:	9600      	str	r6, [sp, #0]
 8001688:	0016      	movs	r6, r2
 800168a:	0007      	movs	r7, r0
 800168c:	435e      	muls	r6, r3
 800168e:	4661      	mov	r1, ip
 8001690:	46b0      	mov	r8, r6
 8001692:	436f      	muls	r7, r5
 8001694:	0c0e      	lsrs	r6, r1, #16
 8001696:	44b8      	add	r8, r7
 8001698:	4446      	add	r6, r8
 800169a:	42b7      	cmp	r7, r6
 800169c:	d905      	bls.n	80016aa <__aeabi_dmul+0x1fe>
 800169e:	2180      	movs	r1, #128	@ 0x80
 80016a0:	0249      	lsls	r1, r1, #9
 80016a2:	4688      	mov	r8, r1
 80016a4:	9f00      	ldr	r7, [sp, #0]
 80016a6:	4447      	add	r7, r8
 80016a8:	9700      	str	r7, [sp, #0]
 80016aa:	4661      	mov	r1, ip
 80016ac:	0409      	lsls	r1, r1, #16
 80016ae:	0c09      	lsrs	r1, r1, #16
 80016b0:	0c37      	lsrs	r7, r6, #16
 80016b2:	0436      	lsls	r6, r6, #16
 80016b4:	468c      	mov	ip, r1
 80016b6:	0031      	movs	r1, r6
 80016b8:	4461      	add	r1, ip
 80016ba:	9101      	str	r1, [sp, #4]
 80016bc:	0011      	movs	r1, r2
 80016be:	0c26      	lsrs	r6, r4, #16
 80016c0:	0424      	lsls	r4, r4, #16
 80016c2:	0c24      	lsrs	r4, r4, #16
 80016c4:	4361      	muls	r1, r4
 80016c6:	468c      	mov	ip, r1
 80016c8:	0021      	movs	r1, r4
 80016ca:	4369      	muls	r1, r5
 80016cc:	4689      	mov	r9, r1
 80016ce:	4661      	mov	r1, ip
 80016d0:	0c09      	lsrs	r1, r1, #16
 80016d2:	4688      	mov	r8, r1
 80016d4:	4372      	muls	r2, r6
 80016d6:	444a      	add	r2, r9
 80016d8:	4442      	add	r2, r8
 80016da:	4375      	muls	r5, r6
 80016dc:	4591      	cmp	r9, r2
 80016de:	d903      	bls.n	80016e8 <__aeabi_dmul+0x23c>
 80016e0:	2180      	movs	r1, #128	@ 0x80
 80016e2:	0249      	lsls	r1, r1, #9
 80016e4:	4688      	mov	r8, r1
 80016e6:	4445      	add	r5, r8
 80016e8:	0c11      	lsrs	r1, r2, #16
 80016ea:	4688      	mov	r8, r1
 80016ec:	4661      	mov	r1, ip
 80016ee:	0409      	lsls	r1, r1, #16
 80016f0:	0c09      	lsrs	r1, r1, #16
 80016f2:	468c      	mov	ip, r1
 80016f4:	0412      	lsls	r2, r2, #16
 80016f6:	4462      	add	r2, ip
 80016f8:	18b9      	adds	r1, r7, r2
 80016fa:	9102      	str	r1, [sp, #8]
 80016fc:	4651      	mov	r1, sl
 80016fe:	0c09      	lsrs	r1, r1, #16
 8001700:	468c      	mov	ip, r1
 8001702:	4651      	mov	r1, sl
 8001704:	040f      	lsls	r7, r1, #16
 8001706:	0c3f      	lsrs	r7, r7, #16
 8001708:	0039      	movs	r1, r7
 800170a:	4341      	muls	r1, r0
 800170c:	4445      	add	r5, r8
 800170e:	4688      	mov	r8, r1
 8001710:	4661      	mov	r1, ip
 8001712:	4341      	muls	r1, r0
 8001714:	468a      	mov	sl, r1
 8001716:	4641      	mov	r1, r8
 8001718:	4660      	mov	r0, ip
 800171a:	0c09      	lsrs	r1, r1, #16
 800171c:	4689      	mov	r9, r1
 800171e:	4358      	muls	r0, r3
 8001720:	437b      	muls	r3, r7
 8001722:	4453      	add	r3, sl
 8001724:	444b      	add	r3, r9
 8001726:	459a      	cmp	sl, r3
 8001728:	d903      	bls.n	8001732 <__aeabi_dmul+0x286>
 800172a:	2180      	movs	r1, #128	@ 0x80
 800172c:	0249      	lsls	r1, r1, #9
 800172e:	4689      	mov	r9, r1
 8001730:	4448      	add	r0, r9
 8001732:	0c19      	lsrs	r1, r3, #16
 8001734:	4689      	mov	r9, r1
 8001736:	4641      	mov	r1, r8
 8001738:	0409      	lsls	r1, r1, #16
 800173a:	0c09      	lsrs	r1, r1, #16
 800173c:	4688      	mov	r8, r1
 800173e:	0039      	movs	r1, r7
 8001740:	4361      	muls	r1, r4
 8001742:	041b      	lsls	r3, r3, #16
 8001744:	4443      	add	r3, r8
 8001746:	4688      	mov	r8, r1
 8001748:	4661      	mov	r1, ip
 800174a:	434c      	muls	r4, r1
 800174c:	4371      	muls	r1, r6
 800174e:	468c      	mov	ip, r1
 8001750:	4641      	mov	r1, r8
 8001752:	4377      	muls	r7, r6
 8001754:	0c0e      	lsrs	r6, r1, #16
 8001756:	193f      	adds	r7, r7, r4
 8001758:	19f6      	adds	r6, r6, r7
 800175a:	4448      	add	r0, r9
 800175c:	42b4      	cmp	r4, r6
 800175e:	d903      	bls.n	8001768 <__aeabi_dmul+0x2bc>
 8001760:	2180      	movs	r1, #128	@ 0x80
 8001762:	0249      	lsls	r1, r1, #9
 8001764:	4689      	mov	r9, r1
 8001766:	44cc      	add	ip, r9
 8001768:	9902      	ldr	r1, [sp, #8]
 800176a:	9f00      	ldr	r7, [sp, #0]
 800176c:	4689      	mov	r9, r1
 800176e:	0431      	lsls	r1, r6, #16
 8001770:	444f      	add	r7, r9
 8001772:	4689      	mov	r9, r1
 8001774:	4641      	mov	r1, r8
 8001776:	4297      	cmp	r7, r2
 8001778:	4192      	sbcs	r2, r2
 800177a:	040c      	lsls	r4, r1, #16
 800177c:	0c24      	lsrs	r4, r4, #16
 800177e:	444c      	add	r4, r9
 8001780:	18ff      	adds	r7, r7, r3
 8001782:	4252      	negs	r2, r2
 8001784:	1964      	adds	r4, r4, r5
 8001786:	18a1      	adds	r1, r4, r2
 8001788:	429f      	cmp	r7, r3
 800178a:	419b      	sbcs	r3, r3
 800178c:	4688      	mov	r8, r1
 800178e:	4682      	mov	sl, r0
 8001790:	425b      	negs	r3, r3
 8001792:	4699      	mov	r9, r3
 8001794:	4590      	cmp	r8, r2
 8001796:	4192      	sbcs	r2, r2
 8001798:	42ac      	cmp	r4, r5
 800179a:	41a4      	sbcs	r4, r4
 800179c:	44c2      	add	sl, r8
 800179e:	44d1      	add	r9, sl
 80017a0:	4252      	negs	r2, r2
 80017a2:	4264      	negs	r4, r4
 80017a4:	4314      	orrs	r4, r2
 80017a6:	4599      	cmp	r9, r3
 80017a8:	419b      	sbcs	r3, r3
 80017aa:	4582      	cmp	sl, r0
 80017ac:	4192      	sbcs	r2, r2
 80017ae:	425b      	negs	r3, r3
 80017b0:	4252      	negs	r2, r2
 80017b2:	4313      	orrs	r3, r2
 80017b4:	464a      	mov	r2, r9
 80017b6:	0c36      	lsrs	r6, r6, #16
 80017b8:	19a4      	adds	r4, r4, r6
 80017ba:	18e3      	adds	r3, r4, r3
 80017bc:	4463      	add	r3, ip
 80017be:	025b      	lsls	r3, r3, #9
 80017c0:	0dd2      	lsrs	r2, r2, #23
 80017c2:	431a      	orrs	r2, r3
 80017c4:	9901      	ldr	r1, [sp, #4]
 80017c6:	4692      	mov	sl, r2
 80017c8:	027a      	lsls	r2, r7, #9
 80017ca:	430a      	orrs	r2, r1
 80017cc:	1e50      	subs	r0, r2, #1
 80017ce:	4182      	sbcs	r2, r0
 80017d0:	0dff      	lsrs	r7, r7, #23
 80017d2:	4317      	orrs	r7, r2
 80017d4:	464a      	mov	r2, r9
 80017d6:	0252      	lsls	r2, r2, #9
 80017d8:	4317      	orrs	r7, r2
 80017da:	46b8      	mov	r8, r7
 80017dc:	01db      	lsls	r3, r3, #7
 80017de:	d500      	bpl.n	80017e2 <__aeabi_dmul+0x336>
 80017e0:	e6ed      	b.n	80015be <__aeabi_dmul+0x112>
 80017e2:	4b0d      	ldr	r3, [pc, #52]	@ (8001818 <__aeabi_dmul+0x36c>)
 80017e4:	9a03      	ldr	r2, [sp, #12]
 80017e6:	445b      	add	r3, fp
 80017e8:	4691      	mov	r9, r2
 80017ea:	2b00      	cmp	r3, #0
 80017ec:	dc00      	bgt.n	80017f0 <__aeabi_dmul+0x344>
 80017ee:	e0ac      	b.n	800194a <__aeabi_dmul+0x49e>
 80017f0:	003a      	movs	r2, r7
 80017f2:	0752      	lsls	r2, r2, #29
 80017f4:	d100      	bne.n	80017f8 <__aeabi_dmul+0x34c>
 80017f6:	e710      	b.n	800161a <__aeabi_dmul+0x16e>
 80017f8:	220f      	movs	r2, #15
 80017fa:	4658      	mov	r0, fp
 80017fc:	403a      	ands	r2, r7
 80017fe:	2a04      	cmp	r2, #4
 8001800:	d000      	beq.n	8001804 <__aeabi_dmul+0x358>
 8001802:	e6f9      	b.n	80015f8 <__aeabi_dmul+0x14c>
 8001804:	e709      	b.n	800161a <__aeabi_dmul+0x16e>
 8001806:	46c0      	nop			@ (mov r8, r8)
 8001808:	000007ff 	.word	0x000007ff
 800180c:	fffffc01 	.word	0xfffffc01
 8001810:	feffffff 	.word	0xfeffffff
 8001814:	000007fe 	.word	0x000007fe
 8001818:	000003ff 	.word	0x000003ff
 800181c:	0022      	movs	r2, r4
 800181e:	4332      	orrs	r2, r6
 8001820:	d06f      	beq.n	8001902 <__aeabi_dmul+0x456>
 8001822:	2c00      	cmp	r4, #0
 8001824:	d100      	bne.n	8001828 <__aeabi_dmul+0x37c>
 8001826:	e0c2      	b.n	80019ae <__aeabi_dmul+0x502>
 8001828:	0020      	movs	r0, r4
 800182a:	f000 fdbd 	bl	80023a8 <__clzsi2>
 800182e:	0002      	movs	r2, r0
 8001830:	0003      	movs	r3, r0
 8001832:	3a0b      	subs	r2, #11
 8001834:	201d      	movs	r0, #29
 8001836:	1a82      	subs	r2, r0, r2
 8001838:	0030      	movs	r0, r6
 800183a:	0019      	movs	r1, r3
 800183c:	40d0      	lsrs	r0, r2
 800183e:	3908      	subs	r1, #8
 8001840:	408c      	lsls	r4, r1
 8001842:	0002      	movs	r2, r0
 8001844:	4322      	orrs	r2, r4
 8001846:	0034      	movs	r4, r6
 8001848:	408c      	lsls	r4, r1
 800184a:	4659      	mov	r1, fp
 800184c:	1acb      	subs	r3, r1, r3
 800184e:	4986      	ldr	r1, [pc, #536]	@ (8001a68 <__aeabi_dmul+0x5bc>)
 8001850:	468b      	mov	fp, r1
 8001852:	449b      	add	fp, r3
 8001854:	2d0a      	cmp	r5, #10
 8001856:	dd00      	ble.n	800185a <__aeabi_dmul+0x3ae>
 8001858:	e6a4      	b.n	80015a4 <__aeabi_dmul+0xf8>
 800185a:	4649      	mov	r1, r9
 800185c:	9b00      	ldr	r3, [sp, #0]
 800185e:	9401      	str	r4, [sp, #4]
 8001860:	4059      	eors	r1, r3
 8001862:	b2cb      	uxtb	r3, r1
 8001864:	0014      	movs	r4, r2
 8001866:	2000      	movs	r0, #0
 8001868:	9303      	str	r3, [sp, #12]
 800186a:	2d02      	cmp	r5, #2
 800186c:	dd00      	ble.n	8001870 <__aeabi_dmul+0x3c4>
 800186e:	e667      	b.n	8001540 <__aeabi_dmul+0x94>
 8001870:	e6fb      	b.n	800166a <__aeabi_dmul+0x1be>
 8001872:	4653      	mov	r3, sl
 8001874:	4303      	orrs	r3, r0
 8001876:	4698      	mov	r8, r3
 8001878:	d03c      	beq.n	80018f4 <__aeabi_dmul+0x448>
 800187a:	4653      	mov	r3, sl
 800187c:	2b00      	cmp	r3, #0
 800187e:	d100      	bne.n	8001882 <__aeabi_dmul+0x3d6>
 8001880:	e0a3      	b.n	80019ca <__aeabi_dmul+0x51e>
 8001882:	4650      	mov	r0, sl
 8001884:	f000 fd90 	bl	80023a8 <__clzsi2>
 8001888:	230b      	movs	r3, #11
 800188a:	425b      	negs	r3, r3
 800188c:	469c      	mov	ip, r3
 800188e:	0002      	movs	r2, r0
 8001890:	4484      	add	ip, r0
 8001892:	0011      	movs	r1, r2
 8001894:	4650      	mov	r0, sl
 8001896:	3908      	subs	r1, #8
 8001898:	4088      	lsls	r0, r1
 800189a:	231d      	movs	r3, #29
 800189c:	4680      	mov	r8, r0
 800189e:	4660      	mov	r0, ip
 80018a0:	1a1b      	subs	r3, r3, r0
 80018a2:	0020      	movs	r0, r4
 80018a4:	40d8      	lsrs	r0, r3
 80018a6:	0003      	movs	r3, r0
 80018a8:	4640      	mov	r0, r8
 80018aa:	4303      	orrs	r3, r0
 80018ac:	469a      	mov	sl, r3
 80018ae:	0023      	movs	r3, r4
 80018b0:	408b      	lsls	r3, r1
 80018b2:	4698      	mov	r8, r3
 80018b4:	4b6c      	ldr	r3, [pc, #432]	@ (8001a68 <__aeabi_dmul+0x5bc>)
 80018b6:	2500      	movs	r5, #0
 80018b8:	1a9b      	subs	r3, r3, r2
 80018ba:	469b      	mov	fp, r3
 80018bc:	2300      	movs	r3, #0
 80018be:	9302      	str	r3, [sp, #8]
 80018c0:	e61a      	b.n	80014f8 <__aeabi_dmul+0x4c>
 80018c2:	2d0f      	cmp	r5, #15
 80018c4:	d000      	beq.n	80018c8 <__aeabi_dmul+0x41c>
 80018c6:	e0c9      	b.n	8001a5c <__aeabi_dmul+0x5b0>
 80018c8:	2380      	movs	r3, #128	@ 0x80
 80018ca:	4652      	mov	r2, sl
 80018cc:	031b      	lsls	r3, r3, #12
 80018ce:	421a      	tst	r2, r3
 80018d0:	d002      	beq.n	80018d8 <__aeabi_dmul+0x42c>
 80018d2:	421c      	tst	r4, r3
 80018d4:	d100      	bne.n	80018d8 <__aeabi_dmul+0x42c>
 80018d6:	e092      	b.n	80019fe <__aeabi_dmul+0x552>
 80018d8:	2480      	movs	r4, #128	@ 0x80
 80018da:	4653      	mov	r3, sl
 80018dc:	0324      	lsls	r4, r4, #12
 80018de:	431c      	orrs	r4, r3
 80018e0:	0324      	lsls	r4, r4, #12
 80018e2:	4642      	mov	r2, r8
 80018e4:	0b24      	lsrs	r4, r4, #12
 80018e6:	e63e      	b.n	8001566 <__aeabi_dmul+0xba>
 80018e8:	469b      	mov	fp, r3
 80018ea:	2303      	movs	r3, #3
 80018ec:	4680      	mov	r8, r0
 80018ee:	250c      	movs	r5, #12
 80018f0:	9302      	str	r3, [sp, #8]
 80018f2:	e601      	b.n	80014f8 <__aeabi_dmul+0x4c>
 80018f4:	2300      	movs	r3, #0
 80018f6:	469a      	mov	sl, r3
 80018f8:	469b      	mov	fp, r3
 80018fa:	3301      	adds	r3, #1
 80018fc:	2504      	movs	r5, #4
 80018fe:	9302      	str	r3, [sp, #8]
 8001900:	e5fa      	b.n	80014f8 <__aeabi_dmul+0x4c>
 8001902:	2101      	movs	r1, #1
 8001904:	430d      	orrs	r5, r1
 8001906:	2d0a      	cmp	r5, #10
 8001908:	dd00      	ble.n	800190c <__aeabi_dmul+0x460>
 800190a:	e64b      	b.n	80015a4 <__aeabi_dmul+0xf8>
 800190c:	4649      	mov	r1, r9
 800190e:	9800      	ldr	r0, [sp, #0]
 8001910:	4041      	eors	r1, r0
 8001912:	b2c9      	uxtb	r1, r1
 8001914:	9103      	str	r1, [sp, #12]
 8001916:	2d02      	cmp	r5, #2
 8001918:	dc00      	bgt.n	800191c <__aeabi_dmul+0x470>
 800191a:	e096      	b.n	8001a4a <__aeabi_dmul+0x59e>
 800191c:	2300      	movs	r3, #0
 800191e:	2400      	movs	r4, #0
 8001920:	2001      	movs	r0, #1
 8001922:	9301      	str	r3, [sp, #4]
 8001924:	e60c      	b.n	8001540 <__aeabi_dmul+0x94>
 8001926:	4649      	mov	r1, r9
 8001928:	2302      	movs	r3, #2
 800192a:	9a00      	ldr	r2, [sp, #0]
 800192c:	432b      	orrs	r3, r5
 800192e:	4051      	eors	r1, r2
 8001930:	b2ca      	uxtb	r2, r1
 8001932:	9203      	str	r2, [sp, #12]
 8001934:	2b0a      	cmp	r3, #10
 8001936:	dd00      	ble.n	800193a <__aeabi_dmul+0x48e>
 8001938:	e634      	b.n	80015a4 <__aeabi_dmul+0xf8>
 800193a:	2d00      	cmp	r5, #0
 800193c:	d157      	bne.n	80019ee <__aeabi_dmul+0x542>
 800193e:	9b03      	ldr	r3, [sp, #12]
 8001940:	4699      	mov	r9, r3
 8001942:	2400      	movs	r4, #0
 8001944:	2200      	movs	r2, #0
 8001946:	4b49      	ldr	r3, [pc, #292]	@ (8001a6c <__aeabi_dmul+0x5c0>)
 8001948:	e60e      	b.n	8001568 <__aeabi_dmul+0xbc>
 800194a:	4658      	mov	r0, fp
 800194c:	2101      	movs	r1, #1
 800194e:	1ac9      	subs	r1, r1, r3
 8001950:	2938      	cmp	r1, #56	@ 0x38
 8001952:	dd00      	ble.n	8001956 <__aeabi_dmul+0x4aa>
 8001954:	e62f      	b.n	80015b6 <__aeabi_dmul+0x10a>
 8001956:	291f      	cmp	r1, #31
 8001958:	dd56      	ble.n	8001a08 <__aeabi_dmul+0x55c>
 800195a:	221f      	movs	r2, #31
 800195c:	4654      	mov	r4, sl
 800195e:	4252      	negs	r2, r2
 8001960:	1ad3      	subs	r3, r2, r3
 8001962:	40dc      	lsrs	r4, r3
 8001964:	2920      	cmp	r1, #32
 8001966:	d007      	beq.n	8001978 <__aeabi_dmul+0x4cc>
 8001968:	4b41      	ldr	r3, [pc, #260]	@ (8001a70 <__aeabi_dmul+0x5c4>)
 800196a:	4642      	mov	r2, r8
 800196c:	469c      	mov	ip, r3
 800196e:	4653      	mov	r3, sl
 8001970:	4460      	add	r0, ip
 8001972:	4083      	lsls	r3, r0
 8001974:	431a      	orrs	r2, r3
 8001976:	4690      	mov	r8, r2
 8001978:	4642      	mov	r2, r8
 800197a:	2107      	movs	r1, #7
 800197c:	1e53      	subs	r3, r2, #1
 800197e:	419a      	sbcs	r2, r3
 8001980:	000b      	movs	r3, r1
 8001982:	4322      	orrs	r2, r4
 8001984:	4013      	ands	r3, r2
 8001986:	2400      	movs	r4, #0
 8001988:	4211      	tst	r1, r2
 800198a:	d009      	beq.n	80019a0 <__aeabi_dmul+0x4f4>
 800198c:	230f      	movs	r3, #15
 800198e:	4013      	ands	r3, r2
 8001990:	2b04      	cmp	r3, #4
 8001992:	d05d      	beq.n	8001a50 <__aeabi_dmul+0x5a4>
 8001994:	1d11      	adds	r1, r2, #4
 8001996:	4291      	cmp	r1, r2
 8001998:	419b      	sbcs	r3, r3
 800199a:	000a      	movs	r2, r1
 800199c:	425b      	negs	r3, r3
 800199e:	075b      	lsls	r3, r3, #29
 80019a0:	08d2      	lsrs	r2, r2, #3
 80019a2:	431a      	orrs	r2, r3
 80019a4:	2300      	movs	r3, #0
 80019a6:	e5df      	b.n	8001568 <__aeabi_dmul+0xbc>
 80019a8:	9b03      	ldr	r3, [sp, #12]
 80019aa:	4699      	mov	r9, r3
 80019ac:	e5fa      	b.n	80015a4 <__aeabi_dmul+0xf8>
 80019ae:	9801      	ldr	r0, [sp, #4]
 80019b0:	f000 fcfa 	bl	80023a8 <__clzsi2>
 80019b4:	0002      	movs	r2, r0
 80019b6:	0003      	movs	r3, r0
 80019b8:	3215      	adds	r2, #21
 80019ba:	3320      	adds	r3, #32
 80019bc:	2a1c      	cmp	r2, #28
 80019be:	dc00      	bgt.n	80019c2 <__aeabi_dmul+0x516>
 80019c0:	e738      	b.n	8001834 <__aeabi_dmul+0x388>
 80019c2:	9a01      	ldr	r2, [sp, #4]
 80019c4:	3808      	subs	r0, #8
 80019c6:	4082      	lsls	r2, r0
 80019c8:	e73f      	b.n	800184a <__aeabi_dmul+0x39e>
 80019ca:	f000 fced 	bl	80023a8 <__clzsi2>
 80019ce:	2315      	movs	r3, #21
 80019d0:	469c      	mov	ip, r3
 80019d2:	4484      	add	ip, r0
 80019d4:	0002      	movs	r2, r0
 80019d6:	4663      	mov	r3, ip
 80019d8:	3220      	adds	r2, #32
 80019da:	2b1c      	cmp	r3, #28
 80019dc:	dc00      	bgt.n	80019e0 <__aeabi_dmul+0x534>
 80019de:	e758      	b.n	8001892 <__aeabi_dmul+0x3e6>
 80019e0:	2300      	movs	r3, #0
 80019e2:	4698      	mov	r8, r3
 80019e4:	0023      	movs	r3, r4
 80019e6:	3808      	subs	r0, #8
 80019e8:	4083      	lsls	r3, r0
 80019ea:	469a      	mov	sl, r3
 80019ec:	e762      	b.n	80018b4 <__aeabi_dmul+0x408>
 80019ee:	001d      	movs	r5, r3
 80019f0:	2300      	movs	r3, #0
 80019f2:	2400      	movs	r4, #0
 80019f4:	2002      	movs	r0, #2
 80019f6:	9301      	str	r3, [sp, #4]
 80019f8:	e5a2      	b.n	8001540 <__aeabi_dmul+0x94>
 80019fa:	9002      	str	r0, [sp, #8]
 80019fc:	e632      	b.n	8001664 <__aeabi_dmul+0x1b8>
 80019fe:	431c      	orrs	r4, r3
 8001a00:	9b00      	ldr	r3, [sp, #0]
 8001a02:	9a01      	ldr	r2, [sp, #4]
 8001a04:	4699      	mov	r9, r3
 8001a06:	e5ae      	b.n	8001566 <__aeabi_dmul+0xba>
 8001a08:	4b1a      	ldr	r3, [pc, #104]	@ (8001a74 <__aeabi_dmul+0x5c8>)
 8001a0a:	4652      	mov	r2, sl
 8001a0c:	18c3      	adds	r3, r0, r3
 8001a0e:	4640      	mov	r0, r8
 8001a10:	409a      	lsls	r2, r3
 8001a12:	40c8      	lsrs	r0, r1
 8001a14:	4302      	orrs	r2, r0
 8001a16:	4640      	mov	r0, r8
 8001a18:	4098      	lsls	r0, r3
 8001a1a:	0003      	movs	r3, r0
 8001a1c:	1e58      	subs	r0, r3, #1
 8001a1e:	4183      	sbcs	r3, r0
 8001a20:	4654      	mov	r4, sl
 8001a22:	431a      	orrs	r2, r3
 8001a24:	40cc      	lsrs	r4, r1
 8001a26:	0753      	lsls	r3, r2, #29
 8001a28:	d009      	beq.n	8001a3e <__aeabi_dmul+0x592>
 8001a2a:	230f      	movs	r3, #15
 8001a2c:	4013      	ands	r3, r2
 8001a2e:	2b04      	cmp	r3, #4
 8001a30:	d005      	beq.n	8001a3e <__aeabi_dmul+0x592>
 8001a32:	1d13      	adds	r3, r2, #4
 8001a34:	4293      	cmp	r3, r2
 8001a36:	4192      	sbcs	r2, r2
 8001a38:	4252      	negs	r2, r2
 8001a3a:	18a4      	adds	r4, r4, r2
 8001a3c:	001a      	movs	r2, r3
 8001a3e:	0223      	lsls	r3, r4, #8
 8001a40:	d508      	bpl.n	8001a54 <__aeabi_dmul+0x5a8>
 8001a42:	2301      	movs	r3, #1
 8001a44:	2400      	movs	r4, #0
 8001a46:	2200      	movs	r2, #0
 8001a48:	e58e      	b.n	8001568 <__aeabi_dmul+0xbc>
 8001a4a:	4689      	mov	r9, r1
 8001a4c:	2400      	movs	r4, #0
 8001a4e:	e58b      	b.n	8001568 <__aeabi_dmul+0xbc>
 8001a50:	2300      	movs	r3, #0
 8001a52:	e7a5      	b.n	80019a0 <__aeabi_dmul+0x4f4>
 8001a54:	0763      	lsls	r3, r4, #29
 8001a56:	0264      	lsls	r4, r4, #9
 8001a58:	0b24      	lsrs	r4, r4, #12
 8001a5a:	e7a1      	b.n	80019a0 <__aeabi_dmul+0x4f4>
 8001a5c:	9b00      	ldr	r3, [sp, #0]
 8001a5e:	46a2      	mov	sl, r4
 8001a60:	4699      	mov	r9, r3
 8001a62:	9b01      	ldr	r3, [sp, #4]
 8001a64:	4698      	mov	r8, r3
 8001a66:	e737      	b.n	80018d8 <__aeabi_dmul+0x42c>
 8001a68:	fffffc0d 	.word	0xfffffc0d
 8001a6c:	000007ff 	.word	0x000007ff
 8001a70:	0000043e 	.word	0x0000043e
 8001a74:	0000041e 	.word	0x0000041e

08001a78 <__aeabi_dsub>:
 8001a78:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001a7a:	4657      	mov	r7, sl
 8001a7c:	464e      	mov	r6, r9
 8001a7e:	4645      	mov	r5, r8
 8001a80:	46de      	mov	lr, fp
 8001a82:	b5e0      	push	{r5, r6, r7, lr}
 8001a84:	b083      	sub	sp, #12
 8001a86:	9000      	str	r0, [sp, #0]
 8001a88:	9101      	str	r1, [sp, #4]
 8001a8a:	030c      	lsls	r4, r1, #12
 8001a8c:	004d      	lsls	r5, r1, #1
 8001a8e:	0fce      	lsrs	r6, r1, #31
 8001a90:	0a61      	lsrs	r1, r4, #9
 8001a92:	9c00      	ldr	r4, [sp, #0]
 8001a94:	005f      	lsls	r7, r3, #1
 8001a96:	0f64      	lsrs	r4, r4, #29
 8001a98:	430c      	orrs	r4, r1
 8001a9a:	9900      	ldr	r1, [sp, #0]
 8001a9c:	9200      	str	r2, [sp, #0]
 8001a9e:	9301      	str	r3, [sp, #4]
 8001aa0:	00c8      	lsls	r0, r1, #3
 8001aa2:	0319      	lsls	r1, r3, #12
 8001aa4:	0d7b      	lsrs	r3, r7, #21
 8001aa6:	4699      	mov	r9, r3
 8001aa8:	9b01      	ldr	r3, [sp, #4]
 8001aaa:	4fcc      	ldr	r7, [pc, #816]	@ (8001ddc <__aeabi_dsub+0x364>)
 8001aac:	0fdb      	lsrs	r3, r3, #31
 8001aae:	469c      	mov	ip, r3
 8001ab0:	0a4b      	lsrs	r3, r1, #9
 8001ab2:	9900      	ldr	r1, [sp, #0]
 8001ab4:	4680      	mov	r8, r0
 8001ab6:	0f49      	lsrs	r1, r1, #29
 8001ab8:	4319      	orrs	r1, r3
 8001aba:	9b00      	ldr	r3, [sp, #0]
 8001abc:	468b      	mov	fp, r1
 8001abe:	00da      	lsls	r2, r3, #3
 8001ac0:	4692      	mov	sl, r2
 8001ac2:	0d6d      	lsrs	r5, r5, #21
 8001ac4:	45b9      	cmp	r9, r7
 8001ac6:	d100      	bne.n	8001aca <__aeabi_dsub+0x52>
 8001ac8:	e0bf      	b.n	8001c4a <__aeabi_dsub+0x1d2>
 8001aca:	2301      	movs	r3, #1
 8001acc:	4661      	mov	r1, ip
 8001ace:	4059      	eors	r1, r3
 8001ad0:	464b      	mov	r3, r9
 8001ad2:	468c      	mov	ip, r1
 8001ad4:	1aeb      	subs	r3, r5, r3
 8001ad6:	428e      	cmp	r6, r1
 8001ad8:	d075      	beq.n	8001bc6 <__aeabi_dsub+0x14e>
 8001ada:	2b00      	cmp	r3, #0
 8001adc:	dc00      	bgt.n	8001ae0 <__aeabi_dsub+0x68>
 8001ade:	e2a3      	b.n	8002028 <__aeabi_dsub+0x5b0>
 8001ae0:	4649      	mov	r1, r9
 8001ae2:	2900      	cmp	r1, #0
 8001ae4:	d100      	bne.n	8001ae8 <__aeabi_dsub+0x70>
 8001ae6:	e0ce      	b.n	8001c86 <__aeabi_dsub+0x20e>
 8001ae8:	42bd      	cmp	r5, r7
 8001aea:	d100      	bne.n	8001aee <__aeabi_dsub+0x76>
 8001aec:	e200      	b.n	8001ef0 <__aeabi_dsub+0x478>
 8001aee:	2701      	movs	r7, #1
 8001af0:	2b38      	cmp	r3, #56	@ 0x38
 8001af2:	dc19      	bgt.n	8001b28 <__aeabi_dsub+0xb0>
 8001af4:	2780      	movs	r7, #128	@ 0x80
 8001af6:	4659      	mov	r1, fp
 8001af8:	043f      	lsls	r7, r7, #16
 8001afa:	4339      	orrs	r1, r7
 8001afc:	468b      	mov	fp, r1
 8001afe:	2b1f      	cmp	r3, #31
 8001b00:	dd00      	ble.n	8001b04 <__aeabi_dsub+0x8c>
 8001b02:	e1fa      	b.n	8001efa <__aeabi_dsub+0x482>
 8001b04:	2720      	movs	r7, #32
 8001b06:	1af9      	subs	r1, r7, r3
 8001b08:	468c      	mov	ip, r1
 8001b0a:	4659      	mov	r1, fp
 8001b0c:	4667      	mov	r7, ip
 8001b0e:	40b9      	lsls	r1, r7
 8001b10:	000f      	movs	r7, r1
 8001b12:	0011      	movs	r1, r2
 8001b14:	40d9      	lsrs	r1, r3
 8001b16:	430f      	orrs	r7, r1
 8001b18:	4661      	mov	r1, ip
 8001b1a:	408a      	lsls	r2, r1
 8001b1c:	1e51      	subs	r1, r2, #1
 8001b1e:	418a      	sbcs	r2, r1
 8001b20:	4659      	mov	r1, fp
 8001b22:	40d9      	lsrs	r1, r3
 8001b24:	4317      	orrs	r7, r2
 8001b26:	1a64      	subs	r4, r4, r1
 8001b28:	1bc7      	subs	r7, r0, r7
 8001b2a:	42b8      	cmp	r0, r7
 8001b2c:	4180      	sbcs	r0, r0
 8001b2e:	4240      	negs	r0, r0
 8001b30:	1a24      	subs	r4, r4, r0
 8001b32:	0223      	lsls	r3, r4, #8
 8001b34:	d400      	bmi.n	8001b38 <__aeabi_dsub+0xc0>
 8001b36:	e140      	b.n	8001dba <__aeabi_dsub+0x342>
 8001b38:	0264      	lsls	r4, r4, #9
 8001b3a:	0a64      	lsrs	r4, r4, #9
 8001b3c:	2c00      	cmp	r4, #0
 8001b3e:	d100      	bne.n	8001b42 <__aeabi_dsub+0xca>
 8001b40:	e154      	b.n	8001dec <__aeabi_dsub+0x374>
 8001b42:	0020      	movs	r0, r4
 8001b44:	f000 fc30 	bl	80023a8 <__clzsi2>
 8001b48:	0003      	movs	r3, r0
 8001b4a:	3b08      	subs	r3, #8
 8001b4c:	2120      	movs	r1, #32
 8001b4e:	0038      	movs	r0, r7
 8001b50:	1aca      	subs	r2, r1, r3
 8001b52:	40d0      	lsrs	r0, r2
 8001b54:	409c      	lsls	r4, r3
 8001b56:	0002      	movs	r2, r0
 8001b58:	409f      	lsls	r7, r3
 8001b5a:	4322      	orrs	r2, r4
 8001b5c:	429d      	cmp	r5, r3
 8001b5e:	dd00      	ble.n	8001b62 <__aeabi_dsub+0xea>
 8001b60:	e1a6      	b.n	8001eb0 <__aeabi_dsub+0x438>
 8001b62:	1b58      	subs	r0, r3, r5
 8001b64:	3001      	adds	r0, #1
 8001b66:	1a09      	subs	r1, r1, r0
 8001b68:	003c      	movs	r4, r7
 8001b6a:	408f      	lsls	r7, r1
 8001b6c:	40c4      	lsrs	r4, r0
 8001b6e:	1e7b      	subs	r3, r7, #1
 8001b70:	419f      	sbcs	r7, r3
 8001b72:	0013      	movs	r3, r2
 8001b74:	408b      	lsls	r3, r1
 8001b76:	4327      	orrs	r7, r4
 8001b78:	431f      	orrs	r7, r3
 8001b7a:	40c2      	lsrs	r2, r0
 8001b7c:	003b      	movs	r3, r7
 8001b7e:	0014      	movs	r4, r2
 8001b80:	2500      	movs	r5, #0
 8001b82:	4313      	orrs	r3, r2
 8001b84:	d100      	bne.n	8001b88 <__aeabi_dsub+0x110>
 8001b86:	e1f7      	b.n	8001f78 <__aeabi_dsub+0x500>
 8001b88:	077b      	lsls	r3, r7, #29
 8001b8a:	d100      	bne.n	8001b8e <__aeabi_dsub+0x116>
 8001b8c:	e377      	b.n	800227e <__aeabi_dsub+0x806>
 8001b8e:	230f      	movs	r3, #15
 8001b90:	0038      	movs	r0, r7
 8001b92:	403b      	ands	r3, r7
 8001b94:	2b04      	cmp	r3, #4
 8001b96:	d004      	beq.n	8001ba2 <__aeabi_dsub+0x12a>
 8001b98:	1d38      	adds	r0, r7, #4
 8001b9a:	42b8      	cmp	r0, r7
 8001b9c:	41bf      	sbcs	r7, r7
 8001b9e:	427f      	negs	r7, r7
 8001ba0:	19e4      	adds	r4, r4, r7
 8001ba2:	0223      	lsls	r3, r4, #8
 8001ba4:	d400      	bmi.n	8001ba8 <__aeabi_dsub+0x130>
 8001ba6:	e368      	b.n	800227a <__aeabi_dsub+0x802>
 8001ba8:	4b8c      	ldr	r3, [pc, #560]	@ (8001ddc <__aeabi_dsub+0x364>)
 8001baa:	3501      	adds	r5, #1
 8001bac:	429d      	cmp	r5, r3
 8001bae:	d100      	bne.n	8001bb2 <__aeabi_dsub+0x13a>
 8001bb0:	e0f4      	b.n	8001d9c <__aeabi_dsub+0x324>
 8001bb2:	4b8b      	ldr	r3, [pc, #556]	@ (8001de0 <__aeabi_dsub+0x368>)
 8001bb4:	056d      	lsls	r5, r5, #21
 8001bb6:	401c      	ands	r4, r3
 8001bb8:	0d6d      	lsrs	r5, r5, #21
 8001bba:	0767      	lsls	r7, r4, #29
 8001bbc:	08c0      	lsrs	r0, r0, #3
 8001bbe:	0264      	lsls	r4, r4, #9
 8001bc0:	4307      	orrs	r7, r0
 8001bc2:	0b24      	lsrs	r4, r4, #12
 8001bc4:	e0ec      	b.n	8001da0 <__aeabi_dsub+0x328>
 8001bc6:	2b00      	cmp	r3, #0
 8001bc8:	dc00      	bgt.n	8001bcc <__aeabi_dsub+0x154>
 8001bca:	e329      	b.n	8002220 <__aeabi_dsub+0x7a8>
 8001bcc:	4649      	mov	r1, r9
 8001bce:	2900      	cmp	r1, #0
 8001bd0:	d000      	beq.n	8001bd4 <__aeabi_dsub+0x15c>
 8001bd2:	e0d6      	b.n	8001d82 <__aeabi_dsub+0x30a>
 8001bd4:	4659      	mov	r1, fp
 8001bd6:	4311      	orrs	r1, r2
 8001bd8:	d100      	bne.n	8001bdc <__aeabi_dsub+0x164>
 8001bda:	e12e      	b.n	8001e3a <__aeabi_dsub+0x3c2>
 8001bdc:	1e59      	subs	r1, r3, #1
 8001bde:	2b01      	cmp	r3, #1
 8001be0:	d100      	bne.n	8001be4 <__aeabi_dsub+0x16c>
 8001be2:	e1e6      	b.n	8001fb2 <__aeabi_dsub+0x53a>
 8001be4:	42bb      	cmp	r3, r7
 8001be6:	d100      	bne.n	8001bea <__aeabi_dsub+0x172>
 8001be8:	e182      	b.n	8001ef0 <__aeabi_dsub+0x478>
 8001bea:	2701      	movs	r7, #1
 8001bec:	000b      	movs	r3, r1
 8001bee:	2938      	cmp	r1, #56	@ 0x38
 8001bf0:	dc14      	bgt.n	8001c1c <__aeabi_dsub+0x1a4>
 8001bf2:	2b1f      	cmp	r3, #31
 8001bf4:	dd00      	ble.n	8001bf8 <__aeabi_dsub+0x180>
 8001bf6:	e23c      	b.n	8002072 <__aeabi_dsub+0x5fa>
 8001bf8:	2720      	movs	r7, #32
 8001bfa:	1af9      	subs	r1, r7, r3
 8001bfc:	468c      	mov	ip, r1
 8001bfe:	4659      	mov	r1, fp
 8001c00:	4667      	mov	r7, ip
 8001c02:	40b9      	lsls	r1, r7
 8001c04:	000f      	movs	r7, r1
 8001c06:	0011      	movs	r1, r2
 8001c08:	40d9      	lsrs	r1, r3
 8001c0a:	430f      	orrs	r7, r1
 8001c0c:	4661      	mov	r1, ip
 8001c0e:	408a      	lsls	r2, r1
 8001c10:	1e51      	subs	r1, r2, #1
 8001c12:	418a      	sbcs	r2, r1
 8001c14:	4659      	mov	r1, fp
 8001c16:	40d9      	lsrs	r1, r3
 8001c18:	4317      	orrs	r7, r2
 8001c1a:	1864      	adds	r4, r4, r1
 8001c1c:	183f      	adds	r7, r7, r0
 8001c1e:	4287      	cmp	r7, r0
 8001c20:	4180      	sbcs	r0, r0
 8001c22:	4240      	negs	r0, r0
 8001c24:	1824      	adds	r4, r4, r0
 8001c26:	0223      	lsls	r3, r4, #8
 8001c28:	d400      	bmi.n	8001c2c <__aeabi_dsub+0x1b4>
 8001c2a:	e0c6      	b.n	8001dba <__aeabi_dsub+0x342>
 8001c2c:	4b6b      	ldr	r3, [pc, #428]	@ (8001ddc <__aeabi_dsub+0x364>)
 8001c2e:	3501      	adds	r5, #1
 8001c30:	429d      	cmp	r5, r3
 8001c32:	d100      	bne.n	8001c36 <__aeabi_dsub+0x1be>
 8001c34:	e0b2      	b.n	8001d9c <__aeabi_dsub+0x324>
 8001c36:	2101      	movs	r1, #1
 8001c38:	4b69      	ldr	r3, [pc, #420]	@ (8001de0 <__aeabi_dsub+0x368>)
 8001c3a:	087a      	lsrs	r2, r7, #1
 8001c3c:	401c      	ands	r4, r3
 8001c3e:	4039      	ands	r1, r7
 8001c40:	430a      	orrs	r2, r1
 8001c42:	07e7      	lsls	r7, r4, #31
 8001c44:	4317      	orrs	r7, r2
 8001c46:	0864      	lsrs	r4, r4, #1
 8001c48:	e79e      	b.n	8001b88 <__aeabi_dsub+0x110>
 8001c4a:	4b66      	ldr	r3, [pc, #408]	@ (8001de4 <__aeabi_dsub+0x36c>)
 8001c4c:	4311      	orrs	r1, r2
 8001c4e:	468a      	mov	sl, r1
 8001c50:	18eb      	adds	r3, r5, r3
 8001c52:	2900      	cmp	r1, #0
 8001c54:	d028      	beq.n	8001ca8 <__aeabi_dsub+0x230>
 8001c56:	4566      	cmp	r6, ip
 8001c58:	d02c      	beq.n	8001cb4 <__aeabi_dsub+0x23c>
 8001c5a:	2b00      	cmp	r3, #0
 8001c5c:	d05b      	beq.n	8001d16 <__aeabi_dsub+0x29e>
 8001c5e:	2d00      	cmp	r5, #0
 8001c60:	d100      	bne.n	8001c64 <__aeabi_dsub+0x1ec>
 8001c62:	e12c      	b.n	8001ebe <__aeabi_dsub+0x446>
 8001c64:	465b      	mov	r3, fp
 8001c66:	4666      	mov	r6, ip
 8001c68:	075f      	lsls	r7, r3, #29
 8001c6a:	08d2      	lsrs	r2, r2, #3
 8001c6c:	4317      	orrs	r7, r2
 8001c6e:	08dd      	lsrs	r5, r3, #3
 8001c70:	003b      	movs	r3, r7
 8001c72:	432b      	orrs	r3, r5
 8001c74:	d100      	bne.n	8001c78 <__aeabi_dsub+0x200>
 8001c76:	e0e2      	b.n	8001e3e <__aeabi_dsub+0x3c6>
 8001c78:	2480      	movs	r4, #128	@ 0x80
 8001c7a:	0324      	lsls	r4, r4, #12
 8001c7c:	432c      	orrs	r4, r5
 8001c7e:	0324      	lsls	r4, r4, #12
 8001c80:	4d56      	ldr	r5, [pc, #344]	@ (8001ddc <__aeabi_dsub+0x364>)
 8001c82:	0b24      	lsrs	r4, r4, #12
 8001c84:	e08c      	b.n	8001da0 <__aeabi_dsub+0x328>
 8001c86:	4659      	mov	r1, fp
 8001c88:	4311      	orrs	r1, r2
 8001c8a:	d100      	bne.n	8001c8e <__aeabi_dsub+0x216>
 8001c8c:	e0d5      	b.n	8001e3a <__aeabi_dsub+0x3c2>
 8001c8e:	1e59      	subs	r1, r3, #1
 8001c90:	2b01      	cmp	r3, #1
 8001c92:	d100      	bne.n	8001c96 <__aeabi_dsub+0x21e>
 8001c94:	e1b9      	b.n	800200a <__aeabi_dsub+0x592>
 8001c96:	42bb      	cmp	r3, r7
 8001c98:	d100      	bne.n	8001c9c <__aeabi_dsub+0x224>
 8001c9a:	e1b1      	b.n	8002000 <__aeabi_dsub+0x588>
 8001c9c:	2701      	movs	r7, #1
 8001c9e:	000b      	movs	r3, r1
 8001ca0:	2938      	cmp	r1, #56	@ 0x38
 8001ca2:	dd00      	ble.n	8001ca6 <__aeabi_dsub+0x22e>
 8001ca4:	e740      	b.n	8001b28 <__aeabi_dsub+0xb0>
 8001ca6:	e72a      	b.n	8001afe <__aeabi_dsub+0x86>
 8001ca8:	4661      	mov	r1, ip
 8001caa:	2701      	movs	r7, #1
 8001cac:	4079      	eors	r1, r7
 8001cae:	468c      	mov	ip, r1
 8001cb0:	4566      	cmp	r6, ip
 8001cb2:	d1d2      	bne.n	8001c5a <__aeabi_dsub+0x1e2>
 8001cb4:	2b00      	cmp	r3, #0
 8001cb6:	d100      	bne.n	8001cba <__aeabi_dsub+0x242>
 8001cb8:	e0c5      	b.n	8001e46 <__aeabi_dsub+0x3ce>
 8001cba:	2d00      	cmp	r5, #0
 8001cbc:	d000      	beq.n	8001cc0 <__aeabi_dsub+0x248>
 8001cbe:	e155      	b.n	8001f6c <__aeabi_dsub+0x4f4>
 8001cc0:	464b      	mov	r3, r9
 8001cc2:	0025      	movs	r5, r4
 8001cc4:	4305      	orrs	r5, r0
 8001cc6:	d100      	bne.n	8001cca <__aeabi_dsub+0x252>
 8001cc8:	e212      	b.n	80020f0 <__aeabi_dsub+0x678>
 8001cca:	1e59      	subs	r1, r3, #1
 8001ccc:	468c      	mov	ip, r1
 8001cce:	2b01      	cmp	r3, #1
 8001cd0:	d100      	bne.n	8001cd4 <__aeabi_dsub+0x25c>
 8001cd2:	e249      	b.n	8002168 <__aeabi_dsub+0x6f0>
 8001cd4:	4d41      	ldr	r5, [pc, #260]	@ (8001ddc <__aeabi_dsub+0x364>)
 8001cd6:	42ab      	cmp	r3, r5
 8001cd8:	d100      	bne.n	8001cdc <__aeabi_dsub+0x264>
 8001cda:	e28f      	b.n	80021fc <__aeabi_dsub+0x784>
 8001cdc:	2701      	movs	r7, #1
 8001cde:	2938      	cmp	r1, #56	@ 0x38
 8001ce0:	dc11      	bgt.n	8001d06 <__aeabi_dsub+0x28e>
 8001ce2:	4663      	mov	r3, ip
 8001ce4:	2b1f      	cmp	r3, #31
 8001ce6:	dd00      	ble.n	8001cea <__aeabi_dsub+0x272>
 8001ce8:	e25b      	b.n	80021a2 <__aeabi_dsub+0x72a>
 8001cea:	4661      	mov	r1, ip
 8001cec:	2320      	movs	r3, #32
 8001cee:	0027      	movs	r7, r4
 8001cf0:	1a5b      	subs	r3, r3, r1
 8001cf2:	0005      	movs	r5, r0
 8001cf4:	4098      	lsls	r0, r3
 8001cf6:	409f      	lsls	r7, r3
 8001cf8:	40cd      	lsrs	r5, r1
 8001cfa:	1e43      	subs	r3, r0, #1
 8001cfc:	4198      	sbcs	r0, r3
 8001cfe:	40cc      	lsrs	r4, r1
 8001d00:	432f      	orrs	r7, r5
 8001d02:	4307      	orrs	r7, r0
 8001d04:	44a3      	add	fp, r4
 8001d06:	18bf      	adds	r7, r7, r2
 8001d08:	4297      	cmp	r7, r2
 8001d0a:	4192      	sbcs	r2, r2
 8001d0c:	4252      	negs	r2, r2
 8001d0e:	445a      	add	r2, fp
 8001d10:	0014      	movs	r4, r2
 8001d12:	464d      	mov	r5, r9
 8001d14:	e787      	b.n	8001c26 <__aeabi_dsub+0x1ae>
 8001d16:	4f34      	ldr	r7, [pc, #208]	@ (8001de8 <__aeabi_dsub+0x370>)
 8001d18:	1c6b      	adds	r3, r5, #1
 8001d1a:	423b      	tst	r3, r7
 8001d1c:	d000      	beq.n	8001d20 <__aeabi_dsub+0x2a8>
 8001d1e:	e0b6      	b.n	8001e8e <__aeabi_dsub+0x416>
 8001d20:	4659      	mov	r1, fp
 8001d22:	0023      	movs	r3, r4
 8001d24:	4311      	orrs	r1, r2
 8001d26:	000f      	movs	r7, r1
 8001d28:	4303      	orrs	r3, r0
 8001d2a:	2d00      	cmp	r5, #0
 8001d2c:	d000      	beq.n	8001d30 <__aeabi_dsub+0x2b8>
 8001d2e:	e126      	b.n	8001f7e <__aeabi_dsub+0x506>
 8001d30:	2b00      	cmp	r3, #0
 8001d32:	d100      	bne.n	8001d36 <__aeabi_dsub+0x2be>
 8001d34:	e1c0      	b.n	80020b8 <__aeabi_dsub+0x640>
 8001d36:	2900      	cmp	r1, #0
 8001d38:	d100      	bne.n	8001d3c <__aeabi_dsub+0x2c4>
 8001d3a:	e0a1      	b.n	8001e80 <__aeabi_dsub+0x408>
 8001d3c:	1a83      	subs	r3, r0, r2
 8001d3e:	4698      	mov	r8, r3
 8001d40:	465b      	mov	r3, fp
 8001d42:	4540      	cmp	r0, r8
 8001d44:	41ad      	sbcs	r5, r5
 8001d46:	1ae3      	subs	r3, r4, r3
 8001d48:	426d      	negs	r5, r5
 8001d4a:	1b5b      	subs	r3, r3, r5
 8001d4c:	2580      	movs	r5, #128	@ 0x80
 8001d4e:	042d      	lsls	r5, r5, #16
 8001d50:	422b      	tst	r3, r5
 8001d52:	d100      	bne.n	8001d56 <__aeabi_dsub+0x2de>
 8001d54:	e14b      	b.n	8001fee <__aeabi_dsub+0x576>
 8001d56:	465b      	mov	r3, fp
 8001d58:	1a10      	subs	r0, r2, r0
 8001d5a:	4282      	cmp	r2, r0
 8001d5c:	4192      	sbcs	r2, r2
 8001d5e:	1b1c      	subs	r4, r3, r4
 8001d60:	0007      	movs	r7, r0
 8001d62:	2601      	movs	r6, #1
 8001d64:	4663      	mov	r3, ip
 8001d66:	4252      	negs	r2, r2
 8001d68:	1aa4      	subs	r4, r4, r2
 8001d6a:	4327      	orrs	r7, r4
 8001d6c:	401e      	ands	r6, r3
 8001d6e:	2f00      	cmp	r7, #0
 8001d70:	d100      	bne.n	8001d74 <__aeabi_dsub+0x2fc>
 8001d72:	e142      	b.n	8001ffa <__aeabi_dsub+0x582>
 8001d74:	422c      	tst	r4, r5
 8001d76:	d100      	bne.n	8001d7a <__aeabi_dsub+0x302>
 8001d78:	e26d      	b.n	8002256 <__aeabi_dsub+0x7de>
 8001d7a:	4b19      	ldr	r3, [pc, #100]	@ (8001de0 <__aeabi_dsub+0x368>)
 8001d7c:	2501      	movs	r5, #1
 8001d7e:	401c      	ands	r4, r3
 8001d80:	e71b      	b.n	8001bba <__aeabi_dsub+0x142>
 8001d82:	42bd      	cmp	r5, r7
 8001d84:	d100      	bne.n	8001d88 <__aeabi_dsub+0x310>
 8001d86:	e13b      	b.n	8002000 <__aeabi_dsub+0x588>
 8001d88:	2701      	movs	r7, #1
 8001d8a:	2b38      	cmp	r3, #56	@ 0x38
 8001d8c:	dd00      	ble.n	8001d90 <__aeabi_dsub+0x318>
 8001d8e:	e745      	b.n	8001c1c <__aeabi_dsub+0x1a4>
 8001d90:	2780      	movs	r7, #128	@ 0x80
 8001d92:	4659      	mov	r1, fp
 8001d94:	043f      	lsls	r7, r7, #16
 8001d96:	4339      	orrs	r1, r7
 8001d98:	468b      	mov	fp, r1
 8001d9a:	e72a      	b.n	8001bf2 <__aeabi_dsub+0x17a>
 8001d9c:	2400      	movs	r4, #0
 8001d9e:	2700      	movs	r7, #0
 8001da0:	052d      	lsls	r5, r5, #20
 8001da2:	4325      	orrs	r5, r4
 8001da4:	07f6      	lsls	r6, r6, #31
 8001da6:	4335      	orrs	r5, r6
 8001da8:	0038      	movs	r0, r7
 8001daa:	0029      	movs	r1, r5
 8001dac:	b003      	add	sp, #12
 8001dae:	bcf0      	pop	{r4, r5, r6, r7}
 8001db0:	46bb      	mov	fp, r7
 8001db2:	46b2      	mov	sl, r6
 8001db4:	46a9      	mov	r9, r5
 8001db6:	46a0      	mov	r8, r4
 8001db8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001dba:	077b      	lsls	r3, r7, #29
 8001dbc:	d004      	beq.n	8001dc8 <__aeabi_dsub+0x350>
 8001dbe:	230f      	movs	r3, #15
 8001dc0:	403b      	ands	r3, r7
 8001dc2:	2b04      	cmp	r3, #4
 8001dc4:	d000      	beq.n	8001dc8 <__aeabi_dsub+0x350>
 8001dc6:	e6e7      	b.n	8001b98 <__aeabi_dsub+0x120>
 8001dc8:	002b      	movs	r3, r5
 8001dca:	08f8      	lsrs	r0, r7, #3
 8001dcc:	4a03      	ldr	r2, [pc, #12]	@ (8001ddc <__aeabi_dsub+0x364>)
 8001dce:	0767      	lsls	r7, r4, #29
 8001dd0:	4307      	orrs	r7, r0
 8001dd2:	08e5      	lsrs	r5, r4, #3
 8001dd4:	4293      	cmp	r3, r2
 8001dd6:	d100      	bne.n	8001dda <__aeabi_dsub+0x362>
 8001dd8:	e74a      	b.n	8001c70 <__aeabi_dsub+0x1f8>
 8001dda:	e0a5      	b.n	8001f28 <__aeabi_dsub+0x4b0>
 8001ddc:	000007ff 	.word	0x000007ff
 8001de0:	ff7fffff 	.word	0xff7fffff
 8001de4:	fffff801 	.word	0xfffff801
 8001de8:	000007fe 	.word	0x000007fe
 8001dec:	0038      	movs	r0, r7
 8001dee:	f000 fadb 	bl	80023a8 <__clzsi2>
 8001df2:	0003      	movs	r3, r0
 8001df4:	3318      	adds	r3, #24
 8001df6:	2b1f      	cmp	r3, #31
 8001df8:	dc00      	bgt.n	8001dfc <__aeabi_dsub+0x384>
 8001dfa:	e6a7      	b.n	8001b4c <__aeabi_dsub+0xd4>
 8001dfc:	003a      	movs	r2, r7
 8001dfe:	3808      	subs	r0, #8
 8001e00:	4082      	lsls	r2, r0
 8001e02:	429d      	cmp	r5, r3
 8001e04:	dd00      	ble.n	8001e08 <__aeabi_dsub+0x390>
 8001e06:	e08a      	b.n	8001f1e <__aeabi_dsub+0x4a6>
 8001e08:	1b5b      	subs	r3, r3, r5
 8001e0a:	1c58      	adds	r0, r3, #1
 8001e0c:	281f      	cmp	r0, #31
 8001e0e:	dc00      	bgt.n	8001e12 <__aeabi_dsub+0x39a>
 8001e10:	e1d8      	b.n	80021c4 <__aeabi_dsub+0x74c>
 8001e12:	0017      	movs	r7, r2
 8001e14:	3b1f      	subs	r3, #31
 8001e16:	40df      	lsrs	r7, r3
 8001e18:	2820      	cmp	r0, #32
 8001e1a:	d005      	beq.n	8001e28 <__aeabi_dsub+0x3b0>
 8001e1c:	2340      	movs	r3, #64	@ 0x40
 8001e1e:	1a1b      	subs	r3, r3, r0
 8001e20:	409a      	lsls	r2, r3
 8001e22:	1e53      	subs	r3, r2, #1
 8001e24:	419a      	sbcs	r2, r3
 8001e26:	4317      	orrs	r7, r2
 8001e28:	2500      	movs	r5, #0
 8001e2a:	2f00      	cmp	r7, #0
 8001e2c:	d100      	bne.n	8001e30 <__aeabi_dsub+0x3b8>
 8001e2e:	e0e5      	b.n	8001ffc <__aeabi_dsub+0x584>
 8001e30:	077b      	lsls	r3, r7, #29
 8001e32:	d000      	beq.n	8001e36 <__aeabi_dsub+0x3be>
 8001e34:	e6ab      	b.n	8001b8e <__aeabi_dsub+0x116>
 8001e36:	002c      	movs	r4, r5
 8001e38:	e7c6      	b.n	8001dc8 <__aeabi_dsub+0x350>
 8001e3a:	08c0      	lsrs	r0, r0, #3
 8001e3c:	e7c6      	b.n	8001dcc <__aeabi_dsub+0x354>
 8001e3e:	2700      	movs	r7, #0
 8001e40:	2400      	movs	r4, #0
 8001e42:	4dd1      	ldr	r5, [pc, #836]	@ (8002188 <__aeabi_dsub+0x710>)
 8001e44:	e7ac      	b.n	8001da0 <__aeabi_dsub+0x328>
 8001e46:	4fd1      	ldr	r7, [pc, #836]	@ (800218c <__aeabi_dsub+0x714>)
 8001e48:	1c6b      	adds	r3, r5, #1
 8001e4a:	423b      	tst	r3, r7
 8001e4c:	d171      	bne.n	8001f32 <__aeabi_dsub+0x4ba>
 8001e4e:	0023      	movs	r3, r4
 8001e50:	4303      	orrs	r3, r0
 8001e52:	2d00      	cmp	r5, #0
 8001e54:	d000      	beq.n	8001e58 <__aeabi_dsub+0x3e0>
 8001e56:	e14e      	b.n	80020f6 <__aeabi_dsub+0x67e>
 8001e58:	4657      	mov	r7, sl
 8001e5a:	2b00      	cmp	r3, #0
 8001e5c:	d100      	bne.n	8001e60 <__aeabi_dsub+0x3e8>
 8001e5e:	e1b5      	b.n	80021cc <__aeabi_dsub+0x754>
 8001e60:	2f00      	cmp	r7, #0
 8001e62:	d00d      	beq.n	8001e80 <__aeabi_dsub+0x408>
 8001e64:	1883      	adds	r3, r0, r2
 8001e66:	4283      	cmp	r3, r0
 8001e68:	4180      	sbcs	r0, r0
 8001e6a:	445c      	add	r4, fp
 8001e6c:	4240      	negs	r0, r0
 8001e6e:	1824      	adds	r4, r4, r0
 8001e70:	0222      	lsls	r2, r4, #8
 8001e72:	d500      	bpl.n	8001e76 <__aeabi_dsub+0x3fe>
 8001e74:	e1c8      	b.n	8002208 <__aeabi_dsub+0x790>
 8001e76:	001f      	movs	r7, r3
 8001e78:	4698      	mov	r8, r3
 8001e7a:	4327      	orrs	r7, r4
 8001e7c:	d100      	bne.n	8001e80 <__aeabi_dsub+0x408>
 8001e7e:	e0bc      	b.n	8001ffa <__aeabi_dsub+0x582>
 8001e80:	4643      	mov	r3, r8
 8001e82:	0767      	lsls	r7, r4, #29
 8001e84:	08db      	lsrs	r3, r3, #3
 8001e86:	431f      	orrs	r7, r3
 8001e88:	08e5      	lsrs	r5, r4, #3
 8001e8a:	2300      	movs	r3, #0
 8001e8c:	e04c      	b.n	8001f28 <__aeabi_dsub+0x4b0>
 8001e8e:	1a83      	subs	r3, r0, r2
 8001e90:	4698      	mov	r8, r3
 8001e92:	465b      	mov	r3, fp
 8001e94:	4540      	cmp	r0, r8
 8001e96:	41bf      	sbcs	r7, r7
 8001e98:	1ae3      	subs	r3, r4, r3
 8001e9a:	427f      	negs	r7, r7
 8001e9c:	1bdb      	subs	r3, r3, r7
 8001e9e:	021f      	lsls	r7, r3, #8
 8001ea0:	d47c      	bmi.n	8001f9c <__aeabi_dsub+0x524>
 8001ea2:	4647      	mov	r7, r8
 8001ea4:	431f      	orrs	r7, r3
 8001ea6:	d100      	bne.n	8001eaa <__aeabi_dsub+0x432>
 8001ea8:	e0a6      	b.n	8001ff8 <__aeabi_dsub+0x580>
 8001eaa:	001c      	movs	r4, r3
 8001eac:	4647      	mov	r7, r8
 8001eae:	e645      	b.n	8001b3c <__aeabi_dsub+0xc4>
 8001eb0:	4cb7      	ldr	r4, [pc, #732]	@ (8002190 <__aeabi_dsub+0x718>)
 8001eb2:	1aed      	subs	r5, r5, r3
 8001eb4:	4014      	ands	r4, r2
 8001eb6:	077b      	lsls	r3, r7, #29
 8001eb8:	d000      	beq.n	8001ebc <__aeabi_dsub+0x444>
 8001eba:	e780      	b.n	8001dbe <__aeabi_dsub+0x346>
 8001ebc:	e784      	b.n	8001dc8 <__aeabi_dsub+0x350>
 8001ebe:	464b      	mov	r3, r9
 8001ec0:	0025      	movs	r5, r4
 8001ec2:	4305      	orrs	r5, r0
 8001ec4:	d066      	beq.n	8001f94 <__aeabi_dsub+0x51c>
 8001ec6:	1e5f      	subs	r7, r3, #1
 8001ec8:	2b01      	cmp	r3, #1
 8001eca:	d100      	bne.n	8001ece <__aeabi_dsub+0x456>
 8001ecc:	e0fc      	b.n	80020c8 <__aeabi_dsub+0x650>
 8001ece:	4dae      	ldr	r5, [pc, #696]	@ (8002188 <__aeabi_dsub+0x710>)
 8001ed0:	42ab      	cmp	r3, r5
 8001ed2:	d100      	bne.n	8001ed6 <__aeabi_dsub+0x45e>
 8001ed4:	e15e      	b.n	8002194 <__aeabi_dsub+0x71c>
 8001ed6:	4666      	mov	r6, ip
 8001ed8:	2f38      	cmp	r7, #56	@ 0x38
 8001eda:	dc00      	bgt.n	8001ede <__aeabi_dsub+0x466>
 8001edc:	e0b4      	b.n	8002048 <__aeabi_dsub+0x5d0>
 8001ede:	2001      	movs	r0, #1
 8001ee0:	1a17      	subs	r7, r2, r0
 8001ee2:	42ba      	cmp	r2, r7
 8001ee4:	4192      	sbcs	r2, r2
 8001ee6:	465b      	mov	r3, fp
 8001ee8:	4252      	negs	r2, r2
 8001eea:	464d      	mov	r5, r9
 8001eec:	1a9c      	subs	r4, r3, r2
 8001eee:	e620      	b.n	8001b32 <__aeabi_dsub+0xba>
 8001ef0:	0767      	lsls	r7, r4, #29
 8001ef2:	08c0      	lsrs	r0, r0, #3
 8001ef4:	4307      	orrs	r7, r0
 8001ef6:	08e5      	lsrs	r5, r4, #3
 8001ef8:	e6ba      	b.n	8001c70 <__aeabi_dsub+0x1f8>
 8001efa:	001f      	movs	r7, r3
 8001efc:	4659      	mov	r1, fp
 8001efe:	3f20      	subs	r7, #32
 8001f00:	40f9      	lsrs	r1, r7
 8001f02:	000f      	movs	r7, r1
 8001f04:	2b20      	cmp	r3, #32
 8001f06:	d005      	beq.n	8001f14 <__aeabi_dsub+0x49c>
 8001f08:	2140      	movs	r1, #64	@ 0x40
 8001f0a:	1acb      	subs	r3, r1, r3
 8001f0c:	4659      	mov	r1, fp
 8001f0e:	4099      	lsls	r1, r3
 8001f10:	430a      	orrs	r2, r1
 8001f12:	4692      	mov	sl, r2
 8001f14:	4653      	mov	r3, sl
 8001f16:	1e5a      	subs	r2, r3, #1
 8001f18:	4193      	sbcs	r3, r2
 8001f1a:	431f      	orrs	r7, r3
 8001f1c:	e604      	b.n	8001b28 <__aeabi_dsub+0xb0>
 8001f1e:	1aeb      	subs	r3, r5, r3
 8001f20:	4d9b      	ldr	r5, [pc, #620]	@ (8002190 <__aeabi_dsub+0x718>)
 8001f22:	4015      	ands	r5, r2
 8001f24:	076f      	lsls	r7, r5, #29
 8001f26:	08ed      	lsrs	r5, r5, #3
 8001f28:	032c      	lsls	r4, r5, #12
 8001f2a:	055d      	lsls	r5, r3, #21
 8001f2c:	0b24      	lsrs	r4, r4, #12
 8001f2e:	0d6d      	lsrs	r5, r5, #21
 8001f30:	e736      	b.n	8001da0 <__aeabi_dsub+0x328>
 8001f32:	4d95      	ldr	r5, [pc, #596]	@ (8002188 <__aeabi_dsub+0x710>)
 8001f34:	42ab      	cmp	r3, r5
 8001f36:	d100      	bne.n	8001f3a <__aeabi_dsub+0x4c2>
 8001f38:	e0d6      	b.n	80020e8 <__aeabi_dsub+0x670>
 8001f3a:	1882      	adds	r2, r0, r2
 8001f3c:	0021      	movs	r1, r4
 8001f3e:	4282      	cmp	r2, r0
 8001f40:	4180      	sbcs	r0, r0
 8001f42:	4459      	add	r1, fp
 8001f44:	4240      	negs	r0, r0
 8001f46:	1808      	adds	r0, r1, r0
 8001f48:	07c7      	lsls	r7, r0, #31
 8001f4a:	0852      	lsrs	r2, r2, #1
 8001f4c:	4317      	orrs	r7, r2
 8001f4e:	0844      	lsrs	r4, r0, #1
 8001f50:	0752      	lsls	r2, r2, #29
 8001f52:	d400      	bmi.n	8001f56 <__aeabi_dsub+0x4de>
 8001f54:	e185      	b.n	8002262 <__aeabi_dsub+0x7ea>
 8001f56:	220f      	movs	r2, #15
 8001f58:	001d      	movs	r5, r3
 8001f5a:	403a      	ands	r2, r7
 8001f5c:	2a04      	cmp	r2, #4
 8001f5e:	d000      	beq.n	8001f62 <__aeabi_dsub+0x4ea>
 8001f60:	e61a      	b.n	8001b98 <__aeabi_dsub+0x120>
 8001f62:	08ff      	lsrs	r7, r7, #3
 8001f64:	0764      	lsls	r4, r4, #29
 8001f66:	4327      	orrs	r7, r4
 8001f68:	0905      	lsrs	r5, r0, #4
 8001f6a:	e7dd      	b.n	8001f28 <__aeabi_dsub+0x4b0>
 8001f6c:	465b      	mov	r3, fp
 8001f6e:	08d2      	lsrs	r2, r2, #3
 8001f70:	075f      	lsls	r7, r3, #29
 8001f72:	4317      	orrs	r7, r2
 8001f74:	08dd      	lsrs	r5, r3, #3
 8001f76:	e67b      	b.n	8001c70 <__aeabi_dsub+0x1f8>
 8001f78:	2700      	movs	r7, #0
 8001f7a:	2400      	movs	r4, #0
 8001f7c:	e710      	b.n	8001da0 <__aeabi_dsub+0x328>
 8001f7e:	2b00      	cmp	r3, #0
 8001f80:	d000      	beq.n	8001f84 <__aeabi_dsub+0x50c>
 8001f82:	e0d6      	b.n	8002132 <__aeabi_dsub+0x6ba>
 8001f84:	2900      	cmp	r1, #0
 8001f86:	d000      	beq.n	8001f8a <__aeabi_dsub+0x512>
 8001f88:	e12f      	b.n	80021ea <__aeabi_dsub+0x772>
 8001f8a:	2480      	movs	r4, #128	@ 0x80
 8001f8c:	2600      	movs	r6, #0
 8001f8e:	4d7e      	ldr	r5, [pc, #504]	@ (8002188 <__aeabi_dsub+0x710>)
 8001f90:	0324      	lsls	r4, r4, #12
 8001f92:	e705      	b.n	8001da0 <__aeabi_dsub+0x328>
 8001f94:	4666      	mov	r6, ip
 8001f96:	465c      	mov	r4, fp
 8001f98:	08d0      	lsrs	r0, r2, #3
 8001f9a:	e717      	b.n	8001dcc <__aeabi_dsub+0x354>
 8001f9c:	465b      	mov	r3, fp
 8001f9e:	1a17      	subs	r7, r2, r0
 8001fa0:	42ba      	cmp	r2, r7
 8001fa2:	4192      	sbcs	r2, r2
 8001fa4:	1b1c      	subs	r4, r3, r4
 8001fa6:	2601      	movs	r6, #1
 8001fa8:	4663      	mov	r3, ip
 8001faa:	4252      	negs	r2, r2
 8001fac:	1aa4      	subs	r4, r4, r2
 8001fae:	401e      	ands	r6, r3
 8001fb0:	e5c4      	b.n	8001b3c <__aeabi_dsub+0xc4>
 8001fb2:	1883      	adds	r3, r0, r2
 8001fb4:	4283      	cmp	r3, r0
 8001fb6:	4180      	sbcs	r0, r0
 8001fb8:	445c      	add	r4, fp
 8001fba:	4240      	negs	r0, r0
 8001fbc:	1825      	adds	r5, r4, r0
 8001fbe:	022a      	lsls	r2, r5, #8
 8001fc0:	d400      	bmi.n	8001fc4 <__aeabi_dsub+0x54c>
 8001fc2:	e0da      	b.n	800217a <__aeabi_dsub+0x702>
 8001fc4:	4a72      	ldr	r2, [pc, #456]	@ (8002190 <__aeabi_dsub+0x718>)
 8001fc6:	085b      	lsrs	r3, r3, #1
 8001fc8:	4015      	ands	r5, r2
 8001fca:	07ea      	lsls	r2, r5, #31
 8001fcc:	431a      	orrs	r2, r3
 8001fce:	0869      	lsrs	r1, r5, #1
 8001fd0:	075b      	lsls	r3, r3, #29
 8001fd2:	d400      	bmi.n	8001fd6 <__aeabi_dsub+0x55e>
 8001fd4:	e14a      	b.n	800226c <__aeabi_dsub+0x7f4>
 8001fd6:	230f      	movs	r3, #15
 8001fd8:	4013      	ands	r3, r2
 8001fda:	2b04      	cmp	r3, #4
 8001fdc:	d100      	bne.n	8001fe0 <__aeabi_dsub+0x568>
 8001fde:	e0fc      	b.n	80021da <__aeabi_dsub+0x762>
 8001fe0:	1d17      	adds	r7, r2, #4
 8001fe2:	4297      	cmp	r7, r2
 8001fe4:	41a4      	sbcs	r4, r4
 8001fe6:	4264      	negs	r4, r4
 8001fe8:	2502      	movs	r5, #2
 8001fea:	1864      	adds	r4, r4, r1
 8001fec:	e6ec      	b.n	8001dc8 <__aeabi_dsub+0x350>
 8001fee:	4647      	mov	r7, r8
 8001ff0:	001c      	movs	r4, r3
 8001ff2:	431f      	orrs	r7, r3
 8001ff4:	d000      	beq.n	8001ff8 <__aeabi_dsub+0x580>
 8001ff6:	e743      	b.n	8001e80 <__aeabi_dsub+0x408>
 8001ff8:	2600      	movs	r6, #0
 8001ffa:	2500      	movs	r5, #0
 8001ffc:	2400      	movs	r4, #0
 8001ffe:	e6cf      	b.n	8001da0 <__aeabi_dsub+0x328>
 8002000:	08c0      	lsrs	r0, r0, #3
 8002002:	0767      	lsls	r7, r4, #29
 8002004:	4307      	orrs	r7, r0
 8002006:	08e5      	lsrs	r5, r4, #3
 8002008:	e632      	b.n	8001c70 <__aeabi_dsub+0x1f8>
 800200a:	1a87      	subs	r7, r0, r2
 800200c:	465b      	mov	r3, fp
 800200e:	42b8      	cmp	r0, r7
 8002010:	4180      	sbcs	r0, r0
 8002012:	1ae4      	subs	r4, r4, r3
 8002014:	4240      	negs	r0, r0
 8002016:	1a24      	subs	r4, r4, r0
 8002018:	0223      	lsls	r3, r4, #8
 800201a:	d428      	bmi.n	800206e <__aeabi_dsub+0x5f6>
 800201c:	0763      	lsls	r3, r4, #29
 800201e:	08ff      	lsrs	r7, r7, #3
 8002020:	431f      	orrs	r7, r3
 8002022:	08e5      	lsrs	r5, r4, #3
 8002024:	2301      	movs	r3, #1
 8002026:	e77f      	b.n	8001f28 <__aeabi_dsub+0x4b0>
 8002028:	2b00      	cmp	r3, #0
 800202a:	d100      	bne.n	800202e <__aeabi_dsub+0x5b6>
 800202c:	e673      	b.n	8001d16 <__aeabi_dsub+0x29e>
 800202e:	464b      	mov	r3, r9
 8002030:	1b5f      	subs	r7, r3, r5
 8002032:	003b      	movs	r3, r7
 8002034:	2d00      	cmp	r5, #0
 8002036:	d100      	bne.n	800203a <__aeabi_dsub+0x5c2>
 8002038:	e742      	b.n	8001ec0 <__aeabi_dsub+0x448>
 800203a:	2f38      	cmp	r7, #56	@ 0x38
 800203c:	dd00      	ble.n	8002040 <__aeabi_dsub+0x5c8>
 800203e:	e0ec      	b.n	800221a <__aeabi_dsub+0x7a2>
 8002040:	2380      	movs	r3, #128	@ 0x80
 8002042:	000e      	movs	r6, r1
 8002044:	041b      	lsls	r3, r3, #16
 8002046:	431c      	orrs	r4, r3
 8002048:	2f1f      	cmp	r7, #31
 800204a:	dc25      	bgt.n	8002098 <__aeabi_dsub+0x620>
 800204c:	2520      	movs	r5, #32
 800204e:	0023      	movs	r3, r4
 8002050:	1bed      	subs	r5, r5, r7
 8002052:	0001      	movs	r1, r0
 8002054:	40a8      	lsls	r0, r5
 8002056:	40ab      	lsls	r3, r5
 8002058:	40f9      	lsrs	r1, r7
 800205a:	1e45      	subs	r5, r0, #1
 800205c:	41a8      	sbcs	r0, r5
 800205e:	430b      	orrs	r3, r1
 8002060:	40fc      	lsrs	r4, r7
 8002062:	4318      	orrs	r0, r3
 8002064:	465b      	mov	r3, fp
 8002066:	1b1b      	subs	r3, r3, r4
 8002068:	469b      	mov	fp, r3
 800206a:	e739      	b.n	8001ee0 <__aeabi_dsub+0x468>
 800206c:	4666      	mov	r6, ip
 800206e:	2501      	movs	r5, #1
 8002070:	e562      	b.n	8001b38 <__aeabi_dsub+0xc0>
 8002072:	001f      	movs	r7, r3
 8002074:	4659      	mov	r1, fp
 8002076:	3f20      	subs	r7, #32
 8002078:	40f9      	lsrs	r1, r7
 800207a:	468c      	mov	ip, r1
 800207c:	2b20      	cmp	r3, #32
 800207e:	d005      	beq.n	800208c <__aeabi_dsub+0x614>
 8002080:	2740      	movs	r7, #64	@ 0x40
 8002082:	4659      	mov	r1, fp
 8002084:	1afb      	subs	r3, r7, r3
 8002086:	4099      	lsls	r1, r3
 8002088:	430a      	orrs	r2, r1
 800208a:	4692      	mov	sl, r2
 800208c:	4657      	mov	r7, sl
 800208e:	1e7b      	subs	r3, r7, #1
 8002090:	419f      	sbcs	r7, r3
 8002092:	4663      	mov	r3, ip
 8002094:	431f      	orrs	r7, r3
 8002096:	e5c1      	b.n	8001c1c <__aeabi_dsub+0x1a4>
 8002098:	003b      	movs	r3, r7
 800209a:	0025      	movs	r5, r4
 800209c:	3b20      	subs	r3, #32
 800209e:	40dd      	lsrs	r5, r3
 80020a0:	2f20      	cmp	r7, #32
 80020a2:	d004      	beq.n	80020ae <__aeabi_dsub+0x636>
 80020a4:	2340      	movs	r3, #64	@ 0x40
 80020a6:	1bdb      	subs	r3, r3, r7
 80020a8:	409c      	lsls	r4, r3
 80020aa:	4320      	orrs	r0, r4
 80020ac:	4680      	mov	r8, r0
 80020ae:	4640      	mov	r0, r8
 80020b0:	1e43      	subs	r3, r0, #1
 80020b2:	4198      	sbcs	r0, r3
 80020b4:	4328      	orrs	r0, r5
 80020b6:	e713      	b.n	8001ee0 <__aeabi_dsub+0x468>
 80020b8:	2900      	cmp	r1, #0
 80020ba:	d09d      	beq.n	8001ff8 <__aeabi_dsub+0x580>
 80020bc:	2601      	movs	r6, #1
 80020be:	4663      	mov	r3, ip
 80020c0:	465c      	mov	r4, fp
 80020c2:	4690      	mov	r8, r2
 80020c4:	401e      	ands	r6, r3
 80020c6:	e6db      	b.n	8001e80 <__aeabi_dsub+0x408>
 80020c8:	1a17      	subs	r7, r2, r0
 80020ca:	465b      	mov	r3, fp
 80020cc:	42ba      	cmp	r2, r7
 80020ce:	4192      	sbcs	r2, r2
 80020d0:	1b1c      	subs	r4, r3, r4
 80020d2:	4252      	negs	r2, r2
 80020d4:	1aa4      	subs	r4, r4, r2
 80020d6:	0223      	lsls	r3, r4, #8
 80020d8:	d4c8      	bmi.n	800206c <__aeabi_dsub+0x5f4>
 80020da:	0763      	lsls	r3, r4, #29
 80020dc:	08ff      	lsrs	r7, r7, #3
 80020de:	431f      	orrs	r7, r3
 80020e0:	4666      	mov	r6, ip
 80020e2:	2301      	movs	r3, #1
 80020e4:	08e5      	lsrs	r5, r4, #3
 80020e6:	e71f      	b.n	8001f28 <__aeabi_dsub+0x4b0>
 80020e8:	001d      	movs	r5, r3
 80020ea:	2400      	movs	r4, #0
 80020ec:	2700      	movs	r7, #0
 80020ee:	e657      	b.n	8001da0 <__aeabi_dsub+0x328>
 80020f0:	465c      	mov	r4, fp
 80020f2:	08d0      	lsrs	r0, r2, #3
 80020f4:	e66a      	b.n	8001dcc <__aeabi_dsub+0x354>
 80020f6:	2b00      	cmp	r3, #0
 80020f8:	d100      	bne.n	80020fc <__aeabi_dsub+0x684>
 80020fa:	e737      	b.n	8001f6c <__aeabi_dsub+0x4f4>
 80020fc:	4653      	mov	r3, sl
 80020fe:	08c0      	lsrs	r0, r0, #3
 8002100:	0767      	lsls	r7, r4, #29
 8002102:	4307      	orrs	r7, r0
 8002104:	08e5      	lsrs	r5, r4, #3
 8002106:	2b00      	cmp	r3, #0
 8002108:	d100      	bne.n	800210c <__aeabi_dsub+0x694>
 800210a:	e5b1      	b.n	8001c70 <__aeabi_dsub+0x1f8>
 800210c:	2380      	movs	r3, #128	@ 0x80
 800210e:	031b      	lsls	r3, r3, #12
 8002110:	421d      	tst	r5, r3
 8002112:	d008      	beq.n	8002126 <__aeabi_dsub+0x6ae>
 8002114:	4659      	mov	r1, fp
 8002116:	08c8      	lsrs	r0, r1, #3
 8002118:	4218      	tst	r0, r3
 800211a:	d104      	bne.n	8002126 <__aeabi_dsub+0x6ae>
 800211c:	08d2      	lsrs	r2, r2, #3
 800211e:	0749      	lsls	r1, r1, #29
 8002120:	430a      	orrs	r2, r1
 8002122:	0017      	movs	r7, r2
 8002124:	0005      	movs	r5, r0
 8002126:	0f7b      	lsrs	r3, r7, #29
 8002128:	00ff      	lsls	r7, r7, #3
 800212a:	08ff      	lsrs	r7, r7, #3
 800212c:	075b      	lsls	r3, r3, #29
 800212e:	431f      	orrs	r7, r3
 8002130:	e59e      	b.n	8001c70 <__aeabi_dsub+0x1f8>
 8002132:	08c0      	lsrs	r0, r0, #3
 8002134:	0763      	lsls	r3, r4, #29
 8002136:	4318      	orrs	r0, r3
 8002138:	08e5      	lsrs	r5, r4, #3
 800213a:	2900      	cmp	r1, #0
 800213c:	d053      	beq.n	80021e6 <__aeabi_dsub+0x76e>
 800213e:	2380      	movs	r3, #128	@ 0x80
 8002140:	031b      	lsls	r3, r3, #12
 8002142:	421d      	tst	r5, r3
 8002144:	d00a      	beq.n	800215c <__aeabi_dsub+0x6e4>
 8002146:	4659      	mov	r1, fp
 8002148:	08cc      	lsrs	r4, r1, #3
 800214a:	421c      	tst	r4, r3
 800214c:	d106      	bne.n	800215c <__aeabi_dsub+0x6e4>
 800214e:	2601      	movs	r6, #1
 8002150:	4663      	mov	r3, ip
 8002152:	0025      	movs	r5, r4
 8002154:	08d0      	lsrs	r0, r2, #3
 8002156:	0749      	lsls	r1, r1, #29
 8002158:	4308      	orrs	r0, r1
 800215a:	401e      	ands	r6, r3
 800215c:	0f47      	lsrs	r7, r0, #29
 800215e:	00c0      	lsls	r0, r0, #3
 8002160:	08c0      	lsrs	r0, r0, #3
 8002162:	077f      	lsls	r7, r7, #29
 8002164:	4307      	orrs	r7, r0
 8002166:	e583      	b.n	8001c70 <__aeabi_dsub+0x1f8>
 8002168:	1883      	adds	r3, r0, r2
 800216a:	4293      	cmp	r3, r2
 800216c:	4192      	sbcs	r2, r2
 800216e:	445c      	add	r4, fp
 8002170:	4252      	negs	r2, r2
 8002172:	18a5      	adds	r5, r4, r2
 8002174:	022a      	lsls	r2, r5, #8
 8002176:	d500      	bpl.n	800217a <__aeabi_dsub+0x702>
 8002178:	e724      	b.n	8001fc4 <__aeabi_dsub+0x54c>
 800217a:	076f      	lsls	r7, r5, #29
 800217c:	08db      	lsrs	r3, r3, #3
 800217e:	431f      	orrs	r7, r3
 8002180:	08ed      	lsrs	r5, r5, #3
 8002182:	2301      	movs	r3, #1
 8002184:	e6d0      	b.n	8001f28 <__aeabi_dsub+0x4b0>
 8002186:	46c0      	nop			@ (mov r8, r8)
 8002188:	000007ff 	.word	0x000007ff
 800218c:	000007fe 	.word	0x000007fe
 8002190:	ff7fffff 	.word	0xff7fffff
 8002194:	465b      	mov	r3, fp
 8002196:	08d2      	lsrs	r2, r2, #3
 8002198:	075f      	lsls	r7, r3, #29
 800219a:	4666      	mov	r6, ip
 800219c:	4317      	orrs	r7, r2
 800219e:	08dd      	lsrs	r5, r3, #3
 80021a0:	e566      	b.n	8001c70 <__aeabi_dsub+0x1f8>
 80021a2:	0025      	movs	r5, r4
 80021a4:	3b20      	subs	r3, #32
 80021a6:	40dd      	lsrs	r5, r3
 80021a8:	4663      	mov	r3, ip
 80021aa:	2b20      	cmp	r3, #32
 80021ac:	d005      	beq.n	80021ba <__aeabi_dsub+0x742>
 80021ae:	2340      	movs	r3, #64	@ 0x40
 80021b0:	4661      	mov	r1, ip
 80021b2:	1a5b      	subs	r3, r3, r1
 80021b4:	409c      	lsls	r4, r3
 80021b6:	4320      	orrs	r0, r4
 80021b8:	4680      	mov	r8, r0
 80021ba:	4647      	mov	r7, r8
 80021bc:	1e7b      	subs	r3, r7, #1
 80021be:	419f      	sbcs	r7, r3
 80021c0:	432f      	orrs	r7, r5
 80021c2:	e5a0      	b.n	8001d06 <__aeabi_dsub+0x28e>
 80021c4:	2120      	movs	r1, #32
 80021c6:	2700      	movs	r7, #0
 80021c8:	1a09      	subs	r1, r1, r0
 80021ca:	e4d2      	b.n	8001b72 <__aeabi_dsub+0xfa>
 80021cc:	2f00      	cmp	r7, #0
 80021ce:	d100      	bne.n	80021d2 <__aeabi_dsub+0x75a>
 80021d0:	e713      	b.n	8001ffa <__aeabi_dsub+0x582>
 80021d2:	465c      	mov	r4, fp
 80021d4:	0017      	movs	r7, r2
 80021d6:	2500      	movs	r5, #0
 80021d8:	e5f6      	b.n	8001dc8 <__aeabi_dsub+0x350>
 80021da:	08d7      	lsrs	r7, r2, #3
 80021dc:	0749      	lsls	r1, r1, #29
 80021de:	2302      	movs	r3, #2
 80021e0:	430f      	orrs	r7, r1
 80021e2:	092d      	lsrs	r5, r5, #4
 80021e4:	e6a0      	b.n	8001f28 <__aeabi_dsub+0x4b0>
 80021e6:	0007      	movs	r7, r0
 80021e8:	e542      	b.n	8001c70 <__aeabi_dsub+0x1f8>
 80021ea:	465b      	mov	r3, fp
 80021ec:	2601      	movs	r6, #1
 80021ee:	075f      	lsls	r7, r3, #29
 80021f0:	08dd      	lsrs	r5, r3, #3
 80021f2:	4663      	mov	r3, ip
 80021f4:	08d2      	lsrs	r2, r2, #3
 80021f6:	4317      	orrs	r7, r2
 80021f8:	401e      	ands	r6, r3
 80021fa:	e539      	b.n	8001c70 <__aeabi_dsub+0x1f8>
 80021fc:	465b      	mov	r3, fp
 80021fe:	08d2      	lsrs	r2, r2, #3
 8002200:	075f      	lsls	r7, r3, #29
 8002202:	4317      	orrs	r7, r2
 8002204:	08dd      	lsrs	r5, r3, #3
 8002206:	e533      	b.n	8001c70 <__aeabi_dsub+0x1f8>
 8002208:	4a1e      	ldr	r2, [pc, #120]	@ (8002284 <__aeabi_dsub+0x80c>)
 800220a:	08db      	lsrs	r3, r3, #3
 800220c:	4022      	ands	r2, r4
 800220e:	0757      	lsls	r7, r2, #29
 8002210:	0252      	lsls	r2, r2, #9
 8002212:	2501      	movs	r5, #1
 8002214:	431f      	orrs	r7, r3
 8002216:	0b14      	lsrs	r4, r2, #12
 8002218:	e5c2      	b.n	8001da0 <__aeabi_dsub+0x328>
 800221a:	000e      	movs	r6, r1
 800221c:	2001      	movs	r0, #1
 800221e:	e65f      	b.n	8001ee0 <__aeabi_dsub+0x468>
 8002220:	2b00      	cmp	r3, #0
 8002222:	d00d      	beq.n	8002240 <__aeabi_dsub+0x7c8>
 8002224:	464b      	mov	r3, r9
 8002226:	1b5b      	subs	r3, r3, r5
 8002228:	469c      	mov	ip, r3
 800222a:	2d00      	cmp	r5, #0
 800222c:	d100      	bne.n	8002230 <__aeabi_dsub+0x7b8>
 800222e:	e548      	b.n	8001cc2 <__aeabi_dsub+0x24a>
 8002230:	2701      	movs	r7, #1
 8002232:	2b38      	cmp	r3, #56	@ 0x38
 8002234:	dd00      	ble.n	8002238 <__aeabi_dsub+0x7c0>
 8002236:	e566      	b.n	8001d06 <__aeabi_dsub+0x28e>
 8002238:	2380      	movs	r3, #128	@ 0x80
 800223a:	041b      	lsls	r3, r3, #16
 800223c:	431c      	orrs	r4, r3
 800223e:	e550      	b.n	8001ce2 <__aeabi_dsub+0x26a>
 8002240:	1c6b      	adds	r3, r5, #1
 8002242:	4d11      	ldr	r5, [pc, #68]	@ (8002288 <__aeabi_dsub+0x810>)
 8002244:	422b      	tst	r3, r5
 8002246:	d000      	beq.n	800224a <__aeabi_dsub+0x7d2>
 8002248:	e673      	b.n	8001f32 <__aeabi_dsub+0x4ba>
 800224a:	4659      	mov	r1, fp
 800224c:	0023      	movs	r3, r4
 800224e:	4311      	orrs	r1, r2
 8002250:	468a      	mov	sl, r1
 8002252:	4303      	orrs	r3, r0
 8002254:	e600      	b.n	8001e58 <__aeabi_dsub+0x3e0>
 8002256:	0767      	lsls	r7, r4, #29
 8002258:	08c0      	lsrs	r0, r0, #3
 800225a:	2300      	movs	r3, #0
 800225c:	4307      	orrs	r7, r0
 800225e:	08e5      	lsrs	r5, r4, #3
 8002260:	e662      	b.n	8001f28 <__aeabi_dsub+0x4b0>
 8002262:	0764      	lsls	r4, r4, #29
 8002264:	08ff      	lsrs	r7, r7, #3
 8002266:	4327      	orrs	r7, r4
 8002268:	0905      	lsrs	r5, r0, #4
 800226a:	e65d      	b.n	8001f28 <__aeabi_dsub+0x4b0>
 800226c:	08d2      	lsrs	r2, r2, #3
 800226e:	0749      	lsls	r1, r1, #29
 8002270:	4311      	orrs	r1, r2
 8002272:	000f      	movs	r7, r1
 8002274:	2302      	movs	r3, #2
 8002276:	092d      	lsrs	r5, r5, #4
 8002278:	e656      	b.n	8001f28 <__aeabi_dsub+0x4b0>
 800227a:	0007      	movs	r7, r0
 800227c:	e5a4      	b.n	8001dc8 <__aeabi_dsub+0x350>
 800227e:	0038      	movs	r0, r7
 8002280:	e48f      	b.n	8001ba2 <__aeabi_dsub+0x12a>
 8002282:	46c0      	nop			@ (mov r8, r8)
 8002284:	ff7fffff 	.word	0xff7fffff
 8002288:	000007fe 	.word	0x000007fe

0800228c <__aeabi_d2iz>:
 800228c:	000b      	movs	r3, r1
 800228e:	0002      	movs	r2, r0
 8002290:	b570      	push	{r4, r5, r6, lr}
 8002292:	4d16      	ldr	r5, [pc, #88]	@ (80022ec <__aeabi_d2iz+0x60>)
 8002294:	030c      	lsls	r4, r1, #12
 8002296:	b082      	sub	sp, #8
 8002298:	0049      	lsls	r1, r1, #1
 800229a:	2000      	movs	r0, #0
 800229c:	9200      	str	r2, [sp, #0]
 800229e:	9301      	str	r3, [sp, #4]
 80022a0:	0b24      	lsrs	r4, r4, #12
 80022a2:	0d49      	lsrs	r1, r1, #21
 80022a4:	0fde      	lsrs	r6, r3, #31
 80022a6:	42a9      	cmp	r1, r5
 80022a8:	dd04      	ble.n	80022b4 <__aeabi_d2iz+0x28>
 80022aa:	4811      	ldr	r0, [pc, #68]	@ (80022f0 <__aeabi_d2iz+0x64>)
 80022ac:	4281      	cmp	r1, r0
 80022ae:	dd03      	ble.n	80022b8 <__aeabi_d2iz+0x2c>
 80022b0:	4b10      	ldr	r3, [pc, #64]	@ (80022f4 <__aeabi_d2iz+0x68>)
 80022b2:	18f0      	adds	r0, r6, r3
 80022b4:	b002      	add	sp, #8
 80022b6:	bd70      	pop	{r4, r5, r6, pc}
 80022b8:	2080      	movs	r0, #128	@ 0x80
 80022ba:	0340      	lsls	r0, r0, #13
 80022bc:	4320      	orrs	r0, r4
 80022be:	4c0e      	ldr	r4, [pc, #56]	@ (80022f8 <__aeabi_d2iz+0x6c>)
 80022c0:	1a64      	subs	r4, r4, r1
 80022c2:	2c1f      	cmp	r4, #31
 80022c4:	dd08      	ble.n	80022d8 <__aeabi_d2iz+0x4c>
 80022c6:	4b0d      	ldr	r3, [pc, #52]	@ (80022fc <__aeabi_d2iz+0x70>)
 80022c8:	1a5b      	subs	r3, r3, r1
 80022ca:	40d8      	lsrs	r0, r3
 80022cc:	0003      	movs	r3, r0
 80022ce:	4258      	negs	r0, r3
 80022d0:	2e00      	cmp	r6, #0
 80022d2:	d1ef      	bne.n	80022b4 <__aeabi_d2iz+0x28>
 80022d4:	0018      	movs	r0, r3
 80022d6:	e7ed      	b.n	80022b4 <__aeabi_d2iz+0x28>
 80022d8:	4b09      	ldr	r3, [pc, #36]	@ (8002300 <__aeabi_d2iz+0x74>)
 80022da:	9a00      	ldr	r2, [sp, #0]
 80022dc:	469c      	mov	ip, r3
 80022de:	0003      	movs	r3, r0
 80022e0:	4461      	add	r1, ip
 80022e2:	408b      	lsls	r3, r1
 80022e4:	40e2      	lsrs	r2, r4
 80022e6:	4313      	orrs	r3, r2
 80022e8:	e7f1      	b.n	80022ce <__aeabi_d2iz+0x42>
 80022ea:	46c0      	nop			@ (mov r8, r8)
 80022ec:	000003fe 	.word	0x000003fe
 80022f0:	0000041d 	.word	0x0000041d
 80022f4:	7fffffff 	.word	0x7fffffff
 80022f8:	00000433 	.word	0x00000433
 80022fc:	00000413 	.word	0x00000413
 8002300:	fffffbed 	.word	0xfffffbed

08002304 <__aeabi_i2d>:
 8002304:	b570      	push	{r4, r5, r6, lr}
 8002306:	2800      	cmp	r0, #0
 8002308:	d016      	beq.n	8002338 <__aeabi_i2d+0x34>
 800230a:	17c3      	asrs	r3, r0, #31
 800230c:	18c5      	adds	r5, r0, r3
 800230e:	405d      	eors	r5, r3
 8002310:	0fc4      	lsrs	r4, r0, #31
 8002312:	0028      	movs	r0, r5
 8002314:	f000 f848 	bl	80023a8 <__clzsi2>
 8002318:	4b10      	ldr	r3, [pc, #64]	@ (800235c <__aeabi_i2d+0x58>)
 800231a:	1a1b      	subs	r3, r3, r0
 800231c:	055b      	lsls	r3, r3, #21
 800231e:	0d5b      	lsrs	r3, r3, #21
 8002320:	280a      	cmp	r0, #10
 8002322:	dc14      	bgt.n	800234e <__aeabi_i2d+0x4a>
 8002324:	0002      	movs	r2, r0
 8002326:	002e      	movs	r6, r5
 8002328:	3215      	adds	r2, #21
 800232a:	4096      	lsls	r6, r2
 800232c:	220b      	movs	r2, #11
 800232e:	1a12      	subs	r2, r2, r0
 8002330:	40d5      	lsrs	r5, r2
 8002332:	032d      	lsls	r5, r5, #12
 8002334:	0b2d      	lsrs	r5, r5, #12
 8002336:	e003      	b.n	8002340 <__aeabi_i2d+0x3c>
 8002338:	2400      	movs	r4, #0
 800233a:	2300      	movs	r3, #0
 800233c:	2500      	movs	r5, #0
 800233e:	2600      	movs	r6, #0
 8002340:	051b      	lsls	r3, r3, #20
 8002342:	432b      	orrs	r3, r5
 8002344:	07e4      	lsls	r4, r4, #31
 8002346:	4323      	orrs	r3, r4
 8002348:	0030      	movs	r0, r6
 800234a:	0019      	movs	r1, r3
 800234c:	bd70      	pop	{r4, r5, r6, pc}
 800234e:	380b      	subs	r0, #11
 8002350:	4085      	lsls	r5, r0
 8002352:	032d      	lsls	r5, r5, #12
 8002354:	2600      	movs	r6, #0
 8002356:	0b2d      	lsrs	r5, r5, #12
 8002358:	e7f2      	b.n	8002340 <__aeabi_i2d+0x3c>
 800235a:	46c0      	nop			@ (mov r8, r8)
 800235c:	0000041e 	.word	0x0000041e

08002360 <__aeabi_ui2d>:
 8002360:	b510      	push	{r4, lr}
 8002362:	1e04      	subs	r4, r0, #0
 8002364:	d010      	beq.n	8002388 <__aeabi_ui2d+0x28>
 8002366:	f000 f81f 	bl	80023a8 <__clzsi2>
 800236a:	4b0e      	ldr	r3, [pc, #56]	@ (80023a4 <__aeabi_ui2d+0x44>)
 800236c:	1a1b      	subs	r3, r3, r0
 800236e:	055b      	lsls	r3, r3, #21
 8002370:	0d5b      	lsrs	r3, r3, #21
 8002372:	280a      	cmp	r0, #10
 8002374:	dc0f      	bgt.n	8002396 <__aeabi_ui2d+0x36>
 8002376:	220b      	movs	r2, #11
 8002378:	0021      	movs	r1, r4
 800237a:	1a12      	subs	r2, r2, r0
 800237c:	40d1      	lsrs	r1, r2
 800237e:	3015      	adds	r0, #21
 8002380:	030a      	lsls	r2, r1, #12
 8002382:	4084      	lsls	r4, r0
 8002384:	0b12      	lsrs	r2, r2, #12
 8002386:	e001      	b.n	800238c <__aeabi_ui2d+0x2c>
 8002388:	2300      	movs	r3, #0
 800238a:	2200      	movs	r2, #0
 800238c:	051b      	lsls	r3, r3, #20
 800238e:	4313      	orrs	r3, r2
 8002390:	0020      	movs	r0, r4
 8002392:	0019      	movs	r1, r3
 8002394:	bd10      	pop	{r4, pc}
 8002396:	0022      	movs	r2, r4
 8002398:	380b      	subs	r0, #11
 800239a:	4082      	lsls	r2, r0
 800239c:	0312      	lsls	r2, r2, #12
 800239e:	2400      	movs	r4, #0
 80023a0:	0b12      	lsrs	r2, r2, #12
 80023a2:	e7f3      	b.n	800238c <__aeabi_ui2d+0x2c>
 80023a4:	0000041e 	.word	0x0000041e

080023a8 <__clzsi2>:
 80023a8:	211c      	movs	r1, #28
 80023aa:	2301      	movs	r3, #1
 80023ac:	041b      	lsls	r3, r3, #16
 80023ae:	4298      	cmp	r0, r3
 80023b0:	d301      	bcc.n	80023b6 <__clzsi2+0xe>
 80023b2:	0c00      	lsrs	r0, r0, #16
 80023b4:	3910      	subs	r1, #16
 80023b6:	0a1b      	lsrs	r3, r3, #8
 80023b8:	4298      	cmp	r0, r3
 80023ba:	d301      	bcc.n	80023c0 <__clzsi2+0x18>
 80023bc:	0a00      	lsrs	r0, r0, #8
 80023be:	3908      	subs	r1, #8
 80023c0:	091b      	lsrs	r3, r3, #4
 80023c2:	4298      	cmp	r0, r3
 80023c4:	d301      	bcc.n	80023ca <__clzsi2+0x22>
 80023c6:	0900      	lsrs	r0, r0, #4
 80023c8:	3904      	subs	r1, #4
 80023ca:	a202      	add	r2, pc, #8	@ (adr r2, 80023d4 <__clzsi2+0x2c>)
 80023cc:	5c10      	ldrb	r0, [r2, r0]
 80023ce:	1840      	adds	r0, r0, r1
 80023d0:	4770      	bx	lr
 80023d2:	46c0      	nop			@ (mov r8, r8)
 80023d4:	02020304 	.word	0x02020304
 80023d8:	01010101 	.word	0x01010101
	...

080023e4 <Undamped_step>:
static RT_MODEL rtM_;
RT_MODEL *const rtM = &rtM_;

/* Model step function */
void Undamped_step(void)
{
 80023e4:	b5b0      	push	{r4, r5, r7, lr}
 80023e6:	b084      	sub	sp, #16
 80023e8:	af00      	add	r7, sp, #0
  real_T rtb_DiscreteTimeIntegrator;
  real_T rtb_uI;

  /* DiscreteIntegrator: '<S1>/Discrete-Time Integrator' */
  rtb_DiscreteTimeIntegrator = rtDW.DiscreteTimeIntegrator_DSTATE;
 80023ea:	4b31      	ldr	r3, [pc, #196]	@ (80024b0 <Undamped_step+0xcc>)
 80023ec:	681a      	ldr	r2, [r3, #0]
 80023ee:	685b      	ldr	r3, [r3, #4]
 80023f0:	60ba      	str	r2, [r7, #8]
 80023f2:	60fb      	str	r3, [r7, #12]

  /* Outport: '<Root>/theta' incorporates:
   *  DiscreteIntegrator: '<S1>/Discrete-Time Integrator1'
   */
  rtY.theta = rtDW.DiscreteTimeIntegrator1_DSTATE;
 80023f4:	4b2e      	ldr	r3, [pc, #184]	@ (80024b0 <Undamped_step+0xcc>)
 80023f6:	689a      	ldr	r2, [r3, #8]
 80023f8:	68db      	ldr	r3, [r3, #12]
 80023fa:	492e      	ldr	r1, [pc, #184]	@ (80024b4 <Undamped_step+0xd0>)
 80023fc:	600a      	str	r2, [r1, #0]
 80023fe:	604b      	str	r3, [r1, #4]
   *  Gain: '<S1>/mgl'
   *  Inport: '<Root>/controlTorque'
   *  Sin: '<S1>/Sine Wave Function'
   *  Sum: '<S1>/Add'
   */
  rtb_uI = (rtU.controlTorque - 10.0 * sin(rtDW.DiscreteTimeIntegrator1_DSTATE))
 8002400:	4b2d      	ldr	r3, [pc, #180]	@ (80024b8 <Undamped_step+0xd4>)
 8002402:	681c      	ldr	r4, [r3, #0]
 8002404:	685d      	ldr	r5, [r3, #4]
 8002406:	4b2a      	ldr	r3, [pc, #168]	@ (80024b0 <Undamped_step+0xcc>)
 8002408:	689a      	ldr	r2, [r3, #8]
 800240a:	68db      	ldr	r3, [r3, #12]
 800240c:	0010      	movs	r0, r2
 800240e:	0019      	movs	r1, r3
 8002410:	f001 f926 	bl	8003660 <sin>
 8002414:	2200      	movs	r2, #0
 8002416:	4b29      	ldr	r3, [pc, #164]	@ (80024bc <Undamped_step+0xd8>)
 8002418:	f7ff f848 	bl	80014ac <__aeabi_dmul>
 800241c:	0002      	movs	r2, r0
 800241e:	000b      	movs	r3, r1
 8002420:	0020      	movs	r0, r4
 8002422:	0029      	movs	r1, r5
 8002424:	f7ff fb28 	bl	8001a78 <__aeabi_dsub>
 8002428:	0002      	movs	r2, r0
 800242a:	000b      	movs	r3, r1
 800242c:	0010      	movs	r0, r2
 800242e:	0019      	movs	r1, r3
 8002430:	4a23      	ldr	r2, [pc, #140]	@ (80024c0 <Undamped_step+0xdc>)
 8002432:	4b24      	ldr	r3, [pc, #144]	@ (80024c4 <Undamped_step+0xe0>)
 8002434:	f7ff f83a 	bl	80014ac <__aeabi_dmul>
 8002438:	0002      	movs	r2, r0
 800243a:	000b      	movs	r3, r1
 800243c:	603a      	str	r2, [r7, #0]
 800243e:	607b      	str	r3, [r7, #4]
    * 0.1;

  /* Outport: '<Root>/thetaDoubleDot' */
  rtY.thetaDoubleDot = rtb_uI;
 8002440:	491c      	ldr	r1, [pc, #112]	@ (80024b4 <Undamped_step+0xd0>)
 8002442:	683a      	ldr	r2, [r7, #0]
 8002444:	687b      	ldr	r3, [r7, #4]
 8002446:	610a      	str	r2, [r1, #16]
 8002448:	614b      	str	r3, [r1, #20]

  /* Outport: '<Root>/thetaDot' incorporates:
   *  DiscreteIntegrator: '<S1>/Discrete-Time Integrator'
   */
  rtY.thetaDot = rtDW.DiscreteTimeIntegrator_DSTATE;
 800244a:	4b19      	ldr	r3, [pc, #100]	@ (80024b0 <Undamped_step+0xcc>)
 800244c:	681a      	ldr	r2, [r3, #0]
 800244e:	685b      	ldr	r3, [r3, #4]
 8002450:	4918      	ldr	r1, [pc, #96]	@ (80024b4 <Undamped_step+0xd0>)
 8002452:	608a      	str	r2, [r1, #8]
 8002454:	60cb      	str	r3, [r1, #12]

  /* Update for DiscreteIntegrator: '<S1>/Discrete-Time Integrator' */
  rtDW.DiscreteTimeIntegrator_DSTATE += 0.01 * rtb_uI;
 8002456:	4b16      	ldr	r3, [pc, #88]	@ (80024b0 <Undamped_step+0xcc>)
 8002458:	681c      	ldr	r4, [r3, #0]
 800245a:	685d      	ldr	r5, [r3, #4]
 800245c:	4a1a      	ldr	r2, [pc, #104]	@ (80024c8 <Undamped_step+0xe4>)
 800245e:	4b1b      	ldr	r3, [pc, #108]	@ (80024cc <Undamped_step+0xe8>)
 8002460:	6838      	ldr	r0, [r7, #0]
 8002462:	6879      	ldr	r1, [r7, #4]
 8002464:	f7ff f822 	bl	80014ac <__aeabi_dmul>
 8002468:	0002      	movs	r2, r0
 800246a:	000b      	movs	r3, r1
 800246c:	0020      	movs	r0, r4
 800246e:	0029      	movs	r1, r5
 8002470:	f7fe f81c 	bl	80004ac <__aeabi_dadd>
 8002474:	0002      	movs	r2, r0
 8002476:	000b      	movs	r3, r1
 8002478:	490d      	ldr	r1, [pc, #52]	@ (80024b0 <Undamped_step+0xcc>)
 800247a:	600a      	str	r2, [r1, #0]
 800247c:	604b      	str	r3, [r1, #4]

  /* Update for DiscreteIntegrator: '<S1>/Discrete-Time Integrator1' */
  rtDW.DiscreteTimeIntegrator1_DSTATE += 0.01 * rtb_DiscreteTimeIntegrator;
 800247e:	4b0c      	ldr	r3, [pc, #48]	@ (80024b0 <Undamped_step+0xcc>)
 8002480:	689c      	ldr	r4, [r3, #8]
 8002482:	68dd      	ldr	r5, [r3, #12]
 8002484:	4a10      	ldr	r2, [pc, #64]	@ (80024c8 <Undamped_step+0xe4>)
 8002486:	4b11      	ldr	r3, [pc, #68]	@ (80024cc <Undamped_step+0xe8>)
 8002488:	68b8      	ldr	r0, [r7, #8]
 800248a:	68f9      	ldr	r1, [r7, #12]
 800248c:	f7ff f80e 	bl	80014ac <__aeabi_dmul>
 8002490:	0002      	movs	r2, r0
 8002492:	000b      	movs	r3, r1
 8002494:	0020      	movs	r0, r4
 8002496:	0029      	movs	r1, r5
 8002498:	f7fe f808 	bl	80004ac <__aeabi_dadd>
 800249c:	0002      	movs	r2, r0
 800249e:	000b      	movs	r3, r1
 80024a0:	4903      	ldr	r1, [pc, #12]	@ (80024b0 <Undamped_step+0xcc>)
 80024a2:	608a      	str	r2, [r1, #8]
 80024a4:	60cb      	str	r3, [r1, #12]
}
 80024a6:	46c0      	nop			@ (mov r8, r8)
 80024a8:	46bd      	mov	sp, r7
 80024aa:	b004      	add	sp, #16
 80024ac:	bdb0      	pop	{r4, r5, r7, pc}
 80024ae:	46c0      	nop			@ (mov r8, r8)
 80024b0:	20000020 	.word	0x20000020
 80024b4:	20000038 	.word	0x20000038
 80024b8:	20000030 	.word	0x20000030
 80024bc:	40240000 	.word	0x40240000
 80024c0:	9999999a 	.word	0x9999999a
 80024c4:	3fb99999 	.word	0x3fb99999
 80024c8:	47ae147b 	.word	0x47ae147b
 80024cc:	3f847ae1 	.word	0x3f847ae1

080024d0 <Undamped_initialize>:

/* Model initialize function */
void Undamped_initialize(void)
{
 80024d0:	b580      	push	{r7, lr}
 80024d2:	af00      	add	r7, sp, #0
  /* (no initialization code required) */
}
 80024d4:	46c0      	nop			@ (mov r8, r8)
 80024d6:	46bd      	mov	sp, r7
 80024d8:	bd80      	pop	{r7, pc}
	...

080024dc <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80024dc:	b580      	push	{r7, lr}
 80024de:	b082      	sub	sp, #8
 80024e0:	af00      	add	r7, sp, #0
 80024e2:	0002      	movs	r2, r0
 80024e4:	1dfb      	adds	r3, r7, #7
 80024e6:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 80024e8:	1dfb      	adds	r3, r7, #7
 80024ea:	781b      	ldrb	r3, [r3, #0]
 80024ec:	2b7f      	cmp	r3, #127	@ 0x7f
 80024ee:	d809      	bhi.n	8002504 <__NVIC_EnableIRQ+0x28>
  {
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80024f0:	1dfb      	adds	r3, r7, #7
 80024f2:	781b      	ldrb	r3, [r3, #0]
 80024f4:	001a      	movs	r2, r3
 80024f6:	231f      	movs	r3, #31
 80024f8:	401a      	ands	r2, r3
 80024fa:	4b04      	ldr	r3, [pc, #16]	@ (800250c <__NVIC_EnableIRQ+0x30>)
 80024fc:	2101      	movs	r1, #1
 80024fe:	4091      	lsls	r1, r2
 8002500:	000a      	movs	r2, r1
 8002502:	601a      	str	r2, [r3, #0]
  }
}
 8002504:	46c0      	nop			@ (mov r8, r8)
 8002506:	46bd      	mov	sp, r7
 8002508:	b002      	add	sp, #8
 800250a:	bd80      	pop	{r7, pc}
 800250c:	e000e100 	.word	0xe000e100

08002510 <__NVIC_DisableIRQ>:
  \details Disables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
 8002510:	b580      	push	{r7, lr}
 8002512:	b082      	sub	sp, #8
 8002514:	af00      	add	r7, sp, #0
 8002516:	0002      	movs	r2, r0
 8002518:	1dfb      	adds	r3, r7, #7
 800251a:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 800251c:	1dfb      	adds	r3, r7, #7
 800251e:	781b      	ldrb	r3, [r3, #0]
 8002520:	2b7f      	cmp	r3, #127	@ 0x7f
 8002522:	d810      	bhi.n	8002546 <__NVIC_DisableIRQ+0x36>
  {
    NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002524:	1dfb      	adds	r3, r7, #7
 8002526:	781b      	ldrb	r3, [r3, #0]
 8002528:	001a      	movs	r2, r3
 800252a:	231f      	movs	r3, #31
 800252c:	4013      	ands	r3, r2
 800252e:	4908      	ldr	r1, [pc, #32]	@ (8002550 <__NVIC_DisableIRQ+0x40>)
 8002530:	2201      	movs	r2, #1
 8002532:	409a      	lsls	r2, r3
 8002534:	0013      	movs	r3, r2
 8002536:	2280      	movs	r2, #128	@ 0x80
 8002538:	508b      	str	r3, [r1, r2]
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 800253a:	f3bf 8f4f 	dsb	sy
}
 800253e:	46c0      	nop			@ (mov r8, r8)
  __ASM volatile ("isb 0xF":::"memory");
 8002540:	f3bf 8f6f 	isb	sy
}
 8002544:	46c0      	nop			@ (mov r8, r8)
    __DSB();
    __ISB();
  }
}
 8002546:	46c0      	nop			@ (mov r8, r8)
 8002548:	46bd      	mov	sp, r7
 800254a:	b002      	add	sp, #8
 800254c:	bd80      	pop	{r7, pc}
 800254e:	46c0      	nop			@ (mov r8, r8)
 8002550:	e000e100 	.word	0xe000e100

08002554 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8002554:	b590      	push	{r4, r7, lr}
 8002556:	b083      	sub	sp, #12
 8002558:	af00      	add	r7, sp, #0
 800255a:	0002      	movs	r2, r0
 800255c:	6039      	str	r1, [r7, #0]
 800255e:	1dfb      	adds	r3, r7, #7
 8002560:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 8002562:	1dfb      	adds	r3, r7, #7
 8002564:	781b      	ldrb	r3, [r3, #0]
 8002566:	2b7f      	cmp	r3, #127	@ 0x7f
 8002568:	d828      	bhi.n	80025bc <__NVIC_SetPriority+0x68>
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 800256a:	4a2f      	ldr	r2, [pc, #188]	@ (8002628 <__NVIC_SetPriority+0xd4>)
 800256c:	1dfb      	adds	r3, r7, #7
 800256e:	781b      	ldrb	r3, [r3, #0]
 8002570:	b25b      	sxtb	r3, r3
 8002572:	089b      	lsrs	r3, r3, #2
 8002574:	33c0      	adds	r3, #192	@ 0xc0
 8002576:	009b      	lsls	r3, r3, #2
 8002578:	589b      	ldr	r3, [r3, r2]
 800257a:	1dfa      	adds	r2, r7, #7
 800257c:	7812      	ldrb	r2, [r2, #0]
 800257e:	0011      	movs	r1, r2
 8002580:	2203      	movs	r2, #3
 8002582:	400a      	ands	r2, r1
 8002584:	00d2      	lsls	r2, r2, #3
 8002586:	21ff      	movs	r1, #255	@ 0xff
 8002588:	4091      	lsls	r1, r2
 800258a:	000a      	movs	r2, r1
 800258c:	43d2      	mvns	r2, r2
 800258e:	401a      	ands	r2, r3
 8002590:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8002592:	683b      	ldr	r3, [r7, #0]
 8002594:	019b      	lsls	r3, r3, #6
 8002596:	22ff      	movs	r2, #255	@ 0xff
 8002598:	401a      	ands	r2, r3
 800259a:	1dfb      	adds	r3, r7, #7
 800259c:	781b      	ldrb	r3, [r3, #0]
 800259e:	0018      	movs	r0, r3
 80025a0:	2303      	movs	r3, #3
 80025a2:	4003      	ands	r3, r0
 80025a4:	00db      	lsls	r3, r3, #3
 80025a6:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80025a8:	481f      	ldr	r0, [pc, #124]	@ (8002628 <__NVIC_SetPriority+0xd4>)
 80025aa:	1dfb      	adds	r3, r7, #7
 80025ac:	781b      	ldrb	r3, [r3, #0]
 80025ae:	b25b      	sxtb	r3, r3
 80025b0:	089b      	lsrs	r3, r3, #2
 80025b2:	430a      	orrs	r2, r1
 80025b4:	33c0      	adds	r3, #192	@ 0xc0
 80025b6:	009b      	lsls	r3, r3, #2
 80025b8:	501a      	str	r2, [r3, r0]
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
}
 80025ba:	e031      	b.n	8002620 <__NVIC_SetPriority+0xcc>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80025bc:	4a1b      	ldr	r2, [pc, #108]	@ (800262c <__NVIC_SetPriority+0xd8>)
 80025be:	1dfb      	adds	r3, r7, #7
 80025c0:	781b      	ldrb	r3, [r3, #0]
 80025c2:	0019      	movs	r1, r3
 80025c4:	230f      	movs	r3, #15
 80025c6:	400b      	ands	r3, r1
 80025c8:	3b08      	subs	r3, #8
 80025ca:	089b      	lsrs	r3, r3, #2
 80025cc:	3306      	adds	r3, #6
 80025ce:	009b      	lsls	r3, r3, #2
 80025d0:	18d3      	adds	r3, r2, r3
 80025d2:	3304      	adds	r3, #4
 80025d4:	681b      	ldr	r3, [r3, #0]
 80025d6:	1dfa      	adds	r2, r7, #7
 80025d8:	7812      	ldrb	r2, [r2, #0]
 80025da:	0011      	movs	r1, r2
 80025dc:	2203      	movs	r2, #3
 80025de:	400a      	ands	r2, r1
 80025e0:	00d2      	lsls	r2, r2, #3
 80025e2:	21ff      	movs	r1, #255	@ 0xff
 80025e4:	4091      	lsls	r1, r2
 80025e6:	000a      	movs	r2, r1
 80025e8:	43d2      	mvns	r2, r2
 80025ea:	401a      	ands	r2, r3
 80025ec:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 80025ee:	683b      	ldr	r3, [r7, #0]
 80025f0:	019b      	lsls	r3, r3, #6
 80025f2:	22ff      	movs	r2, #255	@ 0xff
 80025f4:	401a      	ands	r2, r3
 80025f6:	1dfb      	adds	r3, r7, #7
 80025f8:	781b      	ldrb	r3, [r3, #0]
 80025fa:	0018      	movs	r0, r3
 80025fc:	2303      	movs	r3, #3
 80025fe:	4003      	ands	r3, r0
 8002600:	00db      	lsls	r3, r3, #3
 8002602:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002604:	4809      	ldr	r0, [pc, #36]	@ (800262c <__NVIC_SetPriority+0xd8>)
 8002606:	1dfb      	adds	r3, r7, #7
 8002608:	781b      	ldrb	r3, [r3, #0]
 800260a:	001c      	movs	r4, r3
 800260c:	230f      	movs	r3, #15
 800260e:	4023      	ands	r3, r4
 8002610:	3b08      	subs	r3, #8
 8002612:	089b      	lsrs	r3, r3, #2
 8002614:	430a      	orrs	r2, r1
 8002616:	3306      	adds	r3, #6
 8002618:	009b      	lsls	r3, r3, #2
 800261a:	18c3      	adds	r3, r0, r3
 800261c:	3304      	adds	r3, #4
 800261e:	601a      	str	r2, [r3, #0]
}
 8002620:	46c0      	nop			@ (mov r8, r8)
 8002622:	46bd      	mov	sp, r7
 8002624:	b003      	add	sp, #12
 8002626:	bd90      	pop	{r4, r7, pc}
 8002628:	e000e100 	.word	0xe000e100
 800262c:	e000ed00 	.word	0xe000ed00

08002630 <Configure_CNI>:
           - configures the CNI
 * Param   None
 * Retval  None
 */
inline void Configure_CNI(void)
{
 8002630:	b580      	push	{r7, lr}
 8002632:	af00      	add	r7, sp, #0
	ConfigureGPIO_UART1();
 8002634:	f000 f886 	bl	8002744 <ConfigureGPIO_UART1>
	Configure_UART1();
 8002638:	f000 f8ac 	bl	8002794 <Configure_UART1>
}
 800263c:	46c0      	nop			@ (mov r8, r8)
 800263e:	46bd      	mov	sp, r7
 8002640:	bd80      	pop	{r7, pc}

08002642 <TransmitMessage_CNI>:

void TransmitMessage_CNI(const observation_t *obs)
{
 8002642:	b580      	push	{r7, lr}
 8002644:	b084      	sub	sp, #16
 8002646:	af00      	add	r7, sp, #0
 8002648:	6078      	str	r0, [r7, #4]
	char *p = (char *)obs;
 800264a:	687b      	ldr	r3, [r7, #4]
 800264c:	60fb      	str	r3, [r7, #12]

	// Transmit the observation message
	for(uint32_t i = 0; i < sizeof(observation_t); i++)
 800264e:	2300      	movs	r3, #0
 8002650:	60bb      	str	r3, [r7, #8]
 8002652:	e009      	b.n	8002668 <TransmitMessage_CNI+0x26>
	{
		TransmitByte_CNI(*(p++));
 8002654:	68fb      	ldr	r3, [r7, #12]
 8002656:	1c5a      	adds	r2, r3, #1
 8002658:	60fa      	str	r2, [r7, #12]
 800265a:	781b      	ldrb	r3, [r3, #0]
 800265c:	0018      	movs	r0, r3
 800265e:	f000 f8e5 	bl	800282c <TransmitByte_CNI>
	for(uint32_t i = 0; i < sizeof(observation_t); i++)
 8002662:	68bb      	ldr	r3, [r7, #8]
 8002664:	3301      	adds	r3, #1
 8002666:	60bb      	str	r3, [r7, #8]
 8002668:	68bb      	ldr	r3, [r7, #8]
 800266a:	2b1f      	cmp	r3, #31
 800266c:	d9f2      	bls.n	8002654 <TransmitMessage_CNI+0x12>
	}
}
 800266e:	46c0      	nop			@ (mov r8, r8)
 8002670:	46c0      	nop			@ (mov r8, r8)
 8002672:	46bd      	mov	sp, r7
 8002674:	b004      	add	sp, #16
 8002676:	bd80      	pop	{r7, pc}

08002678 <IncomingMessageHandler_CNI>:

void IncomingMessageHandler_CNI(void)
{
 8002678:	b580      	push	{r7, lr}
 800267a:	b088      	sub	sp, #32
 800267c:	af00      	add	r7, sp, #0
	observation_t obs = {};
 800267e:	003b      	movs	r3, r7
 8002680:	0018      	movs	r0, r3
 8002682:	2320      	movs	r3, #32
 8002684:	001a      	movs	r2, r3
 8002686:	2100      	movs	r1, #0
 8002688:	f000 ffbd 	bl	8003606 <memset>

	// Receive an observation message
	if(ReceiveMessage_CNI(&obs))
 800268c:	003b      	movs	r3, r7
 800268e:	0018      	movs	r0, r3
 8002690:	f000 f81e 	bl	80026d0 <ReceiveMessage_CNI>
 8002694:	1e03      	subs	r3, r0, #0
 8002696:	d014      	beq.n	80026c2 <IncomingMessageHandler_CNI+0x4a>
	{
		if(obs.id == 0)
 8002698:	003b      	movs	r3, r7
 800269a:	781b      	ldrb	r3, [r3, #0]
 800269c:	2b00      	cmp	r3, #0
 800269e:	d110      	bne.n	80026c2 <IncomingMessageHandler_CNI+0x4a>
		{
			rtU.controlTorque = (real_T)obs.val1;
 80026a0:	003b      	movs	r3, r7
 80026a2:	689a      	ldr	r2, [r3, #8]
 80026a4:	68db      	ldr	r3, [r3, #12]
 80026a6:	4909      	ldr	r1, [pc, #36]	@ (80026cc <IncomingMessageHandler_CNI+0x54>)
 80026a8:	600a      	str	r2, [r1, #0]
 80026aa:	604b      	str	r3, [r1, #4]
			Set_GlobalClock((uint32_t)obs.val2);  //Change global synchronization receive logic
 80026ac:	003b      	movs	r3, r7
 80026ae:	691a      	ldr	r2, [r3, #16]
 80026b0:	695b      	ldr	r3, [r3, #20]
 80026b2:	0010      	movs	r0, r2
 80026b4:	0019      	movs	r1, r3
 80026b6:	f7fd fedb 	bl	8000470 <__aeabi_d2uiz>
 80026ba:	0003      	movs	r3, r0
 80026bc:	0018      	movs	r0, r3
 80026be:	f000 f9d5 	bl	8002a6c <Set_GlobalClock>
				// Write the RT image of the global clock
				Set_GlobalClock(obs.val); // Time of use
		}
*/
	}
}
 80026c2:	46c0      	nop			@ (mov r8, r8)
 80026c4:	46bd      	mov	sp, r7
 80026c6:	b008      	add	sp, #32
 80026c8:	bd80      	pop	{r7, pc}
 80026ca:	46c0      	nop			@ (mov r8, r8)
 80026cc:	20000030 	.word	0x20000030

080026d0 <ReceiveMessage_CNI>:

uint8_t ReceiveMessage_CNI(observation_t *obs)
{
 80026d0:	b590      	push	{r4, r7, lr}
 80026d2:	b087      	sub	sp, #28
 80026d4:	af00      	add	r7, sp, #0
 80026d6:	6078      	str	r0, [r7, #4]
	// Data available?
	if(nUnreadBytes_CNI() > 0)
 80026d8:	f000 f8f2 	bl	80028c0 <nUnreadBytes_CNI>
 80026dc:	1e03      	subs	r3, r0, #0
 80026de:	d02c      	beq.n	800273a <ReceiveMessage_CNI+0x6a>
	{
		// Wait for approximately 40ms, making sure an entire message must have
		// arrived
		uint32_t clock_stop = Get_GlobalClock() + 4;
 80026e0:	f000 f9ba 	bl	8002a58 <Get_GlobalClock>
 80026e4:	0003      	movs	r3, r0
 80026e6:	3304      	adds	r3, #4
 80026e8:	60fb      	str	r3, [r7, #12]
		while(Get_GlobalClock() < clock_stop)
 80026ea:	46c0      	nop			@ (mov r8, r8)
 80026ec:	f000 f9b4 	bl	8002a58 <Get_GlobalClock>
 80026f0:	0002      	movs	r2, r0
 80026f2:	68fb      	ldr	r3, [r7, #12]
 80026f4:	4293      	cmp	r3, r2
 80026f6:	d8f9      	bhi.n	80026ec <ReceiveMessage_CNI+0x1c>
		{;}

		// Received at least an entire message?
		if(nUnreadBytes_CNI() >= sizeof(observation_t))
 80026f8:	f000 f8e2 	bl	80028c0 <nUnreadBytes_CNI>
 80026fc:	0003      	movs	r3, r0
 80026fe:	2b1f      	cmp	r3, #31
 8002700:	d915      	bls.n	800272e <ReceiveMessage_CNI+0x5e>
		{
			char *p = (char *)obs;
 8002702:	687b      	ldr	r3, [r7, #4]
 8002704:	617b      	str	r3, [r7, #20]

			for(uint32_t i = 0; i < sizeof(observation_t); i++)
 8002706:	2300      	movs	r3, #0
 8002708:	613b      	str	r3, [r7, #16]
 800270a:	e009      	b.n	8002720 <ReceiveMessage_CNI+0x50>
			{
				*(p++) = ReceiveByte_CNI();
 800270c:	697c      	ldr	r4, [r7, #20]
 800270e:	1c63      	adds	r3, r4, #1
 8002710:	617b      	str	r3, [r7, #20]
 8002712:	f000 f865 	bl	80027e0 <ReceiveByte_CNI>
 8002716:	0003      	movs	r3, r0
 8002718:	7023      	strb	r3, [r4, #0]
			for(uint32_t i = 0; i < sizeof(observation_t); i++)
 800271a:	693b      	ldr	r3, [r7, #16]
 800271c:	3301      	adds	r3, #1
 800271e:	613b      	str	r3, [r7, #16]
 8002720:	693b      	ldr	r3, [r7, #16]
 8002722:	2b1f      	cmp	r3, #31
 8002724:	d9f2      	bls.n	800270c <ReceiveMessage_CNI+0x3c>
			}

			return 1; // Successfully received a message
 8002726:	2301      	movs	r3, #1
 8002728:	e008      	b.n	800273c <ReceiveMessage_CNI+0x6c>
		else // Invalid message length
		{
			// Flush the data
			while(nUnreadBytes_CNI() != 0)
			{
				(void)ReceiveByte_CNI();
 800272a:	f000 f859 	bl	80027e0 <ReceiveByte_CNI>
			while(nUnreadBytes_CNI() != 0)
 800272e:	f000 f8c7 	bl	80028c0 <nUnreadBytes_CNI>
 8002732:	1e03      	subs	r3, r0, #0
 8002734:	d1f9      	bne.n	800272a <ReceiveMessage_CNI+0x5a>
			}

			return 0;
 8002736:	2300      	movs	r3, #0
 8002738:	e000      	b.n	800273c <ReceiveMessage_CNI+0x6c>
		}
	}

	// No data available
	return 0;
 800273a:	2300      	movs	r3, #0
}
 800273c:	0018      	movs	r0, r3
 800273e:	46bd      	mov	sp, r7
 8002740:	b007      	add	sp, #28
 8002742:	bd90      	pop	{r4, r7, pc}

08002744 <ConfigureGPIO_UART1>:
           - Configures the UART pins on GPIO PA2 PA3
 * Param   None
 * Retval  None
 */
inline void ConfigureGPIO_UART1(void)
{
 8002744:	b580      	push	{r7, lr}
 8002746:	af00      	add	r7, sp, #0
    // Enable the peripheral clock of GPIOA
    RCC->AHBENR |= RCC_AHBENR_GPIOAEN;
 8002748:	4b0f      	ldr	r3, [pc, #60]	@ (8002788 <ConfigureGPIO_UART1+0x44>)
 800274a:	695a      	ldr	r2, [r3, #20]
 800274c:	4b0e      	ldr	r3, [pc, #56]	@ (8002788 <ConfigureGPIO_UART1+0x44>)
 800274e:	2180      	movs	r1, #128	@ 0x80
 8002750:	0289      	lsls	r1, r1, #10
 8002752:	430a      	orrs	r2, r1
 8002754:	615a      	str	r2, [r3, #20]

    // GPIO configuration for UART signals
    // 1. Select AF mode (10) on PA9 and PA10
    // 2. AF1 for UART signals
    GPIOA->MODER = (GPIOA->MODER & ~(GPIO_MODER_MODER9 | GPIO_MODER_MODER10))
 8002756:	2390      	movs	r3, #144	@ 0x90
 8002758:	05db      	lsls	r3, r3, #23
 800275a:	681b      	ldr	r3, [r3, #0]
 800275c:	4a0b      	ldr	r2, [pc, #44]	@ (800278c <ConfigureGPIO_UART1+0x48>)
 800275e:	401a      	ands	r2, r3
 8002760:	2390      	movs	r3, #144	@ 0x90
 8002762:	05db      	lsls	r3, r3, #23
            | (GPIO_MODER_MODER9_1 | GPIO_MODER_MODER10_1);
 8002764:	21a0      	movs	r1, #160	@ 0xa0
 8002766:	0389      	lsls	r1, r1, #14
 8002768:	430a      	orrs	r2, r1
    GPIOA->MODER = (GPIOA->MODER & ~(GPIO_MODER_MODER9 | GPIO_MODER_MODER10))
 800276a:	601a      	str	r2, [r3, #0]
    GPIOA->AFR[1] = (GPIOA->AFR[1] & ~(GPIO_AFRH_AFRH1 | GPIO_AFRH_AFRH2))
 800276c:	2390      	movs	r3, #144	@ 0x90
 800276e:	05db      	lsls	r3, r3, #23
 8002770:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002772:	4a07      	ldr	r2, [pc, #28]	@ (8002790 <ConfigureGPIO_UART1+0x4c>)
 8002774:	401a      	ands	r2, r3
 8002776:	2390      	movs	r3, #144	@ 0x90
 8002778:	05db      	lsls	r3, r3, #23
            | (1 << (1 * 4)) | (1 << (2 * 4));
 800277a:	2188      	movs	r1, #136	@ 0x88
 800277c:	0049      	lsls	r1, r1, #1
 800277e:	430a      	orrs	r2, r1
    GPIOA->AFR[1] = (GPIOA->AFR[1] & ~(GPIO_AFRH_AFRH1 | GPIO_AFRH_AFRH2))
 8002780:	625a      	str	r2, [r3, #36]	@ 0x24
}
 8002782:	46c0      	nop			@ (mov r8, r8)
 8002784:	46bd      	mov	sp, r7
 8002786:	bd80      	pop	{r7, pc}
 8002788:	40021000 	.word	0x40021000
 800278c:	ffc3ffff 	.word	0xffc3ffff
 8002790:	fffff00f 	.word	0xfffff00f

08002794 <Configure_UART1>:
 *         - 9600,8,n,1
 * Param   None
 * Retval  None
 */
inline void Configure_UART1(void)
{
 8002794:	b580      	push	{r7, lr}
 8002796:	af00      	add	r7, sp, #0
    // Enable the peripheral clock UART
    RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 8002798:	4b0e      	ldr	r3, [pc, #56]	@ (80027d4 <Configure_UART1+0x40>)
 800279a:	699a      	ldr	r2, [r3, #24]
 800279c:	4b0d      	ldr	r3, [pc, #52]	@ (80027d4 <Configure_UART1+0x40>)
 800279e:	2180      	movs	r1, #128	@ 0x80
 80027a0:	01c9      	lsls	r1, r1, #7
 80027a2:	430a      	orrs	r2, r1
 80027a4:	619a      	str	r2, [r3, #24]
    // Configure UART
    // 1. Oversampling by 16, 9600 baud
    // 2. 8 data bit, 1 start bit, 1 stop bit, no parity,
    //     transmitter enable, receiver enable
//    USART1->BRR = 480000 / 96;
    USART1->BRR = 480000 / 96;
 80027a6:	4b0c      	ldr	r3, [pc, #48]	@ (80027d8 <Configure_UART1+0x44>)
 80027a8:	4a0c      	ldr	r2, [pc, #48]	@ (80027dc <Configure_UART1+0x48>)
 80027aa:	60da      	str	r2, [r3, #12]
    USART1->CR1 = USART_CR1_TE | USART_CR1_UE | USART_CR1_RXNEIE | USART_CR1_RE;
 80027ac:	4b0a      	ldr	r3, [pc, #40]	@ (80027d8 <Configure_UART1+0x44>)
 80027ae:	222d      	movs	r2, #45	@ 0x2d
 80027b0:	601a      	str	r2, [r3, #0]

    // 3. Polling idle frame Transmission
    while ((USART1->ISR & USART_ISR_TC) != USART_ISR_TC)
 80027b2:	46c0      	nop			@ (mov r8, r8)
 80027b4:	4b08      	ldr	r3, [pc, #32]	@ (80027d8 <Configure_UART1+0x44>)
 80027b6:	69db      	ldr	r3, [r3, #28]
 80027b8:	2240      	movs	r2, #64	@ 0x40
 80027ba:	4013      	ands	r3, r2
 80027bc:	2b40      	cmp	r3, #64	@ 0x40
 80027be:	d1f9      	bne.n	80027b4 <Configure_UART1+0x20>
    }

    // Configure IT
    // 4. Set priority for UART1_IRQn
    // 5. Enable UART1_IRQn
    NVIC_SetPriority(USART1_IRQn, 0);
 80027c0:	2100      	movs	r1, #0
 80027c2:	201b      	movs	r0, #27
 80027c4:	f7ff fec6 	bl	8002554 <__NVIC_SetPriority>
    NVIC_EnableIRQ(USART1_IRQn);
 80027c8:	201b      	movs	r0, #27
 80027ca:	f7ff fe87 	bl	80024dc <__NVIC_EnableIRQ>
}
 80027ce:	46c0      	nop			@ (mov r8, r8)
 80027d0:	46bd      	mov	sp, r7
 80027d2:	bd80      	pop	{r7, pc}
 80027d4:	40021000 	.word	0x40021000
 80027d8:	40013800 	.word	0x40013800
 80027dc:	00001388 	.word	0x00001388

080027e0 <ReceiveByte_CNI>:

char ReceiveByte_CNI(void)
{
 80027e0:	b580      	push	{r7, lr}
 80027e2:	b082      	sub	sp, #8
 80027e4:	af00      	add	r7, sp, #0
    uint32_t tmptail;

    // Wait for incoming data
    while (UART1_RxHead == UART1_RxTail){;}
 80027e6:	46c0      	nop			@ (mov r8, r8)
 80027e8:	4b0d      	ldr	r3, [pc, #52]	@ (8002820 <ReceiveByte_CNI+0x40>)
 80027ea:	781b      	ldrb	r3, [r3, #0]
 80027ec:	b2da      	uxtb	r2, r3
 80027ee:	4b0d      	ldr	r3, [pc, #52]	@ (8002824 <ReceiveByte_CNI+0x44>)
 80027f0:	781b      	ldrb	r3, [r3, #0]
 80027f2:	b2db      	uxtb	r3, r3
 80027f4:	429a      	cmp	r2, r3
 80027f6:	d0f7      	beq.n	80027e8 <ReceiveByte_CNI+0x8>

    // Calculate buffer index
    tmptail = (UART1_RxTail + 1) & UART1_RX_BUFFER_MASK;
 80027f8:	4b0a      	ldr	r3, [pc, #40]	@ (8002824 <ReceiveByte_CNI+0x44>)
 80027fa:	781b      	ldrb	r3, [r3, #0]
 80027fc:	b2db      	uxtb	r3, r3
 80027fe:	3301      	adds	r3, #1
 8002800:	001a      	movs	r2, r3
 8002802:	23ff      	movs	r3, #255	@ 0xff
 8002804:	4013      	ands	r3, r2
 8002806:	607b      	str	r3, [r7, #4]

    // Store new index
    UART1_RxTail = tmptail;
 8002808:	687b      	ldr	r3, [r7, #4]
 800280a:	b2da      	uxtb	r2, r3
 800280c:	4b05      	ldr	r3, [pc, #20]	@ (8002824 <ReceiveByte_CNI+0x44>)
 800280e:	701a      	strb	r2, [r3, #0]

    // Return data
    return UART1_RxBuf[tmptail];
 8002810:	4a05      	ldr	r2, [pc, #20]	@ (8002828 <ReceiveByte_CNI+0x48>)
 8002812:	687b      	ldr	r3, [r7, #4]
 8002814:	18d3      	adds	r3, r2, r3
 8002816:	781b      	ldrb	r3, [r3, #0]
}
 8002818:	0018      	movs	r0, r3
 800281a:	46bd      	mov	sp, r7
 800281c:	b002      	add	sp, #8
 800281e:	bd80      	pop	{r7, pc}
 8002820:	20000150 	.word	0x20000150
 8002824:	20000151 	.word	0x20000151
 8002828:	20000050 	.word	0x20000050

0800282c <TransmitByte_CNI>:

void TransmitByte_CNI(char data)
{
 800282c:	b580      	push	{r7, lr}
 800282e:	b084      	sub	sp, #16
 8002830:	af00      	add	r7, sp, #0
 8002832:	0002      	movs	r2, r0
 8002834:	1dfb      	adds	r3, r7, #7
 8002836:	701a      	strb	r2, [r3, #0]
    uint32_t tmphead;

    // Calculate buffer index
    tmphead = (UART1_TxHead + 1) & UART1_TX_BUFFER_MASK;
 8002838:	4b1d      	ldr	r3, [pc, #116]	@ (80028b0 <TransmitByte_CNI+0x84>)
 800283a:	781b      	ldrb	r3, [r3, #0]
 800283c:	b2db      	uxtb	r3, r3
 800283e:	3301      	adds	r3, #1
 8002840:	001a      	movs	r2, r3
 8002842:	23ff      	movs	r3, #255	@ 0xff
 8002844:	4013      	ands	r3, r2
 8002846:	60fb      	str	r3, [r7, #12]

    // Wait for free space in buffer
    while (tmphead == UART1_TxTail)
 8002848:	46c0      	nop			@ (mov r8, r8)
 800284a:	4b1a      	ldr	r3, [pc, #104]	@ (80028b4 <TransmitByte_CNI+0x88>)
 800284c:	781b      	ldrb	r3, [r3, #0]
 800284e:	b2db      	uxtb	r3, r3
 8002850:	001a      	movs	r2, r3
 8002852:	68fb      	ldr	r3, [r7, #12]
 8002854:	4293      	cmp	r3, r2
 8002856:	d0f8      	beq.n	800284a <TransmitByte_CNI+0x1e>
    {
        ;
    }

    // Store data in buffer
    UART1_TxBuf[tmphead] = data;
 8002858:	4a17      	ldr	r2, [pc, #92]	@ (80028b8 <TransmitByte_CNI+0x8c>)
 800285a:	68fb      	ldr	r3, [r7, #12]
 800285c:	18d3      	adds	r3, r2, r3
 800285e:	1dfa      	adds	r2, r7, #7
 8002860:	7812      	ldrb	r2, [r2, #0]
 8002862:	701a      	strb	r2, [r3, #0]

    // Store new index
    UART1_TxHead = tmphead;
 8002864:	68fb      	ldr	r3, [r7, #12]
 8002866:	b2da      	uxtb	r2, r3
 8002868:	4b11      	ldr	r3, [pc, #68]	@ (80028b0 <TransmitByte_CNI+0x84>)
 800286a:	701a      	strb	r2, [r3, #0]

    // Initiate a new transfer if this is not ongoing
    if((USART1->CR1 & USART_CR1_TCIE) == 0)
 800286c:	4b13      	ldr	r3, [pc, #76]	@ (80028bc <TransmitByte_CNI+0x90>)
 800286e:	681b      	ldr	r3, [r3, #0]
 8002870:	2240      	movs	r2, #64	@ 0x40
 8002872:	4013      	ands	r3, r2
 8002874:	d117      	bne.n	80028a6 <TransmitByte_CNI+0x7a>
    {
        // Calculate buffer index
        uint32_t tmptail = (UART1_TxTail + 1) & UART1_TX_BUFFER_MASK;
 8002876:	4b0f      	ldr	r3, [pc, #60]	@ (80028b4 <TransmitByte_CNI+0x88>)
 8002878:	781b      	ldrb	r3, [r3, #0]
 800287a:	b2db      	uxtb	r3, r3
 800287c:	3301      	adds	r3, #1
 800287e:	001a      	movs	r2, r3
 8002880:	23ff      	movs	r3, #255	@ 0xff
 8002882:	4013      	ands	r3, r2
 8002884:	60bb      	str	r3, [r7, #8]

        // Store new index
        UART1_TxTail = tmptail;
 8002886:	68bb      	ldr	r3, [r7, #8]
 8002888:	b2da      	uxtb	r2, r3
 800288a:	4b0a      	ldr	r3, [pc, #40]	@ (80028b4 <TransmitByte_CNI+0x88>)
 800288c:	701a      	strb	r2, [r3, #0]

        // Start transmission
        USART1->TDR = UART1_TxBuf[tmptail];
 800288e:	4a0a      	ldr	r2, [pc, #40]	@ (80028b8 <TransmitByte_CNI+0x8c>)
 8002890:	68bb      	ldr	r3, [r7, #8]
 8002892:	18d3      	adds	r3, r2, r3
 8002894:	781a      	ldrb	r2, [r3, #0]
 8002896:	4b09      	ldr	r3, [pc, #36]	@ (80028bc <TransmitByte_CNI+0x90>)
 8002898:	851a      	strh	r2, [r3, #40]	@ 0x28

        // enable TC interrupt
        USART1->CR1 |= USART_CR1_TCIE;
 800289a:	4b08      	ldr	r3, [pc, #32]	@ (80028bc <TransmitByte_CNI+0x90>)
 800289c:	681a      	ldr	r2, [r3, #0]
 800289e:	4b07      	ldr	r3, [pc, #28]	@ (80028bc <TransmitByte_CNI+0x90>)
 80028a0:	2140      	movs	r1, #64	@ 0x40
 80028a2:	430a      	orrs	r2, r1
 80028a4:	601a      	str	r2, [r3, #0]
    }
}
 80028a6:	46c0      	nop			@ (mov r8, r8)
 80028a8:	46bd      	mov	sp, r7
 80028aa:	b004      	add	sp, #16
 80028ac:	bd80      	pop	{r7, pc}
 80028ae:	46c0      	nop			@ (mov r8, r8)
 80028b0:	20000254 	.word	0x20000254
 80028b4:	20000255 	.word	0x20000255
 80028b8:	20000154 	.word	0x20000154
 80028bc:	40013800 	.word	0x40013800

080028c0 <nUnreadBytes_CNI>:

/*
 * This function returns the number of unread bytes in the receive buffer
 */
unsigned char nUnreadBytes_CNI(void)
{
 80028c0:	b580      	push	{r7, lr}
 80028c2:	af00      	add	r7, sp, #0
    if(UART1_RxHead == UART1_RxTail)
 80028c4:	4b12      	ldr	r3, [pc, #72]	@ (8002910 <nUnreadBytes_CNI+0x50>)
 80028c6:	781b      	ldrb	r3, [r3, #0]
 80028c8:	b2da      	uxtb	r2, r3
 80028ca:	4b12      	ldr	r3, [pc, #72]	@ (8002914 <nUnreadBytes_CNI+0x54>)
 80028cc:	781b      	ldrb	r3, [r3, #0]
 80028ce:	b2db      	uxtb	r3, r3
 80028d0:	429a      	cmp	r2, r3
 80028d2:	d101      	bne.n	80028d8 <nUnreadBytes_CNI+0x18>
        return 0;
 80028d4:	2300      	movs	r3, #0
 80028d6:	e018      	b.n	800290a <nUnreadBytes_CNI+0x4a>
    else if(UART1_RxHead > UART1_RxTail)
 80028d8:	4b0d      	ldr	r3, [pc, #52]	@ (8002910 <nUnreadBytes_CNI+0x50>)
 80028da:	781b      	ldrb	r3, [r3, #0]
 80028dc:	b2da      	uxtb	r2, r3
 80028de:	4b0d      	ldr	r3, [pc, #52]	@ (8002914 <nUnreadBytes_CNI+0x54>)
 80028e0:	781b      	ldrb	r3, [r3, #0]
 80028e2:	b2db      	uxtb	r3, r3
 80028e4:	429a      	cmp	r2, r3
 80028e6:	d908      	bls.n	80028fa <nUnreadBytes_CNI+0x3a>
        return (UART1_RxHead - UART1_RxTail);
 80028e8:	4b09      	ldr	r3, [pc, #36]	@ (8002910 <nUnreadBytes_CNI+0x50>)
 80028ea:	781b      	ldrb	r3, [r3, #0]
 80028ec:	b2da      	uxtb	r2, r3
 80028ee:	4b09      	ldr	r3, [pc, #36]	@ (8002914 <nUnreadBytes_CNI+0x54>)
 80028f0:	781b      	ldrb	r3, [r3, #0]
 80028f2:	b2db      	uxtb	r3, r3
 80028f4:	1ad3      	subs	r3, r2, r3
 80028f6:	b2db      	uxtb	r3, r3
 80028f8:	e007      	b.n	800290a <nUnreadBytes_CNI+0x4a>
    else
        return (UART1_RX_BUFFER_SIZE - UART1_RxTail + UART1_RxHead);
 80028fa:	4b05      	ldr	r3, [pc, #20]	@ (8002910 <nUnreadBytes_CNI+0x50>)
 80028fc:	781b      	ldrb	r3, [r3, #0]
 80028fe:	b2da      	uxtb	r2, r3
 8002900:	4b04      	ldr	r3, [pc, #16]	@ (8002914 <nUnreadBytes_CNI+0x54>)
 8002902:	781b      	ldrb	r3, [r3, #0]
 8002904:	b2db      	uxtb	r3, r3
 8002906:	1ad3      	subs	r3, r2, r3
 8002908:	b2db      	uxtb	r3, r3
}
 800290a:	0018      	movs	r0, r3
 800290c:	46bd      	mov	sp, r7
 800290e:	bd80      	pop	{r7, pc}
 8002910:	20000150 	.word	0x20000150
 8002914:	20000151 	.word	0x20000151

08002918 <USART1_IRQHandler>:
 * Brief   This function handles UART interrupt request.
 * Param   None
 * Retval  None
 */
void USART1_IRQHandler(void)
{
 8002918:	b580      	push	{r7, lr}
 800291a:	b082      	sub	sp, #8
 800291c:	af00      	add	r7, sp, #0
    if ((USART1->ISR & USART_ISR_TC) == USART_ISR_TC)
 800291e:	4b30      	ldr	r3, [pc, #192]	@ (80029e0 <USART1_IRQHandler+0xc8>)
 8002920:	69db      	ldr	r3, [r3, #28]
 8002922:	2240      	movs	r2, #64	@ 0x40
 8002924:	4013      	ands	r3, r2
 8002926:	2b40      	cmp	r3, #64	@ 0x40
 8002928:	d127      	bne.n	800297a <USART1_IRQHandler+0x62>
    {
        uint32_t tmptail;

        // Check if all data is transmitted
        if (UART1_TxHead != UART1_TxTail)
 800292a:	4b2e      	ldr	r3, [pc, #184]	@ (80029e4 <USART1_IRQHandler+0xcc>)
 800292c:	781b      	ldrb	r3, [r3, #0]
 800292e:	b2da      	uxtb	r2, r3
 8002930:	4b2d      	ldr	r3, [pc, #180]	@ (80029e8 <USART1_IRQHandler+0xd0>)
 8002932:	781b      	ldrb	r3, [r3, #0]
 8002934:	b2db      	uxtb	r3, r3
 8002936:	429a      	cmp	r2, r3
 8002938:	d012      	beq.n	8002960 <USART1_IRQHandler+0x48>
        {
            // Calculate buffer index
            tmptail = (UART1_TxTail + 1) & UART1_TX_BUFFER_MASK;
 800293a:	4b2b      	ldr	r3, [pc, #172]	@ (80029e8 <USART1_IRQHandler+0xd0>)
 800293c:	781b      	ldrb	r3, [r3, #0]
 800293e:	b2db      	uxtb	r3, r3
 8002940:	3301      	adds	r3, #1
 8002942:	001a      	movs	r2, r3
 8002944:	23ff      	movs	r3, #255	@ 0xff
 8002946:	4013      	ands	r3, r2
 8002948:	603b      	str	r3, [r7, #0]

            // Store new index
            UART1_TxTail = tmptail;
 800294a:	683b      	ldr	r3, [r7, #0]
 800294c:	b2da      	uxtb	r2, r3
 800294e:	4b26      	ldr	r3, [pc, #152]	@ (80029e8 <USART1_IRQHandler+0xd0>)
 8002950:	701a      	strb	r2, [r3, #0]

            // Start transmission
            USART1->TDR = UART1_TxBuf[tmptail];
 8002952:	4a26      	ldr	r2, [pc, #152]	@ (80029ec <USART1_IRQHandler+0xd4>)
 8002954:	683b      	ldr	r3, [r7, #0]
 8002956:	18d3      	adds	r3, r2, r3
 8002958:	781a      	ldrb	r2, [r3, #0]
 800295a:	4b21      	ldr	r3, [pc, #132]	@ (80029e0 <USART1_IRQHandler+0xc8>)
 800295c:	851a      	strh	r2, [r3, #40]	@ 0x28
    }
    else
    {
        NVIC_DisableIRQ(USART1_IRQn); // Disable UART_IRQn
    }
}
 800295e:	e03a      	b.n	80029d6 <USART1_IRQHandler+0xbe>
            USART1->ICR |= USART_ICR_TCCF; // Clear TC flag
 8002960:	4b1f      	ldr	r3, [pc, #124]	@ (80029e0 <USART1_IRQHandler+0xc8>)
 8002962:	6a1a      	ldr	r2, [r3, #32]
 8002964:	4b1e      	ldr	r3, [pc, #120]	@ (80029e0 <USART1_IRQHandler+0xc8>)
 8002966:	2140      	movs	r1, #64	@ 0x40
 8002968:	430a      	orrs	r2, r1
 800296a:	621a      	str	r2, [r3, #32]
            USART1->CR1 &= ~USART_CR1_TCIE; // Disable TC interrupt
 800296c:	4b1c      	ldr	r3, [pc, #112]	@ (80029e0 <USART1_IRQHandler+0xc8>)
 800296e:	681a      	ldr	r2, [r3, #0]
 8002970:	4b1b      	ldr	r3, [pc, #108]	@ (80029e0 <USART1_IRQHandler+0xc8>)
 8002972:	2140      	movs	r1, #64	@ 0x40
 8002974:	438a      	bics	r2, r1
 8002976:	601a      	str	r2, [r3, #0]
}
 8002978:	e02d      	b.n	80029d6 <USART1_IRQHandler+0xbe>
    else if ((USART1->ISR & USART_ISR_RXNE) == USART_ISR_RXNE)
 800297a:	4b19      	ldr	r3, [pc, #100]	@ (80029e0 <USART1_IRQHandler+0xc8>)
 800297c:	69db      	ldr	r3, [r3, #28]
 800297e:	2220      	movs	r2, #32
 8002980:	4013      	ands	r3, r2
 8002982:	2b20      	cmp	r3, #32
 8002984:	d117      	bne.n	80029b6 <USART1_IRQHandler+0x9e>
        uint8_t data = (uint8_t)(USART1->RDR); // Receive data, clear flag
 8002986:	4b16      	ldr	r3, [pc, #88]	@ (80029e0 <USART1_IRQHandler+0xc8>)
 8002988:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 800298a:	b29a      	uxth	r2, r3
 800298c:	1dfb      	adds	r3, r7, #7
 800298e:	701a      	strb	r2, [r3, #0]
        uint8_t tmphead = (UART1_RxHead + 1) & UART1_RX_BUFFER_MASK;
 8002990:	4b17      	ldr	r3, [pc, #92]	@ (80029f0 <USART1_IRQHandler+0xd8>)
 8002992:	781b      	ldrb	r3, [r3, #0]
 8002994:	b2da      	uxtb	r2, r3
 8002996:	1dbb      	adds	r3, r7, #6
 8002998:	3201      	adds	r2, #1
 800299a:	701a      	strb	r2, [r3, #0]
        UART1_RxHead = tmphead;
 800299c:	4b14      	ldr	r3, [pc, #80]	@ (80029f0 <USART1_IRQHandler+0xd8>)
 800299e:	1dba      	adds	r2, r7, #6
 80029a0:	7812      	ldrb	r2, [r2, #0]
 80029a2:	701a      	strb	r2, [r3, #0]
        if (tmphead == UART1_RxTail)
 80029a4:	4b13      	ldr	r3, [pc, #76]	@ (80029f4 <USART1_IRQHandler+0xdc>)
 80029a6:	781b      	ldrb	r3, [r3, #0]
        UART1_RxBuf[tmphead] = data;
 80029a8:	1dbb      	adds	r3, r7, #6
 80029aa:	781b      	ldrb	r3, [r3, #0]
 80029ac:	4a12      	ldr	r2, [pc, #72]	@ (80029f8 <USART1_IRQHandler+0xe0>)
 80029ae:	1df9      	adds	r1, r7, #7
 80029b0:	7809      	ldrb	r1, [r1, #0]
 80029b2:	54d1      	strb	r1, [r2, r3]
}
 80029b4:	e00f      	b.n	80029d6 <USART1_IRQHandler+0xbe>
    else if ((USART1->ISR & USART_ISR_ORE) == USART_ISR_ORE)
 80029b6:	4b0a      	ldr	r3, [pc, #40]	@ (80029e0 <USART1_IRQHandler+0xc8>)
 80029b8:	69db      	ldr	r3, [r3, #28]
 80029ba:	2208      	movs	r2, #8
 80029bc:	4013      	ands	r3, r2
 80029be:	2b08      	cmp	r3, #8
 80029c0:	d106      	bne.n	80029d0 <USART1_IRQHandler+0xb8>
    	USART1->ICR |= USART_ICR_ORECF; // Clear ORE flag
 80029c2:	4b07      	ldr	r3, [pc, #28]	@ (80029e0 <USART1_IRQHandler+0xc8>)
 80029c4:	6a1a      	ldr	r2, [r3, #32]
 80029c6:	4b06      	ldr	r3, [pc, #24]	@ (80029e0 <USART1_IRQHandler+0xc8>)
 80029c8:	2108      	movs	r1, #8
 80029ca:	430a      	orrs	r2, r1
 80029cc:	621a      	str	r2, [r3, #32]
}
 80029ce:	e002      	b.n	80029d6 <USART1_IRQHandler+0xbe>
        NVIC_DisableIRQ(USART1_IRQn); // Disable UART_IRQn
 80029d0:	201b      	movs	r0, #27
 80029d2:	f7ff fd9d 	bl	8002510 <__NVIC_DisableIRQ>
}
 80029d6:	46c0      	nop			@ (mov r8, r8)
 80029d8:	46bd      	mov	sp, r7
 80029da:	b002      	add	sp, #8
 80029dc:	bd80      	pop	{r7, pc}
 80029de:	46c0      	nop			@ (mov r8, r8)
 80029e0:	40013800 	.word	0x40013800
 80029e4:	20000254 	.word	0x20000254
 80029e8:	20000255 	.word	0x20000255
 80029ec:	20000154 	.word	0x20000154
 80029f0:	20000150 	.word	0x20000150
 80029f4:	20000151 	.word	0x20000151
 80029f8:	20000050 	.word	0x20000050

080029fc <Configure_FakeSensor>:
           -
 * Param   None
 * Retval  None
 */
void Configure_FakeSensor(void)
{
 80029fc:	b580      	push	{r7, lr}
 80029fe:	af00      	add	r7, sp, #0
	value = 0;
 8002a00:	4b02      	ldr	r3, [pc, #8]	@ (8002a0c <Configure_FakeSensor+0x10>)
 8002a02:	2200      	movs	r2, #0
 8002a04:	701a      	strb	r2, [r3, #0]
}
 8002a06:	46c0      	nop			@ (mov r8, r8)
 8002a08:	46bd      	mov	sp, r7
 8002a0a:	bd80      	pop	{r7, pc}
 8002a0c:	20000256 	.word	0x20000256

08002a10 <Get_FakeSensorValue>:

char Get_FakeSensorValue(void)
{
 8002a10:	b580      	push	{r7, lr}
 8002a12:	af00      	add	r7, sp, #0
	return value;
 8002a14:	4b02      	ldr	r3, [pc, #8]	@ (8002a20 <Get_FakeSensorValue+0x10>)
 8002a16:	781b      	ldrb	r3, [r3, #0]
 8002a18:	b2db      	uxtb	r3, r3
}
 8002a1a:	0018      	movs	r0, r3
 8002a1c:	46bd      	mov	sp, r7
 8002a1e:	bd80      	pop	{r7, pc}
 8002a20:	20000256 	.word	0x20000256

08002a24 <Set_FakeSensorValue>:

void Set_FakeSensorValue(char v)
{
 8002a24:	b580      	push	{r7, lr}
 8002a26:	b082      	sub	sp, #8
 8002a28:	af00      	add	r7, sp, #0
 8002a2a:	0002      	movs	r2, r0
 8002a2c:	1dfb      	adds	r3, r7, #7
 8002a2e:	701a      	strb	r2, [r3, #0]
	value = v;
 8002a30:	4b03      	ldr	r3, [pc, #12]	@ (8002a40 <Set_FakeSensorValue+0x1c>)
 8002a32:	1dfa      	adds	r2, r7, #7
 8002a34:	7812      	ldrb	r2, [r2, #0]
 8002a36:	701a      	strb	r2, [r3, #0]
}
 8002a38:	46c0      	nop			@ (mov r8, r8)
 8002a3a:	46bd      	mov	sp, r7
 8002a3c:	b002      	add	sp, #8
 8002a3e:	bd80      	pop	{r7, pc}
 8002a40:	20000256 	.word	0x20000256

08002a44 <Configure_GlobalClock>:
           -
 * Param   None
 * Retval  None
 */
void Configure_GlobalClock(void)
{
 8002a44:	b580      	push	{r7, lr}
 8002a46:	af00      	add	r7, sp, #0
	global_tick = 0;
 8002a48:	4b02      	ldr	r3, [pc, #8]	@ (8002a54 <Configure_GlobalClock+0x10>)
 8002a4a:	2200      	movs	r2, #0
 8002a4c:	601a      	str	r2, [r3, #0]
}
 8002a4e:	46c0      	nop			@ (mov r8, r8)
 8002a50:	46bd      	mov	sp, r7
 8002a52:	bd80      	pop	{r7, pc}
 8002a54:	20000258 	.word	0x20000258

08002a58 <Get_GlobalClock>:

uint32_t Get_GlobalClock(void)
{
 8002a58:	b580      	push	{r7, lr}
 8002a5a:	af00      	add	r7, sp, #0
	return global_tick;
 8002a5c:	4b02      	ldr	r3, [pc, #8]	@ (8002a68 <Get_GlobalClock+0x10>)
 8002a5e:	681b      	ldr	r3, [r3, #0]
}
 8002a60:	0018      	movs	r0, r3
 8002a62:	46bd      	mov	sp, r7
 8002a64:	bd80      	pop	{r7, pc}
 8002a66:	46c0      	nop			@ (mov r8, r8)
 8002a68:	20000258 	.word	0x20000258

08002a6c <Set_GlobalClock>:

void Set_GlobalClock(uint32_t t)
{
 8002a6c:	b580      	push	{r7, lr}
 8002a6e:	b082      	sub	sp, #8
 8002a70:	af00      	add	r7, sp, #0
 8002a72:	6078      	str	r0, [r7, #4]
	global_tick = t;
 8002a74:	4b10      	ldr	r3, [pc, #64]	@ (8002ab8 <Set_GlobalClock+0x4c>)
 8002a76:	687a      	ldr	r2, [r7, #4]
 8002a78:	601a      	str	r2, [r3, #0]

	// For debugging purpose: show the synchronization of the global clocks
	// by toggling an LED
	if((global_tick % 20) == 0)
 8002a7a:	4b0f      	ldr	r3, [pc, #60]	@ (8002ab8 <Set_GlobalClock+0x4c>)
 8002a7c:	681b      	ldr	r3, [r3, #0]
 8002a7e:	2114      	movs	r1, #20
 8002a80:	0018      	movs	r0, r3
 8002a82:	f7fd fbc7 	bl	8000214 <__aeabi_uidivmod>
 8002a86:	1e0b      	subs	r3, r1, #0
 8002a88:	d105      	bne.n	8002a96 <Set_GlobalClock+0x2a>
	{
		GPIOA->BSRR = GPIO_BSRR_BR_5;
 8002a8a:	2390      	movs	r3, #144	@ 0x90
 8002a8c:	05db      	lsls	r3, r3, #23
 8002a8e:	2280      	movs	r2, #128	@ 0x80
 8002a90:	0392      	lsls	r2, r2, #14
 8002a92:	619a      	str	r2, [r3, #24]
	}
	else if((global_tick % 10) == 0)
	{
		GPIOA->BSRR = GPIO_BSRR_BS_5;
	}
}
 8002a94:	e00b      	b.n	8002aae <Set_GlobalClock+0x42>
	else if((global_tick % 10) == 0)
 8002a96:	4b08      	ldr	r3, [pc, #32]	@ (8002ab8 <Set_GlobalClock+0x4c>)
 8002a98:	681b      	ldr	r3, [r3, #0]
 8002a9a:	210a      	movs	r1, #10
 8002a9c:	0018      	movs	r0, r3
 8002a9e:	f7fd fbb9 	bl	8000214 <__aeabi_uidivmod>
 8002aa2:	1e0b      	subs	r3, r1, #0
 8002aa4:	d103      	bne.n	8002aae <Set_GlobalClock+0x42>
		GPIOA->BSRR = GPIO_BSRR_BS_5;
 8002aa6:	2390      	movs	r3, #144	@ 0x90
 8002aa8:	05db      	lsls	r3, r3, #23
 8002aaa:	2220      	movs	r2, #32
 8002aac:	619a      	str	r2, [r3, #24]
}
 8002aae:	46c0      	nop			@ (mov r8, r8)
 8002ab0:	46bd      	mov	sp, r7
 8002ab2:	b002      	add	sp, #8
 8002ab4:	bd80      	pop	{r7, pc}
 8002ab6:	46c0      	nop			@ (mov r8, r8)
 8002ab8:	20000258 	.word	0x20000258

08002abc <Inc_GlobalClock>:

void Inc_GlobalClock(void)
{
 8002abc:	b580      	push	{r7, lr}
 8002abe:	af00      	add	r7, sp, #0
	global_tick++;
 8002ac0:	4b10      	ldr	r3, [pc, #64]	@ (8002b04 <Inc_GlobalClock+0x48>)
 8002ac2:	681b      	ldr	r3, [r3, #0]
 8002ac4:	1c5a      	adds	r2, r3, #1
 8002ac6:	4b0f      	ldr	r3, [pc, #60]	@ (8002b04 <Inc_GlobalClock+0x48>)
 8002ac8:	601a      	str	r2, [r3, #0]

	// For debugging purpose: show the synchronization of the global clocks
	// by toggling an LED
	if((global_tick % 20) == 0)
 8002aca:	4b0e      	ldr	r3, [pc, #56]	@ (8002b04 <Inc_GlobalClock+0x48>)
 8002acc:	681b      	ldr	r3, [r3, #0]
 8002ace:	2114      	movs	r1, #20
 8002ad0:	0018      	movs	r0, r3
 8002ad2:	f7fd fb9f 	bl	8000214 <__aeabi_uidivmod>
 8002ad6:	1e0b      	subs	r3, r1, #0
 8002ad8:	d105      	bne.n	8002ae6 <Inc_GlobalClock+0x2a>
	{
		GPIOA->BSRR = GPIO_BSRR_BR_5;
 8002ada:	2390      	movs	r3, #144	@ 0x90
 8002adc:	05db      	lsls	r3, r3, #23
 8002ade:	2280      	movs	r2, #128	@ 0x80
 8002ae0:	0392      	lsls	r2, r2, #14
 8002ae2:	619a      	str	r2, [r3, #24]
	}
	else if((global_tick % 10) == 0)
	{
		GPIOA->BSRR = GPIO_BSRR_BS_5;
	}
}
 8002ae4:	e00b      	b.n	8002afe <Inc_GlobalClock+0x42>
	else if((global_tick % 10) == 0)
 8002ae6:	4b07      	ldr	r3, [pc, #28]	@ (8002b04 <Inc_GlobalClock+0x48>)
 8002ae8:	681b      	ldr	r3, [r3, #0]
 8002aea:	210a      	movs	r1, #10
 8002aec:	0018      	movs	r0, r3
 8002aee:	f7fd fb91 	bl	8000214 <__aeabi_uidivmod>
 8002af2:	1e0b      	subs	r3, r1, #0
 8002af4:	d103      	bne.n	8002afe <Inc_GlobalClock+0x42>
		GPIOA->BSRR = GPIO_BSRR_BS_5;
 8002af6:	2390      	movs	r3, #144	@ 0x90
 8002af8:	05db      	lsls	r3, r3, #23
 8002afa:	2220      	movs	r2, #32
 8002afc:	619a      	str	r2, [r3, #24]
}
 8002afe:	46c0      	nop			@ (mov r8, r8)
 8002b00:	46bd      	mov	sp, r7
 8002b02:	bd80      	pop	{r7, pc}
 8002b04:	20000258 	.word	0x20000258

08002b08 <__NVIC_EnableIRQ>:
{
 8002b08:	b580      	push	{r7, lr}
 8002b0a:	b082      	sub	sp, #8
 8002b0c:	af00      	add	r7, sp, #0
 8002b0e:	0002      	movs	r2, r0
 8002b10:	1dfb      	adds	r3, r7, #7
 8002b12:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 8002b14:	1dfb      	adds	r3, r7, #7
 8002b16:	781b      	ldrb	r3, [r3, #0]
 8002b18:	2b7f      	cmp	r3, #127	@ 0x7f
 8002b1a:	d809      	bhi.n	8002b30 <__NVIC_EnableIRQ+0x28>
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002b1c:	1dfb      	adds	r3, r7, #7
 8002b1e:	781b      	ldrb	r3, [r3, #0]
 8002b20:	001a      	movs	r2, r3
 8002b22:	231f      	movs	r3, #31
 8002b24:	401a      	ands	r2, r3
 8002b26:	4b04      	ldr	r3, [pc, #16]	@ (8002b38 <__NVIC_EnableIRQ+0x30>)
 8002b28:	2101      	movs	r1, #1
 8002b2a:	4091      	lsls	r1, r2
 8002b2c:	000a      	movs	r2, r1
 8002b2e:	601a      	str	r2, [r3, #0]
}
 8002b30:	46c0      	nop			@ (mov r8, r8)
 8002b32:	46bd      	mov	sp, r7
 8002b34:	b002      	add	sp, #8
 8002b36:	bd80      	pop	{r7, pc}
 8002b38:	e000e100 	.word	0xe000e100

08002b3c <__NVIC_SetPriority>:
{
 8002b3c:	b590      	push	{r4, r7, lr}
 8002b3e:	b083      	sub	sp, #12
 8002b40:	af00      	add	r7, sp, #0
 8002b42:	0002      	movs	r2, r0
 8002b44:	6039      	str	r1, [r7, #0]
 8002b46:	1dfb      	adds	r3, r7, #7
 8002b48:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 8002b4a:	1dfb      	adds	r3, r7, #7
 8002b4c:	781b      	ldrb	r3, [r3, #0]
 8002b4e:	2b7f      	cmp	r3, #127	@ 0x7f
 8002b50:	d828      	bhi.n	8002ba4 <__NVIC_SetPriority+0x68>
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002b52:	4a2f      	ldr	r2, [pc, #188]	@ (8002c10 <__NVIC_SetPriority+0xd4>)
 8002b54:	1dfb      	adds	r3, r7, #7
 8002b56:	781b      	ldrb	r3, [r3, #0]
 8002b58:	b25b      	sxtb	r3, r3
 8002b5a:	089b      	lsrs	r3, r3, #2
 8002b5c:	33c0      	adds	r3, #192	@ 0xc0
 8002b5e:	009b      	lsls	r3, r3, #2
 8002b60:	589b      	ldr	r3, [r3, r2]
 8002b62:	1dfa      	adds	r2, r7, #7
 8002b64:	7812      	ldrb	r2, [r2, #0]
 8002b66:	0011      	movs	r1, r2
 8002b68:	2203      	movs	r2, #3
 8002b6a:	400a      	ands	r2, r1
 8002b6c:	00d2      	lsls	r2, r2, #3
 8002b6e:	21ff      	movs	r1, #255	@ 0xff
 8002b70:	4091      	lsls	r1, r2
 8002b72:	000a      	movs	r2, r1
 8002b74:	43d2      	mvns	r2, r2
 8002b76:	401a      	ands	r2, r3
 8002b78:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8002b7a:	683b      	ldr	r3, [r7, #0]
 8002b7c:	019b      	lsls	r3, r3, #6
 8002b7e:	22ff      	movs	r2, #255	@ 0xff
 8002b80:	401a      	ands	r2, r3
 8002b82:	1dfb      	adds	r3, r7, #7
 8002b84:	781b      	ldrb	r3, [r3, #0]
 8002b86:	0018      	movs	r0, r3
 8002b88:	2303      	movs	r3, #3
 8002b8a:	4003      	ands	r3, r0
 8002b8c:	00db      	lsls	r3, r3, #3
 8002b8e:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002b90:	481f      	ldr	r0, [pc, #124]	@ (8002c10 <__NVIC_SetPriority+0xd4>)
 8002b92:	1dfb      	adds	r3, r7, #7
 8002b94:	781b      	ldrb	r3, [r3, #0]
 8002b96:	b25b      	sxtb	r3, r3
 8002b98:	089b      	lsrs	r3, r3, #2
 8002b9a:	430a      	orrs	r2, r1
 8002b9c:	33c0      	adds	r3, #192	@ 0xc0
 8002b9e:	009b      	lsls	r3, r3, #2
 8002ba0:	501a      	str	r2, [r3, r0]
}
 8002ba2:	e031      	b.n	8002c08 <__NVIC_SetPriority+0xcc>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002ba4:	4a1b      	ldr	r2, [pc, #108]	@ (8002c14 <__NVIC_SetPriority+0xd8>)
 8002ba6:	1dfb      	adds	r3, r7, #7
 8002ba8:	781b      	ldrb	r3, [r3, #0]
 8002baa:	0019      	movs	r1, r3
 8002bac:	230f      	movs	r3, #15
 8002bae:	400b      	ands	r3, r1
 8002bb0:	3b08      	subs	r3, #8
 8002bb2:	089b      	lsrs	r3, r3, #2
 8002bb4:	3306      	adds	r3, #6
 8002bb6:	009b      	lsls	r3, r3, #2
 8002bb8:	18d3      	adds	r3, r2, r3
 8002bba:	3304      	adds	r3, #4
 8002bbc:	681b      	ldr	r3, [r3, #0]
 8002bbe:	1dfa      	adds	r2, r7, #7
 8002bc0:	7812      	ldrb	r2, [r2, #0]
 8002bc2:	0011      	movs	r1, r2
 8002bc4:	2203      	movs	r2, #3
 8002bc6:	400a      	ands	r2, r1
 8002bc8:	00d2      	lsls	r2, r2, #3
 8002bca:	21ff      	movs	r1, #255	@ 0xff
 8002bcc:	4091      	lsls	r1, r2
 8002bce:	000a      	movs	r2, r1
 8002bd0:	43d2      	mvns	r2, r2
 8002bd2:	401a      	ands	r2, r3
 8002bd4:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8002bd6:	683b      	ldr	r3, [r7, #0]
 8002bd8:	019b      	lsls	r3, r3, #6
 8002bda:	22ff      	movs	r2, #255	@ 0xff
 8002bdc:	401a      	ands	r2, r3
 8002bde:	1dfb      	adds	r3, r7, #7
 8002be0:	781b      	ldrb	r3, [r3, #0]
 8002be2:	0018      	movs	r0, r3
 8002be4:	2303      	movs	r3, #3
 8002be6:	4003      	ands	r3, r0
 8002be8:	00db      	lsls	r3, r3, #3
 8002bea:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002bec:	4809      	ldr	r0, [pc, #36]	@ (8002c14 <__NVIC_SetPriority+0xd8>)
 8002bee:	1dfb      	adds	r3, r7, #7
 8002bf0:	781b      	ldrb	r3, [r3, #0]
 8002bf2:	001c      	movs	r4, r3
 8002bf4:	230f      	movs	r3, #15
 8002bf6:	4023      	ands	r3, r4
 8002bf8:	3b08      	subs	r3, #8
 8002bfa:	089b      	lsrs	r3, r3, #2
 8002bfc:	430a      	orrs	r2, r1
 8002bfe:	3306      	adds	r3, #6
 8002c00:	009b      	lsls	r3, r3, #2
 8002c02:	18c3      	adds	r3, r0, r3
 8002c04:	3304      	adds	r3, #4
 8002c06:	601a      	str	r2, [r3, #0]
}
 8002c08:	46c0      	nop			@ (mov r8, r8)
 8002c0a:	46bd      	mov	sp, r7
 8002c0c:	b003      	add	sp, #12
 8002c0e:	bd90      	pop	{r4, r7, pc}
 8002c10:	e000e100 	.word	0xe000e100
 8002c14:	e000ed00 	.word	0xe000ed00

08002c18 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8002c18:	b580      	push	{r7, lr}
 8002c1a:	b082      	sub	sp, #8
 8002c1c:	af00      	add	r7, sp, #0
 8002c1e:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8002c20:	687b      	ldr	r3, [r7, #4]
 8002c22:	1e5a      	subs	r2, r3, #1
 8002c24:	2380      	movs	r3, #128	@ 0x80
 8002c26:	045b      	lsls	r3, r3, #17
 8002c28:	429a      	cmp	r2, r3
 8002c2a:	d301      	bcc.n	8002c30 <SysTick_Config+0x18>
  {
    return (1UL);                                                   /* Reload value impossible */
 8002c2c:	2301      	movs	r3, #1
 8002c2e:	e010      	b.n	8002c52 <SysTick_Config+0x3a>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8002c30:	4b0a      	ldr	r3, [pc, #40]	@ (8002c5c <SysTick_Config+0x44>)
 8002c32:	687a      	ldr	r2, [r7, #4]
 8002c34:	3a01      	subs	r2, #1
 8002c36:	605a      	str	r2, [r3, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8002c38:	2301      	movs	r3, #1
 8002c3a:	425b      	negs	r3, r3
 8002c3c:	2103      	movs	r1, #3
 8002c3e:	0018      	movs	r0, r3
 8002c40:	f7ff ff7c 	bl	8002b3c <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8002c44:	4b05      	ldr	r3, [pc, #20]	@ (8002c5c <SysTick_Config+0x44>)
 8002c46:	2200      	movs	r2, #0
 8002c48:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8002c4a:	4b04      	ldr	r3, [pc, #16]	@ (8002c5c <SysTick_Config+0x44>)
 8002c4c:	2207      	movs	r2, #7
 8002c4e:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8002c50:	2300      	movs	r3, #0
}
 8002c52:	0018      	movs	r0, r3
 8002c54:	46bd      	mov	sp, r7
 8002c56:	b002      	add	sp, #8
 8002c58:	bd80      	pop	{r7, pc}
 8002c5a:	46c0      	nop			@ (mov r8, r8)
 8002c5c:	e000e010 	.word	0xe000e010

08002c60 <printStates>:
void Inc_LocalClock(void);
uint32_t Get_LocalClock(void);

// Private functions -----------------------------------------------------------
void printStates(int number)
{
 8002c60:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002c62:	b08f      	sub	sp, #60	@ 0x3c
 8002c64:	af00      	add	r7, sp, #0
 8002c66:	6078      	str	r0, [r7, #4]
	int16_t base_val = 10, digit, i = 0, n = 0;
 8002c68:	2332      	movs	r3, #50	@ 0x32
 8002c6a:	18fb      	adds	r3, r7, r3
 8002c6c:	220a      	movs	r2, #10
 8002c6e:	801a      	strh	r2, [r3, #0]
 8002c70:	2336      	movs	r3, #54	@ 0x36
 8002c72:	18fb      	adds	r3, r7, r3
 8002c74:	2200      	movs	r2, #0
 8002c76:	801a      	strh	r2, [r3, #0]
 8002c78:	2334      	movs	r3, #52	@ 0x34
 8002c7a:	18fb      	adds	r3, r7, r3
 8002c7c:	2200      	movs	r2, #0
 8002c7e:	801a      	strh	r2, [r3, #0]
		char x_str[32], t;
		while (number)
 8002c80:	e041      	b.n	8002d06 <printStates+0xa6>
		{
			digit = number % base_val;
 8002c82:	2532      	movs	r5, #50	@ 0x32
 8002c84:	197b      	adds	r3, r7, r5
 8002c86:	2200      	movs	r2, #0
 8002c88:	5e9a      	ldrsh	r2, [r3, r2]
 8002c8a:	687b      	ldr	r3, [r7, #4]
 8002c8c:	0011      	movs	r1, r2
 8002c8e:	0018      	movs	r0, r3
 8002c90:	f7fd fbaa 	bl	80003e8 <__aeabi_idivmod>
 8002c94:	000b      	movs	r3, r1
 8002c96:	001a      	movs	r2, r3
 8002c98:	242e      	movs	r4, #46	@ 0x2e
 8002c9a:	193b      	adds	r3, r7, r4
 8002c9c:	801a      	strh	r2, [r3, #0]
			number /= base_val;
 8002c9e:	197b      	adds	r3, r7, r5
 8002ca0:	2200      	movs	r2, #0
 8002ca2:	5e9b      	ldrsh	r3, [r3, r2]
 8002ca4:	0019      	movs	r1, r3
 8002ca6:	6878      	ldr	r0, [r7, #4]
 8002ca8:	f7fd fab8 	bl	800021c <__divsi3>
 8002cac:	0003      	movs	r3, r0
 8002cae:	607b      	str	r3, [r7, #4]
			if (digit < 10)
 8002cb0:	193b      	adds	r3, r7, r4
 8002cb2:	2200      	movs	r2, #0
 8002cb4:	5e9b      	ldrsh	r3, [r3, r2]
 8002cb6:	2b09      	cmp	r3, #9
 8002cb8:	dc12      	bgt.n	8002ce0 <printStates+0x80>
			x_str[n++] = digit + '0';
 8002cba:	193b      	adds	r3, r7, r4
 8002cbc:	881b      	ldrh	r3, [r3, #0]
 8002cbe:	b2db      	uxtb	r3, r3
 8002cc0:	2434      	movs	r4, #52	@ 0x34
 8002cc2:	193a      	adds	r2, r7, r4
 8002cc4:	2100      	movs	r1, #0
 8002cc6:	5e51      	ldrsh	r1, [r2, r1]
 8002cc8:	b28a      	uxth	r2, r1
 8002cca:	3201      	adds	r2, #1
 8002ccc:	b290      	uxth	r0, r2
 8002cce:	193a      	adds	r2, r7, r4
 8002cd0:	8010      	strh	r0, [r2, #0]
 8002cd2:	000a      	movs	r2, r1
 8002cd4:	3330      	adds	r3, #48	@ 0x30
 8002cd6:	b2d9      	uxtb	r1, r3
 8002cd8:	230c      	movs	r3, #12
 8002cda:	18fb      	adds	r3, r7, r3
 8002cdc:	5499      	strb	r1, [r3, r2]
 8002cde:	e012      	b.n	8002d06 <printStates+0xa6>
		    else
			 x_str[n++] = digit + 'A' - 10;   /*handle base > 9 */
 8002ce0:	232e      	movs	r3, #46	@ 0x2e
 8002ce2:	18fb      	adds	r3, r7, r3
 8002ce4:	881b      	ldrh	r3, [r3, #0]
 8002ce6:	b2db      	uxtb	r3, r3
 8002ce8:	2434      	movs	r4, #52	@ 0x34
 8002cea:	193a      	adds	r2, r7, r4
 8002cec:	2100      	movs	r1, #0
 8002cee:	5e51      	ldrsh	r1, [r2, r1]
 8002cf0:	b28a      	uxth	r2, r1
 8002cf2:	3201      	adds	r2, #1
 8002cf4:	b290      	uxth	r0, r2
 8002cf6:	193a      	adds	r2, r7, r4
 8002cf8:	8010      	strh	r0, [r2, #0]
 8002cfa:	000a      	movs	r2, r1
 8002cfc:	3337      	adds	r3, #55	@ 0x37
 8002cfe:	b2d9      	uxtb	r1, r3
 8002d00:	230c      	movs	r3, #12
 8002d02:	18fb      	adds	r3, r7, r3
 8002d04:	5499      	strb	r1, [r3, r2]
		while (number)
 8002d06:	687b      	ldr	r3, [r7, #4]
 8002d08:	2b00      	cmp	r3, #0
 8002d0a:	d1ba      	bne.n	8002c82 <printStates+0x22>
		}
		/* Terminate string */
		x_str[n] = '\0';
 8002d0c:	2334      	movs	r3, #52	@ 0x34
 8002d0e:	18fb      	adds	r3, r7, r3
 8002d10:	2200      	movs	r2, #0
 8002d12:	5e9b      	ldrsh	r3, [r3, r2]
 8002d14:	220c      	movs	r2, #12
 8002d16:	18ba      	adds	r2, r7, r2
 8002d18:	2100      	movs	r1, #0
 8002d1a:	54d1      	strb	r1, [r2, r3]
		/* Reverse string */
		for (i=0; i<n/2; i++)
 8002d1c:	2336      	movs	r3, #54	@ 0x36
 8002d1e:	18fb      	adds	r3, r7, r3
 8002d20:	2200      	movs	r2, #0
 8002d22:	801a      	strh	r2, [r3, #0]
 8002d24:	e02d      	b.n	8002d82 <printStates+0x122>
		{
			t = x_str[i];
 8002d26:	2036      	movs	r0, #54	@ 0x36
 8002d28:	183b      	adds	r3, r7, r0
 8002d2a:	2200      	movs	r2, #0
 8002d2c:	5e9a      	ldrsh	r2, [r3, r2]
 8002d2e:	2531      	movs	r5, #49	@ 0x31
 8002d30:	197b      	adds	r3, r7, r5
 8002d32:	240c      	movs	r4, #12
 8002d34:	1939      	adds	r1, r7, r4
 8002d36:	5c8a      	ldrb	r2, [r1, r2]
 8002d38:	701a      	strb	r2, [r3, #0]
			x_str[i] = x_str[n-i-1];
 8002d3a:	2634      	movs	r6, #52	@ 0x34
 8002d3c:	19bb      	adds	r3, r7, r6
 8002d3e:	2200      	movs	r2, #0
 8002d40:	5e9a      	ldrsh	r2, [r3, r2]
 8002d42:	183b      	adds	r3, r7, r0
 8002d44:	2100      	movs	r1, #0
 8002d46:	5e5b      	ldrsh	r3, [r3, r1]
 8002d48:	1ad3      	subs	r3, r2, r3
 8002d4a:	1e5a      	subs	r2, r3, #1
 8002d4c:	183b      	adds	r3, r7, r0
 8002d4e:	2100      	movs	r1, #0
 8002d50:	5e5b      	ldrsh	r3, [r3, r1]
 8002d52:	1939      	adds	r1, r7, r4
 8002d54:	5c89      	ldrb	r1, [r1, r2]
 8002d56:	193a      	adds	r2, r7, r4
 8002d58:	54d1      	strb	r1, [r2, r3]
			x_str[n-i-1] = t;
 8002d5a:	19bb      	adds	r3, r7, r6
 8002d5c:	2200      	movs	r2, #0
 8002d5e:	5e9a      	ldrsh	r2, [r3, r2]
 8002d60:	183b      	adds	r3, r7, r0
 8002d62:	2100      	movs	r1, #0
 8002d64:	5e5b      	ldrsh	r3, [r3, r1]
 8002d66:	1ad3      	subs	r3, r2, r3
 8002d68:	3b01      	subs	r3, #1
 8002d6a:	193a      	adds	r2, r7, r4
 8002d6c:	1979      	adds	r1, r7, r5
 8002d6e:	7809      	ldrb	r1, [r1, #0]
 8002d70:	54d1      	strb	r1, [r2, r3]
		for (i=0; i<n/2; i++)
 8002d72:	183b      	adds	r3, r7, r0
 8002d74:	2200      	movs	r2, #0
 8002d76:	5e9b      	ldrsh	r3, [r3, r2]
 8002d78:	b29b      	uxth	r3, r3
 8002d7a:	3301      	adds	r3, #1
 8002d7c:	b29a      	uxth	r2, r3
 8002d7e:	183b      	adds	r3, r7, r0
 8002d80:	801a      	strh	r2, [r3, #0]
 8002d82:	2334      	movs	r3, #52	@ 0x34
 8002d84:	18fb      	adds	r3, r7, r3
 8002d86:	2200      	movs	r2, #0
 8002d88:	5e9b      	ldrsh	r3, [r3, r2]
 8002d8a:	2b00      	cmp	r3, #0
 8002d8c:	da00      	bge.n	8002d90 <printStates+0x130>
 8002d8e:	3301      	adds	r3, #1
 8002d90:	105b      	asrs	r3, r3, #1
 8002d92:	b21b      	sxth	r3, r3
 8002d94:	2236      	movs	r2, #54	@ 0x36
 8002d96:	18ba      	adds	r2, r7, r2
 8002d98:	2100      	movs	r1, #0
 8002d9a:	5e52      	ldrsh	r2, [r2, r1]
 8002d9c:	429a      	cmp	r2, r3
 8002d9e:	dbc2      	blt.n	8002d26 <printStates+0xc6>
	    }
		if (x_str[0]=='\0')
 8002da0:	230c      	movs	r3, #12
 8002da2:	18fb      	adds	r3, r7, r3
 8002da4:	781b      	ldrb	r3, [r3, #0]
 8002da6:	2b00      	cmp	r3, #0
 8002da8:	d104      	bne.n	8002db4 <printStates+0x154>
		{
			TransmitString_TII("0");
 8002daa:	4b07      	ldr	r3, [pc, #28]	@ (8002dc8 <printStates+0x168>)
 8002dac:	0018      	movs	r0, r3
 8002dae:	f000 fb77 	bl	80034a0 <TransmitString_TII>
		{
			TransmitString_TII(x_str);

		}

}
 8002db2:	e004      	b.n	8002dbe <printStates+0x15e>
			TransmitString_TII(x_str);
 8002db4:	230c      	movs	r3, #12
 8002db6:	18fb      	adds	r3, r7, r3
 8002db8:	0018      	movs	r0, r3
 8002dba:	f000 fb71 	bl	80034a0 <TransmitString_TII>
}
 8002dbe:	46c0      	nop			@ (mov r8, r8)
 8002dc0:	46bd      	mov	sp, r7
 8002dc2:	b00f      	add	sp, #60	@ 0x3c
 8002dc4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002dc6:	46c0      	nop			@ (mov r8, r8)
 8002dc8:	08004610 	.word	0x08004610

08002dcc <statesToInt>:

void statesToInt(double x, int decimal_places)
{
 8002dcc:	b5b0      	push	{r4, r5, r7, lr}
 8002dce:	b090      	sub	sp, #64	@ 0x40
 8002dd0:	af00      	add	r7, sp, #0
 8002dd2:	60b8      	str	r0, [r7, #8]
 8002dd4:	60f9      	str	r1, [r7, #12]
 8002dd6:	607a      	str	r2, [r7, #4]
    char *tmpSign = (x < 0) ? "-" : "";
 8002dd8:	2200      	movs	r2, #0
 8002dda:	2300      	movs	r3, #0
 8002ddc:	68b8      	ldr	r0, [r7, #8]
 8002dde:	68f9      	ldr	r1, [r7, #12]
 8002de0:	f7fd fb1e 	bl	8000420 <__aeabi_dcmplt>
 8002de4:	1e03      	subs	r3, r0, #0
 8002de6:	d001      	beq.n	8002dec <statesToInt+0x20>
 8002de8:	4b3a      	ldr	r3, [pc, #232]	@ (8002ed4 <statesToInt+0x108>)
 8002dea:	e000      	b.n	8002dee <statesToInt+0x22>
 8002dec:	4b3a      	ldr	r3, [pc, #232]	@ (8002ed8 <statesToInt+0x10c>)
 8002dee:	637b      	str	r3, [r7, #52]	@ 0x34
    double tmpVal = (x < 0) ? -x : x;
 8002df0:	2200      	movs	r2, #0
 8002df2:	2300      	movs	r3, #0
 8002df4:	68b8      	ldr	r0, [r7, #8]
 8002df6:	68f9      	ldr	r1, [r7, #12]
 8002df8:	f7fd fb12 	bl	8000420 <__aeabi_dcmplt>
 8002dfc:	1e03      	subs	r3, r0, #0
 8002dfe:	d007      	beq.n	8002e10 <statesToInt+0x44>
 8002e00:	68bb      	ldr	r3, [r7, #8]
 8002e02:	001c      	movs	r4, r3
 8002e04:	68fb      	ldr	r3, [r7, #12]
 8002e06:	2280      	movs	r2, #128	@ 0x80
 8002e08:	0612      	lsls	r2, r2, #24
 8002e0a:	405a      	eors	r2, r3
 8002e0c:	0015      	movs	r5, r2
 8002e0e:	e001      	b.n	8002e14 <statesToInt+0x48>
 8002e10:	68bc      	ldr	r4, [r7, #8]
 8002e12:	68fd      	ldr	r5, [r7, #12]
 8002e14:	62bc      	str	r4, [r7, #40]	@ 0x28
 8002e16:	62fd      	str	r5, [r7, #44]	@ 0x2c

    // Calculate multiplier based on desired decimal places
    int multiplier = 1;
 8002e18:	2301      	movs	r3, #1
 8002e1a:	63fb      	str	r3, [r7, #60]	@ 0x3c
    for(int i = 0; i < decimal_places; i++) {
 8002e1c:	2300      	movs	r3, #0
 8002e1e:	63bb      	str	r3, [r7, #56]	@ 0x38
 8002e20:	e008      	b.n	8002e34 <statesToInt+0x68>
        multiplier *= 10;
 8002e22:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 8002e24:	0013      	movs	r3, r2
 8002e26:	009b      	lsls	r3, r3, #2
 8002e28:	189b      	adds	r3, r3, r2
 8002e2a:	005b      	lsls	r3, r3, #1
 8002e2c:	63fb      	str	r3, [r7, #60]	@ 0x3c
    for(int i = 0; i < decimal_places; i++) {
 8002e2e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8002e30:	3301      	adds	r3, #1
 8002e32:	63bb      	str	r3, [r7, #56]	@ 0x38
 8002e34:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8002e36:	687b      	ldr	r3, [r7, #4]
 8002e38:	429a      	cmp	r2, r3
 8002e3a:	dbf2      	blt.n	8002e22 <statesToInt+0x56>
    }

    // Round to avoid floating-point precision issues
    tmpVal = tmpVal + 0.5 / multiplier;
 8002e3c:	6bf8      	ldr	r0, [r7, #60]	@ 0x3c
 8002e3e:	f7ff fa61 	bl	8002304 <__aeabi_i2d>
 8002e42:	0002      	movs	r2, r0
 8002e44:	000b      	movs	r3, r1
 8002e46:	2000      	movs	r0, #0
 8002e48:	4924      	ldr	r1, [pc, #144]	@ (8002edc <statesToInt+0x110>)
 8002e4a:	f7fd fef5 	bl	8000c38 <__aeabi_ddiv>
 8002e4e:	0002      	movs	r2, r0
 8002e50:	000b      	movs	r3, r1
 8002e52:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8002e54:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8002e56:	f7fd fb29 	bl	80004ac <__aeabi_dadd>
 8002e5a:	0002      	movs	r2, r0
 8002e5c:	000b      	movs	r3, r1
 8002e5e:	62ba      	str	r2, [r7, #40]	@ 0x28
 8002e60:	62fb      	str	r3, [r7, #44]	@ 0x2c

    int tmpInt1 = (int)tmpVal;                              // Integer part
 8002e62:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8002e64:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8002e66:	f7ff fa11 	bl	800228c <__aeabi_d2iz>
 8002e6a:	0003      	movs	r3, r0
 8002e6c:	627b      	str	r3, [r7, #36]	@ 0x24
    double tmpFrac = tmpVal - tmpInt1;                      // Fractional part
 8002e6e:	6a78      	ldr	r0, [r7, #36]	@ 0x24
 8002e70:	f7ff fa48 	bl	8002304 <__aeabi_i2d>
 8002e74:	0002      	movs	r2, r0
 8002e76:	000b      	movs	r3, r1
 8002e78:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8002e7a:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8002e7c:	f7fe fdfc 	bl	8001a78 <__aeabi_dsub>
 8002e80:	0002      	movs	r2, r0
 8002e82:	000b      	movs	r3, r1
 8002e84:	61ba      	str	r2, [r7, #24]
 8002e86:	61fb      	str	r3, [r7, #28]
    int tmpInt2 = (int)(tmpFrac * multiplier);              // Fractional digits as integer
 8002e88:	6bf8      	ldr	r0, [r7, #60]	@ 0x3c
 8002e8a:	f7ff fa3b 	bl	8002304 <__aeabi_i2d>
 8002e8e:	69ba      	ldr	r2, [r7, #24]
 8002e90:	69fb      	ldr	r3, [r7, #28]
 8002e92:	f7fe fb0b 	bl	80014ac <__aeabi_dmul>
 8002e96:	0002      	movs	r2, r0
 8002e98:	000b      	movs	r3, r1
 8002e9a:	0010      	movs	r0, r2
 8002e9c:	0019      	movs	r1, r3
 8002e9e:	f7ff f9f5 	bl	800228c <__aeabi_d2iz>
 8002ea2:	0003      	movs	r3, r0
 8002ea4:	617b      	str	r3, [r7, #20]

    TransmitString_TII(tmpSign);
 8002ea6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8002ea8:	0018      	movs	r0, r3
 8002eaa:	f000 faf9 	bl	80034a0 <TransmitString_TII>
    printStates(tmpInt1);
 8002eae:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002eb0:	0018      	movs	r0, r3
 8002eb2:	f7ff fed5 	bl	8002c60 <printStates>
    TransmitString_TII(".");
 8002eb6:	4b0a      	ldr	r3, [pc, #40]	@ (8002ee0 <statesToInt+0x114>)
 8002eb8:	0018      	movs	r0, r3
 8002eba:	f000 faf1 	bl	80034a0 <TransmitString_TII>

    // Print fractional part with leading zeros
    printStatesWithLeadingZeros(tmpInt2, decimal_places);
 8002ebe:	687a      	ldr	r2, [r7, #4]
 8002ec0:	697b      	ldr	r3, [r7, #20]
 8002ec2:	0011      	movs	r1, r2
 8002ec4:	0018      	movs	r0, r3
 8002ec6:	f000 f80d 	bl	8002ee4 <printStatesWithLeadingZeros>
}
 8002eca:	46c0      	nop			@ (mov r8, r8)
 8002ecc:	46bd      	mov	sp, r7
 8002ece:	b010      	add	sp, #64	@ 0x40
 8002ed0:	bdb0      	pop	{r4, r5, r7, pc}
 8002ed2:	46c0      	nop			@ (mov r8, r8)
 8002ed4:	08004614 	.word	0x08004614
 8002ed8:	08004618 	.word	0x08004618
 8002edc:	3fe00000 	.word	0x3fe00000
 8002ee0:	0800461c 	.word	0x0800461c

08002ee4 <printStatesWithLeadingZeros>:

// Modified printStates to handle leading zeros for decimal part
void printStatesWithLeadingZeros(int number, int min_digits)
{
 8002ee4:	b580      	push	{r7, lr}
 8002ee6:	b08e      	sub	sp, #56	@ 0x38
 8002ee8:	af00      	add	r7, sp, #0
 8002eea:	6078      	str	r0, [r7, #4]
 8002eec:	6039      	str	r1, [r7, #0]
    char x_str[32];
    int n = 0, i;
 8002eee:	2300      	movs	r3, #0
 8002ef0:	637b      	str	r3, [r7, #52]	@ 0x34

    // Handle zero case
    if (number == 0) {
 8002ef2:	687b      	ldr	r3, [r7, #4]
 8002ef4:	2b00      	cmp	r3, #0
 8002ef6:	d10e      	bne.n	8002f16 <printStatesWithLeadingZeros+0x32>
        for(i = 0; i < min_digits; i++) {
 8002ef8:	2300      	movs	r3, #0
 8002efa:	633b      	str	r3, [r7, #48]	@ 0x30
 8002efc:	e006      	b.n	8002f0c <printStatesWithLeadingZeros+0x28>
            TransmitString_TII("0");
 8002efe:	4b28      	ldr	r3, [pc, #160]	@ (8002fa0 <printStatesWithLeadingZeros+0xbc>)
 8002f00:	0018      	movs	r0, r3
 8002f02:	f000 facd 	bl	80034a0 <TransmitString_TII>
        for(i = 0; i < min_digits; i++) {
 8002f06:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8002f08:	3301      	adds	r3, #1
 8002f0a:	633b      	str	r3, [r7, #48]	@ 0x30
 8002f0c:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8002f0e:	683b      	ldr	r3, [r7, #0]
 8002f10:	429a      	cmp	r2, r3
 8002f12:	dbf4      	blt.n	8002efe <printStatesWithLeadingZeros+0x1a>
        }
        return;
 8002f14:	e040      	b.n	8002f98 <printStatesWithLeadingZeros+0xb4>
    }

    // Convert number to string
    int temp = number;
 8002f16:	687b      	ldr	r3, [r7, #4]
 8002f18:	62fb      	str	r3, [r7, #44]	@ 0x2c
    while (temp > 0) {
 8002f1a:	e015      	b.n	8002f48 <printStatesWithLeadingZeros+0x64>
        x_str[n++] = (temp % 10) + '0';
 8002f1c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8002f1e:	210a      	movs	r1, #10
 8002f20:	0018      	movs	r0, r3
 8002f22:	f7fd fa61 	bl	80003e8 <__aeabi_idivmod>
 8002f26:	000b      	movs	r3, r1
 8002f28:	b2da      	uxtb	r2, r3
 8002f2a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8002f2c:	1c59      	adds	r1, r3, #1
 8002f2e:	6379      	str	r1, [r7, #52]	@ 0x34
 8002f30:	3230      	adds	r2, #48	@ 0x30
 8002f32:	b2d1      	uxtb	r1, r2
 8002f34:	220c      	movs	r2, #12
 8002f36:	18ba      	adds	r2, r7, r2
 8002f38:	54d1      	strb	r1, [r2, r3]
        temp /= 10;
 8002f3a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8002f3c:	210a      	movs	r1, #10
 8002f3e:	0018      	movs	r0, r3
 8002f40:	f7fd f96c 	bl	800021c <__divsi3>
 8002f44:	0003      	movs	r3, r0
 8002f46:	62fb      	str	r3, [r7, #44]	@ 0x2c
    while (temp > 0) {
 8002f48:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8002f4a:	2b00      	cmp	r3, #0
 8002f4c:	dce6      	bgt.n	8002f1c <printStatesWithLeadingZeros+0x38>
    }

    // Add leading zeros if needed
    while (n < min_digits) {
 8002f4e:	e006      	b.n	8002f5e <printStatesWithLeadingZeros+0x7a>
        x_str[n++] = '0';
 8002f50:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8002f52:	1c5a      	adds	r2, r3, #1
 8002f54:	637a      	str	r2, [r7, #52]	@ 0x34
 8002f56:	220c      	movs	r2, #12
 8002f58:	18ba      	adds	r2, r7, r2
 8002f5a:	2130      	movs	r1, #48	@ 0x30
 8002f5c:	54d1      	strb	r1, [r2, r3]
    while (n < min_digits) {
 8002f5e:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8002f60:	683b      	ldr	r3, [r7, #0]
 8002f62:	429a      	cmp	r2, r3
 8002f64:	dbf4      	blt.n	8002f50 <printStatesWithLeadingZeros+0x6c>
    }

    // Reverse and transmit
    for (i = n - 1; i >= 0; i--) {
 8002f66:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8002f68:	3b01      	subs	r3, #1
 8002f6a:	633b      	str	r3, [r7, #48]	@ 0x30
 8002f6c:	e011      	b.n	8002f92 <printStatesWithLeadingZeros+0xae>
        char single_char[2] = {x_str[i], '\0'};
 8002f6e:	230c      	movs	r3, #12
 8002f70:	18fa      	adds	r2, r7, r3
 8002f72:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8002f74:	18d3      	adds	r3, r2, r3
 8002f76:	781a      	ldrb	r2, [r3, #0]
 8002f78:	2108      	movs	r1, #8
 8002f7a:	187b      	adds	r3, r7, r1
 8002f7c:	701a      	strb	r2, [r3, #0]
 8002f7e:	187b      	adds	r3, r7, r1
 8002f80:	2200      	movs	r2, #0
 8002f82:	705a      	strb	r2, [r3, #1]
        TransmitString_TII(single_char);
 8002f84:	187b      	adds	r3, r7, r1
 8002f86:	0018      	movs	r0, r3
 8002f88:	f000 fa8a 	bl	80034a0 <TransmitString_TII>
    for (i = n - 1; i >= 0; i--) {
 8002f8c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8002f8e:	3b01      	subs	r3, #1
 8002f90:	633b      	str	r3, [r7, #48]	@ 0x30
 8002f92:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8002f94:	2b00      	cmp	r3, #0
 8002f96:	daea      	bge.n	8002f6e <printStatesWithLeadingZeros+0x8a>
    }
}
 8002f98:	46bd      	mov	sp, r7
 8002f9a:	b00e      	add	sp, #56	@ 0x38
 8002f9c:	bd80      	pop	{r7, pc}
 8002f9e:	46c0      	nop			@ (mov r8, r8)
 8002fa0:	08004610 	.word	0x08004610

08002fa4 <Get_LocalClock>:
void Inc_LocalClock(void)
{
	local_tick++;
}
uint32_t Get_LocalClock(void)
{
 8002fa4:	b580      	push	{r7, lr}
 8002fa6:	af00      	add	r7, sp, #0
	return local_tick;
 8002fa8:	4b02      	ldr	r3, [pc, #8]	@ (8002fb4 <Get_LocalClock+0x10>)
 8002faa:	681b      	ldr	r3, [r3, #0]
}
 8002fac:	0018      	movs	r0, r3
 8002fae:	46bd      	mov	sp, r7
 8002fb0:	bd80      	pop	{r7, pc}
 8002fb2:	46c0      	nop			@ (mov r8, r8)
 8002fb4:	20000260 	.word	0x20000260

08002fb8 <main>:
  * Brief  Main program.
  * Param  None
  * Return None
  */
int main(void)
{
 8002fb8:	b580      	push	{r7, lr}
 8002fba:	b08a      	sub	sp, #40	@ 0x28
 8002fbc:	af00      	add	r7, sp, #0
     * this is done through SystemInit() function which is called from startup
     * file (startup_stm32f072xb.s) before to branch to application main.
     * To reconfigure the default setting of SystemInit() function, refer to
     * system_stm32f0xx.c file
     */
	SysTick_Config(80000);
 8002fbe:	4b3f      	ldr	r3, [pc, #252]	@ (80030bc <main+0x104>)
 8002fc0:	0018      	movs	r0, r3
 8002fc2:	f7ff fe29 	bl	8002c18 <SysTick_Config>

	Configure_GlobalClock();
 8002fc6:	f7ff fd3d 	bl	8002a44 <Configure_GlobalClock>

    ConfigureGPIO();
 8002fca:	f000 f885 	bl	80030d8 <ConfigureGPIO>
    ConfigureExternalIT();
 8002fce:	f000 f89b 	bl	8003108 <ConfigureExternalIT>
    ConfigureGPIO_TII(); // Used for monitoring the component
 8002fd2:	f000 f9cf 	bl	8003374 <ConfigureGPIO_TII>
    Configure_TII();
 8002fd6:	f000 f9f3 	bl	80033c0 <Configure_TII>
    Configure_CNI(); // For master-node communication
 8002fda:	f7ff fb29 	bl	8002630 <Configure_CNI>
    Configure_FakeSensor();
 8002fde:	f7ff fd0d 	bl	80029fc <Configure_FakeSensor>

    /* Initialize Simulink model */
     Undamped_initialize();
 8002fe2:	f7ff fa75 	bl	80024d0 <Undamped_initialize>
     TransmitString_TII("Pendulum Plant Emulator Started\r\n");
 8002fe6:	4b36      	ldr	r3, [pc, #216]	@ (80030c0 <main+0x108>)
 8002fe8:	0018      	movs	r0, r3
 8002fea:	f000 fa59 	bl	80034a0 <TransmitString_TII>

     uint32_t tick=0;
 8002fee:	2300      	movs	r3, #0
 8002ff0:	627b      	str	r3, [r7, #36]	@ 0x24
     uint32_t lasttick=0;
 8002ff2:	2300      	movs	r3, #0
 8002ff4:	623b      	str	r3, [r7, #32]

    while(1) // Infinite loop
    {
    	if(mode == MASTER)
 8002ff6:	4b33      	ldr	r3, [pc, #204]	@ (80030c4 <main+0x10c>)
 8002ff8:	781b      	ldrb	r3, [r3, #0]
 8002ffa:	b2db      	uxtb	r3, r3
 8002ffc:	2b01      	cmp	r3, #1
 8002ffe:	d0fa      	beq.n	8002ff6 <main+0x3e>
    	{
        	;
    	}
    	else // Node
    	{
    		lasttick = tick;
 8003000:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003002:	623b      	str	r3, [r7, #32]
        	tick= Get_LocalClock();
 8003004:	f7ff ffce 	bl	8002fa4 <Get_LocalClock>
 8003008:	0003      	movs	r3, r0
 800300a:	627b      	str	r3, [r7, #36]	@ 0x24
        	if (tick>lasttick)
 800300c:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800300e:	6a3b      	ldr	r3, [r7, #32]
 8003010:	429a      	cmp	r2, r3
 8003012:	d9f0      	bls.n	8002ff6 <main+0x3e>
        	{
        		IncomingMessageHandler_CNI();
 8003014:	f7ff fb30 	bl	8002678 <IncomingMessageHandler_CNI>
        		// Execute one simulation step
        		Undamped_step();
 8003018:	f7ff f9e4 	bl	80023e4 <Undamped_step>

        		// Output data in the format: torque, acceleration, velocity, displacement
        		statesToInt(rtU.controlTorque, 3);
 800301c:	4b2a      	ldr	r3, [pc, #168]	@ (80030c8 <main+0x110>)
 800301e:	6818      	ldr	r0, [r3, #0]
 8003020:	6859      	ldr	r1, [r3, #4]
 8003022:	2203      	movs	r2, #3
 8003024:	f7ff fed2 	bl	8002dcc <statesToInt>
        		TransmitString_TII((char*)" ");  // Input torque
 8003028:	4b28      	ldr	r3, [pc, #160]	@ (80030cc <main+0x114>)
 800302a:	0018      	movs	r0, r3
 800302c:	f000 fa38 	bl	80034a0 <TransmitString_TII>
        		statesToInt(rtY.thetaDoubleDot, 3);     // Angular acceleration
 8003030:	4b27      	ldr	r3, [pc, #156]	@ (80030d0 <main+0x118>)
 8003032:	6918      	ldr	r0, [r3, #16]
 8003034:	6959      	ldr	r1, [r3, #20]
 8003036:	2203      	movs	r2, #3
 8003038:	f7ff fec8 	bl	8002dcc <statesToInt>
        		TransmitString_TII(" ");
 800303c:	4b23      	ldr	r3, [pc, #140]	@ (80030cc <main+0x114>)
 800303e:	0018      	movs	r0, r3
 8003040:	f000 fa2e 	bl	80034a0 <TransmitString_TII>
        		statesToInt(rtY.thetaDot, 3);           // Angular velocity
 8003044:	4b22      	ldr	r3, [pc, #136]	@ (80030d0 <main+0x118>)
 8003046:	6898      	ldr	r0, [r3, #8]
 8003048:	68d9      	ldr	r1, [r3, #12]
 800304a:	2203      	movs	r2, #3
 800304c:	f7ff febe 	bl	8002dcc <statesToInt>
        		TransmitString_TII(" ");
 8003050:	4b1e      	ldr	r3, [pc, #120]	@ (80030cc <main+0x114>)
 8003052:	0018      	movs	r0, r3
 8003054:	f000 fa24 	bl	80034a0 <TransmitString_TII>
        		statesToInt(rtY.theta, 3);              // Angular position
 8003058:	4b1d      	ldr	r3, [pc, #116]	@ (80030d0 <main+0x118>)
 800305a:	6818      	ldr	r0, [r3, #0]
 800305c:	6859      	ldr	r1, [r3, #4]
 800305e:	2203      	movs	r2, #3
 8003060:	f7ff feb4 	bl	8002dcc <statesToInt>
        		TransmitString_TII(" ");
 8003064:	4b19      	ldr	r3, [pc, #100]	@ (80030cc <main+0x114>)
 8003066:	0018      	movs	r0, r3
 8003068:	f000 fa1a 	bl	80034a0 <TransmitString_TII>
        		statesToInt((double)Get_GlobalClock(), 3);        // Show global clock
 800306c:	f7ff fcf4 	bl	8002a58 <Get_GlobalClock>
 8003070:	0003      	movs	r3, r0
 8003072:	0018      	movs	r0, r3
 8003074:	f7ff f974 	bl	8002360 <__aeabi_ui2d>
 8003078:	2203      	movs	r2, #3
 800307a:	f7ff fea7 	bl	8002dcc <statesToInt>

        		TransmitString_TII("\r\n");
 800307e:	4b15      	ldr	r3, [pc, #84]	@ (80030d4 <main+0x11c>)
 8003080:	0018      	movs	r0, r3
 8003082:	f000 fa0d 	bl	80034a0 <TransmitString_TII>

        		observation_t obs =
 8003086:	003b      	movs	r3, r7
 8003088:	2201      	movs	r2, #1
 800308a:	701a      	strb	r2, [r3, #0]
        			{1, (double)rtY.thetaDoubleDot, (double)rtY.thetaDot, (double)rtY.theta};
 800308c:	4b10      	ldr	r3, [pc, #64]	@ (80030d0 <main+0x118>)
 800308e:	691a      	ldr	r2, [r3, #16]
 8003090:	695b      	ldr	r3, [r3, #20]
        		observation_t obs =
 8003092:	0039      	movs	r1, r7
 8003094:	608a      	str	r2, [r1, #8]
 8003096:	60cb      	str	r3, [r1, #12]
        			{1, (double)rtY.thetaDoubleDot, (double)rtY.thetaDot, (double)rtY.theta};
 8003098:	4b0d      	ldr	r3, [pc, #52]	@ (80030d0 <main+0x118>)
 800309a:	689a      	ldr	r2, [r3, #8]
 800309c:	68db      	ldr	r3, [r3, #12]
        		observation_t obs =
 800309e:	0039      	movs	r1, r7
 80030a0:	610a      	str	r2, [r1, #16]
 80030a2:	614b      	str	r3, [r1, #20]
        			{1, (double)rtY.thetaDoubleDot, (double)rtY.thetaDot, (double)rtY.theta};
 80030a4:	4b0a      	ldr	r3, [pc, #40]	@ (80030d0 <main+0x118>)
 80030a6:	681a      	ldr	r2, [r3, #0]
 80030a8:	685b      	ldr	r3, [r3, #4]
        		observation_t obs =
 80030aa:	0039      	movs	r1, r7
 80030ac:	618a      	str	r2, [r1, #24]
 80030ae:	61cb      	str	r3, [r1, #28]

        		// Transmit the observation message
        		TransmitMessage_CNI(&obs);
 80030b0:	003b      	movs	r3, r7
 80030b2:	0018      	movs	r0, r3
 80030b4:	f7ff fac5 	bl	8002642 <TransmitMessage_CNI>
    	if(mode == MASTER)
 80030b8:	e79d      	b.n	8002ff6 <main+0x3e>
 80030ba:	46c0      	nop			@ (mov r8, r8)
 80030bc:	00013880 	.word	0x00013880
 80030c0:	08004620 	.word	0x08004620
 80030c4:	2000025c 	.word	0x2000025c
 80030c8:	20000030 	.word	0x20000030
 80030cc:	08004644 	.word	0x08004644
 80030d0:	20000038 	.word	0x20000038
 80030d4:	08004648 	.word	0x08004648

080030d8 <ConfigureGPIO>:
  *        - configures GPIO PA5 in output mode for the Green LED pin
  * Param  None
  * Return None
  */
inline void ConfigureGPIO(void)
{  
 80030d8:	b580      	push	{r7, lr}
 80030da:	af00      	add	r7, sp, #0
    // 1. Enable the peripheral clock of GPIOA
    // 2. Select output mode (01) on PA5
    RCC->AHBENR |= RCC_AHBENR_GPIOAEN;
 80030dc:	4b09      	ldr	r3, [pc, #36]	@ (8003104 <ConfigureGPIO+0x2c>)
 80030de:	695a      	ldr	r2, [r3, #20]
 80030e0:	4b08      	ldr	r3, [pc, #32]	@ (8003104 <ConfigureGPIO+0x2c>)
 80030e2:	2180      	movs	r1, #128	@ 0x80
 80030e4:	0289      	lsls	r1, r1, #10
 80030e6:	430a      	orrs	r2, r1
 80030e8:	615a      	str	r2, [r3, #20]
    GPIOA->MODER |= GPIO_MODER_MODER5_0;
 80030ea:	2390      	movs	r3, #144	@ 0x90
 80030ec:	05db      	lsls	r3, r3, #23
 80030ee:	681a      	ldr	r2, [r3, #0]
 80030f0:	2390      	movs	r3, #144	@ 0x90
 80030f2:	05db      	lsls	r3, r3, #23
 80030f4:	2180      	movs	r1, #128	@ 0x80
 80030f6:	00c9      	lsls	r1, r1, #3
 80030f8:	430a      	orrs	r2, r1
 80030fa:	601a      	str	r2, [r3, #0]
}
 80030fc:	46c0      	nop			@ (mov r8, r8)
 80030fe:	46bd      	mov	sp, r7
 8003100:	bd80      	pop	{r7, pc}
 8003102:	46c0      	nop			@ (mov r8, r8)
 8003104:	40021000 	.word	0x40021000

08003108 <ConfigureExternalIT>:
  *        - configures NVIC IRQ
  * Param  None
  * Return None
  */
inline void ConfigureExternalIT(void)
{  
 8003108:	b580      	push	{r7, lr}
 800310a:	af00      	add	r7, sp, #0
    // 1. Enable the peripheral clock of SYSCFG
    // 2. Enable the peripheral clock of GPIOC
    // 3. Select PORTC for EXTI13 by writing 0010 in SYSCFG_EXTICR4
    // 4. Configure the corresponding mask bit in the EXTI_IMR register
    // 5. Configure the Trigger Selection bits on falling edge
    RCC->APB2ENR |= RCC_APB2ENR_SYSCFGCOMPEN;
 800310c:	4b15      	ldr	r3, [pc, #84]	@ (8003164 <ConfigureExternalIT+0x5c>)
 800310e:	699a      	ldr	r2, [r3, #24]
 8003110:	4b14      	ldr	r3, [pc, #80]	@ (8003164 <ConfigureExternalIT+0x5c>)
 8003112:	2101      	movs	r1, #1
 8003114:	430a      	orrs	r2, r1
 8003116:	619a      	str	r2, [r3, #24]
    RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 8003118:	4b12      	ldr	r3, [pc, #72]	@ (8003164 <ConfigureExternalIT+0x5c>)
 800311a:	695a      	ldr	r2, [r3, #20]
 800311c:	4b11      	ldr	r3, [pc, #68]	@ (8003164 <ConfigureExternalIT+0x5c>)
 800311e:	2180      	movs	r1, #128	@ 0x80
 8003120:	0309      	lsls	r1, r1, #12
 8003122:	430a      	orrs	r2, r1
 8003124:	615a      	str	r2, [r3, #20]
    SYSCFG->EXTICR[3] |= SYSCFG_EXTICR4_EXTI13_PC;
 8003126:	4b10      	ldr	r3, [pc, #64]	@ (8003168 <ConfigureExternalIT+0x60>)
 8003128:	695a      	ldr	r2, [r3, #20]
 800312a:	4b0f      	ldr	r3, [pc, #60]	@ (8003168 <ConfigureExternalIT+0x60>)
 800312c:	2120      	movs	r1, #32
 800312e:	430a      	orrs	r2, r1
 8003130:	615a      	str	r2, [r3, #20]
    EXTI->IMR |= EXTI_IMR_MR13;
 8003132:	4b0e      	ldr	r3, [pc, #56]	@ (800316c <ConfigureExternalIT+0x64>)
 8003134:	681a      	ldr	r2, [r3, #0]
 8003136:	4b0d      	ldr	r3, [pc, #52]	@ (800316c <ConfigureExternalIT+0x64>)
 8003138:	2180      	movs	r1, #128	@ 0x80
 800313a:	0189      	lsls	r1, r1, #6
 800313c:	430a      	orrs	r2, r1
 800313e:	601a      	str	r2, [r3, #0]
    EXTI->FTSR |= EXTI_FTSR_TR13;
 8003140:	4b0a      	ldr	r3, [pc, #40]	@ (800316c <ConfigureExternalIT+0x64>)
 8003142:	68da      	ldr	r2, [r3, #12]
 8003144:	4b09      	ldr	r3, [pc, #36]	@ (800316c <ConfigureExternalIT+0x64>)
 8003146:	2180      	movs	r1, #128	@ 0x80
 8003148:	0189      	lsls	r1, r1, #6
 800314a:	430a      	orrs	r2, r1
 800314c:	60da      	str	r2, [r3, #12]

    // Configure NVIC for External Interrupt
    // 6. Set priority for EXTI4_15
    // 7. Enable Interrupt on EXTI4_15
    NVIC_SetPriority(EXTI4_15_IRQn, 3);
 800314e:	2103      	movs	r1, #3
 8003150:	2007      	movs	r0, #7
 8003152:	f7ff fcf3 	bl	8002b3c <__NVIC_SetPriority>
    NVIC_EnableIRQ(EXTI4_15_IRQn);
 8003156:	2007      	movs	r0, #7
 8003158:	f7ff fcd6 	bl	8002b08 <__NVIC_EnableIRQ>
}
 800315c:	46c0      	nop			@ (mov r8, r8)
 800315e:	46bd      	mov	sp, r7
 8003160:	bd80      	pop	{r7, pc}
 8003162:	46c0      	nop			@ (mov r8, r8)
 8003164:	40021000 	.word	0x40021000
 8003168:	40010000 	.word	0x40010000
 800316c:	40010400 	.word	0x40010400

08003170 <NMI_Handler>:
  * Brief  This function handles NMI exception.
  * Param  None
  * Return None
  */
void NMI_Handler(void)
{
 8003170:	b580      	push	{r7, lr}
 8003172:	af00      	add	r7, sp, #0
}
 8003174:	46c0      	nop			@ (mov r8, r8)
 8003176:	46bd      	mov	sp, r7
 8003178:	bd80      	pop	{r7, pc}

0800317a <HardFault_Handler>:
  * Brief  This function handles Hard Fault exception.
  * Param  None
  * Return None
  */
void HardFault_Handler(void)
{
 800317a:	b580      	push	{r7, lr}
 800317c:	af00      	add	r7, sp, #0
    // Go to infinite loop when Hard Fault exception occurs
    while (1)
 800317e:	46c0      	nop			@ (mov r8, r8)
 8003180:	e7fd      	b.n	800317e <HardFault_Handler+0x4>

08003182 <SVC_Handler>:
  * Brief  This function handles SVCall exception.
  * Param  None
  * Return None
  */
void SVC_Handler(void)
{
 8003182:	b580      	push	{r7, lr}
 8003184:	af00      	add	r7, sp, #0
}
 8003186:	46c0      	nop			@ (mov r8, r8)
 8003188:	46bd      	mov	sp, r7
 800318a:	bd80      	pop	{r7, pc}

0800318c <PendSV_Handler>:
  * Brief  This function handles PendSVC exception.
  * Param  None
  * Return None
  */
void PendSV_Handler(void)
{
 800318c:	b580      	push	{r7, lr}
 800318e:	af00      	add	r7, sp, #0
}
 8003190:	46c0      	nop			@ (mov r8, r8)
 8003192:	46bd      	mov	sp, r7
 8003194:	bd80      	pop	{r7, pc}
	...

08003198 <SysTick_Handler>:
  * Brief  This function handles SysTick exception.
  * Param  None
  * Return None
  */
void SysTick_Handler(void)
{
 8003198:	b580      	push	{r7, lr}
 800319a:	af00      	add	r7, sp, #0
	// Increment local clock every 1ms
	local_tick++;
 800319c:	4b08      	ldr	r3, [pc, #32]	@ (80031c0 <SysTick_Handler+0x28>)
 800319e:	681b      	ldr	r3, [r3, #0]
 80031a0:	1c5a      	adds	r2, r3, #1
 80031a2:	4b07      	ldr	r3, [pc, #28]	@ (80031c0 <SysTick_Handler+0x28>)
 80031a4:	601a      	str	r2, [r3, #0]

	// Increment global clock every 50ms
	if((local_tick % 50) == 0)
 80031a6:	4b06      	ldr	r3, [pc, #24]	@ (80031c0 <SysTick_Handler+0x28>)
 80031a8:	681b      	ldr	r3, [r3, #0]
 80031aa:	2132      	movs	r1, #50	@ 0x32
 80031ac:	0018      	movs	r0, r3
 80031ae:	f7fd f831 	bl	8000214 <__aeabi_uidivmod>
 80031b2:	1e0b      	subs	r3, r1, #0
 80031b4:	d101      	bne.n	80031ba <SysTick_Handler+0x22>
	{
		// Write the RT image of the global clock
		Inc_GlobalClock();
 80031b6:	f7ff fc81 	bl	8002abc <Inc_GlobalClock>
	}
}
 80031ba:	46c0      	nop			@ (mov r8, r8)
 80031bc:	46bd      	mov	sp, r7
 80031be:	bd80      	pop	{r7, pc}
 80031c0:	20000260 	.word	0x20000260

080031c4 <EXTI4_15_IRQHandler>:
  * Brief  This function handles EXTI4_15 interrupt request.
  * Param  None
  * Return None
  */
void EXTI4_15_IRQHandler(void)
{
 80031c4:	b580      	push	{r7, lr}
 80031c6:	af00      	add	r7, sp, #0
    // Check line 13 has triggered the IT
    if ((EXTI->PR & EXTI_PR_PR13) != 0)
 80031c8:	4b10      	ldr	r3, [pc, #64]	@ (800320c <EXTI4_15_IRQHandler+0x48>)
 80031ca:	695a      	ldr	r2, [r3, #20]
 80031cc:	2380      	movs	r3, #128	@ 0x80
 80031ce:	019b      	lsls	r3, r3, #6
 80031d0:	4013      	ands	r3, r2
 80031d2:	d017      	beq.n	8003204 <EXTI4_15_IRQHandler+0x40>
    {
    	if(mode == MASTER)
 80031d4:	4b0e      	ldr	r3, [pc, #56]	@ (8003210 <EXTI4_15_IRQHandler+0x4c>)
 80031d6:	781b      	ldrb	r3, [r3, #0]
 80031d8:	b2db      	uxtb	r3, r3
 80031da:	2b01      	cmp	r3, #1
 80031dc:	d10b      	bne.n	80031f6 <EXTI4_15_IRQHandler+0x32>
    	{
			// Update the RT image of the fake sensor
			if(Get_FakeSensorValue() == 0)
 80031de:	f7ff fc17 	bl	8002a10 <Get_FakeSensorValue>
 80031e2:	1e03      	subs	r3, r0, #0
 80031e4:	d103      	bne.n	80031ee <EXTI4_15_IRQHandler+0x2a>
			{
				Set_FakeSensorValue(1);
 80031e6:	2001      	movs	r0, #1
 80031e8:	f7ff fc1c 	bl	8002a24 <Set_FakeSensorValue>
 80031ec:	e006      	b.n	80031fc <EXTI4_15_IRQHandler+0x38>
			}
			else
			{
				Set_FakeSensorValue(0);
 80031ee:	2000      	movs	r0, #0
 80031f0:	f7ff fc18 	bl	8002a24 <Set_FakeSensorValue>
 80031f4:	e002      	b.n	80031fc <EXTI4_15_IRQHandler+0x38>
			}
    	}
    	else
    	{
    		mode = MASTER;
 80031f6:	4b06      	ldr	r3, [pc, #24]	@ (8003210 <EXTI4_15_IRQHandler+0x4c>)
 80031f8:	2201      	movs	r2, #1
 80031fa:	701a      	strb	r2, [r3, #0]
    	}

        // Clear the pending bit
        EXTI->PR = EXTI_PR_PR13;
 80031fc:	4b03      	ldr	r3, [pc, #12]	@ (800320c <EXTI4_15_IRQHandler+0x48>)
 80031fe:	2280      	movs	r2, #128	@ 0x80
 8003200:	0192      	lsls	r2, r2, #6
 8003202:	615a      	str	r2, [r3, #20]
    }
    else // Should never occur
    {
        ;
    }
}
 8003204:	46c0      	nop			@ (mov r8, r8)
 8003206:	46bd      	mov	sp, r7
 8003208:	bd80      	pop	{r7, pc}
 800320a:	46c0      	nop			@ (mov r8, r8)
 800320c:	40010400 	.word	0x40010400
 8003210:	2000025c 	.word	0x2000025c

08003214 <SystemInit>:
  * @brief  Setup the microcontroller system
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8003214:	b580      	push	{r7, lr}
 8003216:	af00      	add	r7, sp, #0
                         before branch to main program. This call is made inside
                         the "startup_stm32f0xx.s" file.
                         User can setups the default system clock (System clock source, PLL Multiplier
                         and Divider factors, AHB/APBx prescalers and Flash settings).
   */
}
 8003218:	46c0      	nop			@ (mov r8, r8)
 800321a:	46bd      	mov	sp, r7
 800321c:	bd80      	pop	{r7, pc}
	...

08003220 <__NVIC_EnableIRQ>:
{
 8003220:	b580      	push	{r7, lr}
 8003222:	b082      	sub	sp, #8
 8003224:	af00      	add	r7, sp, #0
 8003226:	0002      	movs	r2, r0
 8003228:	1dfb      	adds	r3, r7, #7
 800322a:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 800322c:	1dfb      	adds	r3, r7, #7
 800322e:	781b      	ldrb	r3, [r3, #0]
 8003230:	2b7f      	cmp	r3, #127	@ 0x7f
 8003232:	d809      	bhi.n	8003248 <__NVIC_EnableIRQ+0x28>
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003234:	1dfb      	adds	r3, r7, #7
 8003236:	781b      	ldrb	r3, [r3, #0]
 8003238:	001a      	movs	r2, r3
 800323a:	231f      	movs	r3, #31
 800323c:	401a      	ands	r2, r3
 800323e:	4b04      	ldr	r3, [pc, #16]	@ (8003250 <__NVIC_EnableIRQ+0x30>)
 8003240:	2101      	movs	r1, #1
 8003242:	4091      	lsls	r1, r2
 8003244:	000a      	movs	r2, r1
 8003246:	601a      	str	r2, [r3, #0]
}
 8003248:	46c0      	nop			@ (mov r8, r8)
 800324a:	46bd      	mov	sp, r7
 800324c:	b002      	add	sp, #8
 800324e:	bd80      	pop	{r7, pc}
 8003250:	e000e100 	.word	0xe000e100

08003254 <__NVIC_DisableIRQ>:
{
 8003254:	b580      	push	{r7, lr}
 8003256:	b082      	sub	sp, #8
 8003258:	af00      	add	r7, sp, #0
 800325a:	0002      	movs	r2, r0
 800325c:	1dfb      	adds	r3, r7, #7
 800325e:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 8003260:	1dfb      	adds	r3, r7, #7
 8003262:	781b      	ldrb	r3, [r3, #0]
 8003264:	2b7f      	cmp	r3, #127	@ 0x7f
 8003266:	d810      	bhi.n	800328a <__NVIC_DisableIRQ+0x36>
    NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003268:	1dfb      	adds	r3, r7, #7
 800326a:	781b      	ldrb	r3, [r3, #0]
 800326c:	001a      	movs	r2, r3
 800326e:	231f      	movs	r3, #31
 8003270:	4013      	ands	r3, r2
 8003272:	4908      	ldr	r1, [pc, #32]	@ (8003294 <__NVIC_DisableIRQ+0x40>)
 8003274:	2201      	movs	r2, #1
 8003276:	409a      	lsls	r2, r3
 8003278:	0013      	movs	r3, r2
 800327a:	2280      	movs	r2, #128	@ 0x80
 800327c:	508b      	str	r3, [r1, r2]
  __ASM volatile ("dsb 0xF":::"memory");
 800327e:	f3bf 8f4f 	dsb	sy
}
 8003282:	46c0      	nop			@ (mov r8, r8)
  __ASM volatile ("isb 0xF":::"memory");
 8003284:	f3bf 8f6f 	isb	sy
}
 8003288:	46c0      	nop			@ (mov r8, r8)
}
 800328a:	46c0      	nop			@ (mov r8, r8)
 800328c:	46bd      	mov	sp, r7
 800328e:	b002      	add	sp, #8
 8003290:	bd80      	pop	{r7, pc}
 8003292:	46c0      	nop			@ (mov r8, r8)
 8003294:	e000e100 	.word	0xe000e100

08003298 <__NVIC_SetPriority>:
{
 8003298:	b590      	push	{r4, r7, lr}
 800329a:	b083      	sub	sp, #12
 800329c:	af00      	add	r7, sp, #0
 800329e:	0002      	movs	r2, r0
 80032a0:	6039      	str	r1, [r7, #0]
 80032a2:	1dfb      	adds	r3, r7, #7
 80032a4:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 80032a6:	1dfb      	adds	r3, r7, #7
 80032a8:	781b      	ldrb	r3, [r3, #0]
 80032aa:	2b7f      	cmp	r3, #127	@ 0x7f
 80032ac:	d828      	bhi.n	8003300 <__NVIC_SetPriority+0x68>
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80032ae:	4a2f      	ldr	r2, [pc, #188]	@ (800336c <__NVIC_SetPriority+0xd4>)
 80032b0:	1dfb      	adds	r3, r7, #7
 80032b2:	781b      	ldrb	r3, [r3, #0]
 80032b4:	b25b      	sxtb	r3, r3
 80032b6:	089b      	lsrs	r3, r3, #2
 80032b8:	33c0      	adds	r3, #192	@ 0xc0
 80032ba:	009b      	lsls	r3, r3, #2
 80032bc:	589b      	ldr	r3, [r3, r2]
 80032be:	1dfa      	adds	r2, r7, #7
 80032c0:	7812      	ldrb	r2, [r2, #0]
 80032c2:	0011      	movs	r1, r2
 80032c4:	2203      	movs	r2, #3
 80032c6:	400a      	ands	r2, r1
 80032c8:	00d2      	lsls	r2, r2, #3
 80032ca:	21ff      	movs	r1, #255	@ 0xff
 80032cc:	4091      	lsls	r1, r2
 80032ce:	000a      	movs	r2, r1
 80032d0:	43d2      	mvns	r2, r2
 80032d2:	401a      	ands	r2, r3
 80032d4:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 80032d6:	683b      	ldr	r3, [r7, #0]
 80032d8:	019b      	lsls	r3, r3, #6
 80032da:	22ff      	movs	r2, #255	@ 0xff
 80032dc:	401a      	ands	r2, r3
 80032de:	1dfb      	adds	r3, r7, #7
 80032e0:	781b      	ldrb	r3, [r3, #0]
 80032e2:	0018      	movs	r0, r3
 80032e4:	2303      	movs	r3, #3
 80032e6:	4003      	ands	r3, r0
 80032e8:	00db      	lsls	r3, r3, #3
 80032ea:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80032ec:	481f      	ldr	r0, [pc, #124]	@ (800336c <__NVIC_SetPriority+0xd4>)
 80032ee:	1dfb      	adds	r3, r7, #7
 80032f0:	781b      	ldrb	r3, [r3, #0]
 80032f2:	b25b      	sxtb	r3, r3
 80032f4:	089b      	lsrs	r3, r3, #2
 80032f6:	430a      	orrs	r2, r1
 80032f8:	33c0      	adds	r3, #192	@ 0xc0
 80032fa:	009b      	lsls	r3, r3, #2
 80032fc:	501a      	str	r2, [r3, r0]
}
 80032fe:	e031      	b.n	8003364 <__NVIC_SetPriority+0xcc>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003300:	4a1b      	ldr	r2, [pc, #108]	@ (8003370 <__NVIC_SetPriority+0xd8>)
 8003302:	1dfb      	adds	r3, r7, #7
 8003304:	781b      	ldrb	r3, [r3, #0]
 8003306:	0019      	movs	r1, r3
 8003308:	230f      	movs	r3, #15
 800330a:	400b      	ands	r3, r1
 800330c:	3b08      	subs	r3, #8
 800330e:	089b      	lsrs	r3, r3, #2
 8003310:	3306      	adds	r3, #6
 8003312:	009b      	lsls	r3, r3, #2
 8003314:	18d3      	adds	r3, r2, r3
 8003316:	3304      	adds	r3, #4
 8003318:	681b      	ldr	r3, [r3, #0]
 800331a:	1dfa      	adds	r2, r7, #7
 800331c:	7812      	ldrb	r2, [r2, #0]
 800331e:	0011      	movs	r1, r2
 8003320:	2203      	movs	r2, #3
 8003322:	400a      	ands	r2, r1
 8003324:	00d2      	lsls	r2, r2, #3
 8003326:	21ff      	movs	r1, #255	@ 0xff
 8003328:	4091      	lsls	r1, r2
 800332a:	000a      	movs	r2, r1
 800332c:	43d2      	mvns	r2, r2
 800332e:	401a      	ands	r2, r3
 8003330:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8003332:	683b      	ldr	r3, [r7, #0]
 8003334:	019b      	lsls	r3, r3, #6
 8003336:	22ff      	movs	r2, #255	@ 0xff
 8003338:	401a      	ands	r2, r3
 800333a:	1dfb      	adds	r3, r7, #7
 800333c:	781b      	ldrb	r3, [r3, #0]
 800333e:	0018      	movs	r0, r3
 8003340:	2303      	movs	r3, #3
 8003342:	4003      	ands	r3, r0
 8003344:	00db      	lsls	r3, r3, #3
 8003346:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003348:	4809      	ldr	r0, [pc, #36]	@ (8003370 <__NVIC_SetPriority+0xd8>)
 800334a:	1dfb      	adds	r3, r7, #7
 800334c:	781b      	ldrb	r3, [r3, #0]
 800334e:	001c      	movs	r4, r3
 8003350:	230f      	movs	r3, #15
 8003352:	4023      	ands	r3, r4
 8003354:	3b08      	subs	r3, #8
 8003356:	089b      	lsrs	r3, r3, #2
 8003358:	430a      	orrs	r2, r1
 800335a:	3306      	adds	r3, #6
 800335c:	009b      	lsls	r3, r3, #2
 800335e:	18c3      	adds	r3, r0, r3
 8003360:	3304      	adds	r3, #4
 8003362:	601a      	str	r2, [r3, #0]
}
 8003364:	46c0      	nop			@ (mov r8, r8)
 8003366:	46bd      	mov	sp, r7
 8003368:	b003      	add	sp, #12
 800336a:	bd90      	pop	{r4, r7, pc}
 800336c:	e000e100 	.word	0xe000e100
 8003370:	e000ed00 	.word	0xe000ed00

08003374 <ConfigureGPIO_TII>:
           - Configures the UART pins on GPIO PA2 PA3
 * Param   None
 * Retval  None
 */
inline void ConfigureGPIO_TII(void)
{
 8003374:	b580      	push	{r7, lr}
 8003376:	af00      	add	r7, sp, #0
    // Enable the peripheral clock of GPIOA
    RCC->AHBENR |= RCC_AHBENR_GPIOAEN;
 8003378:	4b0f      	ldr	r3, [pc, #60]	@ (80033b8 <ConfigureGPIO_TII+0x44>)
 800337a:	695a      	ldr	r2, [r3, #20]
 800337c:	4b0e      	ldr	r3, [pc, #56]	@ (80033b8 <ConfigureGPIO_TII+0x44>)
 800337e:	2180      	movs	r1, #128	@ 0x80
 8003380:	0289      	lsls	r1, r1, #10
 8003382:	430a      	orrs	r2, r1
 8003384:	615a      	str	r2, [r3, #20]

    // GPIO configuration for UART signals
    // 1. Select AF mode (10) on PA2 and PA3
    // 2. AF1 for UART signals
    GPIOA->MODER = (GPIOA->MODER & ~(GPIO_MODER_MODER2 | GPIO_MODER_MODER3))
 8003386:	2390      	movs	r3, #144	@ 0x90
 8003388:	05db      	lsls	r3, r3, #23
 800338a:	681b      	ldr	r3, [r3, #0]
 800338c:	22f0      	movs	r2, #240	@ 0xf0
 800338e:	4393      	bics	r3, r2
 8003390:	001a      	movs	r2, r3
 8003392:	2390      	movs	r3, #144	@ 0x90
 8003394:	05db      	lsls	r3, r3, #23
            | (GPIO_MODER_MODER2_1 | GPIO_MODER_MODER3_1);
 8003396:	21a0      	movs	r1, #160	@ 0xa0
 8003398:	430a      	orrs	r2, r1
    GPIOA->MODER = (GPIOA->MODER & ~(GPIO_MODER_MODER2 | GPIO_MODER_MODER3))
 800339a:	601a      	str	r2, [r3, #0]
    GPIOA->AFR[0] = (GPIOA->AFR[0] & ~(GPIO_AFRL_AFRL2 | GPIO_AFRL_AFRL3))
 800339c:	2390      	movs	r3, #144	@ 0x90
 800339e:	05db      	lsls	r3, r3, #23
 80033a0:	6a1b      	ldr	r3, [r3, #32]
 80033a2:	4a06      	ldr	r2, [pc, #24]	@ (80033bc <ConfigureGPIO_TII+0x48>)
 80033a4:	401a      	ands	r2, r3
 80033a6:	2390      	movs	r3, #144	@ 0x90
 80033a8:	05db      	lsls	r3, r3, #23
            | (1 << (2 * 4)) | (1 << (3 * 4));
 80033aa:	2188      	movs	r1, #136	@ 0x88
 80033ac:	0149      	lsls	r1, r1, #5
 80033ae:	430a      	orrs	r2, r1
    GPIOA->AFR[0] = (GPIOA->AFR[0] & ~(GPIO_AFRL_AFRL2 | GPIO_AFRL_AFRL3))
 80033b0:	621a      	str	r2, [r3, #32]
}
 80033b2:	46c0      	nop			@ (mov r8, r8)
 80033b4:	46bd      	mov	sp, r7
 80033b6:	bd80      	pop	{r7, pc}
 80033b8:	40021000 	.word	0x40021000
 80033bc:	ffff00ff 	.word	0xffff00ff

080033c0 <Configure_TII>:
 *         - 9600,8,n,1
 * Param   None
 * Retval  None
 */
inline void Configure_TII(void)
{
 80033c0:	b580      	push	{r7, lr}
 80033c2:	af00      	add	r7, sp, #0
    // Enable the peripheral clock UART
    RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
 80033c4:	4b0e      	ldr	r3, [pc, #56]	@ (8003400 <Configure_TII+0x40>)
 80033c6:	69da      	ldr	r2, [r3, #28]
 80033c8:	4b0d      	ldr	r3, [pc, #52]	@ (8003400 <Configure_TII+0x40>)
 80033ca:	2180      	movs	r1, #128	@ 0x80
 80033cc:	0289      	lsls	r1, r1, #10
 80033ce:	430a      	orrs	r2, r1
 80033d0:	61da      	str	r2, [r3, #28]

    // Configure UART
    // 1. Oversampling by 16, 9600 baud
    // 2. 8 data bit, 1 start bit, 1 stop bit, no parity,
    //     transmitter enable, receiver enable
    USART2->BRR = 833;
 80033d2:	4b0c      	ldr	r3, [pc, #48]	@ (8003404 <Configure_TII+0x44>)
 80033d4:	4a0c      	ldr	r2, [pc, #48]	@ (8003408 <Configure_TII+0x48>)
 80033d6:	60da      	str	r2, [r3, #12]
    USART2->CR1 = USART_CR1_TE | USART_CR1_UE | USART_CR1_RXNEIE | USART_CR1_RE;
 80033d8:	4b0a      	ldr	r3, [pc, #40]	@ (8003404 <Configure_TII+0x44>)
 80033da:	222d      	movs	r2, #45	@ 0x2d
 80033dc:	601a      	str	r2, [r3, #0]

    // 3. Polling idle frame Transmission
    while ((USART2->ISR & USART_ISR_TC) != USART_ISR_TC)
 80033de:	46c0      	nop			@ (mov r8, r8)
 80033e0:	4b08      	ldr	r3, [pc, #32]	@ (8003404 <Configure_TII+0x44>)
 80033e2:	69db      	ldr	r3, [r3, #28]
 80033e4:	2240      	movs	r2, #64	@ 0x40
 80033e6:	4013      	ands	r3, r2
 80033e8:	2b40      	cmp	r3, #64	@ 0x40
 80033ea:	d1f9      	bne.n	80033e0 <Configure_TII+0x20>
    }

    // Configure IT
    // 4. Set priority for UART_IRQn
    // 5. Enable UART_IRQn
    NVIC_SetPriority(USART2_IRQn, 0);
 80033ec:	2100      	movs	r1, #0
 80033ee:	201c      	movs	r0, #28
 80033f0:	f7ff ff52 	bl	8003298 <__NVIC_SetPriority>
    NVIC_EnableIRQ(USART2_IRQn);
 80033f4:	201c      	movs	r0, #28
 80033f6:	f7ff ff13 	bl	8003220 <__NVIC_EnableIRQ>
}
 80033fa:	46c0      	nop			@ (mov r8, r8)
 80033fc:	46bd      	mov	sp, r7
 80033fe:	bd80      	pop	{r7, pc}
 8003400:	40021000 	.word	0x40021000
 8003404:	40004400 	.word	0x40004400
 8003408:	00000341 	.word	0x00000341

0800340c <TransmitByte_TII>:
    // Return data
    return UART_RxBuf[tmptail];
}

void TransmitByte_TII(char data)
{
 800340c:	b580      	push	{r7, lr}
 800340e:	b084      	sub	sp, #16
 8003410:	af00      	add	r7, sp, #0
 8003412:	0002      	movs	r2, r0
 8003414:	1dfb      	adds	r3, r7, #7
 8003416:	701a      	strb	r2, [r3, #0]
    uint32_t tmphead;

    // Calculate buffer index
    tmphead = (UART_TxHead + 1) & UART_TX_BUFFER_MASK;
 8003418:	4b1d      	ldr	r3, [pc, #116]	@ (8003490 <TransmitByte_TII+0x84>)
 800341a:	781b      	ldrb	r3, [r3, #0]
 800341c:	b2db      	uxtb	r3, r3
 800341e:	3301      	adds	r3, #1
 8003420:	001a      	movs	r2, r3
 8003422:	233f      	movs	r3, #63	@ 0x3f
 8003424:	4013      	ands	r3, r2
 8003426:	60fb      	str	r3, [r7, #12]

    // Wait for free space in buffer
    while (tmphead == UART_TxTail)
 8003428:	46c0      	nop			@ (mov r8, r8)
 800342a:	4b1a      	ldr	r3, [pc, #104]	@ (8003494 <TransmitByte_TII+0x88>)
 800342c:	781b      	ldrb	r3, [r3, #0]
 800342e:	b2db      	uxtb	r3, r3
 8003430:	001a      	movs	r2, r3
 8003432:	68fb      	ldr	r3, [r7, #12]
 8003434:	4293      	cmp	r3, r2
 8003436:	d0f8      	beq.n	800342a <TransmitByte_TII+0x1e>
    {
        ;
    }

    // Store data in buffer
    UART_TxBuf[tmphead] = data;
 8003438:	4a17      	ldr	r2, [pc, #92]	@ (8003498 <TransmitByte_TII+0x8c>)
 800343a:	68fb      	ldr	r3, [r7, #12]
 800343c:	18d3      	adds	r3, r2, r3
 800343e:	1dfa      	adds	r2, r7, #7
 8003440:	7812      	ldrb	r2, [r2, #0]
 8003442:	701a      	strb	r2, [r3, #0]

    // Store new index
    UART_TxHead = tmphead;
 8003444:	68fb      	ldr	r3, [r7, #12]
 8003446:	b2da      	uxtb	r2, r3
 8003448:	4b11      	ldr	r3, [pc, #68]	@ (8003490 <TransmitByte_TII+0x84>)
 800344a:	701a      	strb	r2, [r3, #0]

    // Initiate a new transfer if this is not ongoing
    if((USART2->CR1 & USART_CR1_TCIE) == 0)
 800344c:	4b13      	ldr	r3, [pc, #76]	@ (800349c <TransmitByte_TII+0x90>)
 800344e:	681b      	ldr	r3, [r3, #0]
 8003450:	2240      	movs	r2, #64	@ 0x40
 8003452:	4013      	ands	r3, r2
 8003454:	d117      	bne.n	8003486 <TransmitByte_TII+0x7a>
    {
        // Calculate buffer index
        uint32_t tmptail = (UART_TxTail + 1) & UART_TX_BUFFER_MASK;
 8003456:	4b0f      	ldr	r3, [pc, #60]	@ (8003494 <TransmitByte_TII+0x88>)
 8003458:	781b      	ldrb	r3, [r3, #0]
 800345a:	b2db      	uxtb	r3, r3
 800345c:	3301      	adds	r3, #1
 800345e:	001a      	movs	r2, r3
 8003460:	233f      	movs	r3, #63	@ 0x3f
 8003462:	4013      	ands	r3, r2
 8003464:	60bb      	str	r3, [r7, #8]

        // Store new index
        UART_TxTail = tmptail;
 8003466:	68bb      	ldr	r3, [r7, #8]
 8003468:	b2da      	uxtb	r2, r3
 800346a:	4b0a      	ldr	r3, [pc, #40]	@ (8003494 <TransmitByte_TII+0x88>)
 800346c:	701a      	strb	r2, [r3, #0]

        // Start transmission
        USART2->TDR = UART_TxBuf[tmptail];
 800346e:	4a0a      	ldr	r2, [pc, #40]	@ (8003498 <TransmitByte_TII+0x8c>)
 8003470:	68bb      	ldr	r3, [r7, #8]
 8003472:	18d3      	adds	r3, r2, r3
 8003474:	781a      	ldrb	r2, [r3, #0]
 8003476:	4b09      	ldr	r3, [pc, #36]	@ (800349c <TransmitByte_TII+0x90>)
 8003478:	851a      	strh	r2, [r3, #40]	@ 0x28

        // enable TC interrupt
        USART2->CR1 |= USART_CR1_TCIE;
 800347a:	4b08      	ldr	r3, [pc, #32]	@ (800349c <TransmitByte_TII+0x90>)
 800347c:	681a      	ldr	r2, [r3, #0]
 800347e:	4b07      	ldr	r3, [pc, #28]	@ (800349c <TransmitByte_TII+0x90>)
 8003480:	2140      	movs	r1, #64	@ 0x40
 8003482:	430a      	orrs	r2, r1
 8003484:	601a      	str	r2, [r3, #0]
    }
}
 8003486:	46c0      	nop			@ (mov r8, r8)
 8003488:	46bd      	mov	sp, r7
 800348a:	b004      	add	sp, #16
 800348c:	bd80      	pop	{r7, pc}
 800348e:	46c0      	nop			@ (mov r8, r8)
 8003490:	200002e8 	.word	0x200002e8
 8003494:	200002e9 	.word	0x200002e9
 8003498:	200002a8 	.word	0x200002a8
 800349c:	40004400 	.word	0x40004400

080034a0 <TransmitString_TII>:
 *   transmit a byte via the UART
 * - Bytes are transmitted until the terminator
 *   character '\0' is detected. Then the function returns.
 */
void TransmitString_TII(char *str)
{
 80034a0:	b580      	push	{r7, lr}
 80034a2:	b082      	sub	sp, #8
 80034a4:	af00      	add	r7, sp, #0
 80034a6:	6078      	str	r0, [r7, #4]
    while(*str)
 80034a8:	e006      	b.n	80034b8 <TransmitString_TII+0x18>
    {
        TransmitByte_TII(*str++);
 80034aa:	687b      	ldr	r3, [r7, #4]
 80034ac:	1c5a      	adds	r2, r3, #1
 80034ae:	607a      	str	r2, [r7, #4]
 80034b0:	781b      	ldrb	r3, [r3, #0]
 80034b2:	0018      	movs	r0, r3
 80034b4:	f7ff ffaa 	bl	800340c <TransmitByte_TII>
    while(*str)
 80034b8:	687b      	ldr	r3, [r7, #4]
 80034ba:	781b      	ldrb	r3, [r3, #0]
 80034bc:	2b00      	cmp	r3, #0
 80034be:	d1f4      	bne.n	80034aa <TransmitString_TII+0xa>
    }
}
 80034c0:	46c0      	nop			@ (mov r8, r8)
 80034c2:	46c0      	nop			@ (mov r8, r8)
 80034c4:	46bd      	mov	sp, r7
 80034c6:	b002      	add	sp, #8
 80034c8:	bd80      	pop	{r7, pc}
	...

080034cc <USART2_IRQHandler>:
 * Brief   This function handles UART interrupt request.
 * Param   None
 * Retval  None
 */
void USART2_IRQHandler(void)
{
 80034cc:	b580      	push	{r7, lr}
 80034ce:	b082      	sub	sp, #8
 80034d0:	af00      	add	r7, sp, #0
    if ((USART2->ISR & USART_ISR_TC) == USART_ISR_TC)
 80034d2:	4b31      	ldr	r3, [pc, #196]	@ (8003598 <USART2_IRQHandler+0xcc>)
 80034d4:	69db      	ldr	r3, [r3, #28]
 80034d6:	2240      	movs	r2, #64	@ 0x40
 80034d8:	4013      	ands	r3, r2
 80034da:	2b40      	cmp	r3, #64	@ 0x40
 80034dc:	d127      	bne.n	800352e <USART2_IRQHandler+0x62>
    {
        uint32_t tmptail;

        // Check if all data is transmitted
        if (UART_TxHead != UART_TxTail)
 80034de:	4b2f      	ldr	r3, [pc, #188]	@ (800359c <USART2_IRQHandler+0xd0>)
 80034e0:	781b      	ldrb	r3, [r3, #0]
 80034e2:	b2da      	uxtb	r2, r3
 80034e4:	4b2e      	ldr	r3, [pc, #184]	@ (80035a0 <USART2_IRQHandler+0xd4>)
 80034e6:	781b      	ldrb	r3, [r3, #0]
 80034e8:	b2db      	uxtb	r3, r3
 80034ea:	429a      	cmp	r2, r3
 80034ec:	d012      	beq.n	8003514 <USART2_IRQHandler+0x48>
        {
            // Calculate buffer index
            tmptail = (UART_TxTail + 1) & UART_TX_BUFFER_MASK;
 80034ee:	4b2c      	ldr	r3, [pc, #176]	@ (80035a0 <USART2_IRQHandler+0xd4>)
 80034f0:	781b      	ldrb	r3, [r3, #0]
 80034f2:	b2db      	uxtb	r3, r3
 80034f4:	3301      	adds	r3, #1
 80034f6:	001a      	movs	r2, r3
 80034f8:	233f      	movs	r3, #63	@ 0x3f
 80034fa:	4013      	ands	r3, r2
 80034fc:	603b      	str	r3, [r7, #0]

            // Store new index
            UART_TxTail = tmptail;
 80034fe:	683b      	ldr	r3, [r7, #0]
 8003500:	b2da      	uxtb	r2, r3
 8003502:	4b27      	ldr	r3, [pc, #156]	@ (80035a0 <USART2_IRQHandler+0xd4>)
 8003504:	701a      	strb	r2, [r3, #0]

            // Start transmission
            USART2->TDR = UART_TxBuf[tmptail];
 8003506:	4a27      	ldr	r2, [pc, #156]	@ (80035a4 <USART2_IRQHandler+0xd8>)
 8003508:	683b      	ldr	r3, [r7, #0]
 800350a:	18d3      	adds	r3, r2, r3
 800350c:	781a      	ldrb	r2, [r3, #0]
 800350e:	4b22      	ldr	r3, [pc, #136]	@ (8003598 <USART2_IRQHandler+0xcc>)
 8003510:	851a      	strh	r2, [r3, #40]	@ 0x28
    }
    else
    {
        NVIC_DisableIRQ(USART2_IRQn); // Disable UART_IRQn
    }
}
 8003512:	e03d      	b.n	8003590 <USART2_IRQHandler+0xc4>
            USART2->ICR |= USART_ICR_TCCF; // Clear TC flag
 8003514:	4b20      	ldr	r3, [pc, #128]	@ (8003598 <USART2_IRQHandler+0xcc>)
 8003516:	6a1a      	ldr	r2, [r3, #32]
 8003518:	4b1f      	ldr	r3, [pc, #124]	@ (8003598 <USART2_IRQHandler+0xcc>)
 800351a:	2140      	movs	r1, #64	@ 0x40
 800351c:	430a      	orrs	r2, r1
 800351e:	621a      	str	r2, [r3, #32]
            USART2->CR1 &= ~USART_CR1_TCIE; // Disable TC interrupt
 8003520:	4b1d      	ldr	r3, [pc, #116]	@ (8003598 <USART2_IRQHandler+0xcc>)
 8003522:	681a      	ldr	r2, [r3, #0]
 8003524:	4b1c      	ldr	r3, [pc, #112]	@ (8003598 <USART2_IRQHandler+0xcc>)
 8003526:	2140      	movs	r1, #64	@ 0x40
 8003528:	438a      	bics	r2, r1
 800352a:	601a      	str	r2, [r3, #0]
}
 800352c:	e030      	b.n	8003590 <USART2_IRQHandler+0xc4>
    else if ((USART2->ISR & USART_ISR_RXNE) == USART_ISR_RXNE)
 800352e:	4b1a      	ldr	r3, [pc, #104]	@ (8003598 <USART2_IRQHandler+0xcc>)
 8003530:	69db      	ldr	r3, [r3, #28]
 8003532:	2220      	movs	r2, #32
 8003534:	4013      	ands	r3, r2
 8003536:	2b20      	cmp	r3, #32
 8003538:	d11a      	bne.n	8003570 <USART2_IRQHandler+0xa4>
        uint8_t data = (uint8_t)(USART2->RDR); // Receive data, clear flag
 800353a:	4b17      	ldr	r3, [pc, #92]	@ (8003598 <USART2_IRQHandler+0xcc>)
 800353c:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 800353e:	b29a      	uxth	r2, r3
 8003540:	1dfb      	adds	r3, r7, #7
 8003542:	701a      	strb	r2, [r3, #0]
        uint8_t tmphead = (UART_RxHead + 1) & UART_RX_BUFFER_MASK;
 8003544:	4b18      	ldr	r3, [pc, #96]	@ (80035a8 <USART2_IRQHandler+0xdc>)
 8003546:	781b      	ldrb	r3, [r3, #0]
 8003548:	b2db      	uxtb	r3, r3
 800354a:	3301      	adds	r3, #1
 800354c:	b2da      	uxtb	r2, r3
 800354e:	1dbb      	adds	r3, r7, #6
 8003550:	213f      	movs	r1, #63	@ 0x3f
 8003552:	400a      	ands	r2, r1
 8003554:	701a      	strb	r2, [r3, #0]
        UART_RxHead = tmphead;
 8003556:	4b14      	ldr	r3, [pc, #80]	@ (80035a8 <USART2_IRQHandler+0xdc>)
 8003558:	1dba      	adds	r2, r7, #6
 800355a:	7812      	ldrb	r2, [r2, #0]
 800355c:	701a      	strb	r2, [r3, #0]
        if (tmphead == UART_RxTail)
 800355e:	4b13      	ldr	r3, [pc, #76]	@ (80035ac <USART2_IRQHandler+0xe0>)
 8003560:	781b      	ldrb	r3, [r3, #0]
        UART_RxBuf[tmphead] = data;
 8003562:	1dbb      	adds	r3, r7, #6
 8003564:	781b      	ldrb	r3, [r3, #0]
 8003566:	4a12      	ldr	r2, [pc, #72]	@ (80035b0 <USART2_IRQHandler+0xe4>)
 8003568:	1df9      	adds	r1, r7, #7
 800356a:	7809      	ldrb	r1, [r1, #0]
 800356c:	54d1      	strb	r1, [r2, r3]
}
 800356e:	e00f      	b.n	8003590 <USART2_IRQHandler+0xc4>
    else if ((USART2->ISR & USART_ISR_ORE) == USART_ISR_ORE)
 8003570:	4b09      	ldr	r3, [pc, #36]	@ (8003598 <USART2_IRQHandler+0xcc>)
 8003572:	69db      	ldr	r3, [r3, #28]
 8003574:	2208      	movs	r2, #8
 8003576:	4013      	ands	r3, r2
 8003578:	2b08      	cmp	r3, #8
 800357a:	d106      	bne.n	800358a <USART2_IRQHandler+0xbe>
    	USART2->ICR |= USART_ICR_ORECF; // Clear ORE flag
 800357c:	4b06      	ldr	r3, [pc, #24]	@ (8003598 <USART2_IRQHandler+0xcc>)
 800357e:	6a1a      	ldr	r2, [r3, #32]
 8003580:	4b05      	ldr	r3, [pc, #20]	@ (8003598 <USART2_IRQHandler+0xcc>)
 8003582:	2108      	movs	r1, #8
 8003584:	430a      	orrs	r2, r1
 8003586:	621a      	str	r2, [r3, #32]
}
 8003588:	e002      	b.n	8003590 <USART2_IRQHandler+0xc4>
        NVIC_DisableIRQ(USART2_IRQn); // Disable UART_IRQn
 800358a:	201c      	movs	r0, #28
 800358c:	f7ff fe62 	bl	8003254 <__NVIC_DisableIRQ>
}
 8003590:	46c0      	nop			@ (mov r8, r8)
 8003592:	46bd      	mov	sp, r7
 8003594:	b002      	add	sp, #8
 8003596:	bd80      	pop	{r7, pc}
 8003598:	40004400 	.word	0x40004400
 800359c:	200002e8 	.word	0x200002e8
 80035a0:	200002e9 	.word	0x200002e9
 80035a4:	200002a8 	.word	0x200002a8
 80035a8:	200002a4 	.word	0x200002a4
 80035ac:	200002a5 	.word	0x200002a5
 80035b0:	20000264 	.word	0x20000264

080035b4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80035b4:	480d      	ldr	r0, [pc, #52]	@ (80035ec <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80035b6:	4685      	mov	sp, r0
  
/* Call the clock system initialization function.*/
  bl  SystemInit
 80035b8:	f7ff fe2c 	bl	8003214 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80035bc:	480c      	ldr	r0, [pc, #48]	@ (80035f0 <LoopForever+0x6>)
  ldr r1, =_edata
 80035be:	490d      	ldr	r1, [pc, #52]	@ (80035f4 <LoopForever+0xa>)
  ldr r2, =_sidata
 80035c0:	4a0d      	ldr	r2, [pc, #52]	@ (80035f8 <LoopForever+0xe>)
  movs r3, #0
 80035c2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80035c4:	e002      	b.n	80035cc <LoopCopyDataInit>

080035c6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80035c6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80035c8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80035ca:	3304      	adds	r3, #4

080035cc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80035cc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80035ce:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80035d0:	d3f9      	bcc.n	80035c6 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80035d2:	4a0a      	ldr	r2, [pc, #40]	@ (80035fc <LoopForever+0x12>)
  ldr r4, =_ebss
 80035d4:	4c0a      	ldr	r4, [pc, #40]	@ (8003600 <LoopForever+0x16>)
  movs r3, #0
 80035d6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80035d8:	e001      	b.n	80035de <LoopFillZerobss>

080035da <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80035da:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80035dc:	3204      	adds	r2, #4

080035de <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80035de:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80035e0:	d3fb      	bcc.n	80035da <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80035e2:	f000 f819 	bl	8003618 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80035e6:	f7ff fce7 	bl	8002fb8 <main>

080035ea <LoopForever>:

LoopForever:
    b LoopForever
 80035ea:	e7fe      	b.n	80035ea <LoopForever>
  ldr   r0, =_estack
 80035ec:	20004000 	.word	0x20004000
  ldr r0, =_sdata
 80035f0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80035f4:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80035f8:	08004870 	.word	0x08004870
  ldr r2, =_sbss
 80035fc:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8003600:	200002ec 	.word	0x200002ec

08003604 <ADC1_COMP_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8003604:	e7fe      	b.n	8003604 <ADC1_COMP_IRQHandler>

08003606 <memset>:
 8003606:	0003      	movs	r3, r0
 8003608:	1882      	adds	r2, r0, r2
 800360a:	4293      	cmp	r3, r2
 800360c:	d100      	bne.n	8003610 <memset+0xa>
 800360e:	4770      	bx	lr
 8003610:	7019      	strb	r1, [r3, #0]
 8003612:	3301      	adds	r3, #1
 8003614:	e7f9      	b.n	800360a <memset+0x4>
	...

08003618 <__libc_init_array>:
 8003618:	b570      	push	{r4, r5, r6, lr}
 800361a:	2600      	movs	r6, #0
 800361c:	4c0c      	ldr	r4, [pc, #48]	@ (8003650 <__libc_init_array+0x38>)
 800361e:	4d0d      	ldr	r5, [pc, #52]	@ (8003654 <__libc_init_array+0x3c>)
 8003620:	1b64      	subs	r4, r4, r5
 8003622:	10a4      	asrs	r4, r4, #2
 8003624:	42a6      	cmp	r6, r4
 8003626:	d109      	bne.n	800363c <__libc_init_array+0x24>
 8003628:	2600      	movs	r6, #0
 800362a:	f000 ffe5 	bl	80045f8 <_init>
 800362e:	4c0a      	ldr	r4, [pc, #40]	@ (8003658 <__libc_init_array+0x40>)
 8003630:	4d0a      	ldr	r5, [pc, #40]	@ (800365c <__libc_init_array+0x44>)
 8003632:	1b64      	subs	r4, r4, r5
 8003634:	10a4      	asrs	r4, r4, #2
 8003636:	42a6      	cmp	r6, r4
 8003638:	d105      	bne.n	8003646 <__libc_init_array+0x2e>
 800363a:	bd70      	pop	{r4, r5, r6, pc}
 800363c:	00b3      	lsls	r3, r6, #2
 800363e:	58eb      	ldr	r3, [r5, r3]
 8003640:	4798      	blx	r3
 8003642:	3601      	adds	r6, #1
 8003644:	e7ee      	b.n	8003624 <__libc_init_array+0xc>
 8003646:	00b3      	lsls	r3, r6, #2
 8003648:	58eb      	ldr	r3, [r5, r3]
 800364a:	4798      	blx	r3
 800364c:	3601      	adds	r6, #1
 800364e:	e7f2      	b.n	8003636 <__libc_init_array+0x1e>
 8003650:	08004868 	.word	0x08004868
 8003654:	08004868 	.word	0x08004868
 8003658:	0800486c 	.word	0x0800486c
 800365c:	08004868 	.word	0x08004868

08003660 <sin>:
 8003660:	b530      	push	{r4, r5, lr}
 8003662:	4a1f      	ldr	r2, [pc, #124]	@ (80036e0 <sin+0x80>)
 8003664:	004b      	lsls	r3, r1, #1
 8003666:	b087      	sub	sp, #28
 8003668:	085b      	lsrs	r3, r3, #1
 800366a:	4293      	cmp	r3, r2
 800366c:	d806      	bhi.n	800367c <sin+0x1c>
 800366e:	2300      	movs	r3, #0
 8003670:	2200      	movs	r2, #0
 8003672:	9300      	str	r3, [sp, #0]
 8003674:	2300      	movs	r3, #0
 8003676:	f000 f8f7 	bl	8003868 <__kernel_sin>
 800367a:	e006      	b.n	800368a <sin+0x2a>
 800367c:	4a19      	ldr	r2, [pc, #100]	@ (80036e4 <sin+0x84>)
 800367e:	4293      	cmp	r3, r2
 8003680:	d905      	bls.n	800368e <sin+0x2e>
 8003682:	0002      	movs	r2, r0
 8003684:	000b      	movs	r3, r1
 8003686:	f7fe f9f7 	bl	8001a78 <__aeabi_dsub>
 800368a:	b007      	add	sp, #28
 800368c:	bd30      	pop	{r4, r5, pc}
 800368e:	aa02      	add	r2, sp, #8
 8003690:	f000 f996 	bl	80039c0 <__ieee754_rem_pio2>
 8003694:	9c04      	ldr	r4, [sp, #16]
 8003696:	9d05      	ldr	r5, [sp, #20]
 8003698:	2303      	movs	r3, #3
 800369a:	4003      	ands	r3, r0
 800369c:	9802      	ldr	r0, [sp, #8]
 800369e:	9903      	ldr	r1, [sp, #12]
 80036a0:	2b01      	cmp	r3, #1
 80036a2:	d008      	beq.n	80036b6 <sin+0x56>
 80036a4:	2b02      	cmp	r3, #2
 80036a6:	d00b      	beq.n	80036c0 <sin+0x60>
 80036a8:	2b00      	cmp	r3, #0
 80036aa:	d113      	bne.n	80036d4 <sin+0x74>
 80036ac:	3301      	adds	r3, #1
 80036ae:	9300      	str	r3, [sp, #0]
 80036b0:	0022      	movs	r2, r4
 80036b2:	002b      	movs	r3, r5
 80036b4:	e7df      	b.n	8003676 <sin+0x16>
 80036b6:	0022      	movs	r2, r4
 80036b8:	002b      	movs	r3, r5
 80036ba:	f000 f815 	bl	80036e8 <__kernel_cos>
 80036be:	e7e4      	b.n	800368a <sin+0x2a>
 80036c0:	2301      	movs	r3, #1
 80036c2:	0022      	movs	r2, r4
 80036c4:	9300      	str	r3, [sp, #0]
 80036c6:	002b      	movs	r3, r5
 80036c8:	f000 f8ce 	bl	8003868 <__kernel_sin>
 80036cc:	2380      	movs	r3, #128	@ 0x80
 80036ce:	061b      	lsls	r3, r3, #24
 80036d0:	18c9      	adds	r1, r1, r3
 80036d2:	e7da      	b.n	800368a <sin+0x2a>
 80036d4:	0022      	movs	r2, r4
 80036d6:	002b      	movs	r3, r5
 80036d8:	f000 f806 	bl	80036e8 <__kernel_cos>
 80036dc:	e7f6      	b.n	80036cc <sin+0x6c>
 80036de:	46c0      	nop			@ (mov r8, r8)
 80036e0:	3fe921fb 	.word	0x3fe921fb
 80036e4:	7fefffff 	.word	0x7fefffff

080036e8 <__kernel_cos>:
 80036e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80036ea:	b087      	sub	sp, #28
 80036ec:	9204      	str	r2, [sp, #16]
 80036ee:	9305      	str	r3, [sp, #20]
 80036f0:	004b      	lsls	r3, r1, #1
 80036f2:	085b      	lsrs	r3, r3, #1
 80036f4:	9301      	str	r3, [sp, #4]
 80036f6:	23f9      	movs	r3, #249	@ 0xf9
 80036f8:	9a01      	ldr	r2, [sp, #4]
 80036fa:	0004      	movs	r4, r0
 80036fc:	000d      	movs	r5, r1
 80036fe:	059b      	lsls	r3, r3, #22
 8003700:	429a      	cmp	r2, r3
 8003702:	d204      	bcs.n	800370e <__kernel_cos+0x26>
 8003704:	f7fe fdc2 	bl	800228c <__aeabi_d2iz>
 8003708:	2800      	cmp	r0, #0
 800370a:	d100      	bne.n	800370e <__kernel_cos+0x26>
 800370c:	e084      	b.n	8003818 <__kernel_cos+0x130>
 800370e:	0022      	movs	r2, r4
 8003710:	002b      	movs	r3, r5
 8003712:	0020      	movs	r0, r4
 8003714:	0029      	movs	r1, r5
 8003716:	f7fd fec9 	bl	80014ac <__aeabi_dmul>
 800371a:	2200      	movs	r2, #0
 800371c:	4b40      	ldr	r3, [pc, #256]	@ (8003820 <__kernel_cos+0x138>)
 800371e:	0006      	movs	r6, r0
 8003720:	000f      	movs	r7, r1
 8003722:	f7fd fec3 	bl	80014ac <__aeabi_dmul>
 8003726:	4a3f      	ldr	r2, [pc, #252]	@ (8003824 <__kernel_cos+0x13c>)
 8003728:	9002      	str	r0, [sp, #8]
 800372a:	9103      	str	r1, [sp, #12]
 800372c:	4b3e      	ldr	r3, [pc, #248]	@ (8003828 <__kernel_cos+0x140>)
 800372e:	0030      	movs	r0, r6
 8003730:	0039      	movs	r1, r7
 8003732:	f7fd febb 	bl	80014ac <__aeabi_dmul>
 8003736:	4a3d      	ldr	r2, [pc, #244]	@ (800382c <__kernel_cos+0x144>)
 8003738:	4b3d      	ldr	r3, [pc, #244]	@ (8003830 <__kernel_cos+0x148>)
 800373a:	f7fc feb7 	bl	80004ac <__aeabi_dadd>
 800373e:	0032      	movs	r2, r6
 8003740:	003b      	movs	r3, r7
 8003742:	f7fd feb3 	bl	80014ac <__aeabi_dmul>
 8003746:	4a3b      	ldr	r2, [pc, #236]	@ (8003834 <__kernel_cos+0x14c>)
 8003748:	4b3b      	ldr	r3, [pc, #236]	@ (8003838 <__kernel_cos+0x150>)
 800374a:	f7fe f995 	bl	8001a78 <__aeabi_dsub>
 800374e:	0032      	movs	r2, r6
 8003750:	003b      	movs	r3, r7
 8003752:	f7fd feab 	bl	80014ac <__aeabi_dmul>
 8003756:	4a39      	ldr	r2, [pc, #228]	@ (800383c <__kernel_cos+0x154>)
 8003758:	4b39      	ldr	r3, [pc, #228]	@ (8003840 <__kernel_cos+0x158>)
 800375a:	f7fc fea7 	bl	80004ac <__aeabi_dadd>
 800375e:	0032      	movs	r2, r6
 8003760:	003b      	movs	r3, r7
 8003762:	f7fd fea3 	bl	80014ac <__aeabi_dmul>
 8003766:	4a37      	ldr	r2, [pc, #220]	@ (8003844 <__kernel_cos+0x15c>)
 8003768:	4b37      	ldr	r3, [pc, #220]	@ (8003848 <__kernel_cos+0x160>)
 800376a:	f7fe f985 	bl	8001a78 <__aeabi_dsub>
 800376e:	0032      	movs	r2, r6
 8003770:	003b      	movs	r3, r7
 8003772:	f7fd fe9b 	bl	80014ac <__aeabi_dmul>
 8003776:	4a35      	ldr	r2, [pc, #212]	@ (800384c <__kernel_cos+0x164>)
 8003778:	4b35      	ldr	r3, [pc, #212]	@ (8003850 <__kernel_cos+0x168>)
 800377a:	f7fc fe97 	bl	80004ac <__aeabi_dadd>
 800377e:	0032      	movs	r2, r6
 8003780:	003b      	movs	r3, r7
 8003782:	f7fd fe93 	bl	80014ac <__aeabi_dmul>
 8003786:	0032      	movs	r2, r6
 8003788:	003b      	movs	r3, r7
 800378a:	f7fd fe8f 	bl	80014ac <__aeabi_dmul>
 800378e:	9a04      	ldr	r2, [sp, #16]
 8003790:	9b05      	ldr	r3, [sp, #20]
 8003792:	0006      	movs	r6, r0
 8003794:	000f      	movs	r7, r1
 8003796:	0020      	movs	r0, r4
 8003798:	0029      	movs	r1, r5
 800379a:	f7fd fe87 	bl	80014ac <__aeabi_dmul>
 800379e:	0002      	movs	r2, r0
 80037a0:	000b      	movs	r3, r1
 80037a2:	0030      	movs	r0, r6
 80037a4:	0039      	movs	r1, r7
 80037a6:	f7fe f967 	bl	8001a78 <__aeabi_dsub>
 80037aa:	4b2a      	ldr	r3, [pc, #168]	@ (8003854 <__kernel_cos+0x16c>)
 80037ac:	9a01      	ldr	r2, [sp, #4]
 80037ae:	9004      	str	r0, [sp, #16]
 80037b0:	9105      	str	r1, [sp, #20]
 80037b2:	429a      	cmp	r2, r3
 80037b4:	d80d      	bhi.n	80037d2 <__kernel_cos+0xea>
 80037b6:	0002      	movs	r2, r0
 80037b8:	000b      	movs	r3, r1
 80037ba:	9802      	ldr	r0, [sp, #8]
 80037bc:	9903      	ldr	r1, [sp, #12]
 80037be:	f7fe f95b 	bl	8001a78 <__aeabi_dsub>
 80037c2:	0002      	movs	r2, r0
 80037c4:	2000      	movs	r0, #0
 80037c6:	000b      	movs	r3, r1
 80037c8:	4923      	ldr	r1, [pc, #140]	@ (8003858 <__kernel_cos+0x170>)
 80037ca:	f7fe f955 	bl	8001a78 <__aeabi_dsub>
 80037ce:	b007      	add	sp, #28
 80037d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80037d2:	4b22      	ldr	r3, [pc, #136]	@ (800385c <__kernel_cos+0x174>)
 80037d4:	9a01      	ldr	r2, [sp, #4]
 80037d6:	2600      	movs	r6, #0
 80037d8:	429a      	cmp	r2, r3
 80037da:	d81b      	bhi.n	8003814 <__kernel_cos+0x12c>
 80037dc:	0013      	movs	r3, r2
 80037de:	4a20      	ldr	r2, [pc, #128]	@ (8003860 <__kernel_cos+0x178>)
 80037e0:	4694      	mov	ip, r2
 80037e2:	4463      	add	r3, ip
 80037e4:	001f      	movs	r7, r3
 80037e6:	0032      	movs	r2, r6
 80037e8:	003b      	movs	r3, r7
 80037ea:	2000      	movs	r0, #0
 80037ec:	491a      	ldr	r1, [pc, #104]	@ (8003858 <__kernel_cos+0x170>)
 80037ee:	f7fe f943 	bl	8001a78 <__aeabi_dsub>
 80037f2:	0032      	movs	r2, r6
 80037f4:	0004      	movs	r4, r0
 80037f6:	000d      	movs	r5, r1
 80037f8:	9802      	ldr	r0, [sp, #8]
 80037fa:	9903      	ldr	r1, [sp, #12]
 80037fc:	003b      	movs	r3, r7
 80037fe:	f7fe f93b 	bl	8001a78 <__aeabi_dsub>
 8003802:	9a04      	ldr	r2, [sp, #16]
 8003804:	9b05      	ldr	r3, [sp, #20]
 8003806:	f7fe f937 	bl	8001a78 <__aeabi_dsub>
 800380a:	0002      	movs	r2, r0
 800380c:	000b      	movs	r3, r1
 800380e:	0020      	movs	r0, r4
 8003810:	0029      	movs	r1, r5
 8003812:	e7da      	b.n	80037ca <__kernel_cos+0xe2>
 8003814:	4f13      	ldr	r7, [pc, #76]	@ (8003864 <__kernel_cos+0x17c>)
 8003816:	e7e6      	b.n	80037e6 <__kernel_cos+0xfe>
 8003818:	2000      	movs	r0, #0
 800381a:	490f      	ldr	r1, [pc, #60]	@ (8003858 <__kernel_cos+0x170>)
 800381c:	e7d7      	b.n	80037ce <__kernel_cos+0xe6>
 800381e:	46c0      	nop			@ (mov r8, r8)
 8003820:	3fe00000 	.word	0x3fe00000
 8003824:	be8838d4 	.word	0xbe8838d4
 8003828:	bda8fae9 	.word	0xbda8fae9
 800382c:	bdb4b1c4 	.word	0xbdb4b1c4
 8003830:	3e21ee9e 	.word	0x3e21ee9e
 8003834:	809c52ad 	.word	0x809c52ad
 8003838:	3e927e4f 	.word	0x3e927e4f
 800383c:	19cb1590 	.word	0x19cb1590
 8003840:	3efa01a0 	.word	0x3efa01a0
 8003844:	16c15177 	.word	0x16c15177
 8003848:	3f56c16c 	.word	0x3f56c16c
 800384c:	5555554c 	.word	0x5555554c
 8003850:	3fa55555 	.word	0x3fa55555
 8003854:	3fd33332 	.word	0x3fd33332
 8003858:	3ff00000 	.word	0x3ff00000
 800385c:	3fe90000 	.word	0x3fe90000
 8003860:	ffe00000 	.word	0xffe00000
 8003864:	3fd20000 	.word	0x3fd20000

08003868 <__kernel_sin>:
 8003868:	b5f0      	push	{r4, r5, r6, r7, lr}
 800386a:	b089      	sub	sp, #36	@ 0x24
 800386c:	9202      	str	r2, [sp, #8]
 800386e:	9303      	str	r3, [sp, #12]
 8003870:	22f9      	movs	r2, #249	@ 0xf9
 8003872:	004b      	lsls	r3, r1, #1
 8003874:	0006      	movs	r6, r0
 8003876:	000f      	movs	r7, r1
 8003878:	085b      	lsrs	r3, r3, #1
 800387a:	0592      	lsls	r2, r2, #22
 800387c:	4293      	cmp	r3, r2
 800387e:	d203      	bcs.n	8003888 <__kernel_sin+0x20>
 8003880:	f7fe fd04 	bl	800228c <__aeabi_d2iz>
 8003884:	2800      	cmp	r0, #0
 8003886:	d04c      	beq.n	8003922 <__kernel_sin+0xba>
 8003888:	0032      	movs	r2, r6
 800388a:	003b      	movs	r3, r7
 800388c:	0030      	movs	r0, r6
 800388e:	0039      	movs	r1, r7
 8003890:	f7fd fe0c 	bl	80014ac <__aeabi_dmul>
 8003894:	0004      	movs	r4, r0
 8003896:	000d      	movs	r5, r1
 8003898:	0002      	movs	r2, r0
 800389a:	000b      	movs	r3, r1
 800389c:	0030      	movs	r0, r6
 800389e:	0039      	movs	r1, r7
 80038a0:	f7fd fe04 	bl	80014ac <__aeabi_dmul>
 80038a4:	4a39      	ldr	r2, [pc, #228]	@ (800398c <__kernel_sin+0x124>)
 80038a6:	9000      	str	r0, [sp, #0]
 80038a8:	9101      	str	r1, [sp, #4]
 80038aa:	4b39      	ldr	r3, [pc, #228]	@ (8003990 <__kernel_sin+0x128>)
 80038ac:	0020      	movs	r0, r4
 80038ae:	0029      	movs	r1, r5
 80038b0:	f7fd fdfc 	bl	80014ac <__aeabi_dmul>
 80038b4:	4a37      	ldr	r2, [pc, #220]	@ (8003994 <__kernel_sin+0x12c>)
 80038b6:	4b38      	ldr	r3, [pc, #224]	@ (8003998 <__kernel_sin+0x130>)
 80038b8:	f7fe f8de 	bl	8001a78 <__aeabi_dsub>
 80038bc:	0022      	movs	r2, r4
 80038be:	002b      	movs	r3, r5
 80038c0:	f7fd fdf4 	bl	80014ac <__aeabi_dmul>
 80038c4:	4a35      	ldr	r2, [pc, #212]	@ (800399c <__kernel_sin+0x134>)
 80038c6:	4b36      	ldr	r3, [pc, #216]	@ (80039a0 <__kernel_sin+0x138>)
 80038c8:	f7fc fdf0 	bl	80004ac <__aeabi_dadd>
 80038cc:	0022      	movs	r2, r4
 80038ce:	002b      	movs	r3, r5
 80038d0:	f7fd fdec 	bl	80014ac <__aeabi_dmul>
 80038d4:	4a33      	ldr	r2, [pc, #204]	@ (80039a4 <__kernel_sin+0x13c>)
 80038d6:	4b34      	ldr	r3, [pc, #208]	@ (80039a8 <__kernel_sin+0x140>)
 80038d8:	f7fe f8ce 	bl	8001a78 <__aeabi_dsub>
 80038dc:	0022      	movs	r2, r4
 80038de:	002b      	movs	r3, r5
 80038e0:	f7fd fde4 	bl	80014ac <__aeabi_dmul>
 80038e4:	4b31      	ldr	r3, [pc, #196]	@ (80039ac <__kernel_sin+0x144>)
 80038e6:	4a32      	ldr	r2, [pc, #200]	@ (80039b0 <__kernel_sin+0x148>)
 80038e8:	f7fc fde0 	bl	80004ac <__aeabi_dadd>
 80038ec:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80038ee:	9004      	str	r0, [sp, #16]
 80038f0:	9105      	str	r1, [sp, #20]
 80038f2:	2b00      	cmp	r3, #0
 80038f4:	d119      	bne.n	800392a <__kernel_sin+0xc2>
 80038f6:	0002      	movs	r2, r0
 80038f8:	000b      	movs	r3, r1
 80038fa:	0020      	movs	r0, r4
 80038fc:	0029      	movs	r1, r5
 80038fe:	f7fd fdd5 	bl	80014ac <__aeabi_dmul>
 8003902:	4a2c      	ldr	r2, [pc, #176]	@ (80039b4 <__kernel_sin+0x14c>)
 8003904:	4b2c      	ldr	r3, [pc, #176]	@ (80039b8 <__kernel_sin+0x150>)
 8003906:	f7fe f8b7 	bl	8001a78 <__aeabi_dsub>
 800390a:	9a00      	ldr	r2, [sp, #0]
 800390c:	9b01      	ldr	r3, [sp, #4]
 800390e:	f7fd fdcd 	bl	80014ac <__aeabi_dmul>
 8003912:	0002      	movs	r2, r0
 8003914:	000b      	movs	r3, r1
 8003916:	0030      	movs	r0, r6
 8003918:	0039      	movs	r1, r7
 800391a:	f7fc fdc7 	bl	80004ac <__aeabi_dadd>
 800391e:	0006      	movs	r6, r0
 8003920:	000f      	movs	r7, r1
 8003922:	0030      	movs	r0, r6
 8003924:	0039      	movs	r1, r7
 8003926:	b009      	add	sp, #36	@ 0x24
 8003928:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800392a:	2200      	movs	r2, #0
 800392c:	9802      	ldr	r0, [sp, #8]
 800392e:	9903      	ldr	r1, [sp, #12]
 8003930:	4b22      	ldr	r3, [pc, #136]	@ (80039bc <__kernel_sin+0x154>)
 8003932:	f7fd fdbb 	bl	80014ac <__aeabi_dmul>
 8003936:	9a04      	ldr	r2, [sp, #16]
 8003938:	9b05      	ldr	r3, [sp, #20]
 800393a:	9006      	str	r0, [sp, #24]
 800393c:	9107      	str	r1, [sp, #28]
 800393e:	9800      	ldr	r0, [sp, #0]
 8003940:	9901      	ldr	r1, [sp, #4]
 8003942:	f7fd fdb3 	bl	80014ac <__aeabi_dmul>
 8003946:	0002      	movs	r2, r0
 8003948:	000b      	movs	r3, r1
 800394a:	9806      	ldr	r0, [sp, #24]
 800394c:	9907      	ldr	r1, [sp, #28]
 800394e:	f7fe f893 	bl	8001a78 <__aeabi_dsub>
 8003952:	0022      	movs	r2, r4
 8003954:	002b      	movs	r3, r5
 8003956:	f7fd fda9 	bl	80014ac <__aeabi_dmul>
 800395a:	9a02      	ldr	r2, [sp, #8]
 800395c:	9b03      	ldr	r3, [sp, #12]
 800395e:	f7fe f88b 	bl	8001a78 <__aeabi_dsub>
 8003962:	4a14      	ldr	r2, [pc, #80]	@ (80039b4 <__kernel_sin+0x14c>)
 8003964:	0004      	movs	r4, r0
 8003966:	000d      	movs	r5, r1
 8003968:	9800      	ldr	r0, [sp, #0]
 800396a:	9901      	ldr	r1, [sp, #4]
 800396c:	4b12      	ldr	r3, [pc, #72]	@ (80039b8 <__kernel_sin+0x150>)
 800396e:	f7fd fd9d 	bl	80014ac <__aeabi_dmul>
 8003972:	0002      	movs	r2, r0
 8003974:	000b      	movs	r3, r1
 8003976:	0020      	movs	r0, r4
 8003978:	0029      	movs	r1, r5
 800397a:	f7fc fd97 	bl	80004ac <__aeabi_dadd>
 800397e:	0002      	movs	r2, r0
 8003980:	000b      	movs	r3, r1
 8003982:	0030      	movs	r0, r6
 8003984:	0039      	movs	r1, r7
 8003986:	f7fe f877 	bl	8001a78 <__aeabi_dsub>
 800398a:	e7c8      	b.n	800391e <__kernel_sin+0xb6>
 800398c:	5acfd57c 	.word	0x5acfd57c
 8003990:	3de5d93a 	.word	0x3de5d93a
 8003994:	8a2b9ceb 	.word	0x8a2b9ceb
 8003998:	3e5ae5e6 	.word	0x3e5ae5e6
 800399c:	57b1fe7d 	.word	0x57b1fe7d
 80039a0:	3ec71de3 	.word	0x3ec71de3
 80039a4:	19c161d5 	.word	0x19c161d5
 80039a8:	3f2a01a0 	.word	0x3f2a01a0
 80039ac:	3f811111 	.word	0x3f811111
 80039b0:	1110f8a6 	.word	0x1110f8a6
 80039b4:	55555549 	.word	0x55555549
 80039b8:	3fc55555 	.word	0x3fc55555
 80039bc:	3fe00000 	.word	0x3fe00000

080039c0 <__ieee754_rem_pio2>:
 80039c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80039c2:	4baf      	ldr	r3, [pc, #700]	@ (8003c80 <__ieee754_rem_pio2+0x2c0>)
 80039c4:	b095      	sub	sp, #84	@ 0x54
 80039c6:	004d      	lsls	r5, r1, #1
 80039c8:	0017      	movs	r7, r2
 80039ca:	910d      	str	r1, [sp, #52]	@ 0x34
 80039cc:	086d      	lsrs	r5, r5, #1
 80039ce:	429d      	cmp	r5, r3
 80039d0:	d807      	bhi.n	80039e2 <__ieee754_rem_pio2+0x22>
 80039d2:	6010      	str	r0, [r2, #0]
 80039d4:	6051      	str	r1, [r2, #4]
 80039d6:	2300      	movs	r3, #0
 80039d8:	2200      	movs	r2, #0
 80039da:	60ba      	str	r2, [r7, #8]
 80039dc:	60fb      	str	r3, [r7, #12]
 80039de:	2300      	movs	r3, #0
 80039e0:	e024      	b.n	8003a2c <__ieee754_rem_pio2+0x6c>
 80039e2:	4ba8      	ldr	r3, [pc, #672]	@ (8003c84 <__ieee754_rem_pio2+0x2c4>)
 80039e4:	429d      	cmp	r5, r3
 80039e6:	d900      	bls.n	80039ea <__ieee754_rem_pio2+0x2a>
 80039e8:	e072      	b.n	8003ad0 <__ieee754_rem_pio2+0x110>
 80039ea:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80039ec:	4ca6      	ldr	r4, [pc, #664]	@ (8003c88 <__ieee754_rem_pio2+0x2c8>)
 80039ee:	4aa7      	ldr	r2, [pc, #668]	@ (8003c8c <__ieee754_rem_pio2+0x2cc>)
 80039f0:	2b00      	cmp	r3, #0
 80039f2:	dd37      	ble.n	8003a64 <__ieee754_rem_pio2+0xa4>
 80039f4:	4ba4      	ldr	r3, [pc, #656]	@ (8003c88 <__ieee754_rem_pio2+0x2c8>)
 80039f6:	f7fe f83f 	bl	8001a78 <__aeabi_dsub>
 80039fa:	9002      	str	r0, [sp, #8]
 80039fc:	9103      	str	r1, [sp, #12]
 80039fe:	42a5      	cmp	r5, r4
 8003a00:	d018      	beq.n	8003a34 <__ieee754_rem_pio2+0x74>
 8003a02:	4aa3      	ldr	r2, [pc, #652]	@ (8003c90 <__ieee754_rem_pio2+0x2d0>)
 8003a04:	4ba3      	ldr	r3, [pc, #652]	@ (8003c94 <__ieee754_rem_pio2+0x2d4>)
 8003a06:	f7fe f837 	bl	8001a78 <__aeabi_dsub>
 8003a0a:	0002      	movs	r2, r0
 8003a0c:	000b      	movs	r3, r1
 8003a0e:	0004      	movs	r4, r0
 8003a10:	000d      	movs	r5, r1
 8003a12:	9802      	ldr	r0, [sp, #8]
 8003a14:	9903      	ldr	r1, [sp, #12]
 8003a16:	f7fe f82f 	bl	8001a78 <__aeabi_dsub>
 8003a1a:	4a9d      	ldr	r2, [pc, #628]	@ (8003c90 <__ieee754_rem_pio2+0x2d0>)
 8003a1c:	4b9d      	ldr	r3, [pc, #628]	@ (8003c94 <__ieee754_rem_pio2+0x2d4>)
 8003a1e:	f7fe f82b 	bl	8001a78 <__aeabi_dsub>
 8003a22:	2301      	movs	r3, #1
 8003a24:	603c      	str	r4, [r7, #0]
 8003a26:	607d      	str	r5, [r7, #4]
 8003a28:	60b8      	str	r0, [r7, #8]
 8003a2a:	60f9      	str	r1, [r7, #12]
 8003a2c:	9302      	str	r3, [sp, #8]
 8003a2e:	9802      	ldr	r0, [sp, #8]
 8003a30:	b015      	add	sp, #84	@ 0x54
 8003a32:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003a34:	22d3      	movs	r2, #211	@ 0xd3
 8003a36:	9802      	ldr	r0, [sp, #8]
 8003a38:	9903      	ldr	r1, [sp, #12]
 8003a3a:	4b96      	ldr	r3, [pc, #600]	@ (8003c94 <__ieee754_rem_pio2+0x2d4>)
 8003a3c:	0552      	lsls	r2, r2, #21
 8003a3e:	f7fe f81b 	bl	8001a78 <__aeabi_dsub>
 8003a42:	4a95      	ldr	r2, [pc, #596]	@ (8003c98 <__ieee754_rem_pio2+0x2d8>)
 8003a44:	4b95      	ldr	r3, [pc, #596]	@ (8003c9c <__ieee754_rem_pio2+0x2dc>)
 8003a46:	9002      	str	r0, [sp, #8]
 8003a48:	9103      	str	r1, [sp, #12]
 8003a4a:	f7fe f815 	bl	8001a78 <__aeabi_dsub>
 8003a4e:	0002      	movs	r2, r0
 8003a50:	000b      	movs	r3, r1
 8003a52:	0004      	movs	r4, r0
 8003a54:	000d      	movs	r5, r1
 8003a56:	9802      	ldr	r0, [sp, #8]
 8003a58:	9903      	ldr	r1, [sp, #12]
 8003a5a:	f7fe f80d 	bl	8001a78 <__aeabi_dsub>
 8003a5e:	4a8e      	ldr	r2, [pc, #568]	@ (8003c98 <__ieee754_rem_pio2+0x2d8>)
 8003a60:	4b8e      	ldr	r3, [pc, #568]	@ (8003c9c <__ieee754_rem_pio2+0x2dc>)
 8003a62:	e7dc      	b.n	8003a1e <__ieee754_rem_pio2+0x5e>
 8003a64:	4b88      	ldr	r3, [pc, #544]	@ (8003c88 <__ieee754_rem_pio2+0x2c8>)
 8003a66:	f7fc fd21 	bl	80004ac <__aeabi_dadd>
 8003a6a:	9002      	str	r0, [sp, #8]
 8003a6c:	9103      	str	r1, [sp, #12]
 8003a6e:	42a5      	cmp	r5, r4
 8003a70:	d016      	beq.n	8003aa0 <__ieee754_rem_pio2+0xe0>
 8003a72:	4a87      	ldr	r2, [pc, #540]	@ (8003c90 <__ieee754_rem_pio2+0x2d0>)
 8003a74:	4b87      	ldr	r3, [pc, #540]	@ (8003c94 <__ieee754_rem_pio2+0x2d4>)
 8003a76:	f7fc fd19 	bl	80004ac <__aeabi_dadd>
 8003a7a:	0002      	movs	r2, r0
 8003a7c:	000b      	movs	r3, r1
 8003a7e:	0004      	movs	r4, r0
 8003a80:	000d      	movs	r5, r1
 8003a82:	9802      	ldr	r0, [sp, #8]
 8003a84:	9903      	ldr	r1, [sp, #12]
 8003a86:	f7fd fff7 	bl	8001a78 <__aeabi_dsub>
 8003a8a:	4a81      	ldr	r2, [pc, #516]	@ (8003c90 <__ieee754_rem_pio2+0x2d0>)
 8003a8c:	4b81      	ldr	r3, [pc, #516]	@ (8003c94 <__ieee754_rem_pio2+0x2d4>)
 8003a8e:	f7fc fd0d 	bl	80004ac <__aeabi_dadd>
 8003a92:	2301      	movs	r3, #1
 8003a94:	603c      	str	r4, [r7, #0]
 8003a96:	607d      	str	r5, [r7, #4]
 8003a98:	60b8      	str	r0, [r7, #8]
 8003a9a:	60f9      	str	r1, [r7, #12]
 8003a9c:	425b      	negs	r3, r3
 8003a9e:	e7c5      	b.n	8003a2c <__ieee754_rem_pio2+0x6c>
 8003aa0:	22d3      	movs	r2, #211	@ 0xd3
 8003aa2:	9802      	ldr	r0, [sp, #8]
 8003aa4:	9903      	ldr	r1, [sp, #12]
 8003aa6:	4b7b      	ldr	r3, [pc, #492]	@ (8003c94 <__ieee754_rem_pio2+0x2d4>)
 8003aa8:	0552      	lsls	r2, r2, #21
 8003aaa:	f7fc fcff 	bl	80004ac <__aeabi_dadd>
 8003aae:	4a7a      	ldr	r2, [pc, #488]	@ (8003c98 <__ieee754_rem_pio2+0x2d8>)
 8003ab0:	4b7a      	ldr	r3, [pc, #488]	@ (8003c9c <__ieee754_rem_pio2+0x2dc>)
 8003ab2:	9002      	str	r0, [sp, #8]
 8003ab4:	9103      	str	r1, [sp, #12]
 8003ab6:	f7fc fcf9 	bl	80004ac <__aeabi_dadd>
 8003aba:	0002      	movs	r2, r0
 8003abc:	000b      	movs	r3, r1
 8003abe:	0004      	movs	r4, r0
 8003ac0:	000d      	movs	r5, r1
 8003ac2:	9802      	ldr	r0, [sp, #8]
 8003ac4:	9903      	ldr	r1, [sp, #12]
 8003ac6:	f7fd ffd7 	bl	8001a78 <__aeabi_dsub>
 8003aca:	4a73      	ldr	r2, [pc, #460]	@ (8003c98 <__ieee754_rem_pio2+0x2d8>)
 8003acc:	4b73      	ldr	r3, [pc, #460]	@ (8003c9c <__ieee754_rem_pio2+0x2dc>)
 8003ace:	e7de      	b.n	8003a8e <__ieee754_rem_pio2+0xce>
 8003ad0:	4b73      	ldr	r3, [pc, #460]	@ (8003ca0 <__ieee754_rem_pio2+0x2e0>)
 8003ad2:	429d      	cmp	r5, r3
 8003ad4:	d900      	bls.n	8003ad8 <__ieee754_rem_pio2+0x118>
 8003ad6:	e0c6      	b.n	8003c66 <__ieee754_rem_pio2+0x2a6>
 8003ad8:	f000 f94e 	bl	8003d78 <fabs>
 8003adc:	4a71      	ldr	r2, [pc, #452]	@ (8003ca4 <__ieee754_rem_pio2+0x2e4>)
 8003ade:	4b72      	ldr	r3, [pc, #456]	@ (8003ca8 <__ieee754_rem_pio2+0x2e8>)
 8003ae0:	9004      	str	r0, [sp, #16]
 8003ae2:	9105      	str	r1, [sp, #20]
 8003ae4:	f7fd fce2 	bl	80014ac <__aeabi_dmul>
 8003ae8:	2200      	movs	r2, #0
 8003aea:	4b70      	ldr	r3, [pc, #448]	@ (8003cac <__ieee754_rem_pio2+0x2ec>)
 8003aec:	f7fc fcde 	bl	80004ac <__aeabi_dadd>
 8003af0:	f7fe fbcc 	bl	800228c <__aeabi_d2iz>
 8003af4:	9002      	str	r0, [sp, #8]
 8003af6:	f7fe fc05 	bl	8002304 <__aeabi_i2d>
 8003afa:	4a64      	ldr	r2, [pc, #400]	@ (8003c8c <__ieee754_rem_pio2+0x2cc>)
 8003afc:	4b62      	ldr	r3, [pc, #392]	@ (8003c88 <__ieee754_rem_pio2+0x2c8>)
 8003afe:	9008      	str	r0, [sp, #32]
 8003b00:	9109      	str	r1, [sp, #36]	@ 0x24
 8003b02:	f7fd fcd3 	bl	80014ac <__aeabi_dmul>
 8003b06:	0002      	movs	r2, r0
 8003b08:	000b      	movs	r3, r1
 8003b0a:	9804      	ldr	r0, [sp, #16]
 8003b0c:	9905      	ldr	r1, [sp, #20]
 8003b0e:	f7fd ffb3 	bl	8001a78 <__aeabi_dsub>
 8003b12:	4b60      	ldr	r3, [pc, #384]	@ (8003c94 <__ieee754_rem_pio2+0x2d4>)
 8003b14:	9004      	str	r0, [sp, #16]
 8003b16:	9105      	str	r1, [sp, #20]
 8003b18:	9808      	ldr	r0, [sp, #32]
 8003b1a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8003b1c:	4a5c      	ldr	r2, [pc, #368]	@ (8003c90 <__ieee754_rem_pio2+0x2d0>)
 8003b1e:	f7fd fcc5 	bl	80014ac <__aeabi_dmul>
 8003b22:	9b02      	ldr	r3, [sp, #8]
 8003b24:	9006      	str	r0, [sp, #24]
 8003b26:	9107      	str	r1, [sp, #28]
 8003b28:	2b1f      	cmp	r3, #31
 8003b2a:	dc0d      	bgt.n	8003b48 <__ieee754_rem_pio2+0x188>
 8003b2c:	9a02      	ldr	r2, [sp, #8]
 8003b2e:	4b60      	ldr	r3, [pc, #384]	@ (8003cb0 <__ieee754_rem_pio2+0x2f0>)
 8003b30:	3a01      	subs	r2, #1
 8003b32:	0092      	lsls	r2, r2, #2
 8003b34:	58d3      	ldr	r3, [r2, r3]
 8003b36:	42ab      	cmp	r3, r5
 8003b38:	d006      	beq.n	8003b48 <__ieee754_rem_pio2+0x188>
 8003b3a:	0002      	movs	r2, r0
 8003b3c:	000b      	movs	r3, r1
 8003b3e:	9804      	ldr	r0, [sp, #16]
 8003b40:	9905      	ldr	r1, [sp, #20]
 8003b42:	f7fd ff99 	bl	8001a78 <__aeabi_dsub>
 8003b46:	e00b      	b.n	8003b60 <__ieee754_rem_pio2+0x1a0>
 8003b48:	9a06      	ldr	r2, [sp, #24]
 8003b4a:	9b07      	ldr	r3, [sp, #28]
 8003b4c:	9804      	ldr	r0, [sp, #16]
 8003b4e:	9905      	ldr	r1, [sp, #20]
 8003b50:	f7fd ff92 	bl	8001a78 <__aeabi_dsub>
 8003b54:	004b      	lsls	r3, r1, #1
 8003b56:	152e      	asrs	r6, r5, #20
 8003b58:	0d5b      	lsrs	r3, r3, #21
 8003b5a:	1af3      	subs	r3, r6, r3
 8003b5c:	2b10      	cmp	r3, #16
 8003b5e:	dc02      	bgt.n	8003b66 <__ieee754_rem_pio2+0x1a6>
 8003b60:	6038      	str	r0, [r7, #0]
 8003b62:	6079      	str	r1, [r7, #4]
 8003b64:	e039      	b.n	8003bda <__ieee754_rem_pio2+0x21a>
 8003b66:	22d3      	movs	r2, #211	@ 0xd3
 8003b68:	9808      	ldr	r0, [sp, #32]
 8003b6a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8003b6c:	4b49      	ldr	r3, [pc, #292]	@ (8003c94 <__ieee754_rem_pio2+0x2d4>)
 8003b6e:	0552      	lsls	r2, r2, #21
 8003b70:	f7fd fc9c 	bl	80014ac <__aeabi_dmul>
 8003b74:	0004      	movs	r4, r0
 8003b76:	000d      	movs	r5, r1
 8003b78:	0002      	movs	r2, r0
 8003b7a:	000b      	movs	r3, r1
 8003b7c:	9804      	ldr	r0, [sp, #16]
 8003b7e:	9905      	ldr	r1, [sp, #20]
 8003b80:	f7fd ff7a 	bl	8001a78 <__aeabi_dsub>
 8003b84:	0002      	movs	r2, r0
 8003b86:	000b      	movs	r3, r1
 8003b88:	900a      	str	r0, [sp, #40]	@ 0x28
 8003b8a:	910b      	str	r1, [sp, #44]	@ 0x2c
 8003b8c:	9804      	ldr	r0, [sp, #16]
 8003b8e:	9905      	ldr	r1, [sp, #20]
 8003b90:	f7fd ff72 	bl	8001a78 <__aeabi_dsub>
 8003b94:	0022      	movs	r2, r4
 8003b96:	002b      	movs	r3, r5
 8003b98:	f7fd ff6e 	bl	8001a78 <__aeabi_dsub>
 8003b9c:	0004      	movs	r4, r0
 8003b9e:	000d      	movs	r5, r1
 8003ba0:	9808      	ldr	r0, [sp, #32]
 8003ba2:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8003ba4:	4a3c      	ldr	r2, [pc, #240]	@ (8003c98 <__ieee754_rem_pio2+0x2d8>)
 8003ba6:	4b3d      	ldr	r3, [pc, #244]	@ (8003c9c <__ieee754_rem_pio2+0x2dc>)
 8003ba8:	f7fd fc80 	bl	80014ac <__aeabi_dmul>
 8003bac:	0022      	movs	r2, r4
 8003bae:	002b      	movs	r3, r5
 8003bb0:	f7fd ff62 	bl	8001a78 <__aeabi_dsub>
 8003bb4:	000b      	movs	r3, r1
 8003bb6:	0002      	movs	r2, r0
 8003bb8:	9006      	str	r0, [sp, #24]
 8003bba:	9107      	str	r1, [sp, #28]
 8003bbc:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8003bbe:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8003bc0:	f7fd ff5a 	bl	8001a78 <__aeabi_dsub>
 8003bc4:	004b      	lsls	r3, r1, #1
 8003bc6:	0d5b      	lsrs	r3, r3, #21
 8003bc8:	1af3      	subs	r3, r6, r3
 8003bca:	2b31      	cmp	r3, #49	@ 0x31
 8003bcc:	dc21      	bgt.n	8003c12 <__ieee754_rem_pio2+0x252>
 8003bce:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003bd0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8003bd2:	6038      	str	r0, [r7, #0]
 8003bd4:	6079      	str	r1, [r7, #4]
 8003bd6:	9304      	str	r3, [sp, #16]
 8003bd8:	9405      	str	r4, [sp, #20]
 8003bda:	683c      	ldr	r4, [r7, #0]
 8003bdc:	687d      	ldr	r5, [r7, #4]
 8003bde:	9804      	ldr	r0, [sp, #16]
 8003be0:	9905      	ldr	r1, [sp, #20]
 8003be2:	0022      	movs	r2, r4
 8003be4:	002b      	movs	r3, r5
 8003be6:	f7fd ff47 	bl	8001a78 <__aeabi_dsub>
 8003bea:	9a06      	ldr	r2, [sp, #24]
 8003bec:	9b07      	ldr	r3, [sp, #28]
 8003bee:	f7fd ff43 	bl	8001a78 <__aeabi_dsub>
 8003bf2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8003bf4:	60b8      	str	r0, [r7, #8]
 8003bf6:	60f9      	str	r1, [r7, #12]
 8003bf8:	2b00      	cmp	r3, #0
 8003bfa:	db00      	blt.n	8003bfe <__ieee754_rem_pio2+0x23e>
 8003bfc:	e717      	b.n	8003a2e <__ieee754_rem_pio2+0x6e>
 8003bfe:	2280      	movs	r2, #128	@ 0x80
 8003c00:	0612      	lsls	r2, r2, #24
 8003c02:	18ab      	adds	r3, r5, r2
 8003c04:	607b      	str	r3, [r7, #4]
 8003c06:	188b      	adds	r3, r1, r2
 8003c08:	603c      	str	r4, [r7, #0]
 8003c0a:	60b8      	str	r0, [r7, #8]
 8003c0c:	60fb      	str	r3, [r7, #12]
 8003c0e:	9b02      	ldr	r3, [sp, #8]
 8003c10:	e744      	b.n	8003a9c <__ieee754_rem_pio2+0xdc>
 8003c12:	22b8      	movs	r2, #184	@ 0xb8
 8003c14:	9808      	ldr	r0, [sp, #32]
 8003c16:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8003c18:	4b20      	ldr	r3, [pc, #128]	@ (8003c9c <__ieee754_rem_pio2+0x2dc>)
 8003c1a:	0592      	lsls	r2, r2, #22
 8003c1c:	f7fd fc46 	bl	80014ac <__aeabi_dmul>
 8003c20:	0004      	movs	r4, r0
 8003c22:	000d      	movs	r5, r1
 8003c24:	0002      	movs	r2, r0
 8003c26:	000b      	movs	r3, r1
 8003c28:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8003c2a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8003c2c:	f7fd ff24 	bl	8001a78 <__aeabi_dsub>
 8003c30:	0002      	movs	r2, r0
 8003c32:	000b      	movs	r3, r1
 8003c34:	9004      	str	r0, [sp, #16]
 8003c36:	9105      	str	r1, [sp, #20]
 8003c38:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8003c3a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8003c3c:	f7fd ff1c 	bl	8001a78 <__aeabi_dsub>
 8003c40:	0022      	movs	r2, r4
 8003c42:	002b      	movs	r3, r5
 8003c44:	f7fd ff18 	bl	8001a78 <__aeabi_dsub>
 8003c48:	0004      	movs	r4, r0
 8003c4a:	000d      	movs	r5, r1
 8003c4c:	9808      	ldr	r0, [sp, #32]
 8003c4e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8003c50:	4a18      	ldr	r2, [pc, #96]	@ (8003cb4 <__ieee754_rem_pio2+0x2f4>)
 8003c52:	4b19      	ldr	r3, [pc, #100]	@ (8003cb8 <__ieee754_rem_pio2+0x2f8>)
 8003c54:	f7fd fc2a 	bl	80014ac <__aeabi_dmul>
 8003c58:	0022      	movs	r2, r4
 8003c5a:	002b      	movs	r3, r5
 8003c5c:	f7fd ff0c 	bl	8001a78 <__aeabi_dsub>
 8003c60:	9006      	str	r0, [sp, #24]
 8003c62:	9107      	str	r1, [sp, #28]
 8003c64:	e769      	b.n	8003b3a <__ieee754_rem_pio2+0x17a>
 8003c66:	4b15      	ldr	r3, [pc, #84]	@ (8003cbc <__ieee754_rem_pio2+0x2fc>)
 8003c68:	429d      	cmp	r5, r3
 8003c6a:	d929      	bls.n	8003cc0 <__ieee754_rem_pio2+0x300>
 8003c6c:	0002      	movs	r2, r0
 8003c6e:	000b      	movs	r3, r1
 8003c70:	f7fd ff02 	bl	8001a78 <__aeabi_dsub>
 8003c74:	60b8      	str	r0, [r7, #8]
 8003c76:	60f9      	str	r1, [r7, #12]
 8003c78:	6038      	str	r0, [r7, #0]
 8003c7a:	6079      	str	r1, [r7, #4]
 8003c7c:	e6af      	b.n	80039de <__ieee754_rem_pio2+0x1e>
 8003c7e:	46c0      	nop			@ (mov r8, r8)
 8003c80:	3fe921fb 	.word	0x3fe921fb
 8003c84:	4002d97b 	.word	0x4002d97b
 8003c88:	3ff921fb 	.word	0x3ff921fb
 8003c8c:	54400000 	.word	0x54400000
 8003c90:	1a626331 	.word	0x1a626331
 8003c94:	3dd0b461 	.word	0x3dd0b461
 8003c98:	2e037073 	.word	0x2e037073
 8003c9c:	3ba3198a 	.word	0x3ba3198a
 8003ca0:	413921fb 	.word	0x413921fb
 8003ca4:	6dc9c883 	.word	0x6dc9c883
 8003ca8:	3fe45f30 	.word	0x3fe45f30
 8003cac:	3fe00000 	.word	0x3fe00000
 8003cb0:	0800468c 	.word	0x0800468c
 8003cb4:	252049c1 	.word	0x252049c1
 8003cb8:	397b839a 	.word	0x397b839a
 8003cbc:	7fefffff 	.word	0x7fefffff
 8003cc0:	4b2a      	ldr	r3, [pc, #168]	@ (8003d6c <__ieee754_rem_pio2+0x3ac>)
 8003cc2:	152e      	asrs	r6, r5, #20
 8003cc4:	18f6      	adds	r6, r6, r3
 8003cc6:	0531      	lsls	r1, r6, #20
 8003cc8:	1a6b      	subs	r3, r5, r1
 8003cca:	0019      	movs	r1, r3
 8003ccc:	001d      	movs	r5, r3
 8003cce:	0004      	movs	r4, r0
 8003cd0:	f7fe fadc 	bl	800228c <__aeabi_d2iz>
 8003cd4:	f7fe fb16 	bl	8002304 <__aeabi_i2d>
 8003cd8:	0002      	movs	r2, r0
 8003cda:	000b      	movs	r3, r1
 8003cdc:	0020      	movs	r0, r4
 8003cde:	0029      	movs	r1, r5
 8003ce0:	920e      	str	r2, [sp, #56]	@ 0x38
 8003ce2:	930f      	str	r3, [sp, #60]	@ 0x3c
 8003ce4:	f7fd fec8 	bl	8001a78 <__aeabi_dsub>
 8003ce8:	2200      	movs	r2, #0
 8003cea:	4b21      	ldr	r3, [pc, #132]	@ (8003d70 <__ieee754_rem_pio2+0x3b0>)
 8003cec:	f7fd fbde 	bl	80014ac <__aeabi_dmul>
 8003cf0:	000d      	movs	r5, r1
 8003cf2:	0004      	movs	r4, r0
 8003cf4:	f7fe faca 	bl	800228c <__aeabi_d2iz>
 8003cf8:	f7fe fb04 	bl	8002304 <__aeabi_i2d>
 8003cfc:	0002      	movs	r2, r0
 8003cfe:	000b      	movs	r3, r1
 8003d00:	0020      	movs	r0, r4
 8003d02:	0029      	movs	r1, r5
 8003d04:	9210      	str	r2, [sp, #64]	@ 0x40
 8003d06:	9311      	str	r3, [sp, #68]	@ 0x44
 8003d08:	f7fd feb6 	bl	8001a78 <__aeabi_dsub>
 8003d0c:	2200      	movs	r2, #0
 8003d0e:	4b18      	ldr	r3, [pc, #96]	@ (8003d70 <__ieee754_rem_pio2+0x3b0>)
 8003d10:	f7fd fbcc 	bl	80014ac <__aeabi_dmul>
 8003d14:	2503      	movs	r5, #3
 8003d16:	9012      	str	r0, [sp, #72]	@ 0x48
 8003d18:	9113      	str	r1, [sp, #76]	@ 0x4c
 8003d1a:	ac0e      	add	r4, sp, #56	@ 0x38
 8003d1c:	2200      	movs	r2, #0
 8003d1e:	6920      	ldr	r0, [r4, #16]
 8003d20:	6961      	ldr	r1, [r4, #20]
 8003d22:	2300      	movs	r3, #0
 8003d24:	9502      	str	r5, [sp, #8]
 8003d26:	3c08      	subs	r4, #8
 8003d28:	3d01      	subs	r5, #1
 8003d2a:	f7fc fb73 	bl	8000414 <__aeabi_dcmpeq>
 8003d2e:	2800      	cmp	r0, #0
 8003d30:	d1f4      	bne.n	8003d1c <__ieee754_rem_pio2+0x35c>
 8003d32:	4b10      	ldr	r3, [pc, #64]	@ (8003d74 <__ieee754_rem_pio2+0x3b4>)
 8003d34:	0032      	movs	r2, r6
 8003d36:	9301      	str	r3, [sp, #4]
 8003d38:	2302      	movs	r3, #2
 8003d3a:	0039      	movs	r1, r7
 8003d3c:	9300      	str	r3, [sp, #0]
 8003d3e:	a80e      	add	r0, sp, #56	@ 0x38
 8003d40:	9b02      	ldr	r3, [sp, #8]
 8003d42:	f000 f81d 	bl	8003d80 <__kernel_rem_pio2>
 8003d46:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8003d48:	9002      	str	r0, [sp, #8]
 8003d4a:	2b00      	cmp	r3, #0
 8003d4c:	db00      	blt.n	8003d50 <__ieee754_rem_pio2+0x390>
 8003d4e:	e66e      	b.n	8003a2e <__ieee754_rem_pio2+0x6e>
 8003d50:	2080      	movs	r0, #128	@ 0x80
 8003d52:	6879      	ldr	r1, [r7, #4]
 8003d54:	683a      	ldr	r2, [r7, #0]
 8003d56:	0600      	lsls	r0, r0, #24
 8003d58:	180b      	adds	r3, r1, r0
 8003d5a:	68f9      	ldr	r1, [r7, #12]
 8003d5c:	603a      	str	r2, [r7, #0]
 8003d5e:	607b      	str	r3, [r7, #4]
 8003d60:	68ba      	ldr	r2, [r7, #8]
 8003d62:	180b      	adds	r3, r1, r0
 8003d64:	60ba      	str	r2, [r7, #8]
 8003d66:	60fb      	str	r3, [r7, #12]
 8003d68:	e751      	b.n	8003c0e <__ieee754_rem_pio2+0x24e>
 8003d6a:	46c0      	nop			@ (mov r8, r8)
 8003d6c:	fffffbea 	.word	0xfffffbea
 8003d70:	41700000 	.word	0x41700000
 8003d74:	0800470c 	.word	0x0800470c

08003d78 <fabs>:
 8003d78:	0049      	lsls	r1, r1, #1
 8003d7a:	084b      	lsrs	r3, r1, #1
 8003d7c:	0019      	movs	r1, r3
 8003d7e:	4770      	bx	lr

08003d80 <__kernel_rem_pio2>:
 8003d80:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003d82:	4cc6      	ldr	r4, [pc, #792]	@ (800409c <__kernel_rem_pio2+0x31c>)
 8003d84:	44a5      	add	sp, r4
 8003d86:	0014      	movs	r4, r2
 8003d88:	9aa4      	ldr	r2, [sp, #656]	@ 0x290
 8003d8a:	930e      	str	r3, [sp, #56]	@ 0x38
 8003d8c:	4bc4      	ldr	r3, [pc, #784]	@ (80040a0 <__kernel_rem_pio2+0x320>)
 8003d8e:	0092      	lsls	r2, r2, #2
 8003d90:	58d3      	ldr	r3, [r2, r3]
 8003d92:	900f      	str	r0, [sp, #60]	@ 0x3c
 8003d94:	9308      	str	r3, [sp, #32]
 8003d96:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8003d98:	9105      	str	r1, [sp, #20]
 8003d9a:	3b01      	subs	r3, #1
 8003d9c:	930d      	str	r3, [sp, #52]	@ 0x34
 8003d9e:	2300      	movs	r3, #0
 8003da0:	9300      	str	r3, [sp, #0]
 8003da2:	0023      	movs	r3, r4
 8003da4:	3314      	adds	r3, #20
 8003da6:	db04      	blt.n	8003db2 <__kernel_rem_pio2+0x32>
 8003da8:	2118      	movs	r1, #24
 8003daa:	1ee0      	subs	r0, r4, #3
 8003dac:	f7fc fa36 	bl	800021c <__divsi3>
 8003db0:	9000      	str	r0, [sp, #0]
 8003db2:	9b00      	ldr	r3, [sp, #0]
 8003db4:	ae26      	add	r6, sp, #152	@ 0x98
 8003db6:	1c5a      	adds	r2, r3, #1
 8003db8:	2318      	movs	r3, #24
 8003dba:	425b      	negs	r3, r3
 8003dbc:	4353      	muls	r3, r2
 8003dbe:	191b      	adds	r3, r3, r4
 8003dc0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8003dc2:	9302      	str	r3, [sp, #8]
 8003dc4:	9b00      	ldr	r3, [sp, #0]
 8003dc6:	1a9d      	subs	r5, r3, r2
 8003dc8:	002c      	movs	r4, r5
 8003dca:	9b08      	ldr	r3, [sp, #32]
 8003dcc:	189f      	adds	r7, r3, r2
 8003dce:	1b63      	subs	r3, r4, r5
 8003dd0:	429f      	cmp	r7, r3
 8003dd2:	da0f      	bge.n	8003df4 <__kernel_rem_pio2+0x74>
 8003dd4:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8003dd6:	af76      	add	r7, sp, #472	@ 0x1d8
 8003dd8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8003dda:	9a08      	ldr	r2, [sp, #32]
 8003ddc:	1aeb      	subs	r3, r5, r3
 8003dde:	429a      	cmp	r2, r3
 8003de0:	db30      	blt.n	8003e44 <__kernel_rem_pio2+0xc4>
 8003de2:	00eb      	lsls	r3, r5, #3
 8003de4:	aa26      	add	r2, sp, #152	@ 0x98
 8003de6:	2400      	movs	r4, #0
 8003de8:	189e      	adds	r6, r3, r2
 8003dea:	2300      	movs	r3, #0
 8003dec:	9306      	str	r3, [sp, #24]
 8003dee:	9407      	str	r4, [sp, #28]
 8003df0:	2400      	movs	r4, #0
 8003df2:	e01e      	b.n	8003e32 <__kernel_rem_pio2+0xb2>
 8003df4:	2c00      	cmp	r4, #0
 8003df6:	db07      	blt.n	8003e08 <__kernel_rem_pio2+0x88>
 8003df8:	9aa5      	ldr	r2, [sp, #660]	@ 0x294
 8003dfa:	00a3      	lsls	r3, r4, #2
 8003dfc:	58d0      	ldr	r0, [r2, r3]
 8003dfe:	f7fe fa81 	bl	8002304 <__aeabi_i2d>
 8003e02:	c603      	stmia	r6!, {r0, r1}
 8003e04:	3401      	adds	r4, #1
 8003e06:	e7e2      	b.n	8003dce <__kernel_rem_pio2+0x4e>
 8003e08:	2000      	movs	r0, #0
 8003e0a:	2100      	movs	r1, #0
 8003e0c:	e7f9      	b.n	8003e02 <__kernel_rem_pio2+0x82>
 8003e0e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8003e10:	00e1      	lsls	r1, r4, #3
 8003e12:	1859      	adds	r1, r3, r1
 8003e14:	6808      	ldr	r0, [r1, #0]
 8003e16:	6849      	ldr	r1, [r1, #4]
 8003e18:	6832      	ldr	r2, [r6, #0]
 8003e1a:	6873      	ldr	r3, [r6, #4]
 8003e1c:	f7fd fb46 	bl	80014ac <__aeabi_dmul>
 8003e20:	0002      	movs	r2, r0
 8003e22:	000b      	movs	r3, r1
 8003e24:	9806      	ldr	r0, [sp, #24]
 8003e26:	9907      	ldr	r1, [sp, #28]
 8003e28:	f7fc fb40 	bl	80004ac <__aeabi_dadd>
 8003e2c:	9006      	str	r0, [sp, #24]
 8003e2e:	9107      	str	r1, [sp, #28]
 8003e30:	3401      	adds	r4, #1
 8003e32:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8003e34:	3e08      	subs	r6, #8
 8003e36:	429c      	cmp	r4, r3
 8003e38:	dde9      	ble.n	8003e0e <__kernel_rem_pio2+0x8e>
 8003e3a:	9b06      	ldr	r3, [sp, #24]
 8003e3c:	9c07      	ldr	r4, [sp, #28]
 8003e3e:	3501      	adds	r5, #1
 8003e40:	c718      	stmia	r7!, {r3, r4}
 8003e42:	e7c9      	b.n	8003dd8 <__kernel_rem_pio2+0x58>
 8003e44:	9b08      	ldr	r3, [sp, #32]
 8003e46:	aa12      	add	r2, sp, #72	@ 0x48
 8003e48:	009b      	lsls	r3, r3, #2
 8003e4a:	189b      	adds	r3, r3, r2
 8003e4c:	9311      	str	r3, [sp, #68]	@ 0x44
 8003e4e:	9b00      	ldr	r3, [sp, #0]
 8003e50:	9aa5      	ldr	r2, [sp, #660]	@ 0x294
 8003e52:	009b      	lsls	r3, r3, #2
 8003e54:	18d3      	adds	r3, r2, r3
 8003e56:	9310      	str	r3, [sp, #64]	@ 0x40
 8003e58:	9b08      	ldr	r3, [sp, #32]
 8003e5a:	9300      	str	r3, [sp, #0]
 8003e5c:	9b00      	ldr	r3, [sp, #0]
 8003e5e:	aa76      	add	r2, sp, #472	@ 0x1d8
 8003e60:	00db      	lsls	r3, r3, #3
 8003e62:	18d3      	adds	r3, r2, r3
 8003e64:	681e      	ldr	r6, [r3, #0]
 8003e66:	685f      	ldr	r7, [r3, #4]
 8003e68:	ab12      	add	r3, sp, #72	@ 0x48
 8003e6a:	001d      	movs	r5, r3
 8003e6c:	9c00      	ldr	r4, [sp, #0]
 8003e6e:	930a      	str	r3, [sp, #40]	@ 0x28
 8003e70:	2c00      	cmp	r4, #0
 8003e72:	dc73      	bgt.n	8003f5c <__kernel_rem_pio2+0x1dc>
 8003e74:	0030      	movs	r0, r6
 8003e76:	0039      	movs	r1, r7
 8003e78:	9a02      	ldr	r2, [sp, #8]
 8003e7a:	f000 fad5 	bl	8004428 <scalbn>
 8003e7e:	23ff      	movs	r3, #255	@ 0xff
 8003e80:	2200      	movs	r2, #0
 8003e82:	059b      	lsls	r3, r3, #22
 8003e84:	0004      	movs	r4, r0
 8003e86:	000d      	movs	r5, r1
 8003e88:	f7fd fb10 	bl	80014ac <__aeabi_dmul>
 8003e8c:	f000 fb38 	bl	8004500 <floor>
 8003e90:	2200      	movs	r2, #0
 8003e92:	4b84      	ldr	r3, [pc, #528]	@ (80040a4 <__kernel_rem_pio2+0x324>)
 8003e94:	f7fd fb0a 	bl	80014ac <__aeabi_dmul>
 8003e98:	0002      	movs	r2, r0
 8003e9a:	000b      	movs	r3, r1
 8003e9c:	0020      	movs	r0, r4
 8003e9e:	0029      	movs	r1, r5
 8003ea0:	f7fd fdea 	bl	8001a78 <__aeabi_dsub>
 8003ea4:	000d      	movs	r5, r1
 8003ea6:	0004      	movs	r4, r0
 8003ea8:	f7fe f9f0 	bl	800228c <__aeabi_d2iz>
 8003eac:	900c      	str	r0, [sp, #48]	@ 0x30
 8003eae:	f7fe fa29 	bl	8002304 <__aeabi_i2d>
 8003eb2:	000b      	movs	r3, r1
 8003eb4:	0002      	movs	r2, r0
 8003eb6:	0029      	movs	r1, r5
 8003eb8:	0020      	movs	r0, r4
 8003eba:	f7fd fddd 	bl	8001a78 <__aeabi_dsub>
 8003ebe:	9b02      	ldr	r3, [sp, #8]
 8003ec0:	0006      	movs	r6, r0
 8003ec2:	000f      	movs	r7, r1
 8003ec4:	2b00      	cmp	r3, #0
 8003ec6:	dd6f      	ble.n	8003fa8 <__kernel_rem_pio2+0x228>
 8003ec8:	2018      	movs	r0, #24
 8003eca:	9b00      	ldr	r3, [sp, #0]
 8003ecc:	aa12      	add	r2, sp, #72	@ 0x48
 8003ece:	3b01      	subs	r3, #1
 8003ed0:	009b      	lsls	r3, r3, #2
 8003ed2:	589a      	ldr	r2, [r3, r2]
 8003ed4:	9902      	ldr	r1, [sp, #8]
 8003ed6:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8003ed8:	1a40      	subs	r0, r0, r1
 8003eda:	0011      	movs	r1, r2
 8003edc:	4101      	asrs	r1, r0
 8003ede:	1864      	adds	r4, r4, r1
 8003ee0:	4081      	lsls	r1, r0
 8003ee2:	1a52      	subs	r2, r2, r1
 8003ee4:	a912      	add	r1, sp, #72	@ 0x48
 8003ee6:	505a      	str	r2, [r3, r1]
 8003ee8:	2317      	movs	r3, #23
 8003eea:	9902      	ldr	r1, [sp, #8]
 8003eec:	940c      	str	r4, [sp, #48]	@ 0x30
 8003eee:	1a5b      	subs	r3, r3, r1
 8003ef0:	411a      	asrs	r2, r3
 8003ef2:	9206      	str	r2, [sp, #24]
 8003ef4:	9b06      	ldr	r3, [sp, #24]
 8003ef6:	2b00      	cmp	r3, #0
 8003ef8:	dd68      	ble.n	8003fcc <__kernel_rem_pio2+0x24c>
 8003efa:	2200      	movs	r2, #0
 8003efc:	2580      	movs	r5, #128	@ 0x80
 8003efe:	0014      	movs	r4, r2
 8003f00:	2101      	movs	r1, #1
 8003f02:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8003f04:	4868      	ldr	r0, [pc, #416]	@ (80040a8 <__kernel_rem_pio2+0x328>)
 8003f06:	3301      	adds	r3, #1
 8003f08:	930c      	str	r3, [sp, #48]	@ 0x30
 8003f0a:	046d      	lsls	r5, r5, #17
 8003f0c:	9b00      	ldr	r3, [sp, #0]
 8003f0e:	4293      	cmp	r3, r2
 8003f10:	dd00      	ble.n	8003f14 <__kernel_rem_pio2+0x194>
 8003f12:	e098      	b.n	8004046 <__kernel_rem_pio2+0x2c6>
 8003f14:	9b02      	ldr	r3, [sp, #8]
 8003f16:	2b00      	cmp	r3, #0
 8003f18:	dd05      	ble.n	8003f26 <__kernel_rem_pio2+0x1a6>
 8003f1a:	2b01      	cmp	r3, #1
 8003f1c:	d100      	bne.n	8003f20 <__kernel_rem_pio2+0x1a0>
 8003f1e:	e0a4      	b.n	800406a <__kernel_rem_pio2+0x2ea>
 8003f20:	2b02      	cmp	r3, #2
 8003f22:	d100      	bne.n	8003f26 <__kernel_rem_pio2+0x1a6>
 8003f24:	e0ab      	b.n	800407e <__kernel_rem_pio2+0x2fe>
 8003f26:	9b06      	ldr	r3, [sp, #24]
 8003f28:	2b02      	cmp	r3, #2
 8003f2a:	d14f      	bne.n	8003fcc <__kernel_rem_pio2+0x24c>
 8003f2c:	0032      	movs	r2, r6
 8003f2e:	003b      	movs	r3, r7
 8003f30:	2000      	movs	r0, #0
 8003f32:	495e      	ldr	r1, [pc, #376]	@ (80040ac <__kernel_rem_pio2+0x32c>)
 8003f34:	f7fd fda0 	bl	8001a78 <__aeabi_dsub>
 8003f38:	0006      	movs	r6, r0
 8003f3a:	000f      	movs	r7, r1
 8003f3c:	2c00      	cmp	r4, #0
 8003f3e:	d045      	beq.n	8003fcc <__kernel_rem_pio2+0x24c>
 8003f40:	9a02      	ldr	r2, [sp, #8]
 8003f42:	2000      	movs	r0, #0
 8003f44:	4959      	ldr	r1, [pc, #356]	@ (80040ac <__kernel_rem_pio2+0x32c>)
 8003f46:	f000 fa6f 	bl	8004428 <scalbn>
 8003f4a:	0002      	movs	r2, r0
 8003f4c:	000b      	movs	r3, r1
 8003f4e:	0030      	movs	r0, r6
 8003f50:	0039      	movs	r1, r7
 8003f52:	f7fd fd91 	bl	8001a78 <__aeabi_dsub>
 8003f56:	0006      	movs	r6, r0
 8003f58:	000f      	movs	r7, r1
 8003f5a:	e037      	b.n	8003fcc <__kernel_rem_pio2+0x24c>
 8003f5c:	2200      	movs	r2, #0
 8003f5e:	4b54      	ldr	r3, [pc, #336]	@ (80040b0 <__kernel_rem_pio2+0x330>)
 8003f60:	0030      	movs	r0, r6
 8003f62:	0039      	movs	r1, r7
 8003f64:	f7fd faa2 	bl	80014ac <__aeabi_dmul>
 8003f68:	f7fe f990 	bl	800228c <__aeabi_d2iz>
 8003f6c:	f7fe f9ca 	bl	8002304 <__aeabi_i2d>
 8003f70:	2200      	movs	r2, #0
 8003f72:	4b50      	ldr	r3, [pc, #320]	@ (80040b4 <__kernel_rem_pio2+0x334>)
 8003f74:	9006      	str	r0, [sp, #24]
 8003f76:	9107      	str	r1, [sp, #28]
 8003f78:	f7fd fa98 	bl	80014ac <__aeabi_dmul>
 8003f7c:	0002      	movs	r2, r0
 8003f7e:	000b      	movs	r3, r1
 8003f80:	0030      	movs	r0, r6
 8003f82:	0039      	movs	r1, r7
 8003f84:	f7fd fd78 	bl	8001a78 <__aeabi_dsub>
 8003f88:	f7fe f980 	bl	800228c <__aeabi_d2iz>
 8003f8c:	3c01      	subs	r4, #1
 8003f8e:	aa76      	add	r2, sp, #472	@ 0x1d8
 8003f90:	00e3      	lsls	r3, r4, #3
 8003f92:	18d3      	adds	r3, r2, r3
 8003f94:	c501      	stmia	r5!, {r0}
 8003f96:	681a      	ldr	r2, [r3, #0]
 8003f98:	685b      	ldr	r3, [r3, #4]
 8003f9a:	9806      	ldr	r0, [sp, #24]
 8003f9c:	9907      	ldr	r1, [sp, #28]
 8003f9e:	f7fc fa85 	bl	80004ac <__aeabi_dadd>
 8003fa2:	0006      	movs	r6, r0
 8003fa4:	000f      	movs	r7, r1
 8003fa6:	e763      	b.n	8003e70 <__kernel_rem_pio2+0xf0>
 8003fa8:	9b02      	ldr	r3, [sp, #8]
 8003faa:	2b00      	cmp	r3, #0
 8003fac:	d107      	bne.n	8003fbe <__kernel_rem_pio2+0x23e>
 8003fae:	9b00      	ldr	r3, [sp, #0]
 8003fb0:	aa12      	add	r2, sp, #72	@ 0x48
 8003fb2:	3b01      	subs	r3, #1
 8003fb4:	009b      	lsls	r3, r3, #2
 8003fb6:	589b      	ldr	r3, [r3, r2]
 8003fb8:	15db      	asrs	r3, r3, #23
 8003fba:	9306      	str	r3, [sp, #24]
 8003fbc:	e79a      	b.n	8003ef4 <__kernel_rem_pio2+0x174>
 8003fbe:	2200      	movs	r2, #0
 8003fc0:	4b3d      	ldr	r3, [pc, #244]	@ (80040b8 <__kernel_rem_pio2+0x338>)
 8003fc2:	f7fc fa4b 	bl	800045c <__aeabi_dcmpge>
 8003fc6:	2800      	cmp	r0, #0
 8003fc8:	d13a      	bne.n	8004040 <__kernel_rem_pio2+0x2c0>
 8003fca:	9006      	str	r0, [sp, #24]
 8003fcc:	2200      	movs	r2, #0
 8003fce:	2300      	movs	r3, #0
 8003fd0:	0030      	movs	r0, r6
 8003fd2:	0039      	movs	r1, r7
 8003fd4:	f7fc fa1e 	bl	8000414 <__aeabi_dcmpeq>
 8003fd8:	2800      	cmp	r0, #0
 8003fda:	d100      	bne.n	8003fde <__kernel_rem_pio2+0x25e>
 8003fdc:	e0b5      	b.n	800414a <__kernel_rem_pio2+0x3ca>
 8003fde:	2200      	movs	r2, #0
 8003fe0:	9b00      	ldr	r3, [sp, #0]
 8003fe2:	3b01      	subs	r3, #1
 8003fe4:	9908      	ldr	r1, [sp, #32]
 8003fe6:	428b      	cmp	r3, r1
 8003fe8:	da51      	bge.n	800408e <__kernel_rem_pio2+0x30e>
 8003fea:	2a00      	cmp	r2, #0
 8003fec:	d100      	bne.n	8003ff0 <__kernel_rem_pio2+0x270>
 8003fee:	e096      	b.n	800411e <__kernel_rem_pio2+0x39e>
 8003ff0:	9b00      	ldr	r3, [sp, #0]
 8003ff2:	aa12      	add	r2, sp, #72	@ 0x48
 8003ff4:	3b01      	subs	r3, #1
 8003ff6:	9300      	str	r3, [sp, #0]
 8003ff8:	9b02      	ldr	r3, [sp, #8]
 8003ffa:	3b18      	subs	r3, #24
 8003ffc:	9302      	str	r3, [sp, #8]
 8003ffe:	9b00      	ldr	r3, [sp, #0]
 8004000:	009b      	lsls	r3, r3, #2
 8004002:	589b      	ldr	r3, [r3, r2]
 8004004:	2b00      	cmp	r3, #0
 8004006:	d0f3      	beq.n	8003ff0 <__kernel_rem_pio2+0x270>
 8004008:	2000      	movs	r0, #0
 800400a:	9a02      	ldr	r2, [sp, #8]
 800400c:	4927      	ldr	r1, [pc, #156]	@ (80040ac <__kernel_rem_pio2+0x32c>)
 800400e:	f000 fa0b 	bl	8004428 <scalbn>
 8004012:	0004      	movs	r4, r0
 8004014:	000d      	movs	r5, r1
 8004016:	9e00      	ldr	r6, [sp, #0]
 8004018:	2e00      	cmp	r6, #0
 800401a:	db00      	blt.n	800401e <__kernel_rem_pio2+0x29e>
 800401c:	e0d2      	b.n	80041c4 <__kernel_rem_pio2+0x444>
 800401e:	4b27      	ldr	r3, [pc, #156]	@ (80040bc <__kernel_rem_pio2+0x33c>)
 8004020:	9c00      	ldr	r4, [sp, #0]
 8004022:	930a      	str	r3, [sp, #40]	@ 0x28
 8004024:	2c00      	cmp	r4, #0
 8004026:	da00      	bge.n	800402a <__kernel_rem_pio2+0x2aa>
 8004028:	e103      	b.n	8004232 <__kernel_rem_pio2+0x4b2>
 800402a:	00e3      	lsls	r3, r4, #3
 800402c:	aa76      	add	r2, sp, #472	@ 0x1d8
 800402e:	189f      	adds	r7, r3, r2
 8004030:	2300      	movs	r3, #0
 8004032:	2200      	movs	r2, #0
 8004034:	9202      	str	r2, [sp, #8]
 8004036:	9303      	str	r3, [sp, #12]
 8004038:	9b00      	ldr	r3, [sp, #0]
 800403a:	2500      	movs	r5, #0
 800403c:	1b1e      	subs	r6, r3, r4
 800403e:	e0ea      	b.n	8004216 <__kernel_rem_pio2+0x496>
 8004040:	2302      	movs	r3, #2
 8004042:	9306      	str	r3, [sp, #24]
 8004044:	e759      	b.n	8003efa <__kernel_rem_pio2+0x17a>
 8004046:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004048:	681b      	ldr	r3, [r3, #0]
 800404a:	2c00      	cmp	r4, #0
 800404c:	d10b      	bne.n	8004066 <__kernel_rem_pio2+0x2e6>
 800404e:	2b00      	cmp	r3, #0
 8004050:	d003      	beq.n	800405a <__kernel_rem_pio2+0x2da>
 8004052:	1aeb      	subs	r3, r5, r3
 8004054:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8004056:	6023      	str	r3, [r4, #0]
 8004058:	000b      	movs	r3, r1
 800405a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 800405c:	3201      	adds	r2, #1
 800405e:	3404      	adds	r4, #4
 8004060:	940a      	str	r4, [sp, #40]	@ 0x28
 8004062:	001c      	movs	r4, r3
 8004064:	e752      	b.n	8003f0c <__kernel_rem_pio2+0x18c>
 8004066:	1ac3      	subs	r3, r0, r3
 8004068:	e7f4      	b.n	8004054 <__kernel_rem_pio2+0x2d4>
 800406a:	9b00      	ldr	r3, [sp, #0]
 800406c:	aa12      	add	r2, sp, #72	@ 0x48
 800406e:	3b01      	subs	r3, #1
 8004070:	009b      	lsls	r3, r3, #2
 8004072:	589a      	ldr	r2, [r3, r2]
 8004074:	0252      	lsls	r2, r2, #9
 8004076:	0a52      	lsrs	r2, r2, #9
 8004078:	a912      	add	r1, sp, #72	@ 0x48
 800407a:	505a      	str	r2, [r3, r1]
 800407c:	e753      	b.n	8003f26 <__kernel_rem_pio2+0x1a6>
 800407e:	9b00      	ldr	r3, [sp, #0]
 8004080:	aa12      	add	r2, sp, #72	@ 0x48
 8004082:	3b01      	subs	r3, #1
 8004084:	009b      	lsls	r3, r3, #2
 8004086:	589a      	ldr	r2, [r3, r2]
 8004088:	0292      	lsls	r2, r2, #10
 800408a:	0a92      	lsrs	r2, r2, #10
 800408c:	e7f4      	b.n	8004078 <__kernel_rem_pio2+0x2f8>
 800408e:	0099      	lsls	r1, r3, #2
 8004090:	a812      	add	r0, sp, #72	@ 0x48
 8004092:	5809      	ldr	r1, [r1, r0]
 8004094:	3b01      	subs	r3, #1
 8004096:	430a      	orrs	r2, r1
 8004098:	e7a4      	b.n	8003fe4 <__kernel_rem_pio2+0x264>
 800409a:	46c0      	nop			@ (mov r8, r8)
 800409c:	fffffd84 	.word	0xfffffd84
 80040a0:	08004858 	.word	0x08004858
 80040a4:	40200000 	.word	0x40200000
 80040a8:	00ffffff 	.word	0x00ffffff
 80040ac:	3ff00000 	.word	0x3ff00000
 80040b0:	3e700000 	.word	0x3e700000
 80040b4:	41700000 	.word	0x41700000
 80040b8:	3fe00000 	.word	0x3fe00000
 80040bc:	08004818 	.word	0x08004818
 80040c0:	3301      	adds	r3, #1
 80040c2:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80040c4:	009a      	lsls	r2, r3, #2
 80040c6:	4252      	negs	r2, r2
 80040c8:	588a      	ldr	r2, [r1, r2]
 80040ca:	2a00      	cmp	r2, #0
 80040cc:	d0f8      	beq.n	80040c0 <__kernel_rem_pio2+0x340>
 80040ce:	9a00      	ldr	r2, [sp, #0]
 80040d0:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80040d2:	1c55      	adds	r5, r2, #1
 80040d4:	1852      	adds	r2, r2, r1
 80040d6:	00d2      	lsls	r2, r2, #3
 80040d8:	a926      	add	r1, sp, #152	@ 0x98
 80040da:	188c      	adds	r4, r1, r2
 80040dc:	9a00      	ldr	r2, [sp, #0]
 80040de:	18d3      	adds	r3, r2, r3
 80040e0:	9306      	str	r3, [sp, #24]
 80040e2:	9b06      	ldr	r3, [sp, #24]
 80040e4:	42ab      	cmp	r3, r5
 80040e6:	da00      	bge.n	80040ea <__kernel_rem_pio2+0x36a>
 80040e8:	e6b7      	b.n	8003e5a <__kernel_rem_pio2+0xda>
 80040ea:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80040ec:	00ab      	lsls	r3, r5, #2
 80040ee:	58d0      	ldr	r0, [r2, r3]
 80040f0:	f7fe f908 	bl	8002304 <__aeabi_i2d>
 80040f4:	2200      	movs	r2, #0
 80040f6:	2300      	movs	r3, #0
 80040f8:	0027      	movs	r7, r4
 80040fa:	2600      	movs	r6, #0
 80040fc:	6020      	str	r0, [r4, #0]
 80040fe:	6061      	str	r1, [r4, #4]
 8004100:	9200      	str	r2, [sp, #0]
 8004102:	9301      	str	r3, [sp, #4]
 8004104:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8004106:	429e      	cmp	r6, r3
 8004108:	dd0b      	ble.n	8004122 <__kernel_rem_pio2+0x3a2>
 800410a:	00eb      	lsls	r3, r5, #3
 800410c:	aa76      	add	r2, sp, #472	@ 0x1d8
 800410e:	18d3      	adds	r3, r2, r3
 8004110:	3501      	adds	r5, #1
 8004112:	9900      	ldr	r1, [sp, #0]
 8004114:	9a01      	ldr	r2, [sp, #4]
 8004116:	3408      	adds	r4, #8
 8004118:	6019      	str	r1, [r3, #0]
 800411a:	605a      	str	r2, [r3, #4]
 800411c:	e7e1      	b.n	80040e2 <__kernel_rem_pio2+0x362>
 800411e:	2301      	movs	r3, #1
 8004120:	e7cf      	b.n	80040c2 <__kernel_rem_pio2+0x342>
 8004122:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004124:	00f1      	lsls	r1, r6, #3
 8004126:	1859      	adds	r1, r3, r1
 8004128:	6808      	ldr	r0, [r1, #0]
 800412a:	6849      	ldr	r1, [r1, #4]
 800412c:	683a      	ldr	r2, [r7, #0]
 800412e:	687b      	ldr	r3, [r7, #4]
 8004130:	f7fd f9bc 	bl	80014ac <__aeabi_dmul>
 8004134:	0002      	movs	r2, r0
 8004136:	000b      	movs	r3, r1
 8004138:	9800      	ldr	r0, [sp, #0]
 800413a:	9901      	ldr	r1, [sp, #4]
 800413c:	f7fc f9b6 	bl	80004ac <__aeabi_dadd>
 8004140:	3601      	adds	r6, #1
 8004142:	9000      	str	r0, [sp, #0]
 8004144:	9101      	str	r1, [sp, #4]
 8004146:	3f08      	subs	r7, #8
 8004148:	e7dc      	b.n	8004104 <__kernel_rem_pio2+0x384>
 800414a:	9b02      	ldr	r3, [sp, #8]
 800414c:	0030      	movs	r0, r6
 800414e:	425a      	negs	r2, r3
 8004150:	0039      	movs	r1, r7
 8004152:	f000 f969 	bl	8004428 <scalbn>
 8004156:	2200      	movs	r2, #0
 8004158:	4bb1      	ldr	r3, [pc, #708]	@ (8004420 <__kernel_rem_pio2+0x6a0>)
 800415a:	0006      	movs	r6, r0
 800415c:	000f      	movs	r7, r1
 800415e:	f7fc f97d 	bl	800045c <__aeabi_dcmpge>
 8004162:	2800      	cmp	r0, #0
 8004164:	d025      	beq.n	80041b2 <__kernel_rem_pio2+0x432>
 8004166:	2200      	movs	r2, #0
 8004168:	4bae      	ldr	r3, [pc, #696]	@ (8004424 <__kernel_rem_pio2+0x6a4>)
 800416a:	0030      	movs	r0, r6
 800416c:	0039      	movs	r1, r7
 800416e:	f7fd f99d 	bl	80014ac <__aeabi_dmul>
 8004172:	f7fe f88b 	bl	800228c <__aeabi_d2iz>
 8004176:	9b00      	ldr	r3, [sp, #0]
 8004178:	0004      	movs	r4, r0
 800417a:	009d      	lsls	r5, r3, #2
 800417c:	f7fe f8c2 	bl	8002304 <__aeabi_i2d>
 8004180:	2200      	movs	r2, #0
 8004182:	4ba7      	ldr	r3, [pc, #668]	@ (8004420 <__kernel_rem_pio2+0x6a0>)
 8004184:	f7fd f992 	bl	80014ac <__aeabi_dmul>
 8004188:	0002      	movs	r2, r0
 800418a:	000b      	movs	r3, r1
 800418c:	0030      	movs	r0, r6
 800418e:	0039      	movs	r1, r7
 8004190:	f7fd fc72 	bl	8001a78 <__aeabi_dsub>
 8004194:	f7fe f87a 	bl	800228c <__aeabi_d2iz>
 8004198:	ab12      	add	r3, sp, #72	@ 0x48
 800419a:	5158      	str	r0, [r3, r5]
 800419c:	9b00      	ldr	r3, [sp, #0]
 800419e:	aa12      	add	r2, sp, #72	@ 0x48
 80041a0:	3301      	adds	r3, #1
 80041a2:	9300      	str	r3, [sp, #0]
 80041a4:	9b02      	ldr	r3, [sp, #8]
 80041a6:	3318      	adds	r3, #24
 80041a8:	9302      	str	r3, [sp, #8]
 80041aa:	9b00      	ldr	r3, [sp, #0]
 80041ac:	009b      	lsls	r3, r3, #2
 80041ae:	509c      	str	r4, [r3, r2]
 80041b0:	e72a      	b.n	8004008 <__kernel_rem_pio2+0x288>
 80041b2:	9b00      	ldr	r3, [sp, #0]
 80041b4:	0030      	movs	r0, r6
 80041b6:	0039      	movs	r1, r7
 80041b8:	009c      	lsls	r4, r3, #2
 80041ba:	f7fe f867 	bl	800228c <__aeabi_d2iz>
 80041be:	ab12      	add	r3, sp, #72	@ 0x48
 80041c0:	5118      	str	r0, [r3, r4]
 80041c2:	e721      	b.n	8004008 <__kernel_rem_pio2+0x288>
 80041c4:	00f3      	lsls	r3, r6, #3
 80041c6:	aa76      	add	r2, sp, #472	@ 0x1d8
 80041c8:	18d7      	adds	r7, r2, r3
 80041ca:	00b3      	lsls	r3, r6, #2
 80041cc:	aa12      	add	r2, sp, #72	@ 0x48
 80041ce:	5898      	ldr	r0, [r3, r2]
 80041d0:	f7fe f898 	bl	8002304 <__aeabi_i2d>
 80041d4:	0022      	movs	r2, r4
 80041d6:	002b      	movs	r3, r5
 80041d8:	f7fd f968 	bl	80014ac <__aeabi_dmul>
 80041dc:	2200      	movs	r2, #0
 80041de:	6038      	str	r0, [r7, #0]
 80041e0:	6079      	str	r1, [r7, #4]
 80041e2:	4b90      	ldr	r3, [pc, #576]	@ (8004424 <__kernel_rem_pio2+0x6a4>)
 80041e4:	0020      	movs	r0, r4
 80041e6:	0029      	movs	r1, r5
 80041e8:	f7fd f960 	bl	80014ac <__aeabi_dmul>
 80041ec:	3e01      	subs	r6, #1
 80041ee:	0004      	movs	r4, r0
 80041f0:	000d      	movs	r5, r1
 80041f2:	e711      	b.n	8004018 <__kernel_rem_pio2+0x298>
 80041f4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80041f6:	00e9      	lsls	r1, r5, #3
 80041f8:	18c9      	adds	r1, r1, r3
 80041fa:	6808      	ldr	r0, [r1, #0]
 80041fc:	6849      	ldr	r1, [r1, #4]
 80041fe:	cf0c      	ldmia	r7!, {r2, r3}
 8004200:	f7fd f954 	bl	80014ac <__aeabi_dmul>
 8004204:	0002      	movs	r2, r0
 8004206:	000b      	movs	r3, r1
 8004208:	9802      	ldr	r0, [sp, #8]
 800420a:	9903      	ldr	r1, [sp, #12]
 800420c:	f7fc f94e 	bl	80004ac <__aeabi_dadd>
 8004210:	9002      	str	r0, [sp, #8]
 8004212:	9103      	str	r1, [sp, #12]
 8004214:	3501      	adds	r5, #1
 8004216:	9b08      	ldr	r3, [sp, #32]
 8004218:	429d      	cmp	r5, r3
 800421a:	dc01      	bgt.n	8004220 <__kernel_rem_pio2+0x4a0>
 800421c:	42b5      	cmp	r5, r6
 800421e:	dde9      	ble.n	80041f4 <__kernel_rem_pio2+0x474>
 8004220:	00f6      	lsls	r6, r6, #3
 8004222:	ab4e      	add	r3, sp, #312	@ 0x138
 8004224:	199b      	adds	r3, r3, r6
 8004226:	9902      	ldr	r1, [sp, #8]
 8004228:	9a03      	ldr	r2, [sp, #12]
 800422a:	3c01      	subs	r4, #1
 800422c:	6019      	str	r1, [r3, #0]
 800422e:	605a      	str	r2, [r3, #4]
 8004230:	e6f8      	b.n	8004024 <__kernel_rem_pio2+0x2a4>
 8004232:	9ba4      	ldr	r3, [sp, #656]	@ 0x290
 8004234:	2b02      	cmp	r3, #2
 8004236:	dc0b      	bgt.n	8004250 <__kernel_rem_pio2+0x4d0>
 8004238:	2b00      	cmp	r3, #0
 800423a:	dd00      	ble.n	800423e <__kernel_rem_pio2+0x4be>
 800423c:	e084      	b.n	8004348 <__kernel_rem_pio2+0x5c8>
 800423e:	d052      	beq.n	80042e6 <__kernel_rem_pio2+0x566>
 8004240:	2007      	movs	r0, #7
 8004242:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8004244:	4003      	ands	r3, r0
 8004246:	0018      	movs	r0, r3
 8004248:	239f      	movs	r3, #159	@ 0x9f
 800424a:	009b      	lsls	r3, r3, #2
 800424c:	449d      	add	sp, r3
 800424e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004250:	9ba4      	ldr	r3, [sp, #656]	@ 0x290
 8004252:	2b03      	cmp	r3, #3
 8004254:	d1f4      	bne.n	8004240 <__kernel_rem_pio2+0x4c0>
 8004256:	9b00      	ldr	r3, [sp, #0]
 8004258:	aa4e      	add	r2, sp, #312	@ 0x138
 800425a:	00db      	lsls	r3, r3, #3
 800425c:	18d4      	adds	r4, r2, r3
 800425e:	0025      	movs	r5, r4
 8004260:	9b00      	ldr	r3, [sp, #0]
 8004262:	9302      	str	r3, [sp, #8]
 8004264:	9b02      	ldr	r3, [sp, #8]
 8004266:	3d08      	subs	r5, #8
 8004268:	2b00      	cmp	r3, #0
 800426a:	dd00      	ble.n	800426e <__kernel_rem_pio2+0x4ee>
 800426c:	e07a      	b.n	8004364 <__kernel_rem_pio2+0x5e4>
 800426e:	9d00      	ldr	r5, [sp, #0]
 8004270:	3c08      	subs	r4, #8
 8004272:	2d01      	cmp	r5, #1
 8004274:	dd00      	ble.n	8004278 <__kernel_rem_pio2+0x4f8>
 8004276:	e095      	b.n	80043a4 <__kernel_rem_pio2+0x624>
 8004278:	2000      	movs	r0, #0
 800427a:	2100      	movs	r1, #0
 800427c:	9b00      	ldr	r3, [sp, #0]
 800427e:	2b01      	cmp	r3, #1
 8004280:	dd00      	ble.n	8004284 <__kernel_rem_pio2+0x504>
 8004282:	e0ad      	b.n	80043e0 <__kernel_rem_pio2+0x660>
 8004284:	9b50      	ldr	r3, [sp, #320]	@ 0x140
 8004286:	9c51      	ldr	r4, [sp, #324]	@ 0x144
 8004288:	9d4e      	ldr	r5, [sp, #312]	@ 0x138
 800428a:	9e4f      	ldr	r6, [sp, #316]	@ 0x13c
 800428c:	9300      	str	r3, [sp, #0]
 800428e:	9401      	str	r4, [sp, #4]
 8004290:	9b06      	ldr	r3, [sp, #24]
 8004292:	2b00      	cmp	r3, #0
 8004294:	d000      	beq.n	8004298 <__kernel_rem_pio2+0x518>
 8004296:	e0af      	b.n	80043f8 <__kernel_rem_pio2+0x678>
 8004298:	9b05      	ldr	r3, [sp, #20]
 800429a:	601d      	str	r5, [r3, #0]
 800429c:	605e      	str	r6, [r3, #4]
 800429e:	9c00      	ldr	r4, [sp, #0]
 80042a0:	9d01      	ldr	r5, [sp, #4]
 80042a2:	6118      	str	r0, [r3, #16]
 80042a4:	6159      	str	r1, [r3, #20]
 80042a6:	609c      	str	r4, [r3, #8]
 80042a8:	60dd      	str	r5, [r3, #12]
 80042aa:	e7c9      	b.n	8004240 <__kernel_rem_pio2+0x4c0>
 80042ac:	9b00      	ldr	r3, [sp, #0]
 80042ae:	aa4e      	add	r2, sp, #312	@ 0x138
 80042b0:	00db      	lsls	r3, r3, #3
 80042b2:	18d3      	adds	r3, r2, r3
 80042b4:	0020      	movs	r0, r4
 80042b6:	681a      	ldr	r2, [r3, #0]
 80042b8:	685b      	ldr	r3, [r3, #4]
 80042ba:	0029      	movs	r1, r5
 80042bc:	f7fc f8f6 	bl	80004ac <__aeabi_dadd>
 80042c0:	0004      	movs	r4, r0
 80042c2:	000d      	movs	r5, r1
 80042c4:	9b00      	ldr	r3, [sp, #0]
 80042c6:	3b01      	subs	r3, #1
 80042c8:	9300      	str	r3, [sp, #0]
 80042ca:	9b00      	ldr	r3, [sp, #0]
 80042cc:	2b00      	cmp	r3, #0
 80042ce:	daed      	bge.n	80042ac <__kernel_rem_pio2+0x52c>
 80042d0:	9b06      	ldr	r3, [sp, #24]
 80042d2:	2b00      	cmp	r3, #0
 80042d4:	d003      	beq.n	80042de <__kernel_rem_pio2+0x55e>
 80042d6:	2180      	movs	r1, #128	@ 0x80
 80042d8:	0609      	lsls	r1, r1, #24
 80042da:	186b      	adds	r3, r5, r1
 80042dc:	001d      	movs	r5, r3
 80042de:	9b05      	ldr	r3, [sp, #20]
 80042e0:	601c      	str	r4, [r3, #0]
 80042e2:	605d      	str	r5, [r3, #4]
 80042e4:	e7ac      	b.n	8004240 <__kernel_rem_pio2+0x4c0>
 80042e6:	2400      	movs	r4, #0
 80042e8:	2500      	movs	r5, #0
 80042ea:	e7ee      	b.n	80042ca <__kernel_rem_pio2+0x54a>
 80042ec:	00e3      	lsls	r3, r4, #3
 80042ee:	aa4e      	add	r2, sp, #312	@ 0x138
 80042f0:	18d3      	adds	r3, r2, r3
 80042f2:	681a      	ldr	r2, [r3, #0]
 80042f4:	685b      	ldr	r3, [r3, #4]
 80042f6:	f7fc f8d9 	bl	80004ac <__aeabi_dadd>
 80042fa:	3c01      	subs	r4, #1
 80042fc:	2c00      	cmp	r4, #0
 80042fe:	daf5      	bge.n	80042ec <__kernel_rem_pio2+0x56c>
 8004300:	9c06      	ldr	r4, [sp, #24]
 8004302:	0002      	movs	r2, r0
 8004304:	000b      	movs	r3, r1
 8004306:	2c00      	cmp	r4, #0
 8004308:	d002      	beq.n	8004310 <__kernel_rem_pio2+0x590>
 800430a:	2480      	movs	r4, #128	@ 0x80
 800430c:	0624      	lsls	r4, r4, #24
 800430e:	190b      	adds	r3, r1, r4
 8004310:	9c05      	ldr	r4, [sp, #20]
 8004312:	2501      	movs	r5, #1
 8004314:	6022      	str	r2, [r4, #0]
 8004316:	6063      	str	r3, [r4, #4]
 8004318:	0002      	movs	r2, r0
 800431a:	000b      	movs	r3, r1
 800431c:	984e      	ldr	r0, [sp, #312]	@ 0x138
 800431e:	994f      	ldr	r1, [sp, #316]	@ 0x13c
 8004320:	f7fd fbaa 	bl	8001a78 <__aeabi_dsub>
 8004324:	0006      	movs	r6, r0
 8004326:	000f      	movs	r7, r1
 8004328:	ac4e      	add	r4, sp, #312	@ 0x138
 800432a:	9b00      	ldr	r3, [sp, #0]
 800432c:	3408      	adds	r4, #8
 800432e:	42ab      	cmp	r3, r5
 8004330:	da0e      	bge.n	8004350 <__kernel_rem_pio2+0x5d0>
 8004332:	9b06      	ldr	r3, [sp, #24]
 8004334:	2b00      	cmp	r3, #0
 8004336:	d003      	beq.n	8004340 <__kernel_rem_pio2+0x5c0>
 8004338:	2180      	movs	r1, #128	@ 0x80
 800433a:	0609      	lsls	r1, r1, #24
 800433c:	187b      	adds	r3, r7, r1
 800433e:	001f      	movs	r7, r3
 8004340:	9b05      	ldr	r3, [sp, #20]
 8004342:	609e      	str	r6, [r3, #8]
 8004344:	60df      	str	r7, [r3, #12]
 8004346:	e77b      	b.n	8004240 <__kernel_rem_pio2+0x4c0>
 8004348:	2000      	movs	r0, #0
 800434a:	2100      	movs	r1, #0
 800434c:	9c00      	ldr	r4, [sp, #0]
 800434e:	e7d5      	b.n	80042fc <__kernel_rem_pio2+0x57c>
 8004350:	0030      	movs	r0, r6
 8004352:	6822      	ldr	r2, [r4, #0]
 8004354:	6863      	ldr	r3, [r4, #4]
 8004356:	0039      	movs	r1, r7
 8004358:	f7fc f8a8 	bl	80004ac <__aeabi_dadd>
 800435c:	3501      	adds	r5, #1
 800435e:	0006      	movs	r6, r0
 8004360:	000f      	movs	r7, r1
 8004362:	e7e2      	b.n	800432a <__kernel_rem_pio2+0x5aa>
 8004364:	9b02      	ldr	r3, [sp, #8]
 8004366:	3b01      	subs	r3, #1
 8004368:	9302      	str	r3, [sp, #8]
 800436a:	682a      	ldr	r2, [r5, #0]
 800436c:	686b      	ldr	r3, [r5, #4]
 800436e:	9208      	str	r2, [sp, #32]
 8004370:	9309      	str	r3, [sp, #36]	@ 0x24
 8004372:	9808      	ldr	r0, [sp, #32]
 8004374:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8004376:	68aa      	ldr	r2, [r5, #8]
 8004378:	68eb      	ldr	r3, [r5, #12]
 800437a:	920a      	str	r2, [sp, #40]	@ 0x28
 800437c:	930b      	str	r3, [sp, #44]	@ 0x2c
 800437e:	f7fc f895 	bl	80004ac <__aeabi_dadd>
 8004382:	0002      	movs	r2, r0
 8004384:	000b      	movs	r3, r1
 8004386:	0006      	movs	r6, r0
 8004388:	000f      	movs	r7, r1
 800438a:	9808      	ldr	r0, [sp, #32]
 800438c:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800438e:	f7fd fb73 	bl	8001a78 <__aeabi_dsub>
 8004392:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8004394:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8004396:	f7fc f889 	bl	80004ac <__aeabi_dadd>
 800439a:	602e      	str	r6, [r5, #0]
 800439c:	606f      	str	r7, [r5, #4]
 800439e:	60a8      	str	r0, [r5, #8]
 80043a0:	60e9      	str	r1, [r5, #12]
 80043a2:	e75f      	b.n	8004264 <__kernel_rem_pio2+0x4e4>
 80043a4:	6822      	ldr	r2, [r4, #0]
 80043a6:	6863      	ldr	r3, [r4, #4]
 80043a8:	9202      	str	r2, [sp, #8]
 80043aa:	9303      	str	r3, [sp, #12]
 80043ac:	9802      	ldr	r0, [sp, #8]
 80043ae:	9903      	ldr	r1, [sp, #12]
 80043b0:	68a2      	ldr	r2, [r4, #8]
 80043b2:	68e3      	ldr	r3, [r4, #12]
 80043b4:	9208      	str	r2, [sp, #32]
 80043b6:	9309      	str	r3, [sp, #36]	@ 0x24
 80043b8:	f7fc f878 	bl	80004ac <__aeabi_dadd>
 80043bc:	0002      	movs	r2, r0
 80043be:	000b      	movs	r3, r1
 80043c0:	0006      	movs	r6, r0
 80043c2:	000f      	movs	r7, r1
 80043c4:	9802      	ldr	r0, [sp, #8]
 80043c6:	9903      	ldr	r1, [sp, #12]
 80043c8:	f7fd fb56 	bl	8001a78 <__aeabi_dsub>
 80043cc:	9a08      	ldr	r2, [sp, #32]
 80043ce:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80043d0:	f7fc f86c 	bl	80004ac <__aeabi_dadd>
 80043d4:	3d01      	subs	r5, #1
 80043d6:	60a0      	str	r0, [r4, #8]
 80043d8:	60e1      	str	r1, [r4, #12]
 80043da:	6026      	str	r6, [r4, #0]
 80043dc:	6067      	str	r7, [r4, #4]
 80043de:	e747      	b.n	8004270 <__kernel_rem_pio2+0x4f0>
 80043e0:	9b00      	ldr	r3, [sp, #0]
 80043e2:	aa4e      	add	r2, sp, #312	@ 0x138
 80043e4:	00db      	lsls	r3, r3, #3
 80043e6:	18d3      	adds	r3, r2, r3
 80043e8:	681a      	ldr	r2, [r3, #0]
 80043ea:	685b      	ldr	r3, [r3, #4]
 80043ec:	f7fc f85e 	bl	80004ac <__aeabi_dadd>
 80043f0:	9b00      	ldr	r3, [sp, #0]
 80043f2:	3b01      	subs	r3, #1
 80043f4:	9300      	str	r3, [sp, #0]
 80043f6:	e741      	b.n	800427c <__kernel_rem_pio2+0x4fc>
 80043f8:	9b05      	ldr	r3, [sp, #20]
 80043fa:	9a05      	ldr	r2, [sp, #20]
 80043fc:	601d      	str	r5, [r3, #0]
 80043fe:	2380      	movs	r3, #128	@ 0x80
 8004400:	061b      	lsls	r3, r3, #24
 8004402:	18f4      	adds	r4, r6, r3
 8004404:	6054      	str	r4, [r2, #4]
 8004406:	9a00      	ldr	r2, [sp, #0]
 8004408:	9c05      	ldr	r4, [sp, #20]
 800440a:	60a2      	str	r2, [r4, #8]
 800440c:	001a      	movs	r2, r3
 800440e:	9c01      	ldr	r4, [sp, #4]
 8004410:	18e3      	adds	r3, r4, r3
 8004412:	9c05      	ldr	r4, [sp, #20]
 8004414:	60e3      	str	r3, [r4, #12]
 8004416:	188b      	adds	r3, r1, r2
 8004418:	6120      	str	r0, [r4, #16]
 800441a:	6163      	str	r3, [r4, #20]
 800441c:	e710      	b.n	8004240 <__kernel_rem_pio2+0x4c0>
 800441e:	46c0      	nop			@ (mov r8, r8)
 8004420:	41700000 	.word	0x41700000
 8004424:	3e700000 	.word	0x3e700000

08004428 <scalbn>:
 8004428:	004b      	lsls	r3, r1, #1
 800442a:	b570      	push	{r4, r5, r6, lr}
 800442c:	0d5b      	lsrs	r3, r3, #21
 800442e:	0014      	movs	r4, r2
 8004430:	000d      	movs	r5, r1
 8004432:	2b00      	cmp	r3, #0
 8004434:	d10f      	bne.n	8004456 <scalbn+0x2e>
 8004436:	004b      	lsls	r3, r1, #1
 8004438:	085b      	lsrs	r3, r3, #1
 800443a:	4303      	orrs	r3, r0
 800443c:	d012      	beq.n	8004464 <scalbn+0x3c>
 800443e:	4b23      	ldr	r3, [pc, #140]	@ (80044cc <scalbn+0xa4>)
 8004440:	2200      	movs	r2, #0
 8004442:	f7fd f833 	bl	80014ac <__aeabi_dmul>
 8004446:	4b22      	ldr	r3, [pc, #136]	@ (80044d0 <scalbn+0xa8>)
 8004448:	429c      	cmp	r4, r3
 800444a:	da0c      	bge.n	8004466 <scalbn+0x3e>
 800444c:	4a21      	ldr	r2, [pc, #132]	@ (80044d4 <scalbn+0xac>)
 800444e:	4b22      	ldr	r3, [pc, #136]	@ (80044d8 <scalbn+0xb0>)
 8004450:	f7fd f82c 	bl	80014ac <__aeabi_dmul>
 8004454:	e006      	b.n	8004464 <scalbn+0x3c>
 8004456:	4a21      	ldr	r2, [pc, #132]	@ (80044dc <scalbn+0xb4>)
 8004458:	4293      	cmp	r3, r2
 800445a:	d108      	bne.n	800446e <scalbn+0x46>
 800445c:	0002      	movs	r2, r0
 800445e:	000b      	movs	r3, r1
 8004460:	f7fc f824 	bl	80004ac <__aeabi_dadd>
 8004464:	bd70      	pop	{r4, r5, r6, pc}
 8004466:	000d      	movs	r5, r1
 8004468:	004b      	lsls	r3, r1, #1
 800446a:	0d5b      	lsrs	r3, r3, #21
 800446c:	3b36      	subs	r3, #54	@ 0x36
 800446e:	4a1c      	ldr	r2, [pc, #112]	@ (80044e0 <scalbn+0xb8>)
 8004470:	4294      	cmp	r4, r2
 8004472:	dd0a      	ble.n	800448a <scalbn+0x62>
 8004474:	4c1b      	ldr	r4, [pc, #108]	@ (80044e4 <scalbn+0xbc>)
 8004476:	4d1c      	ldr	r5, [pc, #112]	@ (80044e8 <scalbn+0xc0>)
 8004478:	2900      	cmp	r1, #0
 800447a:	da01      	bge.n	8004480 <scalbn+0x58>
 800447c:	4c19      	ldr	r4, [pc, #100]	@ (80044e4 <scalbn+0xbc>)
 800447e:	4d1b      	ldr	r5, [pc, #108]	@ (80044ec <scalbn+0xc4>)
 8004480:	4a18      	ldr	r2, [pc, #96]	@ (80044e4 <scalbn+0xbc>)
 8004482:	4b19      	ldr	r3, [pc, #100]	@ (80044e8 <scalbn+0xc0>)
 8004484:	0020      	movs	r0, r4
 8004486:	0029      	movs	r1, r5
 8004488:	e7e2      	b.n	8004450 <scalbn+0x28>
 800448a:	18e2      	adds	r2, r4, r3
 800448c:	4b18      	ldr	r3, [pc, #96]	@ (80044f0 <scalbn+0xc8>)
 800448e:	429a      	cmp	r2, r3
 8004490:	dcf0      	bgt.n	8004474 <scalbn+0x4c>
 8004492:	2a00      	cmp	r2, #0
 8004494:	dd05      	ble.n	80044a2 <scalbn+0x7a>
 8004496:	4b17      	ldr	r3, [pc, #92]	@ (80044f4 <scalbn+0xcc>)
 8004498:	0512      	lsls	r2, r2, #20
 800449a:	402b      	ands	r3, r5
 800449c:	4313      	orrs	r3, r2
 800449e:	0019      	movs	r1, r3
 80044a0:	e7e0      	b.n	8004464 <scalbn+0x3c>
 80044a2:	0013      	movs	r3, r2
 80044a4:	3335      	adds	r3, #53	@ 0x35
 80044a6:	da08      	bge.n	80044ba <scalbn+0x92>
 80044a8:	4c0a      	ldr	r4, [pc, #40]	@ (80044d4 <scalbn+0xac>)
 80044aa:	4d0b      	ldr	r5, [pc, #44]	@ (80044d8 <scalbn+0xb0>)
 80044ac:	2900      	cmp	r1, #0
 80044ae:	da01      	bge.n	80044b4 <scalbn+0x8c>
 80044b0:	4c08      	ldr	r4, [pc, #32]	@ (80044d4 <scalbn+0xac>)
 80044b2:	4d11      	ldr	r5, [pc, #68]	@ (80044f8 <scalbn+0xd0>)
 80044b4:	4a07      	ldr	r2, [pc, #28]	@ (80044d4 <scalbn+0xac>)
 80044b6:	4b08      	ldr	r3, [pc, #32]	@ (80044d8 <scalbn+0xb0>)
 80044b8:	e7e4      	b.n	8004484 <scalbn+0x5c>
 80044ba:	4b0e      	ldr	r3, [pc, #56]	@ (80044f4 <scalbn+0xcc>)
 80044bc:	3236      	adds	r2, #54	@ 0x36
 80044be:	401d      	ands	r5, r3
 80044c0:	0512      	lsls	r2, r2, #20
 80044c2:	432a      	orrs	r2, r5
 80044c4:	0011      	movs	r1, r2
 80044c6:	4b0d      	ldr	r3, [pc, #52]	@ (80044fc <scalbn+0xd4>)
 80044c8:	2200      	movs	r2, #0
 80044ca:	e7c1      	b.n	8004450 <scalbn+0x28>
 80044cc:	43500000 	.word	0x43500000
 80044d0:	ffff3cb0 	.word	0xffff3cb0
 80044d4:	c2f8f359 	.word	0xc2f8f359
 80044d8:	01a56e1f 	.word	0x01a56e1f
 80044dc:	000007ff 	.word	0x000007ff
 80044e0:	0000c350 	.word	0x0000c350
 80044e4:	8800759c 	.word	0x8800759c
 80044e8:	7e37e43c 	.word	0x7e37e43c
 80044ec:	fe37e43c 	.word	0xfe37e43c
 80044f0:	000007fe 	.word	0x000007fe
 80044f4:	800fffff 	.word	0x800fffff
 80044f8:	81a56e1f 	.word	0x81a56e1f
 80044fc:	3c900000 	.word	0x3c900000

08004500 <floor>:
 8004500:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004502:	004b      	lsls	r3, r1, #1
 8004504:	4a36      	ldr	r2, [pc, #216]	@ (80045e0 <floor+0xe0>)
 8004506:	0d5b      	lsrs	r3, r3, #21
 8004508:	189e      	adds	r6, r3, r2
 800450a:	000c      	movs	r4, r1
 800450c:	0005      	movs	r5, r0
 800450e:	9001      	str	r0, [sp, #4]
 8004510:	2e13      	cmp	r6, #19
 8004512:	dc2f      	bgt.n	8004574 <floor+0x74>
 8004514:	2e00      	cmp	r6, #0
 8004516:	da14      	bge.n	8004542 <floor+0x42>
 8004518:	4a32      	ldr	r2, [pc, #200]	@ (80045e4 <floor+0xe4>)
 800451a:	4b33      	ldr	r3, [pc, #204]	@ (80045e8 <floor+0xe8>)
 800451c:	f7fb ffc6 	bl	80004ac <__aeabi_dadd>
 8004520:	2200      	movs	r2, #0
 8004522:	2300      	movs	r3, #0
 8004524:	f7fb ff90 	bl	8000448 <__aeabi_dcmpgt>
 8004528:	2800      	cmp	r0, #0
 800452a:	d007      	beq.n	800453c <floor+0x3c>
 800452c:	2c00      	cmp	r4, #0
 800452e:	da50      	bge.n	80045d2 <floor+0xd2>
 8004530:	0064      	lsls	r4, r4, #1
 8004532:	0864      	lsrs	r4, r4, #1
 8004534:	4325      	orrs	r5, r4
 8004536:	d14f      	bne.n	80045d8 <floor+0xd8>
 8004538:	2480      	movs	r4, #128	@ 0x80
 800453a:	0624      	lsls	r4, r4, #24
 800453c:	0021      	movs	r1, r4
 800453e:	0028      	movs	r0, r5
 8004540:	e022      	b.n	8004588 <floor+0x88>
 8004542:	4f2a      	ldr	r7, [pc, #168]	@ (80045ec <floor+0xec>)
 8004544:	4137      	asrs	r7, r6
 8004546:	003b      	movs	r3, r7
 8004548:	400b      	ands	r3, r1
 800454a:	4303      	orrs	r3, r0
 800454c:	d01c      	beq.n	8004588 <floor+0x88>
 800454e:	4a25      	ldr	r2, [pc, #148]	@ (80045e4 <floor+0xe4>)
 8004550:	4b25      	ldr	r3, [pc, #148]	@ (80045e8 <floor+0xe8>)
 8004552:	f7fb ffab 	bl	80004ac <__aeabi_dadd>
 8004556:	2200      	movs	r2, #0
 8004558:	2300      	movs	r3, #0
 800455a:	f7fb ff75 	bl	8000448 <__aeabi_dcmpgt>
 800455e:	2800      	cmp	r0, #0
 8004560:	d0ec      	beq.n	800453c <floor+0x3c>
 8004562:	2c00      	cmp	r4, #0
 8004564:	da03      	bge.n	800456e <floor+0x6e>
 8004566:	2380      	movs	r3, #128	@ 0x80
 8004568:	035b      	lsls	r3, r3, #13
 800456a:	4133      	asrs	r3, r6
 800456c:	18e4      	adds	r4, r4, r3
 800456e:	2500      	movs	r5, #0
 8004570:	43bc      	bics	r4, r7
 8004572:	e7e3      	b.n	800453c <floor+0x3c>
 8004574:	2e33      	cmp	r6, #51	@ 0x33
 8004576:	dd09      	ble.n	800458c <floor+0x8c>
 8004578:	2380      	movs	r3, #128	@ 0x80
 800457a:	00db      	lsls	r3, r3, #3
 800457c:	429e      	cmp	r6, r3
 800457e:	d103      	bne.n	8004588 <floor+0x88>
 8004580:	0002      	movs	r2, r0
 8004582:	000b      	movs	r3, r1
 8004584:	f7fb ff92 	bl	80004ac <__aeabi_dadd>
 8004588:	b003      	add	sp, #12
 800458a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800458c:	2701      	movs	r7, #1
 800458e:	4a18      	ldr	r2, [pc, #96]	@ (80045f0 <floor+0xf0>)
 8004590:	427f      	negs	r7, r7
 8004592:	189b      	adds	r3, r3, r2
 8004594:	40df      	lsrs	r7, r3
 8004596:	4238      	tst	r0, r7
 8004598:	d0f6      	beq.n	8004588 <floor+0x88>
 800459a:	4a12      	ldr	r2, [pc, #72]	@ (80045e4 <floor+0xe4>)
 800459c:	4b12      	ldr	r3, [pc, #72]	@ (80045e8 <floor+0xe8>)
 800459e:	f7fb ff85 	bl	80004ac <__aeabi_dadd>
 80045a2:	2200      	movs	r2, #0
 80045a4:	2300      	movs	r3, #0
 80045a6:	f7fb ff4f 	bl	8000448 <__aeabi_dcmpgt>
 80045aa:	2800      	cmp	r0, #0
 80045ac:	d0c6      	beq.n	800453c <floor+0x3c>
 80045ae:	2c00      	cmp	r4, #0
 80045b0:	da02      	bge.n	80045b8 <floor+0xb8>
 80045b2:	2e14      	cmp	r6, #20
 80045b4:	d102      	bne.n	80045bc <floor+0xbc>
 80045b6:	3401      	adds	r4, #1
 80045b8:	43bd      	bics	r5, r7
 80045ba:	e7bf      	b.n	800453c <floor+0x3c>
 80045bc:	2234      	movs	r2, #52	@ 0x34
 80045be:	2301      	movs	r3, #1
 80045c0:	1b92      	subs	r2, r2, r6
 80045c2:	4093      	lsls	r3, r2
 80045c4:	18ed      	adds	r5, r5, r3
 80045c6:	9b01      	ldr	r3, [sp, #4]
 80045c8:	429d      	cmp	r5, r3
 80045ca:	419b      	sbcs	r3, r3
 80045cc:	425b      	negs	r3, r3
 80045ce:	18e4      	adds	r4, r4, r3
 80045d0:	e7f2      	b.n	80045b8 <floor+0xb8>
 80045d2:	2500      	movs	r5, #0
 80045d4:	002c      	movs	r4, r5
 80045d6:	e7b1      	b.n	800453c <floor+0x3c>
 80045d8:	2500      	movs	r5, #0
 80045da:	4c06      	ldr	r4, [pc, #24]	@ (80045f4 <floor+0xf4>)
 80045dc:	e7ae      	b.n	800453c <floor+0x3c>
 80045de:	46c0      	nop			@ (mov r8, r8)
 80045e0:	fffffc01 	.word	0xfffffc01
 80045e4:	8800759c 	.word	0x8800759c
 80045e8:	7e37e43c 	.word	0x7e37e43c
 80045ec:	000fffff 	.word	0x000fffff
 80045f0:	fffffbed 	.word	0xfffffbed
 80045f4:	bff00000 	.word	0xbff00000

080045f8 <_init>:
 80045f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80045fa:	46c0      	nop			@ (mov r8, r8)
 80045fc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80045fe:	bc08      	pop	{r3}
 8004600:	469e      	mov	lr, r3
 8004602:	4770      	bx	lr

08004604 <_fini>:
 8004604:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004606:	46c0      	nop			@ (mov r8, r8)
 8004608:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800460a:	bc08      	pop	{r3}
 800460c:	469e      	mov	lr, r3
 800460e:	4770      	bx	lr
