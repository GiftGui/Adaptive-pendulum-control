
Plant8.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003fb0  080000c0  080000c0  000010c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000278  08004070  08004070  00005070  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080042e8  080042e8  000052f0  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  080042e8  080042e8  000052f0  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  080042e8  080042f0  000052f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080042e8  080042e8  000052e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080042ec  080042ec  000052ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  000052f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000002ec  20000000  080042f0  00006000  2**3
                  ALLOC
 10 ._user_heap_stack 00000604  200002ec  080042f0  000062ec  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  000052f0  2**0
                  CONTENTS, READONLY
 12 .debug_info   000023e7  00000000  00000000  00005318  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000cc9  00000000  00000000  000076ff  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000270  00000000  00000000  000083c8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000001d0  00000000  00000000  00008638  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00018f74  00000000  00000000  00008808  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00004003  00000000  00000000  0002177c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0009160d  00000000  00000000  0002577f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000b6d8c  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b00  00000000  00000000  000b6dd0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000062  00000000  00000000  000b78d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	@ (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	@ (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	@ (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000000 	.word	0x20000000
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08004058 	.word	0x08004058

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	@ (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	@ (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	@ (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			@ (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000004 	.word	0x20000004
 8000104:	08004058 	.word	0x08004058

08000108 <strcmp>:
 8000108:	7802      	ldrb	r2, [r0, #0]
 800010a:	780b      	ldrb	r3, [r1, #0]
 800010c:	2a00      	cmp	r2, #0
 800010e:	d003      	beq.n	8000118 <strcmp+0x10>
 8000110:	3001      	adds	r0, #1
 8000112:	3101      	adds	r1, #1
 8000114:	429a      	cmp	r2, r3
 8000116:	d0f7      	beq.n	8000108 <strcmp>
 8000118:	1ad0      	subs	r0, r2, r3
 800011a:	4770      	bx	lr

0800011c <__udivsi3>:
 800011c:	2200      	movs	r2, #0
 800011e:	0843      	lsrs	r3, r0, #1
 8000120:	428b      	cmp	r3, r1
 8000122:	d374      	bcc.n	800020e <__udivsi3+0xf2>
 8000124:	0903      	lsrs	r3, r0, #4
 8000126:	428b      	cmp	r3, r1
 8000128:	d35f      	bcc.n	80001ea <__udivsi3+0xce>
 800012a:	0a03      	lsrs	r3, r0, #8
 800012c:	428b      	cmp	r3, r1
 800012e:	d344      	bcc.n	80001ba <__udivsi3+0x9e>
 8000130:	0b03      	lsrs	r3, r0, #12
 8000132:	428b      	cmp	r3, r1
 8000134:	d328      	bcc.n	8000188 <__udivsi3+0x6c>
 8000136:	0c03      	lsrs	r3, r0, #16
 8000138:	428b      	cmp	r3, r1
 800013a:	d30d      	bcc.n	8000158 <__udivsi3+0x3c>
 800013c:	22ff      	movs	r2, #255	@ 0xff
 800013e:	0209      	lsls	r1, r1, #8
 8000140:	ba12      	rev	r2, r2
 8000142:	0c03      	lsrs	r3, r0, #16
 8000144:	428b      	cmp	r3, r1
 8000146:	d302      	bcc.n	800014e <__udivsi3+0x32>
 8000148:	1212      	asrs	r2, r2, #8
 800014a:	0209      	lsls	r1, r1, #8
 800014c:	d065      	beq.n	800021a <__udivsi3+0xfe>
 800014e:	0b03      	lsrs	r3, r0, #12
 8000150:	428b      	cmp	r3, r1
 8000152:	d319      	bcc.n	8000188 <__udivsi3+0x6c>
 8000154:	e000      	b.n	8000158 <__udivsi3+0x3c>
 8000156:	0a09      	lsrs	r1, r1, #8
 8000158:	0bc3      	lsrs	r3, r0, #15
 800015a:	428b      	cmp	r3, r1
 800015c:	d301      	bcc.n	8000162 <__udivsi3+0x46>
 800015e:	03cb      	lsls	r3, r1, #15
 8000160:	1ac0      	subs	r0, r0, r3
 8000162:	4152      	adcs	r2, r2
 8000164:	0b83      	lsrs	r3, r0, #14
 8000166:	428b      	cmp	r3, r1
 8000168:	d301      	bcc.n	800016e <__udivsi3+0x52>
 800016a:	038b      	lsls	r3, r1, #14
 800016c:	1ac0      	subs	r0, r0, r3
 800016e:	4152      	adcs	r2, r2
 8000170:	0b43      	lsrs	r3, r0, #13
 8000172:	428b      	cmp	r3, r1
 8000174:	d301      	bcc.n	800017a <__udivsi3+0x5e>
 8000176:	034b      	lsls	r3, r1, #13
 8000178:	1ac0      	subs	r0, r0, r3
 800017a:	4152      	adcs	r2, r2
 800017c:	0b03      	lsrs	r3, r0, #12
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x6a>
 8000182:	030b      	lsls	r3, r1, #12
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0ac3      	lsrs	r3, r0, #11
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x76>
 800018e:	02cb      	lsls	r3, r1, #11
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0a83      	lsrs	r3, r0, #10
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x82>
 800019a:	028b      	lsls	r3, r1, #10
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0a43      	lsrs	r3, r0, #9
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x8e>
 80001a6:	024b      	lsls	r3, r1, #9
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0a03      	lsrs	r3, r0, #8
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x9a>
 80001b2:	020b      	lsls	r3, r1, #8
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	d2cd      	bcs.n	8000156 <__udivsi3+0x3a>
 80001ba:	09c3      	lsrs	r3, r0, #7
 80001bc:	428b      	cmp	r3, r1
 80001be:	d301      	bcc.n	80001c4 <__udivsi3+0xa8>
 80001c0:	01cb      	lsls	r3, r1, #7
 80001c2:	1ac0      	subs	r0, r0, r3
 80001c4:	4152      	adcs	r2, r2
 80001c6:	0983      	lsrs	r3, r0, #6
 80001c8:	428b      	cmp	r3, r1
 80001ca:	d301      	bcc.n	80001d0 <__udivsi3+0xb4>
 80001cc:	018b      	lsls	r3, r1, #6
 80001ce:	1ac0      	subs	r0, r0, r3
 80001d0:	4152      	adcs	r2, r2
 80001d2:	0943      	lsrs	r3, r0, #5
 80001d4:	428b      	cmp	r3, r1
 80001d6:	d301      	bcc.n	80001dc <__udivsi3+0xc0>
 80001d8:	014b      	lsls	r3, r1, #5
 80001da:	1ac0      	subs	r0, r0, r3
 80001dc:	4152      	adcs	r2, r2
 80001de:	0903      	lsrs	r3, r0, #4
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xcc>
 80001e4:	010b      	lsls	r3, r1, #4
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	08c3      	lsrs	r3, r0, #3
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xd8>
 80001f0:	00cb      	lsls	r3, r1, #3
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0883      	lsrs	r3, r0, #2
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xe4>
 80001fc:	008b      	lsls	r3, r1, #2
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0843      	lsrs	r3, r0, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xf0>
 8000208:	004b      	lsls	r3, r1, #1
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	1a41      	subs	r1, r0, r1
 8000210:	d200      	bcs.n	8000214 <__udivsi3+0xf8>
 8000212:	4601      	mov	r1, r0
 8000214:	4152      	adcs	r2, r2
 8000216:	4610      	mov	r0, r2
 8000218:	4770      	bx	lr
 800021a:	e7ff      	b.n	800021c <__udivsi3+0x100>
 800021c:	b501      	push	{r0, lr}
 800021e:	2000      	movs	r0, #0
 8000220:	f000 f8f0 	bl	8000404 <__aeabi_idiv0>
 8000224:	bd02      	pop	{r1, pc}
 8000226:	46c0      	nop			@ (mov r8, r8)

08000228 <__aeabi_uidivmod>:
 8000228:	2900      	cmp	r1, #0
 800022a:	d0f7      	beq.n	800021c <__udivsi3+0x100>
 800022c:	e776      	b.n	800011c <__udivsi3>
 800022e:	4770      	bx	lr

08000230 <__divsi3>:
 8000230:	4603      	mov	r3, r0
 8000232:	430b      	orrs	r3, r1
 8000234:	d47f      	bmi.n	8000336 <__divsi3+0x106>
 8000236:	2200      	movs	r2, #0
 8000238:	0843      	lsrs	r3, r0, #1
 800023a:	428b      	cmp	r3, r1
 800023c:	d374      	bcc.n	8000328 <__divsi3+0xf8>
 800023e:	0903      	lsrs	r3, r0, #4
 8000240:	428b      	cmp	r3, r1
 8000242:	d35f      	bcc.n	8000304 <__divsi3+0xd4>
 8000244:	0a03      	lsrs	r3, r0, #8
 8000246:	428b      	cmp	r3, r1
 8000248:	d344      	bcc.n	80002d4 <__divsi3+0xa4>
 800024a:	0b03      	lsrs	r3, r0, #12
 800024c:	428b      	cmp	r3, r1
 800024e:	d328      	bcc.n	80002a2 <__divsi3+0x72>
 8000250:	0c03      	lsrs	r3, r0, #16
 8000252:	428b      	cmp	r3, r1
 8000254:	d30d      	bcc.n	8000272 <__divsi3+0x42>
 8000256:	22ff      	movs	r2, #255	@ 0xff
 8000258:	0209      	lsls	r1, r1, #8
 800025a:	ba12      	rev	r2, r2
 800025c:	0c03      	lsrs	r3, r0, #16
 800025e:	428b      	cmp	r3, r1
 8000260:	d302      	bcc.n	8000268 <__divsi3+0x38>
 8000262:	1212      	asrs	r2, r2, #8
 8000264:	0209      	lsls	r1, r1, #8
 8000266:	d065      	beq.n	8000334 <__divsi3+0x104>
 8000268:	0b03      	lsrs	r3, r0, #12
 800026a:	428b      	cmp	r3, r1
 800026c:	d319      	bcc.n	80002a2 <__divsi3+0x72>
 800026e:	e000      	b.n	8000272 <__divsi3+0x42>
 8000270:	0a09      	lsrs	r1, r1, #8
 8000272:	0bc3      	lsrs	r3, r0, #15
 8000274:	428b      	cmp	r3, r1
 8000276:	d301      	bcc.n	800027c <__divsi3+0x4c>
 8000278:	03cb      	lsls	r3, r1, #15
 800027a:	1ac0      	subs	r0, r0, r3
 800027c:	4152      	adcs	r2, r2
 800027e:	0b83      	lsrs	r3, r0, #14
 8000280:	428b      	cmp	r3, r1
 8000282:	d301      	bcc.n	8000288 <__divsi3+0x58>
 8000284:	038b      	lsls	r3, r1, #14
 8000286:	1ac0      	subs	r0, r0, r3
 8000288:	4152      	adcs	r2, r2
 800028a:	0b43      	lsrs	r3, r0, #13
 800028c:	428b      	cmp	r3, r1
 800028e:	d301      	bcc.n	8000294 <__divsi3+0x64>
 8000290:	034b      	lsls	r3, r1, #13
 8000292:	1ac0      	subs	r0, r0, r3
 8000294:	4152      	adcs	r2, r2
 8000296:	0b03      	lsrs	r3, r0, #12
 8000298:	428b      	cmp	r3, r1
 800029a:	d301      	bcc.n	80002a0 <__divsi3+0x70>
 800029c:	030b      	lsls	r3, r1, #12
 800029e:	1ac0      	subs	r0, r0, r3
 80002a0:	4152      	adcs	r2, r2
 80002a2:	0ac3      	lsrs	r3, r0, #11
 80002a4:	428b      	cmp	r3, r1
 80002a6:	d301      	bcc.n	80002ac <__divsi3+0x7c>
 80002a8:	02cb      	lsls	r3, r1, #11
 80002aa:	1ac0      	subs	r0, r0, r3
 80002ac:	4152      	adcs	r2, r2
 80002ae:	0a83      	lsrs	r3, r0, #10
 80002b0:	428b      	cmp	r3, r1
 80002b2:	d301      	bcc.n	80002b8 <__divsi3+0x88>
 80002b4:	028b      	lsls	r3, r1, #10
 80002b6:	1ac0      	subs	r0, r0, r3
 80002b8:	4152      	adcs	r2, r2
 80002ba:	0a43      	lsrs	r3, r0, #9
 80002bc:	428b      	cmp	r3, r1
 80002be:	d301      	bcc.n	80002c4 <__divsi3+0x94>
 80002c0:	024b      	lsls	r3, r1, #9
 80002c2:	1ac0      	subs	r0, r0, r3
 80002c4:	4152      	adcs	r2, r2
 80002c6:	0a03      	lsrs	r3, r0, #8
 80002c8:	428b      	cmp	r3, r1
 80002ca:	d301      	bcc.n	80002d0 <__divsi3+0xa0>
 80002cc:	020b      	lsls	r3, r1, #8
 80002ce:	1ac0      	subs	r0, r0, r3
 80002d0:	4152      	adcs	r2, r2
 80002d2:	d2cd      	bcs.n	8000270 <__divsi3+0x40>
 80002d4:	09c3      	lsrs	r3, r0, #7
 80002d6:	428b      	cmp	r3, r1
 80002d8:	d301      	bcc.n	80002de <__divsi3+0xae>
 80002da:	01cb      	lsls	r3, r1, #7
 80002dc:	1ac0      	subs	r0, r0, r3
 80002de:	4152      	adcs	r2, r2
 80002e0:	0983      	lsrs	r3, r0, #6
 80002e2:	428b      	cmp	r3, r1
 80002e4:	d301      	bcc.n	80002ea <__divsi3+0xba>
 80002e6:	018b      	lsls	r3, r1, #6
 80002e8:	1ac0      	subs	r0, r0, r3
 80002ea:	4152      	adcs	r2, r2
 80002ec:	0943      	lsrs	r3, r0, #5
 80002ee:	428b      	cmp	r3, r1
 80002f0:	d301      	bcc.n	80002f6 <__divsi3+0xc6>
 80002f2:	014b      	lsls	r3, r1, #5
 80002f4:	1ac0      	subs	r0, r0, r3
 80002f6:	4152      	adcs	r2, r2
 80002f8:	0903      	lsrs	r3, r0, #4
 80002fa:	428b      	cmp	r3, r1
 80002fc:	d301      	bcc.n	8000302 <__divsi3+0xd2>
 80002fe:	010b      	lsls	r3, r1, #4
 8000300:	1ac0      	subs	r0, r0, r3
 8000302:	4152      	adcs	r2, r2
 8000304:	08c3      	lsrs	r3, r0, #3
 8000306:	428b      	cmp	r3, r1
 8000308:	d301      	bcc.n	800030e <__divsi3+0xde>
 800030a:	00cb      	lsls	r3, r1, #3
 800030c:	1ac0      	subs	r0, r0, r3
 800030e:	4152      	adcs	r2, r2
 8000310:	0883      	lsrs	r3, r0, #2
 8000312:	428b      	cmp	r3, r1
 8000314:	d301      	bcc.n	800031a <__divsi3+0xea>
 8000316:	008b      	lsls	r3, r1, #2
 8000318:	1ac0      	subs	r0, r0, r3
 800031a:	4152      	adcs	r2, r2
 800031c:	0843      	lsrs	r3, r0, #1
 800031e:	428b      	cmp	r3, r1
 8000320:	d301      	bcc.n	8000326 <__divsi3+0xf6>
 8000322:	004b      	lsls	r3, r1, #1
 8000324:	1ac0      	subs	r0, r0, r3
 8000326:	4152      	adcs	r2, r2
 8000328:	1a41      	subs	r1, r0, r1
 800032a:	d200      	bcs.n	800032e <__divsi3+0xfe>
 800032c:	4601      	mov	r1, r0
 800032e:	4152      	adcs	r2, r2
 8000330:	4610      	mov	r0, r2
 8000332:	4770      	bx	lr
 8000334:	e05d      	b.n	80003f2 <__divsi3+0x1c2>
 8000336:	0fca      	lsrs	r2, r1, #31
 8000338:	d000      	beq.n	800033c <__divsi3+0x10c>
 800033a:	4249      	negs	r1, r1
 800033c:	1003      	asrs	r3, r0, #32
 800033e:	d300      	bcc.n	8000342 <__divsi3+0x112>
 8000340:	4240      	negs	r0, r0
 8000342:	4053      	eors	r3, r2
 8000344:	2200      	movs	r2, #0
 8000346:	469c      	mov	ip, r3
 8000348:	0903      	lsrs	r3, r0, #4
 800034a:	428b      	cmp	r3, r1
 800034c:	d32d      	bcc.n	80003aa <__divsi3+0x17a>
 800034e:	0a03      	lsrs	r3, r0, #8
 8000350:	428b      	cmp	r3, r1
 8000352:	d312      	bcc.n	800037a <__divsi3+0x14a>
 8000354:	22fc      	movs	r2, #252	@ 0xfc
 8000356:	0189      	lsls	r1, r1, #6
 8000358:	ba12      	rev	r2, r2
 800035a:	0a03      	lsrs	r3, r0, #8
 800035c:	428b      	cmp	r3, r1
 800035e:	d30c      	bcc.n	800037a <__divsi3+0x14a>
 8000360:	0189      	lsls	r1, r1, #6
 8000362:	1192      	asrs	r2, r2, #6
 8000364:	428b      	cmp	r3, r1
 8000366:	d308      	bcc.n	800037a <__divsi3+0x14a>
 8000368:	0189      	lsls	r1, r1, #6
 800036a:	1192      	asrs	r2, r2, #6
 800036c:	428b      	cmp	r3, r1
 800036e:	d304      	bcc.n	800037a <__divsi3+0x14a>
 8000370:	0189      	lsls	r1, r1, #6
 8000372:	d03a      	beq.n	80003ea <__divsi3+0x1ba>
 8000374:	1192      	asrs	r2, r2, #6
 8000376:	e000      	b.n	800037a <__divsi3+0x14a>
 8000378:	0989      	lsrs	r1, r1, #6
 800037a:	09c3      	lsrs	r3, r0, #7
 800037c:	428b      	cmp	r3, r1
 800037e:	d301      	bcc.n	8000384 <__divsi3+0x154>
 8000380:	01cb      	lsls	r3, r1, #7
 8000382:	1ac0      	subs	r0, r0, r3
 8000384:	4152      	adcs	r2, r2
 8000386:	0983      	lsrs	r3, r0, #6
 8000388:	428b      	cmp	r3, r1
 800038a:	d301      	bcc.n	8000390 <__divsi3+0x160>
 800038c:	018b      	lsls	r3, r1, #6
 800038e:	1ac0      	subs	r0, r0, r3
 8000390:	4152      	adcs	r2, r2
 8000392:	0943      	lsrs	r3, r0, #5
 8000394:	428b      	cmp	r3, r1
 8000396:	d301      	bcc.n	800039c <__divsi3+0x16c>
 8000398:	014b      	lsls	r3, r1, #5
 800039a:	1ac0      	subs	r0, r0, r3
 800039c:	4152      	adcs	r2, r2
 800039e:	0903      	lsrs	r3, r0, #4
 80003a0:	428b      	cmp	r3, r1
 80003a2:	d301      	bcc.n	80003a8 <__divsi3+0x178>
 80003a4:	010b      	lsls	r3, r1, #4
 80003a6:	1ac0      	subs	r0, r0, r3
 80003a8:	4152      	adcs	r2, r2
 80003aa:	08c3      	lsrs	r3, r0, #3
 80003ac:	428b      	cmp	r3, r1
 80003ae:	d301      	bcc.n	80003b4 <__divsi3+0x184>
 80003b0:	00cb      	lsls	r3, r1, #3
 80003b2:	1ac0      	subs	r0, r0, r3
 80003b4:	4152      	adcs	r2, r2
 80003b6:	0883      	lsrs	r3, r0, #2
 80003b8:	428b      	cmp	r3, r1
 80003ba:	d301      	bcc.n	80003c0 <__divsi3+0x190>
 80003bc:	008b      	lsls	r3, r1, #2
 80003be:	1ac0      	subs	r0, r0, r3
 80003c0:	4152      	adcs	r2, r2
 80003c2:	d2d9      	bcs.n	8000378 <__divsi3+0x148>
 80003c4:	0843      	lsrs	r3, r0, #1
 80003c6:	428b      	cmp	r3, r1
 80003c8:	d301      	bcc.n	80003ce <__divsi3+0x19e>
 80003ca:	004b      	lsls	r3, r1, #1
 80003cc:	1ac0      	subs	r0, r0, r3
 80003ce:	4152      	adcs	r2, r2
 80003d0:	1a41      	subs	r1, r0, r1
 80003d2:	d200      	bcs.n	80003d6 <__divsi3+0x1a6>
 80003d4:	4601      	mov	r1, r0
 80003d6:	4663      	mov	r3, ip
 80003d8:	4152      	adcs	r2, r2
 80003da:	105b      	asrs	r3, r3, #1
 80003dc:	4610      	mov	r0, r2
 80003de:	d301      	bcc.n	80003e4 <__divsi3+0x1b4>
 80003e0:	4240      	negs	r0, r0
 80003e2:	2b00      	cmp	r3, #0
 80003e4:	d500      	bpl.n	80003e8 <__divsi3+0x1b8>
 80003e6:	4249      	negs	r1, r1
 80003e8:	4770      	bx	lr
 80003ea:	4663      	mov	r3, ip
 80003ec:	105b      	asrs	r3, r3, #1
 80003ee:	d300      	bcc.n	80003f2 <__divsi3+0x1c2>
 80003f0:	4240      	negs	r0, r0
 80003f2:	b501      	push	{r0, lr}
 80003f4:	2000      	movs	r0, #0
 80003f6:	f000 f805 	bl	8000404 <__aeabi_idiv0>
 80003fa:	bd02      	pop	{r1, pc}

080003fc <__aeabi_idivmod>:
 80003fc:	2900      	cmp	r1, #0
 80003fe:	d0f8      	beq.n	80003f2 <__divsi3+0x1c2>
 8000400:	e716      	b.n	8000230 <__divsi3>
 8000402:	4770      	bx	lr

08000404 <__aeabi_idiv0>:
 8000404:	4770      	bx	lr
 8000406:	46c0      	nop			@ (mov r8, r8)

08000408 <__aeabi_cdrcmple>:
 8000408:	4684      	mov	ip, r0
 800040a:	0010      	movs	r0, r2
 800040c:	4662      	mov	r2, ip
 800040e:	468c      	mov	ip, r1
 8000410:	0019      	movs	r1, r3
 8000412:	4663      	mov	r3, ip
 8000414:	e000      	b.n	8000418 <__aeabi_cdcmpeq>
 8000416:	46c0      	nop			@ (mov r8, r8)

08000418 <__aeabi_cdcmpeq>:
 8000418:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800041a:	f000 fccb 	bl	8000db4 <__ledf2>
 800041e:	2800      	cmp	r0, #0
 8000420:	d401      	bmi.n	8000426 <__aeabi_cdcmpeq+0xe>
 8000422:	2100      	movs	r1, #0
 8000424:	42c8      	cmn	r0, r1
 8000426:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

08000428 <__aeabi_dcmpeq>:
 8000428:	b510      	push	{r4, lr}
 800042a:	f000 fc0f 	bl	8000c4c <__eqdf2>
 800042e:	4240      	negs	r0, r0
 8000430:	3001      	adds	r0, #1
 8000432:	bd10      	pop	{r4, pc}

08000434 <__aeabi_dcmplt>:
 8000434:	b510      	push	{r4, lr}
 8000436:	f000 fcbd 	bl	8000db4 <__ledf2>
 800043a:	2800      	cmp	r0, #0
 800043c:	db01      	blt.n	8000442 <__aeabi_dcmplt+0xe>
 800043e:	2000      	movs	r0, #0
 8000440:	bd10      	pop	{r4, pc}
 8000442:	2001      	movs	r0, #1
 8000444:	bd10      	pop	{r4, pc}
 8000446:	46c0      	nop			@ (mov r8, r8)

08000448 <__aeabi_dcmple>:
 8000448:	b510      	push	{r4, lr}
 800044a:	f000 fcb3 	bl	8000db4 <__ledf2>
 800044e:	2800      	cmp	r0, #0
 8000450:	dd01      	ble.n	8000456 <__aeabi_dcmple+0xe>
 8000452:	2000      	movs	r0, #0
 8000454:	bd10      	pop	{r4, pc}
 8000456:	2001      	movs	r0, #1
 8000458:	bd10      	pop	{r4, pc}
 800045a:	46c0      	nop			@ (mov r8, r8)

0800045c <__aeabi_dcmpgt>:
 800045c:	b510      	push	{r4, lr}
 800045e:	f000 fc39 	bl	8000cd4 <__gedf2>
 8000462:	2800      	cmp	r0, #0
 8000464:	dc01      	bgt.n	800046a <__aeabi_dcmpgt+0xe>
 8000466:	2000      	movs	r0, #0
 8000468:	bd10      	pop	{r4, pc}
 800046a:	2001      	movs	r0, #1
 800046c:	bd10      	pop	{r4, pc}
 800046e:	46c0      	nop			@ (mov r8, r8)

08000470 <__aeabi_dcmpge>:
 8000470:	b510      	push	{r4, lr}
 8000472:	f000 fc2f 	bl	8000cd4 <__gedf2>
 8000476:	2800      	cmp	r0, #0
 8000478:	da01      	bge.n	800047e <__aeabi_dcmpge+0xe>
 800047a:	2000      	movs	r0, #0
 800047c:	bd10      	pop	{r4, pc}
 800047e:	2001      	movs	r0, #1
 8000480:	bd10      	pop	{r4, pc}
 8000482:	46c0      	nop			@ (mov r8, r8)

08000484 <__aeabi_d2uiz>:
 8000484:	b570      	push	{r4, r5, r6, lr}
 8000486:	2200      	movs	r2, #0
 8000488:	4b0c      	ldr	r3, [pc, #48]	@ (80004bc <__aeabi_d2uiz+0x38>)
 800048a:	0004      	movs	r4, r0
 800048c:	000d      	movs	r5, r1
 800048e:	f7ff ffef 	bl	8000470 <__aeabi_dcmpge>
 8000492:	2800      	cmp	r0, #0
 8000494:	d104      	bne.n	80004a0 <__aeabi_d2uiz+0x1c>
 8000496:	0020      	movs	r0, r4
 8000498:	0029      	movs	r1, r5
 800049a:	f001 fbe9 	bl	8001c70 <__aeabi_d2iz>
 800049e:	bd70      	pop	{r4, r5, r6, pc}
 80004a0:	4b06      	ldr	r3, [pc, #24]	@ (80004bc <__aeabi_d2uiz+0x38>)
 80004a2:	2200      	movs	r2, #0
 80004a4:	0020      	movs	r0, r4
 80004a6:	0029      	movs	r1, r5
 80004a8:	f000 ffd8 	bl	800145c <__aeabi_dsub>
 80004ac:	f001 fbe0 	bl	8001c70 <__aeabi_d2iz>
 80004b0:	2380      	movs	r3, #128	@ 0x80
 80004b2:	061b      	lsls	r3, r3, #24
 80004b4:	469c      	mov	ip, r3
 80004b6:	4460      	add	r0, ip
 80004b8:	e7f1      	b.n	800049e <__aeabi_d2uiz+0x1a>
 80004ba:	46c0      	nop			@ (mov r8, r8)
 80004bc:	41e00000 	.word	0x41e00000

080004c0 <__aeabi_dadd>:
 80004c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80004c2:	464f      	mov	r7, r9
 80004c4:	4646      	mov	r6, r8
 80004c6:	46d6      	mov	lr, sl
 80004c8:	b5c0      	push	{r6, r7, lr}
 80004ca:	b082      	sub	sp, #8
 80004cc:	9000      	str	r0, [sp, #0]
 80004ce:	9101      	str	r1, [sp, #4]
 80004d0:	030e      	lsls	r6, r1, #12
 80004d2:	004c      	lsls	r4, r1, #1
 80004d4:	0fcd      	lsrs	r5, r1, #31
 80004d6:	0a71      	lsrs	r1, r6, #9
 80004d8:	9e00      	ldr	r6, [sp, #0]
 80004da:	005f      	lsls	r7, r3, #1
 80004dc:	0f76      	lsrs	r6, r6, #29
 80004de:	430e      	orrs	r6, r1
 80004e0:	9900      	ldr	r1, [sp, #0]
 80004e2:	9200      	str	r2, [sp, #0]
 80004e4:	9301      	str	r3, [sp, #4]
 80004e6:	00c9      	lsls	r1, r1, #3
 80004e8:	4689      	mov	r9, r1
 80004ea:	0319      	lsls	r1, r3, #12
 80004ec:	0d7b      	lsrs	r3, r7, #21
 80004ee:	4698      	mov	r8, r3
 80004f0:	9b01      	ldr	r3, [sp, #4]
 80004f2:	0a49      	lsrs	r1, r1, #9
 80004f4:	0fdb      	lsrs	r3, r3, #31
 80004f6:	469c      	mov	ip, r3
 80004f8:	9b00      	ldr	r3, [sp, #0]
 80004fa:	9a00      	ldr	r2, [sp, #0]
 80004fc:	0f5b      	lsrs	r3, r3, #29
 80004fe:	430b      	orrs	r3, r1
 8000500:	4641      	mov	r1, r8
 8000502:	0d64      	lsrs	r4, r4, #21
 8000504:	00d2      	lsls	r2, r2, #3
 8000506:	1a61      	subs	r1, r4, r1
 8000508:	4565      	cmp	r5, ip
 800050a:	d100      	bne.n	800050e <__aeabi_dadd+0x4e>
 800050c:	e0a6      	b.n	800065c <__aeabi_dadd+0x19c>
 800050e:	2900      	cmp	r1, #0
 8000510:	dd72      	ble.n	80005f8 <__aeabi_dadd+0x138>
 8000512:	4647      	mov	r7, r8
 8000514:	2f00      	cmp	r7, #0
 8000516:	d100      	bne.n	800051a <__aeabi_dadd+0x5a>
 8000518:	e0dd      	b.n	80006d6 <__aeabi_dadd+0x216>
 800051a:	4fcc      	ldr	r7, [pc, #816]	@ (800084c <__aeabi_dadd+0x38c>)
 800051c:	42bc      	cmp	r4, r7
 800051e:	d100      	bne.n	8000522 <__aeabi_dadd+0x62>
 8000520:	e19a      	b.n	8000858 <__aeabi_dadd+0x398>
 8000522:	2701      	movs	r7, #1
 8000524:	2938      	cmp	r1, #56	@ 0x38
 8000526:	dc17      	bgt.n	8000558 <__aeabi_dadd+0x98>
 8000528:	2780      	movs	r7, #128	@ 0x80
 800052a:	043f      	lsls	r7, r7, #16
 800052c:	433b      	orrs	r3, r7
 800052e:	291f      	cmp	r1, #31
 8000530:	dd00      	ble.n	8000534 <__aeabi_dadd+0x74>
 8000532:	e1dd      	b.n	80008f0 <__aeabi_dadd+0x430>
 8000534:	2720      	movs	r7, #32
 8000536:	1a78      	subs	r0, r7, r1
 8000538:	001f      	movs	r7, r3
 800053a:	4087      	lsls	r7, r0
 800053c:	46ba      	mov	sl, r7
 800053e:	0017      	movs	r7, r2
 8000540:	40cf      	lsrs	r7, r1
 8000542:	4684      	mov	ip, r0
 8000544:	0038      	movs	r0, r7
 8000546:	4657      	mov	r7, sl
 8000548:	4307      	orrs	r7, r0
 800054a:	4660      	mov	r0, ip
 800054c:	4082      	lsls	r2, r0
 800054e:	40cb      	lsrs	r3, r1
 8000550:	1e50      	subs	r0, r2, #1
 8000552:	4182      	sbcs	r2, r0
 8000554:	1af6      	subs	r6, r6, r3
 8000556:	4317      	orrs	r7, r2
 8000558:	464b      	mov	r3, r9
 800055a:	1bdf      	subs	r7, r3, r7
 800055c:	45b9      	cmp	r9, r7
 800055e:	4180      	sbcs	r0, r0
 8000560:	4240      	negs	r0, r0
 8000562:	1a36      	subs	r6, r6, r0
 8000564:	0233      	lsls	r3, r6, #8
 8000566:	d400      	bmi.n	800056a <__aeabi_dadd+0xaa>
 8000568:	e0ff      	b.n	800076a <__aeabi_dadd+0x2aa>
 800056a:	0276      	lsls	r6, r6, #9
 800056c:	0a76      	lsrs	r6, r6, #9
 800056e:	2e00      	cmp	r6, #0
 8000570:	d100      	bne.n	8000574 <__aeabi_dadd+0xb4>
 8000572:	e13c      	b.n	80007ee <__aeabi_dadd+0x32e>
 8000574:	0030      	movs	r0, r6
 8000576:	f001 fc09 	bl	8001d8c <__clzsi2>
 800057a:	0003      	movs	r3, r0
 800057c:	3b08      	subs	r3, #8
 800057e:	2120      	movs	r1, #32
 8000580:	0038      	movs	r0, r7
 8000582:	1aca      	subs	r2, r1, r3
 8000584:	40d0      	lsrs	r0, r2
 8000586:	409e      	lsls	r6, r3
 8000588:	0002      	movs	r2, r0
 800058a:	409f      	lsls	r7, r3
 800058c:	4332      	orrs	r2, r6
 800058e:	429c      	cmp	r4, r3
 8000590:	dd00      	ble.n	8000594 <__aeabi_dadd+0xd4>
 8000592:	e1a6      	b.n	80008e2 <__aeabi_dadd+0x422>
 8000594:	1b18      	subs	r0, r3, r4
 8000596:	3001      	adds	r0, #1
 8000598:	1a09      	subs	r1, r1, r0
 800059a:	003e      	movs	r6, r7
 800059c:	408f      	lsls	r7, r1
 800059e:	40c6      	lsrs	r6, r0
 80005a0:	1e7b      	subs	r3, r7, #1
 80005a2:	419f      	sbcs	r7, r3
 80005a4:	0013      	movs	r3, r2
 80005a6:	408b      	lsls	r3, r1
 80005a8:	4337      	orrs	r7, r6
 80005aa:	431f      	orrs	r7, r3
 80005ac:	40c2      	lsrs	r2, r0
 80005ae:	003b      	movs	r3, r7
 80005b0:	0016      	movs	r6, r2
 80005b2:	2400      	movs	r4, #0
 80005b4:	4313      	orrs	r3, r2
 80005b6:	d100      	bne.n	80005ba <__aeabi_dadd+0xfa>
 80005b8:	e1df      	b.n	800097a <__aeabi_dadd+0x4ba>
 80005ba:	077b      	lsls	r3, r7, #29
 80005bc:	d100      	bne.n	80005c0 <__aeabi_dadd+0x100>
 80005be:	e332      	b.n	8000c26 <__aeabi_dadd+0x766>
 80005c0:	230f      	movs	r3, #15
 80005c2:	003a      	movs	r2, r7
 80005c4:	403b      	ands	r3, r7
 80005c6:	2b04      	cmp	r3, #4
 80005c8:	d004      	beq.n	80005d4 <__aeabi_dadd+0x114>
 80005ca:	1d3a      	adds	r2, r7, #4
 80005cc:	42ba      	cmp	r2, r7
 80005ce:	41bf      	sbcs	r7, r7
 80005d0:	427f      	negs	r7, r7
 80005d2:	19f6      	adds	r6, r6, r7
 80005d4:	0233      	lsls	r3, r6, #8
 80005d6:	d400      	bmi.n	80005da <__aeabi_dadd+0x11a>
 80005d8:	e323      	b.n	8000c22 <__aeabi_dadd+0x762>
 80005da:	4b9c      	ldr	r3, [pc, #624]	@ (800084c <__aeabi_dadd+0x38c>)
 80005dc:	3401      	adds	r4, #1
 80005de:	429c      	cmp	r4, r3
 80005e0:	d100      	bne.n	80005e4 <__aeabi_dadd+0x124>
 80005e2:	e0b4      	b.n	800074e <__aeabi_dadd+0x28e>
 80005e4:	4b9a      	ldr	r3, [pc, #616]	@ (8000850 <__aeabi_dadd+0x390>)
 80005e6:	0564      	lsls	r4, r4, #21
 80005e8:	401e      	ands	r6, r3
 80005ea:	0d64      	lsrs	r4, r4, #21
 80005ec:	0777      	lsls	r7, r6, #29
 80005ee:	08d2      	lsrs	r2, r2, #3
 80005f0:	0276      	lsls	r6, r6, #9
 80005f2:	4317      	orrs	r7, r2
 80005f4:	0b36      	lsrs	r6, r6, #12
 80005f6:	e0ac      	b.n	8000752 <__aeabi_dadd+0x292>
 80005f8:	2900      	cmp	r1, #0
 80005fa:	d100      	bne.n	80005fe <__aeabi_dadd+0x13e>
 80005fc:	e07e      	b.n	80006fc <__aeabi_dadd+0x23c>
 80005fe:	4641      	mov	r1, r8
 8000600:	1b09      	subs	r1, r1, r4
 8000602:	2c00      	cmp	r4, #0
 8000604:	d000      	beq.n	8000608 <__aeabi_dadd+0x148>
 8000606:	e160      	b.n	80008ca <__aeabi_dadd+0x40a>
 8000608:	0034      	movs	r4, r6
 800060a:	4648      	mov	r0, r9
 800060c:	4304      	orrs	r4, r0
 800060e:	d100      	bne.n	8000612 <__aeabi_dadd+0x152>
 8000610:	e1c9      	b.n	80009a6 <__aeabi_dadd+0x4e6>
 8000612:	1e4c      	subs	r4, r1, #1
 8000614:	2901      	cmp	r1, #1
 8000616:	d100      	bne.n	800061a <__aeabi_dadd+0x15a>
 8000618:	e22e      	b.n	8000a78 <__aeabi_dadd+0x5b8>
 800061a:	4d8c      	ldr	r5, [pc, #560]	@ (800084c <__aeabi_dadd+0x38c>)
 800061c:	42a9      	cmp	r1, r5
 800061e:	d100      	bne.n	8000622 <__aeabi_dadd+0x162>
 8000620:	e224      	b.n	8000a6c <__aeabi_dadd+0x5ac>
 8000622:	2701      	movs	r7, #1
 8000624:	2c38      	cmp	r4, #56	@ 0x38
 8000626:	dc11      	bgt.n	800064c <__aeabi_dadd+0x18c>
 8000628:	0021      	movs	r1, r4
 800062a:	291f      	cmp	r1, #31
 800062c:	dd00      	ble.n	8000630 <__aeabi_dadd+0x170>
 800062e:	e20b      	b.n	8000a48 <__aeabi_dadd+0x588>
 8000630:	2420      	movs	r4, #32
 8000632:	0037      	movs	r7, r6
 8000634:	4648      	mov	r0, r9
 8000636:	1a64      	subs	r4, r4, r1
 8000638:	40a7      	lsls	r7, r4
 800063a:	40c8      	lsrs	r0, r1
 800063c:	4307      	orrs	r7, r0
 800063e:	4648      	mov	r0, r9
 8000640:	40a0      	lsls	r0, r4
 8000642:	40ce      	lsrs	r6, r1
 8000644:	1e44      	subs	r4, r0, #1
 8000646:	41a0      	sbcs	r0, r4
 8000648:	1b9b      	subs	r3, r3, r6
 800064a:	4307      	orrs	r7, r0
 800064c:	1bd7      	subs	r7, r2, r7
 800064e:	42ba      	cmp	r2, r7
 8000650:	4192      	sbcs	r2, r2
 8000652:	4252      	negs	r2, r2
 8000654:	4665      	mov	r5, ip
 8000656:	4644      	mov	r4, r8
 8000658:	1a9e      	subs	r6, r3, r2
 800065a:	e783      	b.n	8000564 <__aeabi_dadd+0xa4>
 800065c:	2900      	cmp	r1, #0
 800065e:	dc00      	bgt.n	8000662 <__aeabi_dadd+0x1a2>
 8000660:	e09c      	b.n	800079c <__aeabi_dadd+0x2dc>
 8000662:	4647      	mov	r7, r8
 8000664:	2f00      	cmp	r7, #0
 8000666:	d167      	bne.n	8000738 <__aeabi_dadd+0x278>
 8000668:	001f      	movs	r7, r3
 800066a:	4317      	orrs	r7, r2
 800066c:	d100      	bne.n	8000670 <__aeabi_dadd+0x1b0>
 800066e:	e0e4      	b.n	800083a <__aeabi_dadd+0x37a>
 8000670:	1e48      	subs	r0, r1, #1
 8000672:	2901      	cmp	r1, #1
 8000674:	d100      	bne.n	8000678 <__aeabi_dadd+0x1b8>
 8000676:	e19b      	b.n	80009b0 <__aeabi_dadd+0x4f0>
 8000678:	4f74      	ldr	r7, [pc, #464]	@ (800084c <__aeabi_dadd+0x38c>)
 800067a:	42b9      	cmp	r1, r7
 800067c:	d100      	bne.n	8000680 <__aeabi_dadd+0x1c0>
 800067e:	e0eb      	b.n	8000858 <__aeabi_dadd+0x398>
 8000680:	2701      	movs	r7, #1
 8000682:	0001      	movs	r1, r0
 8000684:	2838      	cmp	r0, #56	@ 0x38
 8000686:	dc11      	bgt.n	80006ac <__aeabi_dadd+0x1ec>
 8000688:	291f      	cmp	r1, #31
 800068a:	dd00      	ble.n	800068e <__aeabi_dadd+0x1ce>
 800068c:	e1c7      	b.n	8000a1e <__aeabi_dadd+0x55e>
 800068e:	2720      	movs	r7, #32
 8000690:	1a78      	subs	r0, r7, r1
 8000692:	001f      	movs	r7, r3
 8000694:	4684      	mov	ip, r0
 8000696:	4087      	lsls	r7, r0
 8000698:	0010      	movs	r0, r2
 800069a:	40c8      	lsrs	r0, r1
 800069c:	4307      	orrs	r7, r0
 800069e:	4660      	mov	r0, ip
 80006a0:	4082      	lsls	r2, r0
 80006a2:	40cb      	lsrs	r3, r1
 80006a4:	1e50      	subs	r0, r2, #1
 80006a6:	4182      	sbcs	r2, r0
 80006a8:	18f6      	adds	r6, r6, r3
 80006aa:	4317      	orrs	r7, r2
 80006ac:	444f      	add	r7, r9
 80006ae:	454f      	cmp	r7, r9
 80006b0:	4180      	sbcs	r0, r0
 80006b2:	4240      	negs	r0, r0
 80006b4:	1836      	adds	r6, r6, r0
 80006b6:	0233      	lsls	r3, r6, #8
 80006b8:	d557      	bpl.n	800076a <__aeabi_dadd+0x2aa>
 80006ba:	4b64      	ldr	r3, [pc, #400]	@ (800084c <__aeabi_dadd+0x38c>)
 80006bc:	3401      	adds	r4, #1
 80006be:	429c      	cmp	r4, r3
 80006c0:	d045      	beq.n	800074e <__aeabi_dadd+0x28e>
 80006c2:	2101      	movs	r1, #1
 80006c4:	4b62      	ldr	r3, [pc, #392]	@ (8000850 <__aeabi_dadd+0x390>)
 80006c6:	087a      	lsrs	r2, r7, #1
 80006c8:	401e      	ands	r6, r3
 80006ca:	4039      	ands	r1, r7
 80006cc:	430a      	orrs	r2, r1
 80006ce:	07f7      	lsls	r7, r6, #31
 80006d0:	4317      	orrs	r7, r2
 80006d2:	0876      	lsrs	r6, r6, #1
 80006d4:	e771      	b.n	80005ba <__aeabi_dadd+0xfa>
 80006d6:	001f      	movs	r7, r3
 80006d8:	4317      	orrs	r7, r2
 80006da:	d100      	bne.n	80006de <__aeabi_dadd+0x21e>
 80006dc:	e0ad      	b.n	800083a <__aeabi_dadd+0x37a>
 80006de:	1e4f      	subs	r7, r1, #1
 80006e0:	46bc      	mov	ip, r7
 80006e2:	2901      	cmp	r1, #1
 80006e4:	d100      	bne.n	80006e8 <__aeabi_dadd+0x228>
 80006e6:	e182      	b.n	80009ee <__aeabi_dadd+0x52e>
 80006e8:	4f58      	ldr	r7, [pc, #352]	@ (800084c <__aeabi_dadd+0x38c>)
 80006ea:	42b9      	cmp	r1, r7
 80006ec:	d100      	bne.n	80006f0 <__aeabi_dadd+0x230>
 80006ee:	e190      	b.n	8000a12 <__aeabi_dadd+0x552>
 80006f0:	4661      	mov	r1, ip
 80006f2:	2701      	movs	r7, #1
 80006f4:	2938      	cmp	r1, #56	@ 0x38
 80006f6:	dd00      	ble.n	80006fa <__aeabi_dadd+0x23a>
 80006f8:	e72e      	b.n	8000558 <__aeabi_dadd+0x98>
 80006fa:	e718      	b.n	800052e <__aeabi_dadd+0x6e>
 80006fc:	4f55      	ldr	r7, [pc, #340]	@ (8000854 <__aeabi_dadd+0x394>)
 80006fe:	1c61      	adds	r1, r4, #1
 8000700:	4239      	tst	r1, r7
 8000702:	d000      	beq.n	8000706 <__aeabi_dadd+0x246>
 8000704:	e0d0      	b.n	80008a8 <__aeabi_dadd+0x3e8>
 8000706:	0031      	movs	r1, r6
 8000708:	4648      	mov	r0, r9
 800070a:	001f      	movs	r7, r3
 800070c:	4301      	orrs	r1, r0
 800070e:	4317      	orrs	r7, r2
 8000710:	2c00      	cmp	r4, #0
 8000712:	d000      	beq.n	8000716 <__aeabi_dadd+0x256>
 8000714:	e13d      	b.n	8000992 <__aeabi_dadd+0x4d2>
 8000716:	2900      	cmp	r1, #0
 8000718:	d100      	bne.n	800071c <__aeabi_dadd+0x25c>
 800071a:	e1bc      	b.n	8000a96 <__aeabi_dadd+0x5d6>
 800071c:	2f00      	cmp	r7, #0
 800071e:	d000      	beq.n	8000722 <__aeabi_dadd+0x262>
 8000720:	e1bf      	b.n	8000aa2 <__aeabi_dadd+0x5e2>
 8000722:	464b      	mov	r3, r9
 8000724:	2100      	movs	r1, #0
 8000726:	08d8      	lsrs	r0, r3, #3
 8000728:	0777      	lsls	r7, r6, #29
 800072a:	4307      	orrs	r7, r0
 800072c:	08f0      	lsrs	r0, r6, #3
 800072e:	0306      	lsls	r6, r0, #12
 8000730:	054c      	lsls	r4, r1, #21
 8000732:	0b36      	lsrs	r6, r6, #12
 8000734:	0d64      	lsrs	r4, r4, #21
 8000736:	e00c      	b.n	8000752 <__aeabi_dadd+0x292>
 8000738:	4f44      	ldr	r7, [pc, #272]	@ (800084c <__aeabi_dadd+0x38c>)
 800073a:	42bc      	cmp	r4, r7
 800073c:	d100      	bne.n	8000740 <__aeabi_dadd+0x280>
 800073e:	e08b      	b.n	8000858 <__aeabi_dadd+0x398>
 8000740:	2701      	movs	r7, #1
 8000742:	2938      	cmp	r1, #56	@ 0x38
 8000744:	dcb2      	bgt.n	80006ac <__aeabi_dadd+0x1ec>
 8000746:	2780      	movs	r7, #128	@ 0x80
 8000748:	043f      	lsls	r7, r7, #16
 800074a:	433b      	orrs	r3, r7
 800074c:	e79c      	b.n	8000688 <__aeabi_dadd+0x1c8>
 800074e:	2600      	movs	r6, #0
 8000750:	2700      	movs	r7, #0
 8000752:	0524      	lsls	r4, r4, #20
 8000754:	4334      	orrs	r4, r6
 8000756:	07ed      	lsls	r5, r5, #31
 8000758:	432c      	orrs	r4, r5
 800075a:	0038      	movs	r0, r7
 800075c:	0021      	movs	r1, r4
 800075e:	b002      	add	sp, #8
 8000760:	bce0      	pop	{r5, r6, r7}
 8000762:	46ba      	mov	sl, r7
 8000764:	46b1      	mov	r9, r6
 8000766:	46a8      	mov	r8, r5
 8000768:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800076a:	077b      	lsls	r3, r7, #29
 800076c:	d004      	beq.n	8000778 <__aeabi_dadd+0x2b8>
 800076e:	230f      	movs	r3, #15
 8000770:	403b      	ands	r3, r7
 8000772:	2b04      	cmp	r3, #4
 8000774:	d000      	beq.n	8000778 <__aeabi_dadd+0x2b8>
 8000776:	e728      	b.n	80005ca <__aeabi_dadd+0x10a>
 8000778:	08f8      	lsrs	r0, r7, #3
 800077a:	4b34      	ldr	r3, [pc, #208]	@ (800084c <__aeabi_dadd+0x38c>)
 800077c:	0777      	lsls	r7, r6, #29
 800077e:	4307      	orrs	r7, r0
 8000780:	08f0      	lsrs	r0, r6, #3
 8000782:	429c      	cmp	r4, r3
 8000784:	d000      	beq.n	8000788 <__aeabi_dadd+0x2c8>
 8000786:	e24a      	b.n	8000c1e <__aeabi_dadd+0x75e>
 8000788:	003b      	movs	r3, r7
 800078a:	4303      	orrs	r3, r0
 800078c:	d059      	beq.n	8000842 <__aeabi_dadd+0x382>
 800078e:	2680      	movs	r6, #128	@ 0x80
 8000790:	0336      	lsls	r6, r6, #12
 8000792:	4306      	orrs	r6, r0
 8000794:	0336      	lsls	r6, r6, #12
 8000796:	4c2d      	ldr	r4, [pc, #180]	@ (800084c <__aeabi_dadd+0x38c>)
 8000798:	0b36      	lsrs	r6, r6, #12
 800079a:	e7da      	b.n	8000752 <__aeabi_dadd+0x292>
 800079c:	2900      	cmp	r1, #0
 800079e:	d061      	beq.n	8000864 <__aeabi_dadd+0x3a4>
 80007a0:	4641      	mov	r1, r8
 80007a2:	1b09      	subs	r1, r1, r4
 80007a4:	2c00      	cmp	r4, #0
 80007a6:	d100      	bne.n	80007aa <__aeabi_dadd+0x2ea>
 80007a8:	e0b9      	b.n	800091e <__aeabi_dadd+0x45e>
 80007aa:	4c28      	ldr	r4, [pc, #160]	@ (800084c <__aeabi_dadd+0x38c>)
 80007ac:	45a0      	cmp	r8, r4
 80007ae:	d100      	bne.n	80007b2 <__aeabi_dadd+0x2f2>
 80007b0:	e1a5      	b.n	8000afe <__aeabi_dadd+0x63e>
 80007b2:	2701      	movs	r7, #1
 80007b4:	2938      	cmp	r1, #56	@ 0x38
 80007b6:	dc13      	bgt.n	80007e0 <__aeabi_dadd+0x320>
 80007b8:	2480      	movs	r4, #128	@ 0x80
 80007ba:	0424      	lsls	r4, r4, #16
 80007bc:	4326      	orrs	r6, r4
 80007be:	291f      	cmp	r1, #31
 80007c0:	dd00      	ble.n	80007c4 <__aeabi_dadd+0x304>
 80007c2:	e1c8      	b.n	8000b56 <__aeabi_dadd+0x696>
 80007c4:	2420      	movs	r4, #32
 80007c6:	0037      	movs	r7, r6
 80007c8:	4648      	mov	r0, r9
 80007ca:	1a64      	subs	r4, r4, r1
 80007cc:	40a7      	lsls	r7, r4
 80007ce:	40c8      	lsrs	r0, r1
 80007d0:	4307      	orrs	r7, r0
 80007d2:	4648      	mov	r0, r9
 80007d4:	40a0      	lsls	r0, r4
 80007d6:	40ce      	lsrs	r6, r1
 80007d8:	1e44      	subs	r4, r0, #1
 80007da:	41a0      	sbcs	r0, r4
 80007dc:	199b      	adds	r3, r3, r6
 80007de:	4307      	orrs	r7, r0
 80007e0:	18bf      	adds	r7, r7, r2
 80007e2:	4297      	cmp	r7, r2
 80007e4:	4192      	sbcs	r2, r2
 80007e6:	4252      	negs	r2, r2
 80007e8:	4644      	mov	r4, r8
 80007ea:	18d6      	adds	r6, r2, r3
 80007ec:	e763      	b.n	80006b6 <__aeabi_dadd+0x1f6>
 80007ee:	0038      	movs	r0, r7
 80007f0:	f001 facc 	bl	8001d8c <__clzsi2>
 80007f4:	0003      	movs	r3, r0
 80007f6:	3318      	adds	r3, #24
 80007f8:	2b1f      	cmp	r3, #31
 80007fa:	dc00      	bgt.n	80007fe <__aeabi_dadd+0x33e>
 80007fc:	e6bf      	b.n	800057e <__aeabi_dadd+0xbe>
 80007fe:	003a      	movs	r2, r7
 8000800:	3808      	subs	r0, #8
 8000802:	4082      	lsls	r2, r0
 8000804:	429c      	cmp	r4, r3
 8000806:	dd00      	ble.n	800080a <__aeabi_dadd+0x34a>
 8000808:	e083      	b.n	8000912 <__aeabi_dadd+0x452>
 800080a:	1b1b      	subs	r3, r3, r4
 800080c:	1c58      	adds	r0, r3, #1
 800080e:	281f      	cmp	r0, #31
 8000810:	dc00      	bgt.n	8000814 <__aeabi_dadd+0x354>
 8000812:	e1b4      	b.n	8000b7e <__aeabi_dadd+0x6be>
 8000814:	0017      	movs	r7, r2
 8000816:	3b1f      	subs	r3, #31
 8000818:	40df      	lsrs	r7, r3
 800081a:	2820      	cmp	r0, #32
 800081c:	d005      	beq.n	800082a <__aeabi_dadd+0x36a>
 800081e:	2340      	movs	r3, #64	@ 0x40
 8000820:	1a1b      	subs	r3, r3, r0
 8000822:	409a      	lsls	r2, r3
 8000824:	1e53      	subs	r3, r2, #1
 8000826:	419a      	sbcs	r2, r3
 8000828:	4317      	orrs	r7, r2
 800082a:	2400      	movs	r4, #0
 800082c:	2f00      	cmp	r7, #0
 800082e:	d00a      	beq.n	8000846 <__aeabi_dadd+0x386>
 8000830:	077b      	lsls	r3, r7, #29
 8000832:	d000      	beq.n	8000836 <__aeabi_dadd+0x376>
 8000834:	e6c4      	b.n	80005c0 <__aeabi_dadd+0x100>
 8000836:	0026      	movs	r6, r4
 8000838:	e79e      	b.n	8000778 <__aeabi_dadd+0x2b8>
 800083a:	464b      	mov	r3, r9
 800083c:	000c      	movs	r4, r1
 800083e:	08d8      	lsrs	r0, r3, #3
 8000840:	e79b      	b.n	800077a <__aeabi_dadd+0x2ba>
 8000842:	2700      	movs	r7, #0
 8000844:	4c01      	ldr	r4, [pc, #4]	@ (800084c <__aeabi_dadd+0x38c>)
 8000846:	2600      	movs	r6, #0
 8000848:	e783      	b.n	8000752 <__aeabi_dadd+0x292>
 800084a:	46c0      	nop			@ (mov r8, r8)
 800084c:	000007ff 	.word	0x000007ff
 8000850:	ff7fffff 	.word	0xff7fffff
 8000854:	000007fe 	.word	0x000007fe
 8000858:	464b      	mov	r3, r9
 800085a:	0777      	lsls	r7, r6, #29
 800085c:	08d8      	lsrs	r0, r3, #3
 800085e:	4307      	orrs	r7, r0
 8000860:	08f0      	lsrs	r0, r6, #3
 8000862:	e791      	b.n	8000788 <__aeabi_dadd+0x2c8>
 8000864:	4fcd      	ldr	r7, [pc, #820]	@ (8000b9c <__aeabi_dadd+0x6dc>)
 8000866:	1c61      	adds	r1, r4, #1
 8000868:	4239      	tst	r1, r7
 800086a:	d16b      	bne.n	8000944 <__aeabi_dadd+0x484>
 800086c:	0031      	movs	r1, r6
 800086e:	4648      	mov	r0, r9
 8000870:	4301      	orrs	r1, r0
 8000872:	2c00      	cmp	r4, #0
 8000874:	d000      	beq.n	8000878 <__aeabi_dadd+0x3b8>
 8000876:	e14b      	b.n	8000b10 <__aeabi_dadd+0x650>
 8000878:	001f      	movs	r7, r3
 800087a:	4317      	orrs	r7, r2
 800087c:	2900      	cmp	r1, #0
 800087e:	d100      	bne.n	8000882 <__aeabi_dadd+0x3c2>
 8000880:	e181      	b.n	8000b86 <__aeabi_dadd+0x6c6>
 8000882:	2f00      	cmp	r7, #0
 8000884:	d100      	bne.n	8000888 <__aeabi_dadd+0x3c8>
 8000886:	e74c      	b.n	8000722 <__aeabi_dadd+0x262>
 8000888:	444a      	add	r2, r9
 800088a:	454a      	cmp	r2, r9
 800088c:	4180      	sbcs	r0, r0
 800088e:	18f6      	adds	r6, r6, r3
 8000890:	4240      	negs	r0, r0
 8000892:	1836      	adds	r6, r6, r0
 8000894:	0233      	lsls	r3, r6, #8
 8000896:	d500      	bpl.n	800089a <__aeabi_dadd+0x3da>
 8000898:	e1b0      	b.n	8000bfc <__aeabi_dadd+0x73c>
 800089a:	0017      	movs	r7, r2
 800089c:	4691      	mov	r9, r2
 800089e:	4337      	orrs	r7, r6
 80008a0:	d000      	beq.n	80008a4 <__aeabi_dadd+0x3e4>
 80008a2:	e73e      	b.n	8000722 <__aeabi_dadd+0x262>
 80008a4:	2600      	movs	r6, #0
 80008a6:	e754      	b.n	8000752 <__aeabi_dadd+0x292>
 80008a8:	4649      	mov	r1, r9
 80008aa:	1a89      	subs	r1, r1, r2
 80008ac:	4688      	mov	r8, r1
 80008ae:	45c1      	cmp	r9, r8
 80008b0:	41bf      	sbcs	r7, r7
 80008b2:	1af1      	subs	r1, r6, r3
 80008b4:	427f      	negs	r7, r7
 80008b6:	1bc9      	subs	r1, r1, r7
 80008b8:	020f      	lsls	r7, r1, #8
 80008ba:	d461      	bmi.n	8000980 <__aeabi_dadd+0x4c0>
 80008bc:	4647      	mov	r7, r8
 80008be:	430f      	orrs	r7, r1
 80008c0:	d100      	bne.n	80008c4 <__aeabi_dadd+0x404>
 80008c2:	e0bd      	b.n	8000a40 <__aeabi_dadd+0x580>
 80008c4:	000e      	movs	r6, r1
 80008c6:	4647      	mov	r7, r8
 80008c8:	e651      	b.n	800056e <__aeabi_dadd+0xae>
 80008ca:	4cb5      	ldr	r4, [pc, #724]	@ (8000ba0 <__aeabi_dadd+0x6e0>)
 80008cc:	45a0      	cmp	r8, r4
 80008ce:	d100      	bne.n	80008d2 <__aeabi_dadd+0x412>
 80008d0:	e100      	b.n	8000ad4 <__aeabi_dadd+0x614>
 80008d2:	2701      	movs	r7, #1
 80008d4:	2938      	cmp	r1, #56	@ 0x38
 80008d6:	dd00      	ble.n	80008da <__aeabi_dadd+0x41a>
 80008d8:	e6b8      	b.n	800064c <__aeabi_dadd+0x18c>
 80008da:	2480      	movs	r4, #128	@ 0x80
 80008dc:	0424      	lsls	r4, r4, #16
 80008de:	4326      	orrs	r6, r4
 80008e0:	e6a3      	b.n	800062a <__aeabi_dadd+0x16a>
 80008e2:	4eb0      	ldr	r6, [pc, #704]	@ (8000ba4 <__aeabi_dadd+0x6e4>)
 80008e4:	1ae4      	subs	r4, r4, r3
 80008e6:	4016      	ands	r6, r2
 80008e8:	077b      	lsls	r3, r7, #29
 80008ea:	d000      	beq.n	80008ee <__aeabi_dadd+0x42e>
 80008ec:	e73f      	b.n	800076e <__aeabi_dadd+0x2ae>
 80008ee:	e743      	b.n	8000778 <__aeabi_dadd+0x2b8>
 80008f0:	000f      	movs	r7, r1
 80008f2:	0018      	movs	r0, r3
 80008f4:	3f20      	subs	r7, #32
 80008f6:	40f8      	lsrs	r0, r7
 80008f8:	4684      	mov	ip, r0
 80008fa:	2920      	cmp	r1, #32
 80008fc:	d003      	beq.n	8000906 <__aeabi_dadd+0x446>
 80008fe:	2740      	movs	r7, #64	@ 0x40
 8000900:	1a79      	subs	r1, r7, r1
 8000902:	408b      	lsls	r3, r1
 8000904:	431a      	orrs	r2, r3
 8000906:	1e53      	subs	r3, r2, #1
 8000908:	419a      	sbcs	r2, r3
 800090a:	4663      	mov	r3, ip
 800090c:	0017      	movs	r7, r2
 800090e:	431f      	orrs	r7, r3
 8000910:	e622      	b.n	8000558 <__aeabi_dadd+0x98>
 8000912:	48a4      	ldr	r0, [pc, #656]	@ (8000ba4 <__aeabi_dadd+0x6e4>)
 8000914:	1ae1      	subs	r1, r4, r3
 8000916:	4010      	ands	r0, r2
 8000918:	0747      	lsls	r7, r0, #29
 800091a:	08c0      	lsrs	r0, r0, #3
 800091c:	e707      	b.n	800072e <__aeabi_dadd+0x26e>
 800091e:	0034      	movs	r4, r6
 8000920:	4648      	mov	r0, r9
 8000922:	4304      	orrs	r4, r0
 8000924:	d100      	bne.n	8000928 <__aeabi_dadd+0x468>
 8000926:	e0fa      	b.n	8000b1e <__aeabi_dadd+0x65e>
 8000928:	1e4c      	subs	r4, r1, #1
 800092a:	2901      	cmp	r1, #1
 800092c:	d100      	bne.n	8000930 <__aeabi_dadd+0x470>
 800092e:	e0d7      	b.n	8000ae0 <__aeabi_dadd+0x620>
 8000930:	4f9b      	ldr	r7, [pc, #620]	@ (8000ba0 <__aeabi_dadd+0x6e0>)
 8000932:	42b9      	cmp	r1, r7
 8000934:	d100      	bne.n	8000938 <__aeabi_dadd+0x478>
 8000936:	e0e2      	b.n	8000afe <__aeabi_dadd+0x63e>
 8000938:	2701      	movs	r7, #1
 800093a:	2c38      	cmp	r4, #56	@ 0x38
 800093c:	dd00      	ble.n	8000940 <__aeabi_dadd+0x480>
 800093e:	e74f      	b.n	80007e0 <__aeabi_dadd+0x320>
 8000940:	0021      	movs	r1, r4
 8000942:	e73c      	b.n	80007be <__aeabi_dadd+0x2fe>
 8000944:	4c96      	ldr	r4, [pc, #600]	@ (8000ba0 <__aeabi_dadd+0x6e0>)
 8000946:	42a1      	cmp	r1, r4
 8000948:	d100      	bne.n	800094c <__aeabi_dadd+0x48c>
 800094a:	e0dd      	b.n	8000b08 <__aeabi_dadd+0x648>
 800094c:	444a      	add	r2, r9
 800094e:	454a      	cmp	r2, r9
 8000950:	4180      	sbcs	r0, r0
 8000952:	18f3      	adds	r3, r6, r3
 8000954:	4240      	negs	r0, r0
 8000956:	1818      	adds	r0, r3, r0
 8000958:	07c7      	lsls	r7, r0, #31
 800095a:	0852      	lsrs	r2, r2, #1
 800095c:	4317      	orrs	r7, r2
 800095e:	0846      	lsrs	r6, r0, #1
 8000960:	0752      	lsls	r2, r2, #29
 8000962:	d005      	beq.n	8000970 <__aeabi_dadd+0x4b0>
 8000964:	220f      	movs	r2, #15
 8000966:	000c      	movs	r4, r1
 8000968:	403a      	ands	r2, r7
 800096a:	2a04      	cmp	r2, #4
 800096c:	d000      	beq.n	8000970 <__aeabi_dadd+0x4b0>
 800096e:	e62c      	b.n	80005ca <__aeabi_dadd+0x10a>
 8000970:	0776      	lsls	r6, r6, #29
 8000972:	08ff      	lsrs	r7, r7, #3
 8000974:	4337      	orrs	r7, r6
 8000976:	0900      	lsrs	r0, r0, #4
 8000978:	e6d9      	b.n	800072e <__aeabi_dadd+0x26e>
 800097a:	2700      	movs	r7, #0
 800097c:	2600      	movs	r6, #0
 800097e:	e6e8      	b.n	8000752 <__aeabi_dadd+0x292>
 8000980:	4649      	mov	r1, r9
 8000982:	1a57      	subs	r7, r2, r1
 8000984:	42ba      	cmp	r2, r7
 8000986:	4192      	sbcs	r2, r2
 8000988:	1b9e      	subs	r6, r3, r6
 800098a:	4252      	negs	r2, r2
 800098c:	4665      	mov	r5, ip
 800098e:	1ab6      	subs	r6, r6, r2
 8000990:	e5ed      	b.n	800056e <__aeabi_dadd+0xae>
 8000992:	2900      	cmp	r1, #0
 8000994:	d000      	beq.n	8000998 <__aeabi_dadd+0x4d8>
 8000996:	e0c6      	b.n	8000b26 <__aeabi_dadd+0x666>
 8000998:	2f00      	cmp	r7, #0
 800099a:	d167      	bne.n	8000a6c <__aeabi_dadd+0x5ac>
 800099c:	2680      	movs	r6, #128	@ 0x80
 800099e:	2500      	movs	r5, #0
 80009a0:	4c7f      	ldr	r4, [pc, #508]	@ (8000ba0 <__aeabi_dadd+0x6e0>)
 80009a2:	0336      	lsls	r6, r6, #12
 80009a4:	e6d5      	b.n	8000752 <__aeabi_dadd+0x292>
 80009a6:	4665      	mov	r5, ip
 80009a8:	000c      	movs	r4, r1
 80009aa:	001e      	movs	r6, r3
 80009ac:	08d0      	lsrs	r0, r2, #3
 80009ae:	e6e4      	b.n	800077a <__aeabi_dadd+0x2ba>
 80009b0:	444a      	add	r2, r9
 80009b2:	454a      	cmp	r2, r9
 80009b4:	4180      	sbcs	r0, r0
 80009b6:	18f3      	adds	r3, r6, r3
 80009b8:	4240      	negs	r0, r0
 80009ba:	1818      	adds	r0, r3, r0
 80009bc:	0011      	movs	r1, r2
 80009be:	0203      	lsls	r3, r0, #8
 80009c0:	d400      	bmi.n	80009c4 <__aeabi_dadd+0x504>
 80009c2:	e096      	b.n	8000af2 <__aeabi_dadd+0x632>
 80009c4:	4b77      	ldr	r3, [pc, #476]	@ (8000ba4 <__aeabi_dadd+0x6e4>)
 80009c6:	0849      	lsrs	r1, r1, #1
 80009c8:	4018      	ands	r0, r3
 80009ca:	07c3      	lsls	r3, r0, #31
 80009cc:	430b      	orrs	r3, r1
 80009ce:	0844      	lsrs	r4, r0, #1
 80009d0:	0749      	lsls	r1, r1, #29
 80009d2:	d100      	bne.n	80009d6 <__aeabi_dadd+0x516>
 80009d4:	e129      	b.n	8000c2a <__aeabi_dadd+0x76a>
 80009d6:	220f      	movs	r2, #15
 80009d8:	401a      	ands	r2, r3
 80009da:	2a04      	cmp	r2, #4
 80009dc:	d100      	bne.n	80009e0 <__aeabi_dadd+0x520>
 80009de:	e0ea      	b.n	8000bb6 <__aeabi_dadd+0x6f6>
 80009e0:	1d1f      	adds	r7, r3, #4
 80009e2:	429f      	cmp	r7, r3
 80009e4:	41b6      	sbcs	r6, r6
 80009e6:	4276      	negs	r6, r6
 80009e8:	1936      	adds	r6, r6, r4
 80009ea:	2402      	movs	r4, #2
 80009ec:	e6c4      	b.n	8000778 <__aeabi_dadd+0x2b8>
 80009ee:	4649      	mov	r1, r9
 80009f0:	1a8f      	subs	r7, r1, r2
 80009f2:	45b9      	cmp	r9, r7
 80009f4:	4180      	sbcs	r0, r0
 80009f6:	1af6      	subs	r6, r6, r3
 80009f8:	4240      	negs	r0, r0
 80009fa:	1a36      	subs	r6, r6, r0
 80009fc:	0233      	lsls	r3, r6, #8
 80009fe:	d406      	bmi.n	8000a0e <__aeabi_dadd+0x54e>
 8000a00:	0773      	lsls	r3, r6, #29
 8000a02:	08ff      	lsrs	r7, r7, #3
 8000a04:	2101      	movs	r1, #1
 8000a06:	431f      	orrs	r7, r3
 8000a08:	08f0      	lsrs	r0, r6, #3
 8000a0a:	e690      	b.n	800072e <__aeabi_dadd+0x26e>
 8000a0c:	4665      	mov	r5, ip
 8000a0e:	2401      	movs	r4, #1
 8000a10:	e5ab      	b.n	800056a <__aeabi_dadd+0xaa>
 8000a12:	464b      	mov	r3, r9
 8000a14:	0777      	lsls	r7, r6, #29
 8000a16:	08d8      	lsrs	r0, r3, #3
 8000a18:	4307      	orrs	r7, r0
 8000a1a:	08f0      	lsrs	r0, r6, #3
 8000a1c:	e6b4      	b.n	8000788 <__aeabi_dadd+0x2c8>
 8000a1e:	000f      	movs	r7, r1
 8000a20:	0018      	movs	r0, r3
 8000a22:	3f20      	subs	r7, #32
 8000a24:	40f8      	lsrs	r0, r7
 8000a26:	4684      	mov	ip, r0
 8000a28:	2920      	cmp	r1, #32
 8000a2a:	d003      	beq.n	8000a34 <__aeabi_dadd+0x574>
 8000a2c:	2740      	movs	r7, #64	@ 0x40
 8000a2e:	1a79      	subs	r1, r7, r1
 8000a30:	408b      	lsls	r3, r1
 8000a32:	431a      	orrs	r2, r3
 8000a34:	1e53      	subs	r3, r2, #1
 8000a36:	419a      	sbcs	r2, r3
 8000a38:	4663      	mov	r3, ip
 8000a3a:	0017      	movs	r7, r2
 8000a3c:	431f      	orrs	r7, r3
 8000a3e:	e635      	b.n	80006ac <__aeabi_dadd+0x1ec>
 8000a40:	2500      	movs	r5, #0
 8000a42:	2400      	movs	r4, #0
 8000a44:	2600      	movs	r6, #0
 8000a46:	e684      	b.n	8000752 <__aeabi_dadd+0x292>
 8000a48:	000c      	movs	r4, r1
 8000a4a:	0035      	movs	r5, r6
 8000a4c:	3c20      	subs	r4, #32
 8000a4e:	40e5      	lsrs	r5, r4
 8000a50:	2920      	cmp	r1, #32
 8000a52:	d005      	beq.n	8000a60 <__aeabi_dadd+0x5a0>
 8000a54:	2440      	movs	r4, #64	@ 0x40
 8000a56:	1a61      	subs	r1, r4, r1
 8000a58:	408e      	lsls	r6, r1
 8000a5a:	4649      	mov	r1, r9
 8000a5c:	4331      	orrs	r1, r6
 8000a5e:	4689      	mov	r9, r1
 8000a60:	4648      	mov	r0, r9
 8000a62:	1e41      	subs	r1, r0, #1
 8000a64:	4188      	sbcs	r0, r1
 8000a66:	0007      	movs	r7, r0
 8000a68:	432f      	orrs	r7, r5
 8000a6a:	e5ef      	b.n	800064c <__aeabi_dadd+0x18c>
 8000a6c:	08d2      	lsrs	r2, r2, #3
 8000a6e:	075f      	lsls	r7, r3, #29
 8000a70:	4665      	mov	r5, ip
 8000a72:	4317      	orrs	r7, r2
 8000a74:	08d8      	lsrs	r0, r3, #3
 8000a76:	e687      	b.n	8000788 <__aeabi_dadd+0x2c8>
 8000a78:	1a17      	subs	r7, r2, r0
 8000a7a:	42ba      	cmp	r2, r7
 8000a7c:	4192      	sbcs	r2, r2
 8000a7e:	1b9e      	subs	r6, r3, r6
 8000a80:	4252      	negs	r2, r2
 8000a82:	1ab6      	subs	r6, r6, r2
 8000a84:	0233      	lsls	r3, r6, #8
 8000a86:	d4c1      	bmi.n	8000a0c <__aeabi_dadd+0x54c>
 8000a88:	0773      	lsls	r3, r6, #29
 8000a8a:	08ff      	lsrs	r7, r7, #3
 8000a8c:	4665      	mov	r5, ip
 8000a8e:	2101      	movs	r1, #1
 8000a90:	431f      	orrs	r7, r3
 8000a92:	08f0      	lsrs	r0, r6, #3
 8000a94:	e64b      	b.n	800072e <__aeabi_dadd+0x26e>
 8000a96:	2f00      	cmp	r7, #0
 8000a98:	d07b      	beq.n	8000b92 <__aeabi_dadd+0x6d2>
 8000a9a:	4665      	mov	r5, ip
 8000a9c:	001e      	movs	r6, r3
 8000a9e:	4691      	mov	r9, r2
 8000aa0:	e63f      	b.n	8000722 <__aeabi_dadd+0x262>
 8000aa2:	1a81      	subs	r1, r0, r2
 8000aa4:	4688      	mov	r8, r1
 8000aa6:	45c1      	cmp	r9, r8
 8000aa8:	41a4      	sbcs	r4, r4
 8000aaa:	1af1      	subs	r1, r6, r3
 8000aac:	4264      	negs	r4, r4
 8000aae:	1b09      	subs	r1, r1, r4
 8000ab0:	2480      	movs	r4, #128	@ 0x80
 8000ab2:	0424      	lsls	r4, r4, #16
 8000ab4:	4221      	tst	r1, r4
 8000ab6:	d077      	beq.n	8000ba8 <__aeabi_dadd+0x6e8>
 8000ab8:	1a10      	subs	r0, r2, r0
 8000aba:	4282      	cmp	r2, r0
 8000abc:	4192      	sbcs	r2, r2
 8000abe:	0007      	movs	r7, r0
 8000ac0:	1b9e      	subs	r6, r3, r6
 8000ac2:	4252      	negs	r2, r2
 8000ac4:	1ab6      	subs	r6, r6, r2
 8000ac6:	4337      	orrs	r7, r6
 8000ac8:	d000      	beq.n	8000acc <__aeabi_dadd+0x60c>
 8000aca:	e0a0      	b.n	8000c0e <__aeabi_dadd+0x74e>
 8000acc:	4665      	mov	r5, ip
 8000ace:	2400      	movs	r4, #0
 8000ad0:	2600      	movs	r6, #0
 8000ad2:	e63e      	b.n	8000752 <__aeabi_dadd+0x292>
 8000ad4:	075f      	lsls	r7, r3, #29
 8000ad6:	08d2      	lsrs	r2, r2, #3
 8000ad8:	4665      	mov	r5, ip
 8000ada:	4317      	orrs	r7, r2
 8000adc:	08d8      	lsrs	r0, r3, #3
 8000ade:	e653      	b.n	8000788 <__aeabi_dadd+0x2c8>
 8000ae0:	1881      	adds	r1, r0, r2
 8000ae2:	4291      	cmp	r1, r2
 8000ae4:	4192      	sbcs	r2, r2
 8000ae6:	18f0      	adds	r0, r6, r3
 8000ae8:	4252      	negs	r2, r2
 8000aea:	1880      	adds	r0, r0, r2
 8000aec:	0203      	lsls	r3, r0, #8
 8000aee:	d500      	bpl.n	8000af2 <__aeabi_dadd+0x632>
 8000af0:	e768      	b.n	80009c4 <__aeabi_dadd+0x504>
 8000af2:	0747      	lsls	r7, r0, #29
 8000af4:	08c9      	lsrs	r1, r1, #3
 8000af6:	430f      	orrs	r7, r1
 8000af8:	08c0      	lsrs	r0, r0, #3
 8000afa:	2101      	movs	r1, #1
 8000afc:	e617      	b.n	800072e <__aeabi_dadd+0x26e>
 8000afe:	08d2      	lsrs	r2, r2, #3
 8000b00:	075f      	lsls	r7, r3, #29
 8000b02:	4317      	orrs	r7, r2
 8000b04:	08d8      	lsrs	r0, r3, #3
 8000b06:	e63f      	b.n	8000788 <__aeabi_dadd+0x2c8>
 8000b08:	000c      	movs	r4, r1
 8000b0a:	2600      	movs	r6, #0
 8000b0c:	2700      	movs	r7, #0
 8000b0e:	e620      	b.n	8000752 <__aeabi_dadd+0x292>
 8000b10:	2900      	cmp	r1, #0
 8000b12:	d156      	bne.n	8000bc2 <__aeabi_dadd+0x702>
 8000b14:	075f      	lsls	r7, r3, #29
 8000b16:	08d2      	lsrs	r2, r2, #3
 8000b18:	4317      	orrs	r7, r2
 8000b1a:	08d8      	lsrs	r0, r3, #3
 8000b1c:	e634      	b.n	8000788 <__aeabi_dadd+0x2c8>
 8000b1e:	000c      	movs	r4, r1
 8000b20:	001e      	movs	r6, r3
 8000b22:	08d0      	lsrs	r0, r2, #3
 8000b24:	e629      	b.n	800077a <__aeabi_dadd+0x2ba>
 8000b26:	08c1      	lsrs	r1, r0, #3
 8000b28:	0770      	lsls	r0, r6, #29
 8000b2a:	4301      	orrs	r1, r0
 8000b2c:	08f0      	lsrs	r0, r6, #3
 8000b2e:	2f00      	cmp	r7, #0
 8000b30:	d062      	beq.n	8000bf8 <__aeabi_dadd+0x738>
 8000b32:	2480      	movs	r4, #128	@ 0x80
 8000b34:	0324      	lsls	r4, r4, #12
 8000b36:	4220      	tst	r0, r4
 8000b38:	d007      	beq.n	8000b4a <__aeabi_dadd+0x68a>
 8000b3a:	08de      	lsrs	r6, r3, #3
 8000b3c:	4226      	tst	r6, r4
 8000b3e:	d104      	bne.n	8000b4a <__aeabi_dadd+0x68a>
 8000b40:	4665      	mov	r5, ip
 8000b42:	0030      	movs	r0, r6
 8000b44:	08d1      	lsrs	r1, r2, #3
 8000b46:	075b      	lsls	r3, r3, #29
 8000b48:	4319      	orrs	r1, r3
 8000b4a:	0f4f      	lsrs	r7, r1, #29
 8000b4c:	00c9      	lsls	r1, r1, #3
 8000b4e:	08c9      	lsrs	r1, r1, #3
 8000b50:	077f      	lsls	r7, r7, #29
 8000b52:	430f      	orrs	r7, r1
 8000b54:	e618      	b.n	8000788 <__aeabi_dadd+0x2c8>
 8000b56:	000c      	movs	r4, r1
 8000b58:	0030      	movs	r0, r6
 8000b5a:	3c20      	subs	r4, #32
 8000b5c:	40e0      	lsrs	r0, r4
 8000b5e:	4684      	mov	ip, r0
 8000b60:	2920      	cmp	r1, #32
 8000b62:	d005      	beq.n	8000b70 <__aeabi_dadd+0x6b0>
 8000b64:	2440      	movs	r4, #64	@ 0x40
 8000b66:	1a61      	subs	r1, r4, r1
 8000b68:	408e      	lsls	r6, r1
 8000b6a:	4649      	mov	r1, r9
 8000b6c:	4331      	orrs	r1, r6
 8000b6e:	4689      	mov	r9, r1
 8000b70:	4648      	mov	r0, r9
 8000b72:	1e41      	subs	r1, r0, #1
 8000b74:	4188      	sbcs	r0, r1
 8000b76:	4661      	mov	r1, ip
 8000b78:	0007      	movs	r7, r0
 8000b7a:	430f      	orrs	r7, r1
 8000b7c:	e630      	b.n	80007e0 <__aeabi_dadd+0x320>
 8000b7e:	2120      	movs	r1, #32
 8000b80:	2700      	movs	r7, #0
 8000b82:	1a09      	subs	r1, r1, r0
 8000b84:	e50e      	b.n	80005a4 <__aeabi_dadd+0xe4>
 8000b86:	001e      	movs	r6, r3
 8000b88:	2f00      	cmp	r7, #0
 8000b8a:	d000      	beq.n	8000b8e <__aeabi_dadd+0x6ce>
 8000b8c:	e522      	b.n	80005d4 <__aeabi_dadd+0x114>
 8000b8e:	2400      	movs	r4, #0
 8000b90:	e758      	b.n	8000a44 <__aeabi_dadd+0x584>
 8000b92:	2500      	movs	r5, #0
 8000b94:	2400      	movs	r4, #0
 8000b96:	2600      	movs	r6, #0
 8000b98:	e5db      	b.n	8000752 <__aeabi_dadd+0x292>
 8000b9a:	46c0      	nop			@ (mov r8, r8)
 8000b9c:	000007fe 	.word	0x000007fe
 8000ba0:	000007ff 	.word	0x000007ff
 8000ba4:	ff7fffff 	.word	0xff7fffff
 8000ba8:	4647      	mov	r7, r8
 8000baa:	430f      	orrs	r7, r1
 8000bac:	d100      	bne.n	8000bb0 <__aeabi_dadd+0x6f0>
 8000bae:	e747      	b.n	8000a40 <__aeabi_dadd+0x580>
 8000bb0:	000e      	movs	r6, r1
 8000bb2:	46c1      	mov	r9, r8
 8000bb4:	e5b5      	b.n	8000722 <__aeabi_dadd+0x262>
 8000bb6:	08df      	lsrs	r7, r3, #3
 8000bb8:	0764      	lsls	r4, r4, #29
 8000bba:	2102      	movs	r1, #2
 8000bbc:	4327      	orrs	r7, r4
 8000bbe:	0900      	lsrs	r0, r0, #4
 8000bc0:	e5b5      	b.n	800072e <__aeabi_dadd+0x26e>
 8000bc2:	0019      	movs	r1, r3
 8000bc4:	08c0      	lsrs	r0, r0, #3
 8000bc6:	0777      	lsls	r7, r6, #29
 8000bc8:	4307      	orrs	r7, r0
 8000bca:	4311      	orrs	r1, r2
 8000bcc:	08f0      	lsrs	r0, r6, #3
 8000bce:	2900      	cmp	r1, #0
 8000bd0:	d100      	bne.n	8000bd4 <__aeabi_dadd+0x714>
 8000bd2:	e5d9      	b.n	8000788 <__aeabi_dadd+0x2c8>
 8000bd4:	2180      	movs	r1, #128	@ 0x80
 8000bd6:	0309      	lsls	r1, r1, #12
 8000bd8:	4208      	tst	r0, r1
 8000bda:	d007      	beq.n	8000bec <__aeabi_dadd+0x72c>
 8000bdc:	08dc      	lsrs	r4, r3, #3
 8000bde:	420c      	tst	r4, r1
 8000be0:	d104      	bne.n	8000bec <__aeabi_dadd+0x72c>
 8000be2:	08d2      	lsrs	r2, r2, #3
 8000be4:	075b      	lsls	r3, r3, #29
 8000be6:	431a      	orrs	r2, r3
 8000be8:	0017      	movs	r7, r2
 8000bea:	0020      	movs	r0, r4
 8000bec:	0f7b      	lsrs	r3, r7, #29
 8000bee:	00ff      	lsls	r7, r7, #3
 8000bf0:	08ff      	lsrs	r7, r7, #3
 8000bf2:	075b      	lsls	r3, r3, #29
 8000bf4:	431f      	orrs	r7, r3
 8000bf6:	e5c7      	b.n	8000788 <__aeabi_dadd+0x2c8>
 8000bf8:	000f      	movs	r7, r1
 8000bfa:	e5c5      	b.n	8000788 <__aeabi_dadd+0x2c8>
 8000bfc:	4b12      	ldr	r3, [pc, #72]	@ (8000c48 <__aeabi_dadd+0x788>)
 8000bfe:	08d2      	lsrs	r2, r2, #3
 8000c00:	4033      	ands	r3, r6
 8000c02:	075f      	lsls	r7, r3, #29
 8000c04:	025b      	lsls	r3, r3, #9
 8000c06:	2401      	movs	r4, #1
 8000c08:	4317      	orrs	r7, r2
 8000c0a:	0b1e      	lsrs	r6, r3, #12
 8000c0c:	e5a1      	b.n	8000752 <__aeabi_dadd+0x292>
 8000c0e:	4226      	tst	r6, r4
 8000c10:	d012      	beq.n	8000c38 <__aeabi_dadd+0x778>
 8000c12:	4b0d      	ldr	r3, [pc, #52]	@ (8000c48 <__aeabi_dadd+0x788>)
 8000c14:	4665      	mov	r5, ip
 8000c16:	0002      	movs	r2, r0
 8000c18:	2401      	movs	r4, #1
 8000c1a:	401e      	ands	r6, r3
 8000c1c:	e4e6      	b.n	80005ec <__aeabi_dadd+0x12c>
 8000c1e:	0021      	movs	r1, r4
 8000c20:	e585      	b.n	800072e <__aeabi_dadd+0x26e>
 8000c22:	0017      	movs	r7, r2
 8000c24:	e5a8      	b.n	8000778 <__aeabi_dadd+0x2b8>
 8000c26:	003a      	movs	r2, r7
 8000c28:	e4d4      	b.n	80005d4 <__aeabi_dadd+0x114>
 8000c2a:	08db      	lsrs	r3, r3, #3
 8000c2c:	0764      	lsls	r4, r4, #29
 8000c2e:	431c      	orrs	r4, r3
 8000c30:	0027      	movs	r7, r4
 8000c32:	2102      	movs	r1, #2
 8000c34:	0900      	lsrs	r0, r0, #4
 8000c36:	e57a      	b.n	800072e <__aeabi_dadd+0x26e>
 8000c38:	08c0      	lsrs	r0, r0, #3
 8000c3a:	0777      	lsls	r7, r6, #29
 8000c3c:	4307      	orrs	r7, r0
 8000c3e:	4665      	mov	r5, ip
 8000c40:	2100      	movs	r1, #0
 8000c42:	08f0      	lsrs	r0, r6, #3
 8000c44:	e573      	b.n	800072e <__aeabi_dadd+0x26e>
 8000c46:	46c0      	nop			@ (mov r8, r8)
 8000c48:	ff7fffff 	.word	0xff7fffff

08000c4c <__eqdf2>:
 8000c4c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000c4e:	4657      	mov	r7, sl
 8000c50:	46de      	mov	lr, fp
 8000c52:	464e      	mov	r6, r9
 8000c54:	4645      	mov	r5, r8
 8000c56:	b5e0      	push	{r5, r6, r7, lr}
 8000c58:	000d      	movs	r5, r1
 8000c5a:	0004      	movs	r4, r0
 8000c5c:	0fe8      	lsrs	r0, r5, #31
 8000c5e:	4683      	mov	fp, r0
 8000c60:	0309      	lsls	r1, r1, #12
 8000c62:	0fd8      	lsrs	r0, r3, #31
 8000c64:	0b09      	lsrs	r1, r1, #12
 8000c66:	4682      	mov	sl, r0
 8000c68:	4819      	ldr	r0, [pc, #100]	@ (8000cd0 <__eqdf2+0x84>)
 8000c6a:	468c      	mov	ip, r1
 8000c6c:	031f      	lsls	r7, r3, #12
 8000c6e:	0069      	lsls	r1, r5, #1
 8000c70:	005e      	lsls	r6, r3, #1
 8000c72:	0d49      	lsrs	r1, r1, #21
 8000c74:	0b3f      	lsrs	r7, r7, #12
 8000c76:	0d76      	lsrs	r6, r6, #21
 8000c78:	4281      	cmp	r1, r0
 8000c7a:	d018      	beq.n	8000cae <__eqdf2+0x62>
 8000c7c:	4286      	cmp	r6, r0
 8000c7e:	d00f      	beq.n	8000ca0 <__eqdf2+0x54>
 8000c80:	2001      	movs	r0, #1
 8000c82:	42b1      	cmp	r1, r6
 8000c84:	d10d      	bne.n	8000ca2 <__eqdf2+0x56>
 8000c86:	45bc      	cmp	ip, r7
 8000c88:	d10b      	bne.n	8000ca2 <__eqdf2+0x56>
 8000c8a:	4294      	cmp	r4, r2
 8000c8c:	d109      	bne.n	8000ca2 <__eqdf2+0x56>
 8000c8e:	45d3      	cmp	fp, sl
 8000c90:	d01c      	beq.n	8000ccc <__eqdf2+0x80>
 8000c92:	2900      	cmp	r1, #0
 8000c94:	d105      	bne.n	8000ca2 <__eqdf2+0x56>
 8000c96:	4660      	mov	r0, ip
 8000c98:	4320      	orrs	r0, r4
 8000c9a:	1e43      	subs	r3, r0, #1
 8000c9c:	4198      	sbcs	r0, r3
 8000c9e:	e000      	b.n	8000ca2 <__eqdf2+0x56>
 8000ca0:	2001      	movs	r0, #1
 8000ca2:	bcf0      	pop	{r4, r5, r6, r7}
 8000ca4:	46bb      	mov	fp, r7
 8000ca6:	46b2      	mov	sl, r6
 8000ca8:	46a9      	mov	r9, r5
 8000caa:	46a0      	mov	r8, r4
 8000cac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000cae:	2001      	movs	r0, #1
 8000cb0:	428e      	cmp	r6, r1
 8000cb2:	d1f6      	bne.n	8000ca2 <__eqdf2+0x56>
 8000cb4:	4661      	mov	r1, ip
 8000cb6:	4339      	orrs	r1, r7
 8000cb8:	000f      	movs	r7, r1
 8000cba:	4317      	orrs	r7, r2
 8000cbc:	4327      	orrs	r7, r4
 8000cbe:	d1f0      	bne.n	8000ca2 <__eqdf2+0x56>
 8000cc0:	465b      	mov	r3, fp
 8000cc2:	4652      	mov	r2, sl
 8000cc4:	1a98      	subs	r0, r3, r2
 8000cc6:	1e43      	subs	r3, r0, #1
 8000cc8:	4198      	sbcs	r0, r3
 8000cca:	e7ea      	b.n	8000ca2 <__eqdf2+0x56>
 8000ccc:	2000      	movs	r0, #0
 8000cce:	e7e8      	b.n	8000ca2 <__eqdf2+0x56>
 8000cd0:	000007ff 	.word	0x000007ff

08000cd4 <__gedf2>:
 8000cd4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000cd6:	4657      	mov	r7, sl
 8000cd8:	464e      	mov	r6, r9
 8000cda:	4645      	mov	r5, r8
 8000cdc:	46de      	mov	lr, fp
 8000cde:	b5e0      	push	{r5, r6, r7, lr}
 8000ce0:	000d      	movs	r5, r1
 8000ce2:	030e      	lsls	r6, r1, #12
 8000ce4:	0049      	lsls	r1, r1, #1
 8000ce6:	0d49      	lsrs	r1, r1, #21
 8000ce8:	468a      	mov	sl, r1
 8000cea:	0fdf      	lsrs	r7, r3, #31
 8000cec:	0fe9      	lsrs	r1, r5, #31
 8000cee:	46bc      	mov	ip, r7
 8000cf0:	b083      	sub	sp, #12
 8000cf2:	4f2f      	ldr	r7, [pc, #188]	@ (8000db0 <__gedf2+0xdc>)
 8000cf4:	0004      	movs	r4, r0
 8000cf6:	4680      	mov	r8, r0
 8000cf8:	9101      	str	r1, [sp, #4]
 8000cfa:	0058      	lsls	r0, r3, #1
 8000cfc:	0319      	lsls	r1, r3, #12
 8000cfe:	4691      	mov	r9, r2
 8000d00:	0b36      	lsrs	r6, r6, #12
 8000d02:	0b09      	lsrs	r1, r1, #12
 8000d04:	0d40      	lsrs	r0, r0, #21
 8000d06:	45ba      	cmp	sl, r7
 8000d08:	d01d      	beq.n	8000d46 <__gedf2+0x72>
 8000d0a:	42b8      	cmp	r0, r7
 8000d0c:	d00d      	beq.n	8000d2a <__gedf2+0x56>
 8000d0e:	4657      	mov	r7, sl
 8000d10:	2f00      	cmp	r7, #0
 8000d12:	d12a      	bne.n	8000d6a <__gedf2+0x96>
 8000d14:	4334      	orrs	r4, r6
 8000d16:	2800      	cmp	r0, #0
 8000d18:	d124      	bne.n	8000d64 <__gedf2+0x90>
 8000d1a:	430a      	orrs	r2, r1
 8000d1c:	d036      	beq.n	8000d8c <__gedf2+0xb8>
 8000d1e:	2c00      	cmp	r4, #0
 8000d20:	d141      	bne.n	8000da6 <__gedf2+0xd2>
 8000d22:	4663      	mov	r3, ip
 8000d24:	0058      	lsls	r0, r3, #1
 8000d26:	3801      	subs	r0, #1
 8000d28:	e015      	b.n	8000d56 <__gedf2+0x82>
 8000d2a:	4311      	orrs	r1, r2
 8000d2c:	d138      	bne.n	8000da0 <__gedf2+0xcc>
 8000d2e:	4653      	mov	r3, sl
 8000d30:	2b00      	cmp	r3, #0
 8000d32:	d101      	bne.n	8000d38 <__gedf2+0x64>
 8000d34:	4326      	orrs	r6, r4
 8000d36:	d0f4      	beq.n	8000d22 <__gedf2+0x4e>
 8000d38:	9b01      	ldr	r3, [sp, #4]
 8000d3a:	4563      	cmp	r3, ip
 8000d3c:	d107      	bne.n	8000d4e <__gedf2+0x7a>
 8000d3e:	9b01      	ldr	r3, [sp, #4]
 8000d40:	0058      	lsls	r0, r3, #1
 8000d42:	3801      	subs	r0, #1
 8000d44:	e007      	b.n	8000d56 <__gedf2+0x82>
 8000d46:	4326      	orrs	r6, r4
 8000d48:	d12a      	bne.n	8000da0 <__gedf2+0xcc>
 8000d4a:	4550      	cmp	r0, sl
 8000d4c:	d021      	beq.n	8000d92 <__gedf2+0xbe>
 8000d4e:	2001      	movs	r0, #1
 8000d50:	9b01      	ldr	r3, [sp, #4]
 8000d52:	425f      	negs	r7, r3
 8000d54:	4338      	orrs	r0, r7
 8000d56:	b003      	add	sp, #12
 8000d58:	bcf0      	pop	{r4, r5, r6, r7}
 8000d5a:	46bb      	mov	fp, r7
 8000d5c:	46b2      	mov	sl, r6
 8000d5e:	46a9      	mov	r9, r5
 8000d60:	46a0      	mov	r8, r4
 8000d62:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000d64:	2c00      	cmp	r4, #0
 8000d66:	d0dc      	beq.n	8000d22 <__gedf2+0x4e>
 8000d68:	e7e6      	b.n	8000d38 <__gedf2+0x64>
 8000d6a:	2800      	cmp	r0, #0
 8000d6c:	d0ef      	beq.n	8000d4e <__gedf2+0x7a>
 8000d6e:	9b01      	ldr	r3, [sp, #4]
 8000d70:	4563      	cmp	r3, ip
 8000d72:	d1ec      	bne.n	8000d4e <__gedf2+0x7a>
 8000d74:	4582      	cmp	sl, r0
 8000d76:	dcea      	bgt.n	8000d4e <__gedf2+0x7a>
 8000d78:	dbe1      	blt.n	8000d3e <__gedf2+0x6a>
 8000d7a:	428e      	cmp	r6, r1
 8000d7c:	d8e7      	bhi.n	8000d4e <__gedf2+0x7a>
 8000d7e:	d1de      	bne.n	8000d3e <__gedf2+0x6a>
 8000d80:	45c8      	cmp	r8, r9
 8000d82:	d8e4      	bhi.n	8000d4e <__gedf2+0x7a>
 8000d84:	2000      	movs	r0, #0
 8000d86:	45c8      	cmp	r8, r9
 8000d88:	d2e5      	bcs.n	8000d56 <__gedf2+0x82>
 8000d8a:	e7d8      	b.n	8000d3e <__gedf2+0x6a>
 8000d8c:	2c00      	cmp	r4, #0
 8000d8e:	d0e2      	beq.n	8000d56 <__gedf2+0x82>
 8000d90:	e7dd      	b.n	8000d4e <__gedf2+0x7a>
 8000d92:	4311      	orrs	r1, r2
 8000d94:	d104      	bne.n	8000da0 <__gedf2+0xcc>
 8000d96:	9b01      	ldr	r3, [sp, #4]
 8000d98:	4563      	cmp	r3, ip
 8000d9a:	d1d8      	bne.n	8000d4e <__gedf2+0x7a>
 8000d9c:	2000      	movs	r0, #0
 8000d9e:	e7da      	b.n	8000d56 <__gedf2+0x82>
 8000da0:	2002      	movs	r0, #2
 8000da2:	4240      	negs	r0, r0
 8000da4:	e7d7      	b.n	8000d56 <__gedf2+0x82>
 8000da6:	9b01      	ldr	r3, [sp, #4]
 8000da8:	4563      	cmp	r3, ip
 8000daa:	d0e6      	beq.n	8000d7a <__gedf2+0xa6>
 8000dac:	e7cf      	b.n	8000d4e <__gedf2+0x7a>
 8000dae:	46c0      	nop			@ (mov r8, r8)
 8000db0:	000007ff 	.word	0x000007ff

08000db4 <__ledf2>:
 8000db4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000db6:	4657      	mov	r7, sl
 8000db8:	464e      	mov	r6, r9
 8000dba:	4645      	mov	r5, r8
 8000dbc:	46de      	mov	lr, fp
 8000dbe:	b5e0      	push	{r5, r6, r7, lr}
 8000dc0:	000d      	movs	r5, r1
 8000dc2:	030e      	lsls	r6, r1, #12
 8000dc4:	0049      	lsls	r1, r1, #1
 8000dc6:	0d49      	lsrs	r1, r1, #21
 8000dc8:	468a      	mov	sl, r1
 8000dca:	0fdf      	lsrs	r7, r3, #31
 8000dcc:	0fe9      	lsrs	r1, r5, #31
 8000dce:	46bc      	mov	ip, r7
 8000dd0:	b083      	sub	sp, #12
 8000dd2:	4f2e      	ldr	r7, [pc, #184]	@ (8000e8c <__ledf2+0xd8>)
 8000dd4:	0004      	movs	r4, r0
 8000dd6:	4680      	mov	r8, r0
 8000dd8:	9101      	str	r1, [sp, #4]
 8000dda:	0058      	lsls	r0, r3, #1
 8000ddc:	0319      	lsls	r1, r3, #12
 8000dde:	4691      	mov	r9, r2
 8000de0:	0b36      	lsrs	r6, r6, #12
 8000de2:	0b09      	lsrs	r1, r1, #12
 8000de4:	0d40      	lsrs	r0, r0, #21
 8000de6:	45ba      	cmp	sl, r7
 8000de8:	d01e      	beq.n	8000e28 <__ledf2+0x74>
 8000dea:	42b8      	cmp	r0, r7
 8000dec:	d00d      	beq.n	8000e0a <__ledf2+0x56>
 8000dee:	4657      	mov	r7, sl
 8000df0:	2f00      	cmp	r7, #0
 8000df2:	d127      	bne.n	8000e44 <__ledf2+0x90>
 8000df4:	4334      	orrs	r4, r6
 8000df6:	2800      	cmp	r0, #0
 8000df8:	d133      	bne.n	8000e62 <__ledf2+0xae>
 8000dfa:	430a      	orrs	r2, r1
 8000dfc:	d034      	beq.n	8000e68 <__ledf2+0xb4>
 8000dfe:	2c00      	cmp	r4, #0
 8000e00:	d140      	bne.n	8000e84 <__ledf2+0xd0>
 8000e02:	4663      	mov	r3, ip
 8000e04:	0058      	lsls	r0, r3, #1
 8000e06:	3801      	subs	r0, #1
 8000e08:	e015      	b.n	8000e36 <__ledf2+0x82>
 8000e0a:	4311      	orrs	r1, r2
 8000e0c:	d112      	bne.n	8000e34 <__ledf2+0x80>
 8000e0e:	4653      	mov	r3, sl
 8000e10:	2b00      	cmp	r3, #0
 8000e12:	d101      	bne.n	8000e18 <__ledf2+0x64>
 8000e14:	4326      	orrs	r6, r4
 8000e16:	d0f4      	beq.n	8000e02 <__ledf2+0x4e>
 8000e18:	9b01      	ldr	r3, [sp, #4]
 8000e1a:	4563      	cmp	r3, ip
 8000e1c:	d01d      	beq.n	8000e5a <__ledf2+0xa6>
 8000e1e:	2001      	movs	r0, #1
 8000e20:	9b01      	ldr	r3, [sp, #4]
 8000e22:	425f      	negs	r7, r3
 8000e24:	4338      	orrs	r0, r7
 8000e26:	e006      	b.n	8000e36 <__ledf2+0x82>
 8000e28:	4326      	orrs	r6, r4
 8000e2a:	d103      	bne.n	8000e34 <__ledf2+0x80>
 8000e2c:	4550      	cmp	r0, sl
 8000e2e:	d1f6      	bne.n	8000e1e <__ledf2+0x6a>
 8000e30:	4311      	orrs	r1, r2
 8000e32:	d01c      	beq.n	8000e6e <__ledf2+0xba>
 8000e34:	2002      	movs	r0, #2
 8000e36:	b003      	add	sp, #12
 8000e38:	bcf0      	pop	{r4, r5, r6, r7}
 8000e3a:	46bb      	mov	fp, r7
 8000e3c:	46b2      	mov	sl, r6
 8000e3e:	46a9      	mov	r9, r5
 8000e40:	46a0      	mov	r8, r4
 8000e42:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000e44:	2800      	cmp	r0, #0
 8000e46:	d0ea      	beq.n	8000e1e <__ledf2+0x6a>
 8000e48:	9b01      	ldr	r3, [sp, #4]
 8000e4a:	4563      	cmp	r3, ip
 8000e4c:	d1e7      	bne.n	8000e1e <__ledf2+0x6a>
 8000e4e:	4582      	cmp	sl, r0
 8000e50:	dce5      	bgt.n	8000e1e <__ledf2+0x6a>
 8000e52:	db02      	blt.n	8000e5a <__ledf2+0xa6>
 8000e54:	428e      	cmp	r6, r1
 8000e56:	d8e2      	bhi.n	8000e1e <__ledf2+0x6a>
 8000e58:	d00e      	beq.n	8000e78 <__ledf2+0xc4>
 8000e5a:	9b01      	ldr	r3, [sp, #4]
 8000e5c:	0058      	lsls	r0, r3, #1
 8000e5e:	3801      	subs	r0, #1
 8000e60:	e7e9      	b.n	8000e36 <__ledf2+0x82>
 8000e62:	2c00      	cmp	r4, #0
 8000e64:	d0cd      	beq.n	8000e02 <__ledf2+0x4e>
 8000e66:	e7d7      	b.n	8000e18 <__ledf2+0x64>
 8000e68:	2c00      	cmp	r4, #0
 8000e6a:	d0e4      	beq.n	8000e36 <__ledf2+0x82>
 8000e6c:	e7d7      	b.n	8000e1e <__ledf2+0x6a>
 8000e6e:	9b01      	ldr	r3, [sp, #4]
 8000e70:	2000      	movs	r0, #0
 8000e72:	4563      	cmp	r3, ip
 8000e74:	d0df      	beq.n	8000e36 <__ledf2+0x82>
 8000e76:	e7d2      	b.n	8000e1e <__ledf2+0x6a>
 8000e78:	45c8      	cmp	r8, r9
 8000e7a:	d8d0      	bhi.n	8000e1e <__ledf2+0x6a>
 8000e7c:	2000      	movs	r0, #0
 8000e7e:	45c8      	cmp	r8, r9
 8000e80:	d2d9      	bcs.n	8000e36 <__ledf2+0x82>
 8000e82:	e7ea      	b.n	8000e5a <__ledf2+0xa6>
 8000e84:	9b01      	ldr	r3, [sp, #4]
 8000e86:	4563      	cmp	r3, ip
 8000e88:	d0e4      	beq.n	8000e54 <__ledf2+0xa0>
 8000e8a:	e7c8      	b.n	8000e1e <__ledf2+0x6a>
 8000e8c:	000007ff 	.word	0x000007ff

08000e90 <__aeabi_dmul>:
 8000e90:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000e92:	4657      	mov	r7, sl
 8000e94:	464e      	mov	r6, r9
 8000e96:	46de      	mov	lr, fp
 8000e98:	4645      	mov	r5, r8
 8000e9a:	b5e0      	push	{r5, r6, r7, lr}
 8000e9c:	001f      	movs	r7, r3
 8000e9e:	030b      	lsls	r3, r1, #12
 8000ea0:	0b1b      	lsrs	r3, r3, #12
 8000ea2:	0016      	movs	r6, r2
 8000ea4:	469a      	mov	sl, r3
 8000ea6:	0fca      	lsrs	r2, r1, #31
 8000ea8:	004b      	lsls	r3, r1, #1
 8000eaa:	0004      	movs	r4, r0
 8000eac:	4691      	mov	r9, r2
 8000eae:	b085      	sub	sp, #20
 8000eb0:	0d5b      	lsrs	r3, r3, #21
 8000eb2:	d100      	bne.n	8000eb6 <__aeabi_dmul+0x26>
 8000eb4:	e1cf      	b.n	8001256 <__aeabi_dmul+0x3c6>
 8000eb6:	4acd      	ldr	r2, [pc, #820]	@ (80011ec <__aeabi_dmul+0x35c>)
 8000eb8:	4293      	cmp	r3, r2
 8000eba:	d055      	beq.n	8000f68 <__aeabi_dmul+0xd8>
 8000ebc:	4651      	mov	r1, sl
 8000ebe:	0f42      	lsrs	r2, r0, #29
 8000ec0:	00c9      	lsls	r1, r1, #3
 8000ec2:	430a      	orrs	r2, r1
 8000ec4:	2180      	movs	r1, #128	@ 0x80
 8000ec6:	0409      	lsls	r1, r1, #16
 8000ec8:	4311      	orrs	r1, r2
 8000eca:	00c2      	lsls	r2, r0, #3
 8000ecc:	4690      	mov	r8, r2
 8000ece:	4ac8      	ldr	r2, [pc, #800]	@ (80011f0 <__aeabi_dmul+0x360>)
 8000ed0:	468a      	mov	sl, r1
 8000ed2:	4693      	mov	fp, r2
 8000ed4:	449b      	add	fp, r3
 8000ed6:	2300      	movs	r3, #0
 8000ed8:	2500      	movs	r5, #0
 8000eda:	9302      	str	r3, [sp, #8]
 8000edc:	033c      	lsls	r4, r7, #12
 8000ede:	007b      	lsls	r3, r7, #1
 8000ee0:	0ffa      	lsrs	r2, r7, #31
 8000ee2:	9601      	str	r6, [sp, #4]
 8000ee4:	0b24      	lsrs	r4, r4, #12
 8000ee6:	0d5b      	lsrs	r3, r3, #21
 8000ee8:	9200      	str	r2, [sp, #0]
 8000eea:	d100      	bne.n	8000eee <__aeabi_dmul+0x5e>
 8000eec:	e188      	b.n	8001200 <__aeabi_dmul+0x370>
 8000eee:	4abf      	ldr	r2, [pc, #764]	@ (80011ec <__aeabi_dmul+0x35c>)
 8000ef0:	4293      	cmp	r3, r2
 8000ef2:	d100      	bne.n	8000ef6 <__aeabi_dmul+0x66>
 8000ef4:	e092      	b.n	800101c <__aeabi_dmul+0x18c>
 8000ef6:	4abe      	ldr	r2, [pc, #760]	@ (80011f0 <__aeabi_dmul+0x360>)
 8000ef8:	4694      	mov	ip, r2
 8000efa:	4463      	add	r3, ip
 8000efc:	449b      	add	fp, r3
 8000efe:	2d0a      	cmp	r5, #10
 8000f00:	dc42      	bgt.n	8000f88 <__aeabi_dmul+0xf8>
 8000f02:	00e4      	lsls	r4, r4, #3
 8000f04:	0f73      	lsrs	r3, r6, #29
 8000f06:	4323      	orrs	r3, r4
 8000f08:	2480      	movs	r4, #128	@ 0x80
 8000f0a:	4649      	mov	r1, r9
 8000f0c:	0424      	lsls	r4, r4, #16
 8000f0e:	431c      	orrs	r4, r3
 8000f10:	00f3      	lsls	r3, r6, #3
 8000f12:	9301      	str	r3, [sp, #4]
 8000f14:	9b00      	ldr	r3, [sp, #0]
 8000f16:	2000      	movs	r0, #0
 8000f18:	4059      	eors	r1, r3
 8000f1a:	b2cb      	uxtb	r3, r1
 8000f1c:	9303      	str	r3, [sp, #12]
 8000f1e:	2d02      	cmp	r5, #2
 8000f20:	dc00      	bgt.n	8000f24 <__aeabi_dmul+0x94>
 8000f22:	e094      	b.n	800104e <__aeabi_dmul+0x1be>
 8000f24:	2301      	movs	r3, #1
 8000f26:	40ab      	lsls	r3, r5
 8000f28:	001d      	movs	r5, r3
 8000f2a:	23a6      	movs	r3, #166	@ 0xa6
 8000f2c:	002a      	movs	r2, r5
 8000f2e:	00db      	lsls	r3, r3, #3
 8000f30:	401a      	ands	r2, r3
 8000f32:	421d      	tst	r5, r3
 8000f34:	d000      	beq.n	8000f38 <__aeabi_dmul+0xa8>
 8000f36:	e229      	b.n	800138c <__aeabi_dmul+0x4fc>
 8000f38:	2390      	movs	r3, #144	@ 0x90
 8000f3a:	009b      	lsls	r3, r3, #2
 8000f3c:	421d      	tst	r5, r3
 8000f3e:	d100      	bne.n	8000f42 <__aeabi_dmul+0xb2>
 8000f40:	e24d      	b.n	80013de <__aeabi_dmul+0x54e>
 8000f42:	2300      	movs	r3, #0
 8000f44:	2480      	movs	r4, #128	@ 0x80
 8000f46:	4699      	mov	r9, r3
 8000f48:	0324      	lsls	r4, r4, #12
 8000f4a:	4ba8      	ldr	r3, [pc, #672]	@ (80011ec <__aeabi_dmul+0x35c>)
 8000f4c:	0010      	movs	r0, r2
 8000f4e:	464a      	mov	r2, r9
 8000f50:	051b      	lsls	r3, r3, #20
 8000f52:	4323      	orrs	r3, r4
 8000f54:	07d2      	lsls	r2, r2, #31
 8000f56:	4313      	orrs	r3, r2
 8000f58:	0019      	movs	r1, r3
 8000f5a:	b005      	add	sp, #20
 8000f5c:	bcf0      	pop	{r4, r5, r6, r7}
 8000f5e:	46bb      	mov	fp, r7
 8000f60:	46b2      	mov	sl, r6
 8000f62:	46a9      	mov	r9, r5
 8000f64:	46a0      	mov	r8, r4
 8000f66:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000f68:	4652      	mov	r2, sl
 8000f6a:	4302      	orrs	r2, r0
 8000f6c:	4690      	mov	r8, r2
 8000f6e:	d000      	beq.n	8000f72 <__aeabi_dmul+0xe2>
 8000f70:	e1ac      	b.n	80012cc <__aeabi_dmul+0x43c>
 8000f72:	469b      	mov	fp, r3
 8000f74:	2302      	movs	r3, #2
 8000f76:	4692      	mov	sl, r2
 8000f78:	2508      	movs	r5, #8
 8000f7a:	9302      	str	r3, [sp, #8]
 8000f7c:	e7ae      	b.n	8000edc <__aeabi_dmul+0x4c>
 8000f7e:	9b00      	ldr	r3, [sp, #0]
 8000f80:	46a2      	mov	sl, r4
 8000f82:	4699      	mov	r9, r3
 8000f84:	9b01      	ldr	r3, [sp, #4]
 8000f86:	4698      	mov	r8, r3
 8000f88:	9b02      	ldr	r3, [sp, #8]
 8000f8a:	2b02      	cmp	r3, #2
 8000f8c:	d100      	bne.n	8000f90 <__aeabi_dmul+0x100>
 8000f8e:	e1ca      	b.n	8001326 <__aeabi_dmul+0x496>
 8000f90:	2b03      	cmp	r3, #3
 8000f92:	d100      	bne.n	8000f96 <__aeabi_dmul+0x106>
 8000f94:	e192      	b.n	80012bc <__aeabi_dmul+0x42c>
 8000f96:	2b01      	cmp	r3, #1
 8000f98:	d110      	bne.n	8000fbc <__aeabi_dmul+0x12c>
 8000f9a:	2300      	movs	r3, #0
 8000f9c:	2400      	movs	r4, #0
 8000f9e:	2200      	movs	r2, #0
 8000fa0:	e7d4      	b.n	8000f4c <__aeabi_dmul+0xbc>
 8000fa2:	2201      	movs	r2, #1
 8000fa4:	087b      	lsrs	r3, r7, #1
 8000fa6:	403a      	ands	r2, r7
 8000fa8:	4313      	orrs	r3, r2
 8000faa:	4652      	mov	r2, sl
 8000fac:	07d2      	lsls	r2, r2, #31
 8000fae:	4313      	orrs	r3, r2
 8000fb0:	4698      	mov	r8, r3
 8000fb2:	4653      	mov	r3, sl
 8000fb4:	085b      	lsrs	r3, r3, #1
 8000fb6:	469a      	mov	sl, r3
 8000fb8:	9b03      	ldr	r3, [sp, #12]
 8000fba:	4699      	mov	r9, r3
 8000fbc:	465b      	mov	r3, fp
 8000fbe:	1c58      	adds	r0, r3, #1
 8000fc0:	2380      	movs	r3, #128	@ 0x80
 8000fc2:	00db      	lsls	r3, r3, #3
 8000fc4:	445b      	add	r3, fp
 8000fc6:	2b00      	cmp	r3, #0
 8000fc8:	dc00      	bgt.n	8000fcc <__aeabi_dmul+0x13c>
 8000fca:	e1b1      	b.n	8001330 <__aeabi_dmul+0x4a0>
 8000fcc:	4642      	mov	r2, r8
 8000fce:	0752      	lsls	r2, r2, #29
 8000fd0:	d00b      	beq.n	8000fea <__aeabi_dmul+0x15a>
 8000fd2:	220f      	movs	r2, #15
 8000fd4:	4641      	mov	r1, r8
 8000fd6:	400a      	ands	r2, r1
 8000fd8:	2a04      	cmp	r2, #4
 8000fda:	d006      	beq.n	8000fea <__aeabi_dmul+0x15a>
 8000fdc:	4642      	mov	r2, r8
 8000fde:	1d11      	adds	r1, r2, #4
 8000fe0:	4541      	cmp	r1, r8
 8000fe2:	4192      	sbcs	r2, r2
 8000fe4:	4688      	mov	r8, r1
 8000fe6:	4252      	negs	r2, r2
 8000fe8:	4492      	add	sl, r2
 8000fea:	4652      	mov	r2, sl
 8000fec:	01d2      	lsls	r2, r2, #7
 8000fee:	d506      	bpl.n	8000ffe <__aeabi_dmul+0x16e>
 8000ff0:	4652      	mov	r2, sl
 8000ff2:	4b80      	ldr	r3, [pc, #512]	@ (80011f4 <__aeabi_dmul+0x364>)
 8000ff4:	401a      	ands	r2, r3
 8000ff6:	2380      	movs	r3, #128	@ 0x80
 8000ff8:	4692      	mov	sl, r2
 8000ffa:	00db      	lsls	r3, r3, #3
 8000ffc:	18c3      	adds	r3, r0, r3
 8000ffe:	4a7e      	ldr	r2, [pc, #504]	@ (80011f8 <__aeabi_dmul+0x368>)
 8001000:	4293      	cmp	r3, r2
 8001002:	dd00      	ble.n	8001006 <__aeabi_dmul+0x176>
 8001004:	e18f      	b.n	8001326 <__aeabi_dmul+0x496>
 8001006:	4642      	mov	r2, r8
 8001008:	08d1      	lsrs	r1, r2, #3
 800100a:	4652      	mov	r2, sl
 800100c:	0752      	lsls	r2, r2, #29
 800100e:	430a      	orrs	r2, r1
 8001010:	4651      	mov	r1, sl
 8001012:	055b      	lsls	r3, r3, #21
 8001014:	024c      	lsls	r4, r1, #9
 8001016:	0b24      	lsrs	r4, r4, #12
 8001018:	0d5b      	lsrs	r3, r3, #21
 800101a:	e797      	b.n	8000f4c <__aeabi_dmul+0xbc>
 800101c:	4b73      	ldr	r3, [pc, #460]	@ (80011ec <__aeabi_dmul+0x35c>)
 800101e:	4326      	orrs	r6, r4
 8001020:	469c      	mov	ip, r3
 8001022:	44e3      	add	fp, ip
 8001024:	2e00      	cmp	r6, #0
 8001026:	d100      	bne.n	800102a <__aeabi_dmul+0x19a>
 8001028:	e16f      	b.n	800130a <__aeabi_dmul+0x47a>
 800102a:	2303      	movs	r3, #3
 800102c:	4649      	mov	r1, r9
 800102e:	431d      	orrs	r5, r3
 8001030:	9b00      	ldr	r3, [sp, #0]
 8001032:	4059      	eors	r1, r3
 8001034:	b2cb      	uxtb	r3, r1
 8001036:	9303      	str	r3, [sp, #12]
 8001038:	2d0a      	cmp	r5, #10
 800103a:	dd00      	ble.n	800103e <__aeabi_dmul+0x1ae>
 800103c:	e133      	b.n	80012a6 <__aeabi_dmul+0x416>
 800103e:	2301      	movs	r3, #1
 8001040:	40ab      	lsls	r3, r5
 8001042:	001d      	movs	r5, r3
 8001044:	2303      	movs	r3, #3
 8001046:	9302      	str	r3, [sp, #8]
 8001048:	2288      	movs	r2, #136	@ 0x88
 800104a:	422a      	tst	r2, r5
 800104c:	d197      	bne.n	8000f7e <__aeabi_dmul+0xee>
 800104e:	4642      	mov	r2, r8
 8001050:	4643      	mov	r3, r8
 8001052:	0412      	lsls	r2, r2, #16
 8001054:	0c12      	lsrs	r2, r2, #16
 8001056:	0016      	movs	r6, r2
 8001058:	9801      	ldr	r0, [sp, #4]
 800105a:	0c1d      	lsrs	r5, r3, #16
 800105c:	0c03      	lsrs	r3, r0, #16
 800105e:	0400      	lsls	r0, r0, #16
 8001060:	0c00      	lsrs	r0, r0, #16
 8001062:	4346      	muls	r6, r0
 8001064:	46b4      	mov	ip, r6
 8001066:	001e      	movs	r6, r3
 8001068:	436e      	muls	r6, r5
 800106a:	9600      	str	r6, [sp, #0]
 800106c:	0016      	movs	r6, r2
 800106e:	0007      	movs	r7, r0
 8001070:	435e      	muls	r6, r3
 8001072:	4661      	mov	r1, ip
 8001074:	46b0      	mov	r8, r6
 8001076:	436f      	muls	r7, r5
 8001078:	0c0e      	lsrs	r6, r1, #16
 800107a:	44b8      	add	r8, r7
 800107c:	4446      	add	r6, r8
 800107e:	42b7      	cmp	r7, r6
 8001080:	d905      	bls.n	800108e <__aeabi_dmul+0x1fe>
 8001082:	2180      	movs	r1, #128	@ 0x80
 8001084:	0249      	lsls	r1, r1, #9
 8001086:	4688      	mov	r8, r1
 8001088:	9f00      	ldr	r7, [sp, #0]
 800108a:	4447      	add	r7, r8
 800108c:	9700      	str	r7, [sp, #0]
 800108e:	4661      	mov	r1, ip
 8001090:	0409      	lsls	r1, r1, #16
 8001092:	0c09      	lsrs	r1, r1, #16
 8001094:	0c37      	lsrs	r7, r6, #16
 8001096:	0436      	lsls	r6, r6, #16
 8001098:	468c      	mov	ip, r1
 800109a:	0031      	movs	r1, r6
 800109c:	4461      	add	r1, ip
 800109e:	9101      	str	r1, [sp, #4]
 80010a0:	0011      	movs	r1, r2
 80010a2:	0c26      	lsrs	r6, r4, #16
 80010a4:	0424      	lsls	r4, r4, #16
 80010a6:	0c24      	lsrs	r4, r4, #16
 80010a8:	4361      	muls	r1, r4
 80010aa:	468c      	mov	ip, r1
 80010ac:	0021      	movs	r1, r4
 80010ae:	4369      	muls	r1, r5
 80010b0:	4689      	mov	r9, r1
 80010b2:	4661      	mov	r1, ip
 80010b4:	0c09      	lsrs	r1, r1, #16
 80010b6:	4688      	mov	r8, r1
 80010b8:	4372      	muls	r2, r6
 80010ba:	444a      	add	r2, r9
 80010bc:	4442      	add	r2, r8
 80010be:	4375      	muls	r5, r6
 80010c0:	4591      	cmp	r9, r2
 80010c2:	d903      	bls.n	80010cc <__aeabi_dmul+0x23c>
 80010c4:	2180      	movs	r1, #128	@ 0x80
 80010c6:	0249      	lsls	r1, r1, #9
 80010c8:	4688      	mov	r8, r1
 80010ca:	4445      	add	r5, r8
 80010cc:	0c11      	lsrs	r1, r2, #16
 80010ce:	4688      	mov	r8, r1
 80010d0:	4661      	mov	r1, ip
 80010d2:	0409      	lsls	r1, r1, #16
 80010d4:	0c09      	lsrs	r1, r1, #16
 80010d6:	468c      	mov	ip, r1
 80010d8:	0412      	lsls	r2, r2, #16
 80010da:	4462      	add	r2, ip
 80010dc:	18b9      	adds	r1, r7, r2
 80010de:	9102      	str	r1, [sp, #8]
 80010e0:	4651      	mov	r1, sl
 80010e2:	0c09      	lsrs	r1, r1, #16
 80010e4:	468c      	mov	ip, r1
 80010e6:	4651      	mov	r1, sl
 80010e8:	040f      	lsls	r7, r1, #16
 80010ea:	0c3f      	lsrs	r7, r7, #16
 80010ec:	0039      	movs	r1, r7
 80010ee:	4341      	muls	r1, r0
 80010f0:	4445      	add	r5, r8
 80010f2:	4688      	mov	r8, r1
 80010f4:	4661      	mov	r1, ip
 80010f6:	4341      	muls	r1, r0
 80010f8:	468a      	mov	sl, r1
 80010fa:	4641      	mov	r1, r8
 80010fc:	4660      	mov	r0, ip
 80010fe:	0c09      	lsrs	r1, r1, #16
 8001100:	4689      	mov	r9, r1
 8001102:	4358      	muls	r0, r3
 8001104:	437b      	muls	r3, r7
 8001106:	4453      	add	r3, sl
 8001108:	444b      	add	r3, r9
 800110a:	459a      	cmp	sl, r3
 800110c:	d903      	bls.n	8001116 <__aeabi_dmul+0x286>
 800110e:	2180      	movs	r1, #128	@ 0x80
 8001110:	0249      	lsls	r1, r1, #9
 8001112:	4689      	mov	r9, r1
 8001114:	4448      	add	r0, r9
 8001116:	0c19      	lsrs	r1, r3, #16
 8001118:	4689      	mov	r9, r1
 800111a:	4641      	mov	r1, r8
 800111c:	0409      	lsls	r1, r1, #16
 800111e:	0c09      	lsrs	r1, r1, #16
 8001120:	4688      	mov	r8, r1
 8001122:	0039      	movs	r1, r7
 8001124:	4361      	muls	r1, r4
 8001126:	041b      	lsls	r3, r3, #16
 8001128:	4443      	add	r3, r8
 800112a:	4688      	mov	r8, r1
 800112c:	4661      	mov	r1, ip
 800112e:	434c      	muls	r4, r1
 8001130:	4371      	muls	r1, r6
 8001132:	468c      	mov	ip, r1
 8001134:	4641      	mov	r1, r8
 8001136:	4377      	muls	r7, r6
 8001138:	0c0e      	lsrs	r6, r1, #16
 800113a:	193f      	adds	r7, r7, r4
 800113c:	19f6      	adds	r6, r6, r7
 800113e:	4448      	add	r0, r9
 8001140:	42b4      	cmp	r4, r6
 8001142:	d903      	bls.n	800114c <__aeabi_dmul+0x2bc>
 8001144:	2180      	movs	r1, #128	@ 0x80
 8001146:	0249      	lsls	r1, r1, #9
 8001148:	4689      	mov	r9, r1
 800114a:	44cc      	add	ip, r9
 800114c:	9902      	ldr	r1, [sp, #8]
 800114e:	9f00      	ldr	r7, [sp, #0]
 8001150:	4689      	mov	r9, r1
 8001152:	0431      	lsls	r1, r6, #16
 8001154:	444f      	add	r7, r9
 8001156:	4689      	mov	r9, r1
 8001158:	4641      	mov	r1, r8
 800115a:	4297      	cmp	r7, r2
 800115c:	4192      	sbcs	r2, r2
 800115e:	040c      	lsls	r4, r1, #16
 8001160:	0c24      	lsrs	r4, r4, #16
 8001162:	444c      	add	r4, r9
 8001164:	18ff      	adds	r7, r7, r3
 8001166:	4252      	negs	r2, r2
 8001168:	1964      	adds	r4, r4, r5
 800116a:	18a1      	adds	r1, r4, r2
 800116c:	429f      	cmp	r7, r3
 800116e:	419b      	sbcs	r3, r3
 8001170:	4688      	mov	r8, r1
 8001172:	4682      	mov	sl, r0
 8001174:	425b      	negs	r3, r3
 8001176:	4699      	mov	r9, r3
 8001178:	4590      	cmp	r8, r2
 800117a:	4192      	sbcs	r2, r2
 800117c:	42ac      	cmp	r4, r5
 800117e:	41a4      	sbcs	r4, r4
 8001180:	44c2      	add	sl, r8
 8001182:	44d1      	add	r9, sl
 8001184:	4252      	negs	r2, r2
 8001186:	4264      	negs	r4, r4
 8001188:	4314      	orrs	r4, r2
 800118a:	4599      	cmp	r9, r3
 800118c:	419b      	sbcs	r3, r3
 800118e:	4582      	cmp	sl, r0
 8001190:	4192      	sbcs	r2, r2
 8001192:	425b      	negs	r3, r3
 8001194:	4252      	negs	r2, r2
 8001196:	4313      	orrs	r3, r2
 8001198:	464a      	mov	r2, r9
 800119a:	0c36      	lsrs	r6, r6, #16
 800119c:	19a4      	adds	r4, r4, r6
 800119e:	18e3      	adds	r3, r4, r3
 80011a0:	4463      	add	r3, ip
 80011a2:	025b      	lsls	r3, r3, #9
 80011a4:	0dd2      	lsrs	r2, r2, #23
 80011a6:	431a      	orrs	r2, r3
 80011a8:	9901      	ldr	r1, [sp, #4]
 80011aa:	4692      	mov	sl, r2
 80011ac:	027a      	lsls	r2, r7, #9
 80011ae:	430a      	orrs	r2, r1
 80011b0:	1e50      	subs	r0, r2, #1
 80011b2:	4182      	sbcs	r2, r0
 80011b4:	0dff      	lsrs	r7, r7, #23
 80011b6:	4317      	orrs	r7, r2
 80011b8:	464a      	mov	r2, r9
 80011ba:	0252      	lsls	r2, r2, #9
 80011bc:	4317      	orrs	r7, r2
 80011be:	46b8      	mov	r8, r7
 80011c0:	01db      	lsls	r3, r3, #7
 80011c2:	d500      	bpl.n	80011c6 <__aeabi_dmul+0x336>
 80011c4:	e6ed      	b.n	8000fa2 <__aeabi_dmul+0x112>
 80011c6:	4b0d      	ldr	r3, [pc, #52]	@ (80011fc <__aeabi_dmul+0x36c>)
 80011c8:	9a03      	ldr	r2, [sp, #12]
 80011ca:	445b      	add	r3, fp
 80011cc:	4691      	mov	r9, r2
 80011ce:	2b00      	cmp	r3, #0
 80011d0:	dc00      	bgt.n	80011d4 <__aeabi_dmul+0x344>
 80011d2:	e0ac      	b.n	800132e <__aeabi_dmul+0x49e>
 80011d4:	003a      	movs	r2, r7
 80011d6:	0752      	lsls	r2, r2, #29
 80011d8:	d100      	bne.n	80011dc <__aeabi_dmul+0x34c>
 80011da:	e710      	b.n	8000ffe <__aeabi_dmul+0x16e>
 80011dc:	220f      	movs	r2, #15
 80011de:	4658      	mov	r0, fp
 80011e0:	403a      	ands	r2, r7
 80011e2:	2a04      	cmp	r2, #4
 80011e4:	d000      	beq.n	80011e8 <__aeabi_dmul+0x358>
 80011e6:	e6f9      	b.n	8000fdc <__aeabi_dmul+0x14c>
 80011e8:	e709      	b.n	8000ffe <__aeabi_dmul+0x16e>
 80011ea:	46c0      	nop			@ (mov r8, r8)
 80011ec:	000007ff 	.word	0x000007ff
 80011f0:	fffffc01 	.word	0xfffffc01
 80011f4:	feffffff 	.word	0xfeffffff
 80011f8:	000007fe 	.word	0x000007fe
 80011fc:	000003ff 	.word	0x000003ff
 8001200:	0022      	movs	r2, r4
 8001202:	4332      	orrs	r2, r6
 8001204:	d06f      	beq.n	80012e6 <__aeabi_dmul+0x456>
 8001206:	2c00      	cmp	r4, #0
 8001208:	d100      	bne.n	800120c <__aeabi_dmul+0x37c>
 800120a:	e0c2      	b.n	8001392 <__aeabi_dmul+0x502>
 800120c:	0020      	movs	r0, r4
 800120e:	f000 fdbd 	bl	8001d8c <__clzsi2>
 8001212:	0002      	movs	r2, r0
 8001214:	0003      	movs	r3, r0
 8001216:	3a0b      	subs	r2, #11
 8001218:	201d      	movs	r0, #29
 800121a:	1a82      	subs	r2, r0, r2
 800121c:	0030      	movs	r0, r6
 800121e:	0019      	movs	r1, r3
 8001220:	40d0      	lsrs	r0, r2
 8001222:	3908      	subs	r1, #8
 8001224:	408c      	lsls	r4, r1
 8001226:	0002      	movs	r2, r0
 8001228:	4322      	orrs	r2, r4
 800122a:	0034      	movs	r4, r6
 800122c:	408c      	lsls	r4, r1
 800122e:	4659      	mov	r1, fp
 8001230:	1acb      	subs	r3, r1, r3
 8001232:	4986      	ldr	r1, [pc, #536]	@ (800144c <__aeabi_dmul+0x5bc>)
 8001234:	468b      	mov	fp, r1
 8001236:	449b      	add	fp, r3
 8001238:	2d0a      	cmp	r5, #10
 800123a:	dd00      	ble.n	800123e <__aeabi_dmul+0x3ae>
 800123c:	e6a4      	b.n	8000f88 <__aeabi_dmul+0xf8>
 800123e:	4649      	mov	r1, r9
 8001240:	9b00      	ldr	r3, [sp, #0]
 8001242:	9401      	str	r4, [sp, #4]
 8001244:	4059      	eors	r1, r3
 8001246:	b2cb      	uxtb	r3, r1
 8001248:	0014      	movs	r4, r2
 800124a:	2000      	movs	r0, #0
 800124c:	9303      	str	r3, [sp, #12]
 800124e:	2d02      	cmp	r5, #2
 8001250:	dd00      	ble.n	8001254 <__aeabi_dmul+0x3c4>
 8001252:	e667      	b.n	8000f24 <__aeabi_dmul+0x94>
 8001254:	e6fb      	b.n	800104e <__aeabi_dmul+0x1be>
 8001256:	4653      	mov	r3, sl
 8001258:	4303      	orrs	r3, r0
 800125a:	4698      	mov	r8, r3
 800125c:	d03c      	beq.n	80012d8 <__aeabi_dmul+0x448>
 800125e:	4653      	mov	r3, sl
 8001260:	2b00      	cmp	r3, #0
 8001262:	d100      	bne.n	8001266 <__aeabi_dmul+0x3d6>
 8001264:	e0a3      	b.n	80013ae <__aeabi_dmul+0x51e>
 8001266:	4650      	mov	r0, sl
 8001268:	f000 fd90 	bl	8001d8c <__clzsi2>
 800126c:	230b      	movs	r3, #11
 800126e:	425b      	negs	r3, r3
 8001270:	469c      	mov	ip, r3
 8001272:	0002      	movs	r2, r0
 8001274:	4484      	add	ip, r0
 8001276:	0011      	movs	r1, r2
 8001278:	4650      	mov	r0, sl
 800127a:	3908      	subs	r1, #8
 800127c:	4088      	lsls	r0, r1
 800127e:	231d      	movs	r3, #29
 8001280:	4680      	mov	r8, r0
 8001282:	4660      	mov	r0, ip
 8001284:	1a1b      	subs	r3, r3, r0
 8001286:	0020      	movs	r0, r4
 8001288:	40d8      	lsrs	r0, r3
 800128a:	0003      	movs	r3, r0
 800128c:	4640      	mov	r0, r8
 800128e:	4303      	orrs	r3, r0
 8001290:	469a      	mov	sl, r3
 8001292:	0023      	movs	r3, r4
 8001294:	408b      	lsls	r3, r1
 8001296:	4698      	mov	r8, r3
 8001298:	4b6c      	ldr	r3, [pc, #432]	@ (800144c <__aeabi_dmul+0x5bc>)
 800129a:	2500      	movs	r5, #0
 800129c:	1a9b      	subs	r3, r3, r2
 800129e:	469b      	mov	fp, r3
 80012a0:	2300      	movs	r3, #0
 80012a2:	9302      	str	r3, [sp, #8]
 80012a4:	e61a      	b.n	8000edc <__aeabi_dmul+0x4c>
 80012a6:	2d0f      	cmp	r5, #15
 80012a8:	d000      	beq.n	80012ac <__aeabi_dmul+0x41c>
 80012aa:	e0c9      	b.n	8001440 <__aeabi_dmul+0x5b0>
 80012ac:	2380      	movs	r3, #128	@ 0x80
 80012ae:	4652      	mov	r2, sl
 80012b0:	031b      	lsls	r3, r3, #12
 80012b2:	421a      	tst	r2, r3
 80012b4:	d002      	beq.n	80012bc <__aeabi_dmul+0x42c>
 80012b6:	421c      	tst	r4, r3
 80012b8:	d100      	bne.n	80012bc <__aeabi_dmul+0x42c>
 80012ba:	e092      	b.n	80013e2 <__aeabi_dmul+0x552>
 80012bc:	2480      	movs	r4, #128	@ 0x80
 80012be:	4653      	mov	r3, sl
 80012c0:	0324      	lsls	r4, r4, #12
 80012c2:	431c      	orrs	r4, r3
 80012c4:	0324      	lsls	r4, r4, #12
 80012c6:	4642      	mov	r2, r8
 80012c8:	0b24      	lsrs	r4, r4, #12
 80012ca:	e63e      	b.n	8000f4a <__aeabi_dmul+0xba>
 80012cc:	469b      	mov	fp, r3
 80012ce:	2303      	movs	r3, #3
 80012d0:	4680      	mov	r8, r0
 80012d2:	250c      	movs	r5, #12
 80012d4:	9302      	str	r3, [sp, #8]
 80012d6:	e601      	b.n	8000edc <__aeabi_dmul+0x4c>
 80012d8:	2300      	movs	r3, #0
 80012da:	469a      	mov	sl, r3
 80012dc:	469b      	mov	fp, r3
 80012de:	3301      	adds	r3, #1
 80012e0:	2504      	movs	r5, #4
 80012e2:	9302      	str	r3, [sp, #8]
 80012e4:	e5fa      	b.n	8000edc <__aeabi_dmul+0x4c>
 80012e6:	2101      	movs	r1, #1
 80012e8:	430d      	orrs	r5, r1
 80012ea:	2d0a      	cmp	r5, #10
 80012ec:	dd00      	ble.n	80012f0 <__aeabi_dmul+0x460>
 80012ee:	e64b      	b.n	8000f88 <__aeabi_dmul+0xf8>
 80012f0:	4649      	mov	r1, r9
 80012f2:	9800      	ldr	r0, [sp, #0]
 80012f4:	4041      	eors	r1, r0
 80012f6:	b2c9      	uxtb	r1, r1
 80012f8:	9103      	str	r1, [sp, #12]
 80012fa:	2d02      	cmp	r5, #2
 80012fc:	dc00      	bgt.n	8001300 <__aeabi_dmul+0x470>
 80012fe:	e096      	b.n	800142e <__aeabi_dmul+0x59e>
 8001300:	2300      	movs	r3, #0
 8001302:	2400      	movs	r4, #0
 8001304:	2001      	movs	r0, #1
 8001306:	9301      	str	r3, [sp, #4]
 8001308:	e60c      	b.n	8000f24 <__aeabi_dmul+0x94>
 800130a:	4649      	mov	r1, r9
 800130c:	2302      	movs	r3, #2
 800130e:	9a00      	ldr	r2, [sp, #0]
 8001310:	432b      	orrs	r3, r5
 8001312:	4051      	eors	r1, r2
 8001314:	b2ca      	uxtb	r2, r1
 8001316:	9203      	str	r2, [sp, #12]
 8001318:	2b0a      	cmp	r3, #10
 800131a:	dd00      	ble.n	800131e <__aeabi_dmul+0x48e>
 800131c:	e634      	b.n	8000f88 <__aeabi_dmul+0xf8>
 800131e:	2d00      	cmp	r5, #0
 8001320:	d157      	bne.n	80013d2 <__aeabi_dmul+0x542>
 8001322:	9b03      	ldr	r3, [sp, #12]
 8001324:	4699      	mov	r9, r3
 8001326:	2400      	movs	r4, #0
 8001328:	2200      	movs	r2, #0
 800132a:	4b49      	ldr	r3, [pc, #292]	@ (8001450 <__aeabi_dmul+0x5c0>)
 800132c:	e60e      	b.n	8000f4c <__aeabi_dmul+0xbc>
 800132e:	4658      	mov	r0, fp
 8001330:	2101      	movs	r1, #1
 8001332:	1ac9      	subs	r1, r1, r3
 8001334:	2938      	cmp	r1, #56	@ 0x38
 8001336:	dd00      	ble.n	800133a <__aeabi_dmul+0x4aa>
 8001338:	e62f      	b.n	8000f9a <__aeabi_dmul+0x10a>
 800133a:	291f      	cmp	r1, #31
 800133c:	dd56      	ble.n	80013ec <__aeabi_dmul+0x55c>
 800133e:	221f      	movs	r2, #31
 8001340:	4654      	mov	r4, sl
 8001342:	4252      	negs	r2, r2
 8001344:	1ad3      	subs	r3, r2, r3
 8001346:	40dc      	lsrs	r4, r3
 8001348:	2920      	cmp	r1, #32
 800134a:	d007      	beq.n	800135c <__aeabi_dmul+0x4cc>
 800134c:	4b41      	ldr	r3, [pc, #260]	@ (8001454 <__aeabi_dmul+0x5c4>)
 800134e:	4642      	mov	r2, r8
 8001350:	469c      	mov	ip, r3
 8001352:	4653      	mov	r3, sl
 8001354:	4460      	add	r0, ip
 8001356:	4083      	lsls	r3, r0
 8001358:	431a      	orrs	r2, r3
 800135a:	4690      	mov	r8, r2
 800135c:	4642      	mov	r2, r8
 800135e:	2107      	movs	r1, #7
 8001360:	1e53      	subs	r3, r2, #1
 8001362:	419a      	sbcs	r2, r3
 8001364:	000b      	movs	r3, r1
 8001366:	4322      	orrs	r2, r4
 8001368:	4013      	ands	r3, r2
 800136a:	2400      	movs	r4, #0
 800136c:	4211      	tst	r1, r2
 800136e:	d009      	beq.n	8001384 <__aeabi_dmul+0x4f4>
 8001370:	230f      	movs	r3, #15
 8001372:	4013      	ands	r3, r2
 8001374:	2b04      	cmp	r3, #4
 8001376:	d05d      	beq.n	8001434 <__aeabi_dmul+0x5a4>
 8001378:	1d11      	adds	r1, r2, #4
 800137a:	4291      	cmp	r1, r2
 800137c:	419b      	sbcs	r3, r3
 800137e:	000a      	movs	r2, r1
 8001380:	425b      	negs	r3, r3
 8001382:	075b      	lsls	r3, r3, #29
 8001384:	08d2      	lsrs	r2, r2, #3
 8001386:	431a      	orrs	r2, r3
 8001388:	2300      	movs	r3, #0
 800138a:	e5df      	b.n	8000f4c <__aeabi_dmul+0xbc>
 800138c:	9b03      	ldr	r3, [sp, #12]
 800138e:	4699      	mov	r9, r3
 8001390:	e5fa      	b.n	8000f88 <__aeabi_dmul+0xf8>
 8001392:	9801      	ldr	r0, [sp, #4]
 8001394:	f000 fcfa 	bl	8001d8c <__clzsi2>
 8001398:	0002      	movs	r2, r0
 800139a:	0003      	movs	r3, r0
 800139c:	3215      	adds	r2, #21
 800139e:	3320      	adds	r3, #32
 80013a0:	2a1c      	cmp	r2, #28
 80013a2:	dc00      	bgt.n	80013a6 <__aeabi_dmul+0x516>
 80013a4:	e738      	b.n	8001218 <__aeabi_dmul+0x388>
 80013a6:	9a01      	ldr	r2, [sp, #4]
 80013a8:	3808      	subs	r0, #8
 80013aa:	4082      	lsls	r2, r0
 80013ac:	e73f      	b.n	800122e <__aeabi_dmul+0x39e>
 80013ae:	f000 fced 	bl	8001d8c <__clzsi2>
 80013b2:	2315      	movs	r3, #21
 80013b4:	469c      	mov	ip, r3
 80013b6:	4484      	add	ip, r0
 80013b8:	0002      	movs	r2, r0
 80013ba:	4663      	mov	r3, ip
 80013bc:	3220      	adds	r2, #32
 80013be:	2b1c      	cmp	r3, #28
 80013c0:	dc00      	bgt.n	80013c4 <__aeabi_dmul+0x534>
 80013c2:	e758      	b.n	8001276 <__aeabi_dmul+0x3e6>
 80013c4:	2300      	movs	r3, #0
 80013c6:	4698      	mov	r8, r3
 80013c8:	0023      	movs	r3, r4
 80013ca:	3808      	subs	r0, #8
 80013cc:	4083      	lsls	r3, r0
 80013ce:	469a      	mov	sl, r3
 80013d0:	e762      	b.n	8001298 <__aeabi_dmul+0x408>
 80013d2:	001d      	movs	r5, r3
 80013d4:	2300      	movs	r3, #0
 80013d6:	2400      	movs	r4, #0
 80013d8:	2002      	movs	r0, #2
 80013da:	9301      	str	r3, [sp, #4]
 80013dc:	e5a2      	b.n	8000f24 <__aeabi_dmul+0x94>
 80013de:	9002      	str	r0, [sp, #8]
 80013e0:	e632      	b.n	8001048 <__aeabi_dmul+0x1b8>
 80013e2:	431c      	orrs	r4, r3
 80013e4:	9b00      	ldr	r3, [sp, #0]
 80013e6:	9a01      	ldr	r2, [sp, #4]
 80013e8:	4699      	mov	r9, r3
 80013ea:	e5ae      	b.n	8000f4a <__aeabi_dmul+0xba>
 80013ec:	4b1a      	ldr	r3, [pc, #104]	@ (8001458 <__aeabi_dmul+0x5c8>)
 80013ee:	4652      	mov	r2, sl
 80013f0:	18c3      	adds	r3, r0, r3
 80013f2:	4640      	mov	r0, r8
 80013f4:	409a      	lsls	r2, r3
 80013f6:	40c8      	lsrs	r0, r1
 80013f8:	4302      	orrs	r2, r0
 80013fa:	4640      	mov	r0, r8
 80013fc:	4098      	lsls	r0, r3
 80013fe:	0003      	movs	r3, r0
 8001400:	1e58      	subs	r0, r3, #1
 8001402:	4183      	sbcs	r3, r0
 8001404:	4654      	mov	r4, sl
 8001406:	431a      	orrs	r2, r3
 8001408:	40cc      	lsrs	r4, r1
 800140a:	0753      	lsls	r3, r2, #29
 800140c:	d009      	beq.n	8001422 <__aeabi_dmul+0x592>
 800140e:	230f      	movs	r3, #15
 8001410:	4013      	ands	r3, r2
 8001412:	2b04      	cmp	r3, #4
 8001414:	d005      	beq.n	8001422 <__aeabi_dmul+0x592>
 8001416:	1d13      	adds	r3, r2, #4
 8001418:	4293      	cmp	r3, r2
 800141a:	4192      	sbcs	r2, r2
 800141c:	4252      	negs	r2, r2
 800141e:	18a4      	adds	r4, r4, r2
 8001420:	001a      	movs	r2, r3
 8001422:	0223      	lsls	r3, r4, #8
 8001424:	d508      	bpl.n	8001438 <__aeabi_dmul+0x5a8>
 8001426:	2301      	movs	r3, #1
 8001428:	2400      	movs	r4, #0
 800142a:	2200      	movs	r2, #0
 800142c:	e58e      	b.n	8000f4c <__aeabi_dmul+0xbc>
 800142e:	4689      	mov	r9, r1
 8001430:	2400      	movs	r4, #0
 8001432:	e58b      	b.n	8000f4c <__aeabi_dmul+0xbc>
 8001434:	2300      	movs	r3, #0
 8001436:	e7a5      	b.n	8001384 <__aeabi_dmul+0x4f4>
 8001438:	0763      	lsls	r3, r4, #29
 800143a:	0264      	lsls	r4, r4, #9
 800143c:	0b24      	lsrs	r4, r4, #12
 800143e:	e7a1      	b.n	8001384 <__aeabi_dmul+0x4f4>
 8001440:	9b00      	ldr	r3, [sp, #0]
 8001442:	46a2      	mov	sl, r4
 8001444:	4699      	mov	r9, r3
 8001446:	9b01      	ldr	r3, [sp, #4]
 8001448:	4698      	mov	r8, r3
 800144a:	e737      	b.n	80012bc <__aeabi_dmul+0x42c>
 800144c:	fffffc0d 	.word	0xfffffc0d
 8001450:	000007ff 	.word	0x000007ff
 8001454:	0000043e 	.word	0x0000043e
 8001458:	0000041e 	.word	0x0000041e

0800145c <__aeabi_dsub>:
 800145c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800145e:	4657      	mov	r7, sl
 8001460:	464e      	mov	r6, r9
 8001462:	4645      	mov	r5, r8
 8001464:	46de      	mov	lr, fp
 8001466:	b5e0      	push	{r5, r6, r7, lr}
 8001468:	b083      	sub	sp, #12
 800146a:	9000      	str	r0, [sp, #0]
 800146c:	9101      	str	r1, [sp, #4]
 800146e:	030c      	lsls	r4, r1, #12
 8001470:	004d      	lsls	r5, r1, #1
 8001472:	0fce      	lsrs	r6, r1, #31
 8001474:	0a61      	lsrs	r1, r4, #9
 8001476:	9c00      	ldr	r4, [sp, #0]
 8001478:	005f      	lsls	r7, r3, #1
 800147a:	0f64      	lsrs	r4, r4, #29
 800147c:	430c      	orrs	r4, r1
 800147e:	9900      	ldr	r1, [sp, #0]
 8001480:	9200      	str	r2, [sp, #0]
 8001482:	9301      	str	r3, [sp, #4]
 8001484:	00c8      	lsls	r0, r1, #3
 8001486:	0319      	lsls	r1, r3, #12
 8001488:	0d7b      	lsrs	r3, r7, #21
 800148a:	4699      	mov	r9, r3
 800148c:	9b01      	ldr	r3, [sp, #4]
 800148e:	4fcc      	ldr	r7, [pc, #816]	@ (80017c0 <__aeabi_dsub+0x364>)
 8001490:	0fdb      	lsrs	r3, r3, #31
 8001492:	469c      	mov	ip, r3
 8001494:	0a4b      	lsrs	r3, r1, #9
 8001496:	9900      	ldr	r1, [sp, #0]
 8001498:	4680      	mov	r8, r0
 800149a:	0f49      	lsrs	r1, r1, #29
 800149c:	4319      	orrs	r1, r3
 800149e:	9b00      	ldr	r3, [sp, #0]
 80014a0:	468b      	mov	fp, r1
 80014a2:	00da      	lsls	r2, r3, #3
 80014a4:	4692      	mov	sl, r2
 80014a6:	0d6d      	lsrs	r5, r5, #21
 80014a8:	45b9      	cmp	r9, r7
 80014aa:	d100      	bne.n	80014ae <__aeabi_dsub+0x52>
 80014ac:	e0bf      	b.n	800162e <__aeabi_dsub+0x1d2>
 80014ae:	2301      	movs	r3, #1
 80014b0:	4661      	mov	r1, ip
 80014b2:	4059      	eors	r1, r3
 80014b4:	464b      	mov	r3, r9
 80014b6:	468c      	mov	ip, r1
 80014b8:	1aeb      	subs	r3, r5, r3
 80014ba:	428e      	cmp	r6, r1
 80014bc:	d075      	beq.n	80015aa <__aeabi_dsub+0x14e>
 80014be:	2b00      	cmp	r3, #0
 80014c0:	dc00      	bgt.n	80014c4 <__aeabi_dsub+0x68>
 80014c2:	e2a3      	b.n	8001a0c <__aeabi_dsub+0x5b0>
 80014c4:	4649      	mov	r1, r9
 80014c6:	2900      	cmp	r1, #0
 80014c8:	d100      	bne.n	80014cc <__aeabi_dsub+0x70>
 80014ca:	e0ce      	b.n	800166a <__aeabi_dsub+0x20e>
 80014cc:	42bd      	cmp	r5, r7
 80014ce:	d100      	bne.n	80014d2 <__aeabi_dsub+0x76>
 80014d0:	e200      	b.n	80018d4 <__aeabi_dsub+0x478>
 80014d2:	2701      	movs	r7, #1
 80014d4:	2b38      	cmp	r3, #56	@ 0x38
 80014d6:	dc19      	bgt.n	800150c <__aeabi_dsub+0xb0>
 80014d8:	2780      	movs	r7, #128	@ 0x80
 80014da:	4659      	mov	r1, fp
 80014dc:	043f      	lsls	r7, r7, #16
 80014de:	4339      	orrs	r1, r7
 80014e0:	468b      	mov	fp, r1
 80014e2:	2b1f      	cmp	r3, #31
 80014e4:	dd00      	ble.n	80014e8 <__aeabi_dsub+0x8c>
 80014e6:	e1fa      	b.n	80018de <__aeabi_dsub+0x482>
 80014e8:	2720      	movs	r7, #32
 80014ea:	1af9      	subs	r1, r7, r3
 80014ec:	468c      	mov	ip, r1
 80014ee:	4659      	mov	r1, fp
 80014f0:	4667      	mov	r7, ip
 80014f2:	40b9      	lsls	r1, r7
 80014f4:	000f      	movs	r7, r1
 80014f6:	0011      	movs	r1, r2
 80014f8:	40d9      	lsrs	r1, r3
 80014fa:	430f      	orrs	r7, r1
 80014fc:	4661      	mov	r1, ip
 80014fe:	408a      	lsls	r2, r1
 8001500:	1e51      	subs	r1, r2, #1
 8001502:	418a      	sbcs	r2, r1
 8001504:	4659      	mov	r1, fp
 8001506:	40d9      	lsrs	r1, r3
 8001508:	4317      	orrs	r7, r2
 800150a:	1a64      	subs	r4, r4, r1
 800150c:	1bc7      	subs	r7, r0, r7
 800150e:	42b8      	cmp	r0, r7
 8001510:	4180      	sbcs	r0, r0
 8001512:	4240      	negs	r0, r0
 8001514:	1a24      	subs	r4, r4, r0
 8001516:	0223      	lsls	r3, r4, #8
 8001518:	d400      	bmi.n	800151c <__aeabi_dsub+0xc0>
 800151a:	e140      	b.n	800179e <__aeabi_dsub+0x342>
 800151c:	0264      	lsls	r4, r4, #9
 800151e:	0a64      	lsrs	r4, r4, #9
 8001520:	2c00      	cmp	r4, #0
 8001522:	d100      	bne.n	8001526 <__aeabi_dsub+0xca>
 8001524:	e154      	b.n	80017d0 <__aeabi_dsub+0x374>
 8001526:	0020      	movs	r0, r4
 8001528:	f000 fc30 	bl	8001d8c <__clzsi2>
 800152c:	0003      	movs	r3, r0
 800152e:	3b08      	subs	r3, #8
 8001530:	2120      	movs	r1, #32
 8001532:	0038      	movs	r0, r7
 8001534:	1aca      	subs	r2, r1, r3
 8001536:	40d0      	lsrs	r0, r2
 8001538:	409c      	lsls	r4, r3
 800153a:	0002      	movs	r2, r0
 800153c:	409f      	lsls	r7, r3
 800153e:	4322      	orrs	r2, r4
 8001540:	429d      	cmp	r5, r3
 8001542:	dd00      	ble.n	8001546 <__aeabi_dsub+0xea>
 8001544:	e1a6      	b.n	8001894 <__aeabi_dsub+0x438>
 8001546:	1b58      	subs	r0, r3, r5
 8001548:	3001      	adds	r0, #1
 800154a:	1a09      	subs	r1, r1, r0
 800154c:	003c      	movs	r4, r7
 800154e:	408f      	lsls	r7, r1
 8001550:	40c4      	lsrs	r4, r0
 8001552:	1e7b      	subs	r3, r7, #1
 8001554:	419f      	sbcs	r7, r3
 8001556:	0013      	movs	r3, r2
 8001558:	408b      	lsls	r3, r1
 800155a:	4327      	orrs	r7, r4
 800155c:	431f      	orrs	r7, r3
 800155e:	40c2      	lsrs	r2, r0
 8001560:	003b      	movs	r3, r7
 8001562:	0014      	movs	r4, r2
 8001564:	2500      	movs	r5, #0
 8001566:	4313      	orrs	r3, r2
 8001568:	d100      	bne.n	800156c <__aeabi_dsub+0x110>
 800156a:	e1f7      	b.n	800195c <__aeabi_dsub+0x500>
 800156c:	077b      	lsls	r3, r7, #29
 800156e:	d100      	bne.n	8001572 <__aeabi_dsub+0x116>
 8001570:	e377      	b.n	8001c62 <__aeabi_dsub+0x806>
 8001572:	230f      	movs	r3, #15
 8001574:	0038      	movs	r0, r7
 8001576:	403b      	ands	r3, r7
 8001578:	2b04      	cmp	r3, #4
 800157a:	d004      	beq.n	8001586 <__aeabi_dsub+0x12a>
 800157c:	1d38      	adds	r0, r7, #4
 800157e:	42b8      	cmp	r0, r7
 8001580:	41bf      	sbcs	r7, r7
 8001582:	427f      	negs	r7, r7
 8001584:	19e4      	adds	r4, r4, r7
 8001586:	0223      	lsls	r3, r4, #8
 8001588:	d400      	bmi.n	800158c <__aeabi_dsub+0x130>
 800158a:	e368      	b.n	8001c5e <__aeabi_dsub+0x802>
 800158c:	4b8c      	ldr	r3, [pc, #560]	@ (80017c0 <__aeabi_dsub+0x364>)
 800158e:	3501      	adds	r5, #1
 8001590:	429d      	cmp	r5, r3
 8001592:	d100      	bne.n	8001596 <__aeabi_dsub+0x13a>
 8001594:	e0f4      	b.n	8001780 <__aeabi_dsub+0x324>
 8001596:	4b8b      	ldr	r3, [pc, #556]	@ (80017c4 <__aeabi_dsub+0x368>)
 8001598:	056d      	lsls	r5, r5, #21
 800159a:	401c      	ands	r4, r3
 800159c:	0d6d      	lsrs	r5, r5, #21
 800159e:	0767      	lsls	r7, r4, #29
 80015a0:	08c0      	lsrs	r0, r0, #3
 80015a2:	0264      	lsls	r4, r4, #9
 80015a4:	4307      	orrs	r7, r0
 80015a6:	0b24      	lsrs	r4, r4, #12
 80015a8:	e0ec      	b.n	8001784 <__aeabi_dsub+0x328>
 80015aa:	2b00      	cmp	r3, #0
 80015ac:	dc00      	bgt.n	80015b0 <__aeabi_dsub+0x154>
 80015ae:	e329      	b.n	8001c04 <__aeabi_dsub+0x7a8>
 80015b0:	4649      	mov	r1, r9
 80015b2:	2900      	cmp	r1, #0
 80015b4:	d000      	beq.n	80015b8 <__aeabi_dsub+0x15c>
 80015b6:	e0d6      	b.n	8001766 <__aeabi_dsub+0x30a>
 80015b8:	4659      	mov	r1, fp
 80015ba:	4311      	orrs	r1, r2
 80015bc:	d100      	bne.n	80015c0 <__aeabi_dsub+0x164>
 80015be:	e12e      	b.n	800181e <__aeabi_dsub+0x3c2>
 80015c0:	1e59      	subs	r1, r3, #1
 80015c2:	2b01      	cmp	r3, #1
 80015c4:	d100      	bne.n	80015c8 <__aeabi_dsub+0x16c>
 80015c6:	e1e6      	b.n	8001996 <__aeabi_dsub+0x53a>
 80015c8:	42bb      	cmp	r3, r7
 80015ca:	d100      	bne.n	80015ce <__aeabi_dsub+0x172>
 80015cc:	e182      	b.n	80018d4 <__aeabi_dsub+0x478>
 80015ce:	2701      	movs	r7, #1
 80015d0:	000b      	movs	r3, r1
 80015d2:	2938      	cmp	r1, #56	@ 0x38
 80015d4:	dc14      	bgt.n	8001600 <__aeabi_dsub+0x1a4>
 80015d6:	2b1f      	cmp	r3, #31
 80015d8:	dd00      	ble.n	80015dc <__aeabi_dsub+0x180>
 80015da:	e23c      	b.n	8001a56 <__aeabi_dsub+0x5fa>
 80015dc:	2720      	movs	r7, #32
 80015de:	1af9      	subs	r1, r7, r3
 80015e0:	468c      	mov	ip, r1
 80015e2:	4659      	mov	r1, fp
 80015e4:	4667      	mov	r7, ip
 80015e6:	40b9      	lsls	r1, r7
 80015e8:	000f      	movs	r7, r1
 80015ea:	0011      	movs	r1, r2
 80015ec:	40d9      	lsrs	r1, r3
 80015ee:	430f      	orrs	r7, r1
 80015f0:	4661      	mov	r1, ip
 80015f2:	408a      	lsls	r2, r1
 80015f4:	1e51      	subs	r1, r2, #1
 80015f6:	418a      	sbcs	r2, r1
 80015f8:	4659      	mov	r1, fp
 80015fa:	40d9      	lsrs	r1, r3
 80015fc:	4317      	orrs	r7, r2
 80015fe:	1864      	adds	r4, r4, r1
 8001600:	183f      	adds	r7, r7, r0
 8001602:	4287      	cmp	r7, r0
 8001604:	4180      	sbcs	r0, r0
 8001606:	4240      	negs	r0, r0
 8001608:	1824      	adds	r4, r4, r0
 800160a:	0223      	lsls	r3, r4, #8
 800160c:	d400      	bmi.n	8001610 <__aeabi_dsub+0x1b4>
 800160e:	e0c6      	b.n	800179e <__aeabi_dsub+0x342>
 8001610:	4b6b      	ldr	r3, [pc, #428]	@ (80017c0 <__aeabi_dsub+0x364>)
 8001612:	3501      	adds	r5, #1
 8001614:	429d      	cmp	r5, r3
 8001616:	d100      	bne.n	800161a <__aeabi_dsub+0x1be>
 8001618:	e0b2      	b.n	8001780 <__aeabi_dsub+0x324>
 800161a:	2101      	movs	r1, #1
 800161c:	4b69      	ldr	r3, [pc, #420]	@ (80017c4 <__aeabi_dsub+0x368>)
 800161e:	087a      	lsrs	r2, r7, #1
 8001620:	401c      	ands	r4, r3
 8001622:	4039      	ands	r1, r7
 8001624:	430a      	orrs	r2, r1
 8001626:	07e7      	lsls	r7, r4, #31
 8001628:	4317      	orrs	r7, r2
 800162a:	0864      	lsrs	r4, r4, #1
 800162c:	e79e      	b.n	800156c <__aeabi_dsub+0x110>
 800162e:	4b66      	ldr	r3, [pc, #408]	@ (80017c8 <__aeabi_dsub+0x36c>)
 8001630:	4311      	orrs	r1, r2
 8001632:	468a      	mov	sl, r1
 8001634:	18eb      	adds	r3, r5, r3
 8001636:	2900      	cmp	r1, #0
 8001638:	d028      	beq.n	800168c <__aeabi_dsub+0x230>
 800163a:	4566      	cmp	r6, ip
 800163c:	d02c      	beq.n	8001698 <__aeabi_dsub+0x23c>
 800163e:	2b00      	cmp	r3, #0
 8001640:	d05b      	beq.n	80016fa <__aeabi_dsub+0x29e>
 8001642:	2d00      	cmp	r5, #0
 8001644:	d100      	bne.n	8001648 <__aeabi_dsub+0x1ec>
 8001646:	e12c      	b.n	80018a2 <__aeabi_dsub+0x446>
 8001648:	465b      	mov	r3, fp
 800164a:	4666      	mov	r6, ip
 800164c:	075f      	lsls	r7, r3, #29
 800164e:	08d2      	lsrs	r2, r2, #3
 8001650:	4317      	orrs	r7, r2
 8001652:	08dd      	lsrs	r5, r3, #3
 8001654:	003b      	movs	r3, r7
 8001656:	432b      	orrs	r3, r5
 8001658:	d100      	bne.n	800165c <__aeabi_dsub+0x200>
 800165a:	e0e2      	b.n	8001822 <__aeabi_dsub+0x3c6>
 800165c:	2480      	movs	r4, #128	@ 0x80
 800165e:	0324      	lsls	r4, r4, #12
 8001660:	432c      	orrs	r4, r5
 8001662:	0324      	lsls	r4, r4, #12
 8001664:	4d56      	ldr	r5, [pc, #344]	@ (80017c0 <__aeabi_dsub+0x364>)
 8001666:	0b24      	lsrs	r4, r4, #12
 8001668:	e08c      	b.n	8001784 <__aeabi_dsub+0x328>
 800166a:	4659      	mov	r1, fp
 800166c:	4311      	orrs	r1, r2
 800166e:	d100      	bne.n	8001672 <__aeabi_dsub+0x216>
 8001670:	e0d5      	b.n	800181e <__aeabi_dsub+0x3c2>
 8001672:	1e59      	subs	r1, r3, #1
 8001674:	2b01      	cmp	r3, #1
 8001676:	d100      	bne.n	800167a <__aeabi_dsub+0x21e>
 8001678:	e1b9      	b.n	80019ee <__aeabi_dsub+0x592>
 800167a:	42bb      	cmp	r3, r7
 800167c:	d100      	bne.n	8001680 <__aeabi_dsub+0x224>
 800167e:	e1b1      	b.n	80019e4 <__aeabi_dsub+0x588>
 8001680:	2701      	movs	r7, #1
 8001682:	000b      	movs	r3, r1
 8001684:	2938      	cmp	r1, #56	@ 0x38
 8001686:	dd00      	ble.n	800168a <__aeabi_dsub+0x22e>
 8001688:	e740      	b.n	800150c <__aeabi_dsub+0xb0>
 800168a:	e72a      	b.n	80014e2 <__aeabi_dsub+0x86>
 800168c:	4661      	mov	r1, ip
 800168e:	2701      	movs	r7, #1
 8001690:	4079      	eors	r1, r7
 8001692:	468c      	mov	ip, r1
 8001694:	4566      	cmp	r6, ip
 8001696:	d1d2      	bne.n	800163e <__aeabi_dsub+0x1e2>
 8001698:	2b00      	cmp	r3, #0
 800169a:	d100      	bne.n	800169e <__aeabi_dsub+0x242>
 800169c:	e0c5      	b.n	800182a <__aeabi_dsub+0x3ce>
 800169e:	2d00      	cmp	r5, #0
 80016a0:	d000      	beq.n	80016a4 <__aeabi_dsub+0x248>
 80016a2:	e155      	b.n	8001950 <__aeabi_dsub+0x4f4>
 80016a4:	464b      	mov	r3, r9
 80016a6:	0025      	movs	r5, r4
 80016a8:	4305      	orrs	r5, r0
 80016aa:	d100      	bne.n	80016ae <__aeabi_dsub+0x252>
 80016ac:	e212      	b.n	8001ad4 <__aeabi_dsub+0x678>
 80016ae:	1e59      	subs	r1, r3, #1
 80016b0:	468c      	mov	ip, r1
 80016b2:	2b01      	cmp	r3, #1
 80016b4:	d100      	bne.n	80016b8 <__aeabi_dsub+0x25c>
 80016b6:	e249      	b.n	8001b4c <__aeabi_dsub+0x6f0>
 80016b8:	4d41      	ldr	r5, [pc, #260]	@ (80017c0 <__aeabi_dsub+0x364>)
 80016ba:	42ab      	cmp	r3, r5
 80016bc:	d100      	bne.n	80016c0 <__aeabi_dsub+0x264>
 80016be:	e28f      	b.n	8001be0 <__aeabi_dsub+0x784>
 80016c0:	2701      	movs	r7, #1
 80016c2:	2938      	cmp	r1, #56	@ 0x38
 80016c4:	dc11      	bgt.n	80016ea <__aeabi_dsub+0x28e>
 80016c6:	4663      	mov	r3, ip
 80016c8:	2b1f      	cmp	r3, #31
 80016ca:	dd00      	ble.n	80016ce <__aeabi_dsub+0x272>
 80016cc:	e25b      	b.n	8001b86 <__aeabi_dsub+0x72a>
 80016ce:	4661      	mov	r1, ip
 80016d0:	2320      	movs	r3, #32
 80016d2:	0027      	movs	r7, r4
 80016d4:	1a5b      	subs	r3, r3, r1
 80016d6:	0005      	movs	r5, r0
 80016d8:	4098      	lsls	r0, r3
 80016da:	409f      	lsls	r7, r3
 80016dc:	40cd      	lsrs	r5, r1
 80016de:	1e43      	subs	r3, r0, #1
 80016e0:	4198      	sbcs	r0, r3
 80016e2:	40cc      	lsrs	r4, r1
 80016e4:	432f      	orrs	r7, r5
 80016e6:	4307      	orrs	r7, r0
 80016e8:	44a3      	add	fp, r4
 80016ea:	18bf      	adds	r7, r7, r2
 80016ec:	4297      	cmp	r7, r2
 80016ee:	4192      	sbcs	r2, r2
 80016f0:	4252      	negs	r2, r2
 80016f2:	445a      	add	r2, fp
 80016f4:	0014      	movs	r4, r2
 80016f6:	464d      	mov	r5, r9
 80016f8:	e787      	b.n	800160a <__aeabi_dsub+0x1ae>
 80016fa:	4f34      	ldr	r7, [pc, #208]	@ (80017cc <__aeabi_dsub+0x370>)
 80016fc:	1c6b      	adds	r3, r5, #1
 80016fe:	423b      	tst	r3, r7
 8001700:	d000      	beq.n	8001704 <__aeabi_dsub+0x2a8>
 8001702:	e0b6      	b.n	8001872 <__aeabi_dsub+0x416>
 8001704:	4659      	mov	r1, fp
 8001706:	0023      	movs	r3, r4
 8001708:	4311      	orrs	r1, r2
 800170a:	000f      	movs	r7, r1
 800170c:	4303      	orrs	r3, r0
 800170e:	2d00      	cmp	r5, #0
 8001710:	d000      	beq.n	8001714 <__aeabi_dsub+0x2b8>
 8001712:	e126      	b.n	8001962 <__aeabi_dsub+0x506>
 8001714:	2b00      	cmp	r3, #0
 8001716:	d100      	bne.n	800171a <__aeabi_dsub+0x2be>
 8001718:	e1c0      	b.n	8001a9c <__aeabi_dsub+0x640>
 800171a:	2900      	cmp	r1, #0
 800171c:	d100      	bne.n	8001720 <__aeabi_dsub+0x2c4>
 800171e:	e0a1      	b.n	8001864 <__aeabi_dsub+0x408>
 8001720:	1a83      	subs	r3, r0, r2
 8001722:	4698      	mov	r8, r3
 8001724:	465b      	mov	r3, fp
 8001726:	4540      	cmp	r0, r8
 8001728:	41ad      	sbcs	r5, r5
 800172a:	1ae3      	subs	r3, r4, r3
 800172c:	426d      	negs	r5, r5
 800172e:	1b5b      	subs	r3, r3, r5
 8001730:	2580      	movs	r5, #128	@ 0x80
 8001732:	042d      	lsls	r5, r5, #16
 8001734:	422b      	tst	r3, r5
 8001736:	d100      	bne.n	800173a <__aeabi_dsub+0x2de>
 8001738:	e14b      	b.n	80019d2 <__aeabi_dsub+0x576>
 800173a:	465b      	mov	r3, fp
 800173c:	1a10      	subs	r0, r2, r0
 800173e:	4282      	cmp	r2, r0
 8001740:	4192      	sbcs	r2, r2
 8001742:	1b1c      	subs	r4, r3, r4
 8001744:	0007      	movs	r7, r0
 8001746:	2601      	movs	r6, #1
 8001748:	4663      	mov	r3, ip
 800174a:	4252      	negs	r2, r2
 800174c:	1aa4      	subs	r4, r4, r2
 800174e:	4327      	orrs	r7, r4
 8001750:	401e      	ands	r6, r3
 8001752:	2f00      	cmp	r7, #0
 8001754:	d100      	bne.n	8001758 <__aeabi_dsub+0x2fc>
 8001756:	e142      	b.n	80019de <__aeabi_dsub+0x582>
 8001758:	422c      	tst	r4, r5
 800175a:	d100      	bne.n	800175e <__aeabi_dsub+0x302>
 800175c:	e26d      	b.n	8001c3a <__aeabi_dsub+0x7de>
 800175e:	4b19      	ldr	r3, [pc, #100]	@ (80017c4 <__aeabi_dsub+0x368>)
 8001760:	2501      	movs	r5, #1
 8001762:	401c      	ands	r4, r3
 8001764:	e71b      	b.n	800159e <__aeabi_dsub+0x142>
 8001766:	42bd      	cmp	r5, r7
 8001768:	d100      	bne.n	800176c <__aeabi_dsub+0x310>
 800176a:	e13b      	b.n	80019e4 <__aeabi_dsub+0x588>
 800176c:	2701      	movs	r7, #1
 800176e:	2b38      	cmp	r3, #56	@ 0x38
 8001770:	dd00      	ble.n	8001774 <__aeabi_dsub+0x318>
 8001772:	e745      	b.n	8001600 <__aeabi_dsub+0x1a4>
 8001774:	2780      	movs	r7, #128	@ 0x80
 8001776:	4659      	mov	r1, fp
 8001778:	043f      	lsls	r7, r7, #16
 800177a:	4339      	orrs	r1, r7
 800177c:	468b      	mov	fp, r1
 800177e:	e72a      	b.n	80015d6 <__aeabi_dsub+0x17a>
 8001780:	2400      	movs	r4, #0
 8001782:	2700      	movs	r7, #0
 8001784:	052d      	lsls	r5, r5, #20
 8001786:	4325      	orrs	r5, r4
 8001788:	07f6      	lsls	r6, r6, #31
 800178a:	4335      	orrs	r5, r6
 800178c:	0038      	movs	r0, r7
 800178e:	0029      	movs	r1, r5
 8001790:	b003      	add	sp, #12
 8001792:	bcf0      	pop	{r4, r5, r6, r7}
 8001794:	46bb      	mov	fp, r7
 8001796:	46b2      	mov	sl, r6
 8001798:	46a9      	mov	r9, r5
 800179a:	46a0      	mov	r8, r4
 800179c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800179e:	077b      	lsls	r3, r7, #29
 80017a0:	d004      	beq.n	80017ac <__aeabi_dsub+0x350>
 80017a2:	230f      	movs	r3, #15
 80017a4:	403b      	ands	r3, r7
 80017a6:	2b04      	cmp	r3, #4
 80017a8:	d000      	beq.n	80017ac <__aeabi_dsub+0x350>
 80017aa:	e6e7      	b.n	800157c <__aeabi_dsub+0x120>
 80017ac:	002b      	movs	r3, r5
 80017ae:	08f8      	lsrs	r0, r7, #3
 80017b0:	4a03      	ldr	r2, [pc, #12]	@ (80017c0 <__aeabi_dsub+0x364>)
 80017b2:	0767      	lsls	r7, r4, #29
 80017b4:	4307      	orrs	r7, r0
 80017b6:	08e5      	lsrs	r5, r4, #3
 80017b8:	4293      	cmp	r3, r2
 80017ba:	d100      	bne.n	80017be <__aeabi_dsub+0x362>
 80017bc:	e74a      	b.n	8001654 <__aeabi_dsub+0x1f8>
 80017be:	e0a5      	b.n	800190c <__aeabi_dsub+0x4b0>
 80017c0:	000007ff 	.word	0x000007ff
 80017c4:	ff7fffff 	.word	0xff7fffff
 80017c8:	fffff801 	.word	0xfffff801
 80017cc:	000007fe 	.word	0x000007fe
 80017d0:	0038      	movs	r0, r7
 80017d2:	f000 fadb 	bl	8001d8c <__clzsi2>
 80017d6:	0003      	movs	r3, r0
 80017d8:	3318      	adds	r3, #24
 80017da:	2b1f      	cmp	r3, #31
 80017dc:	dc00      	bgt.n	80017e0 <__aeabi_dsub+0x384>
 80017de:	e6a7      	b.n	8001530 <__aeabi_dsub+0xd4>
 80017e0:	003a      	movs	r2, r7
 80017e2:	3808      	subs	r0, #8
 80017e4:	4082      	lsls	r2, r0
 80017e6:	429d      	cmp	r5, r3
 80017e8:	dd00      	ble.n	80017ec <__aeabi_dsub+0x390>
 80017ea:	e08a      	b.n	8001902 <__aeabi_dsub+0x4a6>
 80017ec:	1b5b      	subs	r3, r3, r5
 80017ee:	1c58      	adds	r0, r3, #1
 80017f0:	281f      	cmp	r0, #31
 80017f2:	dc00      	bgt.n	80017f6 <__aeabi_dsub+0x39a>
 80017f4:	e1d8      	b.n	8001ba8 <__aeabi_dsub+0x74c>
 80017f6:	0017      	movs	r7, r2
 80017f8:	3b1f      	subs	r3, #31
 80017fa:	40df      	lsrs	r7, r3
 80017fc:	2820      	cmp	r0, #32
 80017fe:	d005      	beq.n	800180c <__aeabi_dsub+0x3b0>
 8001800:	2340      	movs	r3, #64	@ 0x40
 8001802:	1a1b      	subs	r3, r3, r0
 8001804:	409a      	lsls	r2, r3
 8001806:	1e53      	subs	r3, r2, #1
 8001808:	419a      	sbcs	r2, r3
 800180a:	4317      	orrs	r7, r2
 800180c:	2500      	movs	r5, #0
 800180e:	2f00      	cmp	r7, #0
 8001810:	d100      	bne.n	8001814 <__aeabi_dsub+0x3b8>
 8001812:	e0e5      	b.n	80019e0 <__aeabi_dsub+0x584>
 8001814:	077b      	lsls	r3, r7, #29
 8001816:	d000      	beq.n	800181a <__aeabi_dsub+0x3be>
 8001818:	e6ab      	b.n	8001572 <__aeabi_dsub+0x116>
 800181a:	002c      	movs	r4, r5
 800181c:	e7c6      	b.n	80017ac <__aeabi_dsub+0x350>
 800181e:	08c0      	lsrs	r0, r0, #3
 8001820:	e7c6      	b.n	80017b0 <__aeabi_dsub+0x354>
 8001822:	2700      	movs	r7, #0
 8001824:	2400      	movs	r4, #0
 8001826:	4dd1      	ldr	r5, [pc, #836]	@ (8001b6c <__aeabi_dsub+0x710>)
 8001828:	e7ac      	b.n	8001784 <__aeabi_dsub+0x328>
 800182a:	4fd1      	ldr	r7, [pc, #836]	@ (8001b70 <__aeabi_dsub+0x714>)
 800182c:	1c6b      	adds	r3, r5, #1
 800182e:	423b      	tst	r3, r7
 8001830:	d171      	bne.n	8001916 <__aeabi_dsub+0x4ba>
 8001832:	0023      	movs	r3, r4
 8001834:	4303      	orrs	r3, r0
 8001836:	2d00      	cmp	r5, #0
 8001838:	d000      	beq.n	800183c <__aeabi_dsub+0x3e0>
 800183a:	e14e      	b.n	8001ada <__aeabi_dsub+0x67e>
 800183c:	4657      	mov	r7, sl
 800183e:	2b00      	cmp	r3, #0
 8001840:	d100      	bne.n	8001844 <__aeabi_dsub+0x3e8>
 8001842:	e1b5      	b.n	8001bb0 <__aeabi_dsub+0x754>
 8001844:	2f00      	cmp	r7, #0
 8001846:	d00d      	beq.n	8001864 <__aeabi_dsub+0x408>
 8001848:	1883      	adds	r3, r0, r2
 800184a:	4283      	cmp	r3, r0
 800184c:	4180      	sbcs	r0, r0
 800184e:	445c      	add	r4, fp
 8001850:	4240      	negs	r0, r0
 8001852:	1824      	adds	r4, r4, r0
 8001854:	0222      	lsls	r2, r4, #8
 8001856:	d500      	bpl.n	800185a <__aeabi_dsub+0x3fe>
 8001858:	e1c8      	b.n	8001bec <__aeabi_dsub+0x790>
 800185a:	001f      	movs	r7, r3
 800185c:	4698      	mov	r8, r3
 800185e:	4327      	orrs	r7, r4
 8001860:	d100      	bne.n	8001864 <__aeabi_dsub+0x408>
 8001862:	e0bc      	b.n	80019de <__aeabi_dsub+0x582>
 8001864:	4643      	mov	r3, r8
 8001866:	0767      	lsls	r7, r4, #29
 8001868:	08db      	lsrs	r3, r3, #3
 800186a:	431f      	orrs	r7, r3
 800186c:	08e5      	lsrs	r5, r4, #3
 800186e:	2300      	movs	r3, #0
 8001870:	e04c      	b.n	800190c <__aeabi_dsub+0x4b0>
 8001872:	1a83      	subs	r3, r0, r2
 8001874:	4698      	mov	r8, r3
 8001876:	465b      	mov	r3, fp
 8001878:	4540      	cmp	r0, r8
 800187a:	41bf      	sbcs	r7, r7
 800187c:	1ae3      	subs	r3, r4, r3
 800187e:	427f      	negs	r7, r7
 8001880:	1bdb      	subs	r3, r3, r7
 8001882:	021f      	lsls	r7, r3, #8
 8001884:	d47c      	bmi.n	8001980 <__aeabi_dsub+0x524>
 8001886:	4647      	mov	r7, r8
 8001888:	431f      	orrs	r7, r3
 800188a:	d100      	bne.n	800188e <__aeabi_dsub+0x432>
 800188c:	e0a6      	b.n	80019dc <__aeabi_dsub+0x580>
 800188e:	001c      	movs	r4, r3
 8001890:	4647      	mov	r7, r8
 8001892:	e645      	b.n	8001520 <__aeabi_dsub+0xc4>
 8001894:	4cb7      	ldr	r4, [pc, #732]	@ (8001b74 <__aeabi_dsub+0x718>)
 8001896:	1aed      	subs	r5, r5, r3
 8001898:	4014      	ands	r4, r2
 800189a:	077b      	lsls	r3, r7, #29
 800189c:	d000      	beq.n	80018a0 <__aeabi_dsub+0x444>
 800189e:	e780      	b.n	80017a2 <__aeabi_dsub+0x346>
 80018a0:	e784      	b.n	80017ac <__aeabi_dsub+0x350>
 80018a2:	464b      	mov	r3, r9
 80018a4:	0025      	movs	r5, r4
 80018a6:	4305      	orrs	r5, r0
 80018a8:	d066      	beq.n	8001978 <__aeabi_dsub+0x51c>
 80018aa:	1e5f      	subs	r7, r3, #1
 80018ac:	2b01      	cmp	r3, #1
 80018ae:	d100      	bne.n	80018b2 <__aeabi_dsub+0x456>
 80018b0:	e0fc      	b.n	8001aac <__aeabi_dsub+0x650>
 80018b2:	4dae      	ldr	r5, [pc, #696]	@ (8001b6c <__aeabi_dsub+0x710>)
 80018b4:	42ab      	cmp	r3, r5
 80018b6:	d100      	bne.n	80018ba <__aeabi_dsub+0x45e>
 80018b8:	e15e      	b.n	8001b78 <__aeabi_dsub+0x71c>
 80018ba:	4666      	mov	r6, ip
 80018bc:	2f38      	cmp	r7, #56	@ 0x38
 80018be:	dc00      	bgt.n	80018c2 <__aeabi_dsub+0x466>
 80018c0:	e0b4      	b.n	8001a2c <__aeabi_dsub+0x5d0>
 80018c2:	2001      	movs	r0, #1
 80018c4:	1a17      	subs	r7, r2, r0
 80018c6:	42ba      	cmp	r2, r7
 80018c8:	4192      	sbcs	r2, r2
 80018ca:	465b      	mov	r3, fp
 80018cc:	4252      	negs	r2, r2
 80018ce:	464d      	mov	r5, r9
 80018d0:	1a9c      	subs	r4, r3, r2
 80018d2:	e620      	b.n	8001516 <__aeabi_dsub+0xba>
 80018d4:	0767      	lsls	r7, r4, #29
 80018d6:	08c0      	lsrs	r0, r0, #3
 80018d8:	4307      	orrs	r7, r0
 80018da:	08e5      	lsrs	r5, r4, #3
 80018dc:	e6ba      	b.n	8001654 <__aeabi_dsub+0x1f8>
 80018de:	001f      	movs	r7, r3
 80018e0:	4659      	mov	r1, fp
 80018e2:	3f20      	subs	r7, #32
 80018e4:	40f9      	lsrs	r1, r7
 80018e6:	000f      	movs	r7, r1
 80018e8:	2b20      	cmp	r3, #32
 80018ea:	d005      	beq.n	80018f8 <__aeabi_dsub+0x49c>
 80018ec:	2140      	movs	r1, #64	@ 0x40
 80018ee:	1acb      	subs	r3, r1, r3
 80018f0:	4659      	mov	r1, fp
 80018f2:	4099      	lsls	r1, r3
 80018f4:	430a      	orrs	r2, r1
 80018f6:	4692      	mov	sl, r2
 80018f8:	4653      	mov	r3, sl
 80018fa:	1e5a      	subs	r2, r3, #1
 80018fc:	4193      	sbcs	r3, r2
 80018fe:	431f      	orrs	r7, r3
 8001900:	e604      	b.n	800150c <__aeabi_dsub+0xb0>
 8001902:	1aeb      	subs	r3, r5, r3
 8001904:	4d9b      	ldr	r5, [pc, #620]	@ (8001b74 <__aeabi_dsub+0x718>)
 8001906:	4015      	ands	r5, r2
 8001908:	076f      	lsls	r7, r5, #29
 800190a:	08ed      	lsrs	r5, r5, #3
 800190c:	032c      	lsls	r4, r5, #12
 800190e:	055d      	lsls	r5, r3, #21
 8001910:	0b24      	lsrs	r4, r4, #12
 8001912:	0d6d      	lsrs	r5, r5, #21
 8001914:	e736      	b.n	8001784 <__aeabi_dsub+0x328>
 8001916:	4d95      	ldr	r5, [pc, #596]	@ (8001b6c <__aeabi_dsub+0x710>)
 8001918:	42ab      	cmp	r3, r5
 800191a:	d100      	bne.n	800191e <__aeabi_dsub+0x4c2>
 800191c:	e0d6      	b.n	8001acc <__aeabi_dsub+0x670>
 800191e:	1882      	adds	r2, r0, r2
 8001920:	0021      	movs	r1, r4
 8001922:	4282      	cmp	r2, r0
 8001924:	4180      	sbcs	r0, r0
 8001926:	4459      	add	r1, fp
 8001928:	4240      	negs	r0, r0
 800192a:	1808      	adds	r0, r1, r0
 800192c:	07c7      	lsls	r7, r0, #31
 800192e:	0852      	lsrs	r2, r2, #1
 8001930:	4317      	orrs	r7, r2
 8001932:	0844      	lsrs	r4, r0, #1
 8001934:	0752      	lsls	r2, r2, #29
 8001936:	d400      	bmi.n	800193a <__aeabi_dsub+0x4de>
 8001938:	e185      	b.n	8001c46 <__aeabi_dsub+0x7ea>
 800193a:	220f      	movs	r2, #15
 800193c:	001d      	movs	r5, r3
 800193e:	403a      	ands	r2, r7
 8001940:	2a04      	cmp	r2, #4
 8001942:	d000      	beq.n	8001946 <__aeabi_dsub+0x4ea>
 8001944:	e61a      	b.n	800157c <__aeabi_dsub+0x120>
 8001946:	08ff      	lsrs	r7, r7, #3
 8001948:	0764      	lsls	r4, r4, #29
 800194a:	4327      	orrs	r7, r4
 800194c:	0905      	lsrs	r5, r0, #4
 800194e:	e7dd      	b.n	800190c <__aeabi_dsub+0x4b0>
 8001950:	465b      	mov	r3, fp
 8001952:	08d2      	lsrs	r2, r2, #3
 8001954:	075f      	lsls	r7, r3, #29
 8001956:	4317      	orrs	r7, r2
 8001958:	08dd      	lsrs	r5, r3, #3
 800195a:	e67b      	b.n	8001654 <__aeabi_dsub+0x1f8>
 800195c:	2700      	movs	r7, #0
 800195e:	2400      	movs	r4, #0
 8001960:	e710      	b.n	8001784 <__aeabi_dsub+0x328>
 8001962:	2b00      	cmp	r3, #0
 8001964:	d000      	beq.n	8001968 <__aeabi_dsub+0x50c>
 8001966:	e0d6      	b.n	8001b16 <__aeabi_dsub+0x6ba>
 8001968:	2900      	cmp	r1, #0
 800196a:	d000      	beq.n	800196e <__aeabi_dsub+0x512>
 800196c:	e12f      	b.n	8001bce <__aeabi_dsub+0x772>
 800196e:	2480      	movs	r4, #128	@ 0x80
 8001970:	2600      	movs	r6, #0
 8001972:	4d7e      	ldr	r5, [pc, #504]	@ (8001b6c <__aeabi_dsub+0x710>)
 8001974:	0324      	lsls	r4, r4, #12
 8001976:	e705      	b.n	8001784 <__aeabi_dsub+0x328>
 8001978:	4666      	mov	r6, ip
 800197a:	465c      	mov	r4, fp
 800197c:	08d0      	lsrs	r0, r2, #3
 800197e:	e717      	b.n	80017b0 <__aeabi_dsub+0x354>
 8001980:	465b      	mov	r3, fp
 8001982:	1a17      	subs	r7, r2, r0
 8001984:	42ba      	cmp	r2, r7
 8001986:	4192      	sbcs	r2, r2
 8001988:	1b1c      	subs	r4, r3, r4
 800198a:	2601      	movs	r6, #1
 800198c:	4663      	mov	r3, ip
 800198e:	4252      	negs	r2, r2
 8001990:	1aa4      	subs	r4, r4, r2
 8001992:	401e      	ands	r6, r3
 8001994:	e5c4      	b.n	8001520 <__aeabi_dsub+0xc4>
 8001996:	1883      	adds	r3, r0, r2
 8001998:	4283      	cmp	r3, r0
 800199a:	4180      	sbcs	r0, r0
 800199c:	445c      	add	r4, fp
 800199e:	4240      	negs	r0, r0
 80019a0:	1825      	adds	r5, r4, r0
 80019a2:	022a      	lsls	r2, r5, #8
 80019a4:	d400      	bmi.n	80019a8 <__aeabi_dsub+0x54c>
 80019a6:	e0da      	b.n	8001b5e <__aeabi_dsub+0x702>
 80019a8:	4a72      	ldr	r2, [pc, #456]	@ (8001b74 <__aeabi_dsub+0x718>)
 80019aa:	085b      	lsrs	r3, r3, #1
 80019ac:	4015      	ands	r5, r2
 80019ae:	07ea      	lsls	r2, r5, #31
 80019b0:	431a      	orrs	r2, r3
 80019b2:	0869      	lsrs	r1, r5, #1
 80019b4:	075b      	lsls	r3, r3, #29
 80019b6:	d400      	bmi.n	80019ba <__aeabi_dsub+0x55e>
 80019b8:	e14a      	b.n	8001c50 <__aeabi_dsub+0x7f4>
 80019ba:	230f      	movs	r3, #15
 80019bc:	4013      	ands	r3, r2
 80019be:	2b04      	cmp	r3, #4
 80019c0:	d100      	bne.n	80019c4 <__aeabi_dsub+0x568>
 80019c2:	e0fc      	b.n	8001bbe <__aeabi_dsub+0x762>
 80019c4:	1d17      	adds	r7, r2, #4
 80019c6:	4297      	cmp	r7, r2
 80019c8:	41a4      	sbcs	r4, r4
 80019ca:	4264      	negs	r4, r4
 80019cc:	2502      	movs	r5, #2
 80019ce:	1864      	adds	r4, r4, r1
 80019d0:	e6ec      	b.n	80017ac <__aeabi_dsub+0x350>
 80019d2:	4647      	mov	r7, r8
 80019d4:	001c      	movs	r4, r3
 80019d6:	431f      	orrs	r7, r3
 80019d8:	d000      	beq.n	80019dc <__aeabi_dsub+0x580>
 80019da:	e743      	b.n	8001864 <__aeabi_dsub+0x408>
 80019dc:	2600      	movs	r6, #0
 80019de:	2500      	movs	r5, #0
 80019e0:	2400      	movs	r4, #0
 80019e2:	e6cf      	b.n	8001784 <__aeabi_dsub+0x328>
 80019e4:	08c0      	lsrs	r0, r0, #3
 80019e6:	0767      	lsls	r7, r4, #29
 80019e8:	4307      	orrs	r7, r0
 80019ea:	08e5      	lsrs	r5, r4, #3
 80019ec:	e632      	b.n	8001654 <__aeabi_dsub+0x1f8>
 80019ee:	1a87      	subs	r7, r0, r2
 80019f0:	465b      	mov	r3, fp
 80019f2:	42b8      	cmp	r0, r7
 80019f4:	4180      	sbcs	r0, r0
 80019f6:	1ae4      	subs	r4, r4, r3
 80019f8:	4240      	negs	r0, r0
 80019fa:	1a24      	subs	r4, r4, r0
 80019fc:	0223      	lsls	r3, r4, #8
 80019fe:	d428      	bmi.n	8001a52 <__aeabi_dsub+0x5f6>
 8001a00:	0763      	lsls	r3, r4, #29
 8001a02:	08ff      	lsrs	r7, r7, #3
 8001a04:	431f      	orrs	r7, r3
 8001a06:	08e5      	lsrs	r5, r4, #3
 8001a08:	2301      	movs	r3, #1
 8001a0a:	e77f      	b.n	800190c <__aeabi_dsub+0x4b0>
 8001a0c:	2b00      	cmp	r3, #0
 8001a0e:	d100      	bne.n	8001a12 <__aeabi_dsub+0x5b6>
 8001a10:	e673      	b.n	80016fa <__aeabi_dsub+0x29e>
 8001a12:	464b      	mov	r3, r9
 8001a14:	1b5f      	subs	r7, r3, r5
 8001a16:	003b      	movs	r3, r7
 8001a18:	2d00      	cmp	r5, #0
 8001a1a:	d100      	bne.n	8001a1e <__aeabi_dsub+0x5c2>
 8001a1c:	e742      	b.n	80018a4 <__aeabi_dsub+0x448>
 8001a1e:	2f38      	cmp	r7, #56	@ 0x38
 8001a20:	dd00      	ble.n	8001a24 <__aeabi_dsub+0x5c8>
 8001a22:	e0ec      	b.n	8001bfe <__aeabi_dsub+0x7a2>
 8001a24:	2380      	movs	r3, #128	@ 0x80
 8001a26:	000e      	movs	r6, r1
 8001a28:	041b      	lsls	r3, r3, #16
 8001a2a:	431c      	orrs	r4, r3
 8001a2c:	2f1f      	cmp	r7, #31
 8001a2e:	dc25      	bgt.n	8001a7c <__aeabi_dsub+0x620>
 8001a30:	2520      	movs	r5, #32
 8001a32:	0023      	movs	r3, r4
 8001a34:	1bed      	subs	r5, r5, r7
 8001a36:	0001      	movs	r1, r0
 8001a38:	40a8      	lsls	r0, r5
 8001a3a:	40ab      	lsls	r3, r5
 8001a3c:	40f9      	lsrs	r1, r7
 8001a3e:	1e45      	subs	r5, r0, #1
 8001a40:	41a8      	sbcs	r0, r5
 8001a42:	430b      	orrs	r3, r1
 8001a44:	40fc      	lsrs	r4, r7
 8001a46:	4318      	orrs	r0, r3
 8001a48:	465b      	mov	r3, fp
 8001a4a:	1b1b      	subs	r3, r3, r4
 8001a4c:	469b      	mov	fp, r3
 8001a4e:	e739      	b.n	80018c4 <__aeabi_dsub+0x468>
 8001a50:	4666      	mov	r6, ip
 8001a52:	2501      	movs	r5, #1
 8001a54:	e562      	b.n	800151c <__aeabi_dsub+0xc0>
 8001a56:	001f      	movs	r7, r3
 8001a58:	4659      	mov	r1, fp
 8001a5a:	3f20      	subs	r7, #32
 8001a5c:	40f9      	lsrs	r1, r7
 8001a5e:	468c      	mov	ip, r1
 8001a60:	2b20      	cmp	r3, #32
 8001a62:	d005      	beq.n	8001a70 <__aeabi_dsub+0x614>
 8001a64:	2740      	movs	r7, #64	@ 0x40
 8001a66:	4659      	mov	r1, fp
 8001a68:	1afb      	subs	r3, r7, r3
 8001a6a:	4099      	lsls	r1, r3
 8001a6c:	430a      	orrs	r2, r1
 8001a6e:	4692      	mov	sl, r2
 8001a70:	4657      	mov	r7, sl
 8001a72:	1e7b      	subs	r3, r7, #1
 8001a74:	419f      	sbcs	r7, r3
 8001a76:	4663      	mov	r3, ip
 8001a78:	431f      	orrs	r7, r3
 8001a7a:	e5c1      	b.n	8001600 <__aeabi_dsub+0x1a4>
 8001a7c:	003b      	movs	r3, r7
 8001a7e:	0025      	movs	r5, r4
 8001a80:	3b20      	subs	r3, #32
 8001a82:	40dd      	lsrs	r5, r3
 8001a84:	2f20      	cmp	r7, #32
 8001a86:	d004      	beq.n	8001a92 <__aeabi_dsub+0x636>
 8001a88:	2340      	movs	r3, #64	@ 0x40
 8001a8a:	1bdb      	subs	r3, r3, r7
 8001a8c:	409c      	lsls	r4, r3
 8001a8e:	4320      	orrs	r0, r4
 8001a90:	4680      	mov	r8, r0
 8001a92:	4640      	mov	r0, r8
 8001a94:	1e43      	subs	r3, r0, #1
 8001a96:	4198      	sbcs	r0, r3
 8001a98:	4328      	orrs	r0, r5
 8001a9a:	e713      	b.n	80018c4 <__aeabi_dsub+0x468>
 8001a9c:	2900      	cmp	r1, #0
 8001a9e:	d09d      	beq.n	80019dc <__aeabi_dsub+0x580>
 8001aa0:	2601      	movs	r6, #1
 8001aa2:	4663      	mov	r3, ip
 8001aa4:	465c      	mov	r4, fp
 8001aa6:	4690      	mov	r8, r2
 8001aa8:	401e      	ands	r6, r3
 8001aaa:	e6db      	b.n	8001864 <__aeabi_dsub+0x408>
 8001aac:	1a17      	subs	r7, r2, r0
 8001aae:	465b      	mov	r3, fp
 8001ab0:	42ba      	cmp	r2, r7
 8001ab2:	4192      	sbcs	r2, r2
 8001ab4:	1b1c      	subs	r4, r3, r4
 8001ab6:	4252      	negs	r2, r2
 8001ab8:	1aa4      	subs	r4, r4, r2
 8001aba:	0223      	lsls	r3, r4, #8
 8001abc:	d4c8      	bmi.n	8001a50 <__aeabi_dsub+0x5f4>
 8001abe:	0763      	lsls	r3, r4, #29
 8001ac0:	08ff      	lsrs	r7, r7, #3
 8001ac2:	431f      	orrs	r7, r3
 8001ac4:	4666      	mov	r6, ip
 8001ac6:	2301      	movs	r3, #1
 8001ac8:	08e5      	lsrs	r5, r4, #3
 8001aca:	e71f      	b.n	800190c <__aeabi_dsub+0x4b0>
 8001acc:	001d      	movs	r5, r3
 8001ace:	2400      	movs	r4, #0
 8001ad0:	2700      	movs	r7, #0
 8001ad2:	e657      	b.n	8001784 <__aeabi_dsub+0x328>
 8001ad4:	465c      	mov	r4, fp
 8001ad6:	08d0      	lsrs	r0, r2, #3
 8001ad8:	e66a      	b.n	80017b0 <__aeabi_dsub+0x354>
 8001ada:	2b00      	cmp	r3, #0
 8001adc:	d100      	bne.n	8001ae0 <__aeabi_dsub+0x684>
 8001ade:	e737      	b.n	8001950 <__aeabi_dsub+0x4f4>
 8001ae0:	4653      	mov	r3, sl
 8001ae2:	08c0      	lsrs	r0, r0, #3
 8001ae4:	0767      	lsls	r7, r4, #29
 8001ae6:	4307      	orrs	r7, r0
 8001ae8:	08e5      	lsrs	r5, r4, #3
 8001aea:	2b00      	cmp	r3, #0
 8001aec:	d100      	bne.n	8001af0 <__aeabi_dsub+0x694>
 8001aee:	e5b1      	b.n	8001654 <__aeabi_dsub+0x1f8>
 8001af0:	2380      	movs	r3, #128	@ 0x80
 8001af2:	031b      	lsls	r3, r3, #12
 8001af4:	421d      	tst	r5, r3
 8001af6:	d008      	beq.n	8001b0a <__aeabi_dsub+0x6ae>
 8001af8:	4659      	mov	r1, fp
 8001afa:	08c8      	lsrs	r0, r1, #3
 8001afc:	4218      	tst	r0, r3
 8001afe:	d104      	bne.n	8001b0a <__aeabi_dsub+0x6ae>
 8001b00:	08d2      	lsrs	r2, r2, #3
 8001b02:	0749      	lsls	r1, r1, #29
 8001b04:	430a      	orrs	r2, r1
 8001b06:	0017      	movs	r7, r2
 8001b08:	0005      	movs	r5, r0
 8001b0a:	0f7b      	lsrs	r3, r7, #29
 8001b0c:	00ff      	lsls	r7, r7, #3
 8001b0e:	08ff      	lsrs	r7, r7, #3
 8001b10:	075b      	lsls	r3, r3, #29
 8001b12:	431f      	orrs	r7, r3
 8001b14:	e59e      	b.n	8001654 <__aeabi_dsub+0x1f8>
 8001b16:	08c0      	lsrs	r0, r0, #3
 8001b18:	0763      	lsls	r3, r4, #29
 8001b1a:	4318      	orrs	r0, r3
 8001b1c:	08e5      	lsrs	r5, r4, #3
 8001b1e:	2900      	cmp	r1, #0
 8001b20:	d053      	beq.n	8001bca <__aeabi_dsub+0x76e>
 8001b22:	2380      	movs	r3, #128	@ 0x80
 8001b24:	031b      	lsls	r3, r3, #12
 8001b26:	421d      	tst	r5, r3
 8001b28:	d00a      	beq.n	8001b40 <__aeabi_dsub+0x6e4>
 8001b2a:	4659      	mov	r1, fp
 8001b2c:	08cc      	lsrs	r4, r1, #3
 8001b2e:	421c      	tst	r4, r3
 8001b30:	d106      	bne.n	8001b40 <__aeabi_dsub+0x6e4>
 8001b32:	2601      	movs	r6, #1
 8001b34:	4663      	mov	r3, ip
 8001b36:	0025      	movs	r5, r4
 8001b38:	08d0      	lsrs	r0, r2, #3
 8001b3a:	0749      	lsls	r1, r1, #29
 8001b3c:	4308      	orrs	r0, r1
 8001b3e:	401e      	ands	r6, r3
 8001b40:	0f47      	lsrs	r7, r0, #29
 8001b42:	00c0      	lsls	r0, r0, #3
 8001b44:	08c0      	lsrs	r0, r0, #3
 8001b46:	077f      	lsls	r7, r7, #29
 8001b48:	4307      	orrs	r7, r0
 8001b4a:	e583      	b.n	8001654 <__aeabi_dsub+0x1f8>
 8001b4c:	1883      	adds	r3, r0, r2
 8001b4e:	4293      	cmp	r3, r2
 8001b50:	4192      	sbcs	r2, r2
 8001b52:	445c      	add	r4, fp
 8001b54:	4252      	negs	r2, r2
 8001b56:	18a5      	adds	r5, r4, r2
 8001b58:	022a      	lsls	r2, r5, #8
 8001b5a:	d500      	bpl.n	8001b5e <__aeabi_dsub+0x702>
 8001b5c:	e724      	b.n	80019a8 <__aeabi_dsub+0x54c>
 8001b5e:	076f      	lsls	r7, r5, #29
 8001b60:	08db      	lsrs	r3, r3, #3
 8001b62:	431f      	orrs	r7, r3
 8001b64:	08ed      	lsrs	r5, r5, #3
 8001b66:	2301      	movs	r3, #1
 8001b68:	e6d0      	b.n	800190c <__aeabi_dsub+0x4b0>
 8001b6a:	46c0      	nop			@ (mov r8, r8)
 8001b6c:	000007ff 	.word	0x000007ff
 8001b70:	000007fe 	.word	0x000007fe
 8001b74:	ff7fffff 	.word	0xff7fffff
 8001b78:	465b      	mov	r3, fp
 8001b7a:	08d2      	lsrs	r2, r2, #3
 8001b7c:	075f      	lsls	r7, r3, #29
 8001b7e:	4666      	mov	r6, ip
 8001b80:	4317      	orrs	r7, r2
 8001b82:	08dd      	lsrs	r5, r3, #3
 8001b84:	e566      	b.n	8001654 <__aeabi_dsub+0x1f8>
 8001b86:	0025      	movs	r5, r4
 8001b88:	3b20      	subs	r3, #32
 8001b8a:	40dd      	lsrs	r5, r3
 8001b8c:	4663      	mov	r3, ip
 8001b8e:	2b20      	cmp	r3, #32
 8001b90:	d005      	beq.n	8001b9e <__aeabi_dsub+0x742>
 8001b92:	2340      	movs	r3, #64	@ 0x40
 8001b94:	4661      	mov	r1, ip
 8001b96:	1a5b      	subs	r3, r3, r1
 8001b98:	409c      	lsls	r4, r3
 8001b9a:	4320      	orrs	r0, r4
 8001b9c:	4680      	mov	r8, r0
 8001b9e:	4647      	mov	r7, r8
 8001ba0:	1e7b      	subs	r3, r7, #1
 8001ba2:	419f      	sbcs	r7, r3
 8001ba4:	432f      	orrs	r7, r5
 8001ba6:	e5a0      	b.n	80016ea <__aeabi_dsub+0x28e>
 8001ba8:	2120      	movs	r1, #32
 8001baa:	2700      	movs	r7, #0
 8001bac:	1a09      	subs	r1, r1, r0
 8001bae:	e4d2      	b.n	8001556 <__aeabi_dsub+0xfa>
 8001bb0:	2f00      	cmp	r7, #0
 8001bb2:	d100      	bne.n	8001bb6 <__aeabi_dsub+0x75a>
 8001bb4:	e713      	b.n	80019de <__aeabi_dsub+0x582>
 8001bb6:	465c      	mov	r4, fp
 8001bb8:	0017      	movs	r7, r2
 8001bba:	2500      	movs	r5, #0
 8001bbc:	e5f6      	b.n	80017ac <__aeabi_dsub+0x350>
 8001bbe:	08d7      	lsrs	r7, r2, #3
 8001bc0:	0749      	lsls	r1, r1, #29
 8001bc2:	2302      	movs	r3, #2
 8001bc4:	430f      	orrs	r7, r1
 8001bc6:	092d      	lsrs	r5, r5, #4
 8001bc8:	e6a0      	b.n	800190c <__aeabi_dsub+0x4b0>
 8001bca:	0007      	movs	r7, r0
 8001bcc:	e542      	b.n	8001654 <__aeabi_dsub+0x1f8>
 8001bce:	465b      	mov	r3, fp
 8001bd0:	2601      	movs	r6, #1
 8001bd2:	075f      	lsls	r7, r3, #29
 8001bd4:	08dd      	lsrs	r5, r3, #3
 8001bd6:	4663      	mov	r3, ip
 8001bd8:	08d2      	lsrs	r2, r2, #3
 8001bda:	4317      	orrs	r7, r2
 8001bdc:	401e      	ands	r6, r3
 8001bde:	e539      	b.n	8001654 <__aeabi_dsub+0x1f8>
 8001be0:	465b      	mov	r3, fp
 8001be2:	08d2      	lsrs	r2, r2, #3
 8001be4:	075f      	lsls	r7, r3, #29
 8001be6:	4317      	orrs	r7, r2
 8001be8:	08dd      	lsrs	r5, r3, #3
 8001bea:	e533      	b.n	8001654 <__aeabi_dsub+0x1f8>
 8001bec:	4a1e      	ldr	r2, [pc, #120]	@ (8001c68 <__aeabi_dsub+0x80c>)
 8001bee:	08db      	lsrs	r3, r3, #3
 8001bf0:	4022      	ands	r2, r4
 8001bf2:	0757      	lsls	r7, r2, #29
 8001bf4:	0252      	lsls	r2, r2, #9
 8001bf6:	2501      	movs	r5, #1
 8001bf8:	431f      	orrs	r7, r3
 8001bfa:	0b14      	lsrs	r4, r2, #12
 8001bfc:	e5c2      	b.n	8001784 <__aeabi_dsub+0x328>
 8001bfe:	000e      	movs	r6, r1
 8001c00:	2001      	movs	r0, #1
 8001c02:	e65f      	b.n	80018c4 <__aeabi_dsub+0x468>
 8001c04:	2b00      	cmp	r3, #0
 8001c06:	d00d      	beq.n	8001c24 <__aeabi_dsub+0x7c8>
 8001c08:	464b      	mov	r3, r9
 8001c0a:	1b5b      	subs	r3, r3, r5
 8001c0c:	469c      	mov	ip, r3
 8001c0e:	2d00      	cmp	r5, #0
 8001c10:	d100      	bne.n	8001c14 <__aeabi_dsub+0x7b8>
 8001c12:	e548      	b.n	80016a6 <__aeabi_dsub+0x24a>
 8001c14:	2701      	movs	r7, #1
 8001c16:	2b38      	cmp	r3, #56	@ 0x38
 8001c18:	dd00      	ble.n	8001c1c <__aeabi_dsub+0x7c0>
 8001c1a:	e566      	b.n	80016ea <__aeabi_dsub+0x28e>
 8001c1c:	2380      	movs	r3, #128	@ 0x80
 8001c1e:	041b      	lsls	r3, r3, #16
 8001c20:	431c      	orrs	r4, r3
 8001c22:	e550      	b.n	80016c6 <__aeabi_dsub+0x26a>
 8001c24:	1c6b      	adds	r3, r5, #1
 8001c26:	4d11      	ldr	r5, [pc, #68]	@ (8001c6c <__aeabi_dsub+0x810>)
 8001c28:	422b      	tst	r3, r5
 8001c2a:	d000      	beq.n	8001c2e <__aeabi_dsub+0x7d2>
 8001c2c:	e673      	b.n	8001916 <__aeabi_dsub+0x4ba>
 8001c2e:	4659      	mov	r1, fp
 8001c30:	0023      	movs	r3, r4
 8001c32:	4311      	orrs	r1, r2
 8001c34:	468a      	mov	sl, r1
 8001c36:	4303      	orrs	r3, r0
 8001c38:	e600      	b.n	800183c <__aeabi_dsub+0x3e0>
 8001c3a:	0767      	lsls	r7, r4, #29
 8001c3c:	08c0      	lsrs	r0, r0, #3
 8001c3e:	2300      	movs	r3, #0
 8001c40:	4307      	orrs	r7, r0
 8001c42:	08e5      	lsrs	r5, r4, #3
 8001c44:	e662      	b.n	800190c <__aeabi_dsub+0x4b0>
 8001c46:	0764      	lsls	r4, r4, #29
 8001c48:	08ff      	lsrs	r7, r7, #3
 8001c4a:	4327      	orrs	r7, r4
 8001c4c:	0905      	lsrs	r5, r0, #4
 8001c4e:	e65d      	b.n	800190c <__aeabi_dsub+0x4b0>
 8001c50:	08d2      	lsrs	r2, r2, #3
 8001c52:	0749      	lsls	r1, r1, #29
 8001c54:	4311      	orrs	r1, r2
 8001c56:	000f      	movs	r7, r1
 8001c58:	2302      	movs	r3, #2
 8001c5a:	092d      	lsrs	r5, r5, #4
 8001c5c:	e656      	b.n	800190c <__aeabi_dsub+0x4b0>
 8001c5e:	0007      	movs	r7, r0
 8001c60:	e5a4      	b.n	80017ac <__aeabi_dsub+0x350>
 8001c62:	0038      	movs	r0, r7
 8001c64:	e48f      	b.n	8001586 <__aeabi_dsub+0x12a>
 8001c66:	46c0      	nop			@ (mov r8, r8)
 8001c68:	ff7fffff 	.word	0xff7fffff
 8001c6c:	000007fe 	.word	0x000007fe

08001c70 <__aeabi_d2iz>:
 8001c70:	000b      	movs	r3, r1
 8001c72:	0002      	movs	r2, r0
 8001c74:	b570      	push	{r4, r5, r6, lr}
 8001c76:	4d16      	ldr	r5, [pc, #88]	@ (8001cd0 <__aeabi_d2iz+0x60>)
 8001c78:	030c      	lsls	r4, r1, #12
 8001c7a:	b082      	sub	sp, #8
 8001c7c:	0049      	lsls	r1, r1, #1
 8001c7e:	2000      	movs	r0, #0
 8001c80:	9200      	str	r2, [sp, #0]
 8001c82:	9301      	str	r3, [sp, #4]
 8001c84:	0b24      	lsrs	r4, r4, #12
 8001c86:	0d49      	lsrs	r1, r1, #21
 8001c88:	0fde      	lsrs	r6, r3, #31
 8001c8a:	42a9      	cmp	r1, r5
 8001c8c:	dd04      	ble.n	8001c98 <__aeabi_d2iz+0x28>
 8001c8e:	4811      	ldr	r0, [pc, #68]	@ (8001cd4 <__aeabi_d2iz+0x64>)
 8001c90:	4281      	cmp	r1, r0
 8001c92:	dd03      	ble.n	8001c9c <__aeabi_d2iz+0x2c>
 8001c94:	4b10      	ldr	r3, [pc, #64]	@ (8001cd8 <__aeabi_d2iz+0x68>)
 8001c96:	18f0      	adds	r0, r6, r3
 8001c98:	b002      	add	sp, #8
 8001c9a:	bd70      	pop	{r4, r5, r6, pc}
 8001c9c:	2080      	movs	r0, #128	@ 0x80
 8001c9e:	0340      	lsls	r0, r0, #13
 8001ca0:	4320      	orrs	r0, r4
 8001ca2:	4c0e      	ldr	r4, [pc, #56]	@ (8001cdc <__aeabi_d2iz+0x6c>)
 8001ca4:	1a64      	subs	r4, r4, r1
 8001ca6:	2c1f      	cmp	r4, #31
 8001ca8:	dd08      	ble.n	8001cbc <__aeabi_d2iz+0x4c>
 8001caa:	4b0d      	ldr	r3, [pc, #52]	@ (8001ce0 <__aeabi_d2iz+0x70>)
 8001cac:	1a5b      	subs	r3, r3, r1
 8001cae:	40d8      	lsrs	r0, r3
 8001cb0:	0003      	movs	r3, r0
 8001cb2:	4258      	negs	r0, r3
 8001cb4:	2e00      	cmp	r6, #0
 8001cb6:	d1ef      	bne.n	8001c98 <__aeabi_d2iz+0x28>
 8001cb8:	0018      	movs	r0, r3
 8001cba:	e7ed      	b.n	8001c98 <__aeabi_d2iz+0x28>
 8001cbc:	4b09      	ldr	r3, [pc, #36]	@ (8001ce4 <__aeabi_d2iz+0x74>)
 8001cbe:	9a00      	ldr	r2, [sp, #0]
 8001cc0:	469c      	mov	ip, r3
 8001cc2:	0003      	movs	r3, r0
 8001cc4:	4461      	add	r1, ip
 8001cc6:	408b      	lsls	r3, r1
 8001cc8:	40e2      	lsrs	r2, r4
 8001cca:	4313      	orrs	r3, r2
 8001ccc:	e7f1      	b.n	8001cb2 <__aeabi_d2iz+0x42>
 8001cce:	46c0      	nop			@ (mov r8, r8)
 8001cd0:	000003fe 	.word	0x000003fe
 8001cd4:	0000041d 	.word	0x0000041d
 8001cd8:	7fffffff 	.word	0x7fffffff
 8001cdc:	00000433 	.word	0x00000433
 8001ce0:	00000413 	.word	0x00000413
 8001ce4:	fffffbed 	.word	0xfffffbed

08001ce8 <__aeabi_i2d>:
 8001ce8:	b570      	push	{r4, r5, r6, lr}
 8001cea:	2800      	cmp	r0, #0
 8001cec:	d016      	beq.n	8001d1c <__aeabi_i2d+0x34>
 8001cee:	17c3      	asrs	r3, r0, #31
 8001cf0:	18c5      	adds	r5, r0, r3
 8001cf2:	405d      	eors	r5, r3
 8001cf4:	0fc4      	lsrs	r4, r0, #31
 8001cf6:	0028      	movs	r0, r5
 8001cf8:	f000 f848 	bl	8001d8c <__clzsi2>
 8001cfc:	4b10      	ldr	r3, [pc, #64]	@ (8001d40 <__aeabi_i2d+0x58>)
 8001cfe:	1a1b      	subs	r3, r3, r0
 8001d00:	055b      	lsls	r3, r3, #21
 8001d02:	0d5b      	lsrs	r3, r3, #21
 8001d04:	280a      	cmp	r0, #10
 8001d06:	dc14      	bgt.n	8001d32 <__aeabi_i2d+0x4a>
 8001d08:	0002      	movs	r2, r0
 8001d0a:	002e      	movs	r6, r5
 8001d0c:	3215      	adds	r2, #21
 8001d0e:	4096      	lsls	r6, r2
 8001d10:	220b      	movs	r2, #11
 8001d12:	1a12      	subs	r2, r2, r0
 8001d14:	40d5      	lsrs	r5, r2
 8001d16:	032d      	lsls	r5, r5, #12
 8001d18:	0b2d      	lsrs	r5, r5, #12
 8001d1a:	e003      	b.n	8001d24 <__aeabi_i2d+0x3c>
 8001d1c:	2400      	movs	r4, #0
 8001d1e:	2300      	movs	r3, #0
 8001d20:	2500      	movs	r5, #0
 8001d22:	2600      	movs	r6, #0
 8001d24:	051b      	lsls	r3, r3, #20
 8001d26:	432b      	orrs	r3, r5
 8001d28:	07e4      	lsls	r4, r4, #31
 8001d2a:	4323      	orrs	r3, r4
 8001d2c:	0030      	movs	r0, r6
 8001d2e:	0019      	movs	r1, r3
 8001d30:	bd70      	pop	{r4, r5, r6, pc}
 8001d32:	380b      	subs	r0, #11
 8001d34:	4085      	lsls	r5, r0
 8001d36:	032d      	lsls	r5, r5, #12
 8001d38:	2600      	movs	r6, #0
 8001d3a:	0b2d      	lsrs	r5, r5, #12
 8001d3c:	e7f2      	b.n	8001d24 <__aeabi_i2d+0x3c>
 8001d3e:	46c0      	nop			@ (mov r8, r8)
 8001d40:	0000041e 	.word	0x0000041e

08001d44 <__aeabi_ui2d>:
 8001d44:	b510      	push	{r4, lr}
 8001d46:	1e04      	subs	r4, r0, #0
 8001d48:	d010      	beq.n	8001d6c <__aeabi_ui2d+0x28>
 8001d4a:	f000 f81f 	bl	8001d8c <__clzsi2>
 8001d4e:	4b0e      	ldr	r3, [pc, #56]	@ (8001d88 <__aeabi_ui2d+0x44>)
 8001d50:	1a1b      	subs	r3, r3, r0
 8001d52:	055b      	lsls	r3, r3, #21
 8001d54:	0d5b      	lsrs	r3, r3, #21
 8001d56:	280a      	cmp	r0, #10
 8001d58:	dc0f      	bgt.n	8001d7a <__aeabi_ui2d+0x36>
 8001d5a:	220b      	movs	r2, #11
 8001d5c:	0021      	movs	r1, r4
 8001d5e:	1a12      	subs	r2, r2, r0
 8001d60:	40d1      	lsrs	r1, r2
 8001d62:	3015      	adds	r0, #21
 8001d64:	030a      	lsls	r2, r1, #12
 8001d66:	4084      	lsls	r4, r0
 8001d68:	0b12      	lsrs	r2, r2, #12
 8001d6a:	e001      	b.n	8001d70 <__aeabi_ui2d+0x2c>
 8001d6c:	2300      	movs	r3, #0
 8001d6e:	2200      	movs	r2, #0
 8001d70:	051b      	lsls	r3, r3, #20
 8001d72:	4313      	orrs	r3, r2
 8001d74:	0020      	movs	r0, r4
 8001d76:	0019      	movs	r1, r3
 8001d78:	bd10      	pop	{r4, pc}
 8001d7a:	0022      	movs	r2, r4
 8001d7c:	380b      	subs	r0, #11
 8001d7e:	4082      	lsls	r2, r0
 8001d80:	0312      	lsls	r2, r2, #12
 8001d82:	2400      	movs	r4, #0
 8001d84:	0b12      	lsrs	r2, r2, #12
 8001d86:	e7f3      	b.n	8001d70 <__aeabi_ui2d+0x2c>
 8001d88:	0000041e 	.word	0x0000041e

08001d8c <__clzsi2>:
 8001d8c:	211c      	movs	r1, #28
 8001d8e:	2301      	movs	r3, #1
 8001d90:	041b      	lsls	r3, r3, #16
 8001d92:	4298      	cmp	r0, r3
 8001d94:	d301      	bcc.n	8001d9a <__clzsi2+0xe>
 8001d96:	0c00      	lsrs	r0, r0, #16
 8001d98:	3910      	subs	r1, #16
 8001d9a:	0a1b      	lsrs	r3, r3, #8
 8001d9c:	4298      	cmp	r0, r3
 8001d9e:	d301      	bcc.n	8001da4 <__clzsi2+0x18>
 8001da0:	0a00      	lsrs	r0, r0, #8
 8001da2:	3908      	subs	r1, #8
 8001da4:	091b      	lsrs	r3, r3, #4
 8001da6:	4298      	cmp	r0, r3
 8001da8:	d301      	bcc.n	8001dae <__clzsi2+0x22>
 8001daa:	0900      	lsrs	r0, r0, #4
 8001dac:	3904      	subs	r1, #4
 8001dae:	a202      	add	r2, pc, #8	@ (adr r2, 8001db8 <__clzsi2+0x2c>)
 8001db0:	5c10      	ldrb	r0, [r2, r0]
 8001db2:	1840      	adds	r0, r0, r1
 8001db4:	4770      	bx	lr
 8001db6:	46c0      	nop			@ (mov r8, r8)
 8001db8:	02020304 	.word	0x02020304
 8001dbc:	01010101 	.word	0x01010101
	...

08001dc8 <Undamped_step>:
static RT_MODEL rtM_;
RT_MODEL *const rtM = &rtM_;

/* Model step function */
void Undamped_step(void)
{
 8001dc8:	b5b0      	push	{r4, r5, r7, lr}
 8001dca:	b084      	sub	sp, #16
 8001dcc:	af00      	add	r7, sp, #0
  real_T rtb_DiscreteTimeIntegrator;
  real_T rtb_uI;

  /* DiscreteIntegrator: '<S1>/Discrete-Time Integrator' */
  rtb_DiscreteTimeIntegrator = rtDW.DiscreteTimeIntegrator_DSTATE;
 8001dce:	4b31      	ldr	r3, [pc, #196]	@ (8001e94 <Undamped_step+0xcc>)
 8001dd0:	681a      	ldr	r2, [r3, #0]
 8001dd2:	685b      	ldr	r3, [r3, #4]
 8001dd4:	60ba      	str	r2, [r7, #8]
 8001dd6:	60fb      	str	r3, [r7, #12]

  /* Outport: '<Root>/theta' incorporates:
   *  DiscreteIntegrator: '<S1>/Discrete-Time Integrator1'
   */
  rtY.theta = rtDW.DiscreteTimeIntegrator1_DSTATE;
 8001dd8:	4b2e      	ldr	r3, [pc, #184]	@ (8001e94 <Undamped_step+0xcc>)
 8001dda:	689a      	ldr	r2, [r3, #8]
 8001ddc:	68db      	ldr	r3, [r3, #12]
 8001dde:	492e      	ldr	r1, [pc, #184]	@ (8001e98 <Undamped_step+0xd0>)
 8001de0:	600a      	str	r2, [r1, #0]
 8001de2:	604b      	str	r3, [r1, #4]
   *  Gain: '<S1>/mgl'
   *  Inport: '<Root>/controlTorque'
   *  Sin: '<S1>/Sine Wave Function'
   *  Sum: '<S1>/Add'
   */
  rtb_uI = (rtU.controlTorque - 10.0 * sin(rtDW.DiscreteTimeIntegrator1_DSTATE))
 8001de4:	4b2d      	ldr	r3, [pc, #180]	@ (8001e9c <Undamped_step+0xd4>)
 8001de6:	681c      	ldr	r4, [r3, #0]
 8001de8:	685d      	ldr	r5, [r3, #4]
 8001dea:	4b2a      	ldr	r3, [pc, #168]	@ (8001e94 <Undamped_step+0xcc>)
 8001dec:	689a      	ldr	r2, [r3, #8]
 8001dee:	68db      	ldr	r3, [r3, #12]
 8001df0:	0010      	movs	r0, r2
 8001df2:	0019      	movs	r1, r3
 8001df4:	f001 f930 	bl	8003058 <sin>
 8001df8:	2200      	movs	r2, #0
 8001dfa:	4b29      	ldr	r3, [pc, #164]	@ (8001ea0 <Undamped_step+0xd8>)
 8001dfc:	f7ff f848 	bl	8000e90 <__aeabi_dmul>
 8001e00:	0002      	movs	r2, r0
 8001e02:	000b      	movs	r3, r1
 8001e04:	0020      	movs	r0, r4
 8001e06:	0029      	movs	r1, r5
 8001e08:	f7ff fb28 	bl	800145c <__aeabi_dsub>
 8001e0c:	0002      	movs	r2, r0
 8001e0e:	000b      	movs	r3, r1
 8001e10:	0010      	movs	r0, r2
 8001e12:	0019      	movs	r1, r3
 8001e14:	4a23      	ldr	r2, [pc, #140]	@ (8001ea4 <Undamped_step+0xdc>)
 8001e16:	4b24      	ldr	r3, [pc, #144]	@ (8001ea8 <Undamped_step+0xe0>)
 8001e18:	f7ff f83a 	bl	8000e90 <__aeabi_dmul>
 8001e1c:	0002      	movs	r2, r0
 8001e1e:	000b      	movs	r3, r1
 8001e20:	603a      	str	r2, [r7, #0]
 8001e22:	607b      	str	r3, [r7, #4]
    * 0.1;

  /* Outport: '<Root>/thetaDoubleDot' */
  rtY.thetaDoubleDot = rtb_uI;
 8001e24:	491c      	ldr	r1, [pc, #112]	@ (8001e98 <Undamped_step+0xd0>)
 8001e26:	683a      	ldr	r2, [r7, #0]
 8001e28:	687b      	ldr	r3, [r7, #4]
 8001e2a:	610a      	str	r2, [r1, #16]
 8001e2c:	614b      	str	r3, [r1, #20]

  /* Outport: '<Root>/thetaDot' incorporates:
   *  DiscreteIntegrator: '<S1>/Discrete-Time Integrator'
   */
  rtY.thetaDot = rtDW.DiscreteTimeIntegrator_DSTATE;
 8001e2e:	4b19      	ldr	r3, [pc, #100]	@ (8001e94 <Undamped_step+0xcc>)
 8001e30:	681a      	ldr	r2, [r3, #0]
 8001e32:	685b      	ldr	r3, [r3, #4]
 8001e34:	4918      	ldr	r1, [pc, #96]	@ (8001e98 <Undamped_step+0xd0>)
 8001e36:	608a      	str	r2, [r1, #8]
 8001e38:	60cb      	str	r3, [r1, #12]

  /* Update for DiscreteIntegrator: '<S1>/Discrete-Time Integrator' */
  rtDW.DiscreteTimeIntegrator_DSTATE += 0.001 * rtb_uI;
 8001e3a:	4b16      	ldr	r3, [pc, #88]	@ (8001e94 <Undamped_step+0xcc>)
 8001e3c:	681c      	ldr	r4, [r3, #0]
 8001e3e:	685d      	ldr	r5, [r3, #4]
 8001e40:	4a1a      	ldr	r2, [pc, #104]	@ (8001eac <Undamped_step+0xe4>)
 8001e42:	4b1b      	ldr	r3, [pc, #108]	@ (8001eb0 <Undamped_step+0xe8>)
 8001e44:	6838      	ldr	r0, [r7, #0]
 8001e46:	6879      	ldr	r1, [r7, #4]
 8001e48:	f7ff f822 	bl	8000e90 <__aeabi_dmul>
 8001e4c:	0002      	movs	r2, r0
 8001e4e:	000b      	movs	r3, r1
 8001e50:	0020      	movs	r0, r4
 8001e52:	0029      	movs	r1, r5
 8001e54:	f7fe fb34 	bl	80004c0 <__aeabi_dadd>
 8001e58:	0002      	movs	r2, r0
 8001e5a:	000b      	movs	r3, r1
 8001e5c:	490d      	ldr	r1, [pc, #52]	@ (8001e94 <Undamped_step+0xcc>)
 8001e5e:	600a      	str	r2, [r1, #0]
 8001e60:	604b      	str	r3, [r1, #4]

  /* Update for DiscreteIntegrator: '<S1>/Discrete-Time Integrator1' */
  rtDW.DiscreteTimeIntegrator1_DSTATE += 0.001 * rtb_DiscreteTimeIntegrator;
 8001e62:	4b0c      	ldr	r3, [pc, #48]	@ (8001e94 <Undamped_step+0xcc>)
 8001e64:	689c      	ldr	r4, [r3, #8]
 8001e66:	68dd      	ldr	r5, [r3, #12]
 8001e68:	4a10      	ldr	r2, [pc, #64]	@ (8001eac <Undamped_step+0xe4>)
 8001e6a:	4b11      	ldr	r3, [pc, #68]	@ (8001eb0 <Undamped_step+0xe8>)
 8001e6c:	68b8      	ldr	r0, [r7, #8]
 8001e6e:	68f9      	ldr	r1, [r7, #12]
 8001e70:	f7ff f80e 	bl	8000e90 <__aeabi_dmul>
 8001e74:	0002      	movs	r2, r0
 8001e76:	000b      	movs	r3, r1
 8001e78:	0020      	movs	r0, r4
 8001e7a:	0029      	movs	r1, r5
 8001e7c:	f7fe fb20 	bl	80004c0 <__aeabi_dadd>
 8001e80:	0002      	movs	r2, r0
 8001e82:	000b      	movs	r3, r1
 8001e84:	4903      	ldr	r1, [pc, #12]	@ (8001e94 <Undamped_step+0xcc>)
 8001e86:	608a      	str	r2, [r1, #8]
 8001e88:	60cb      	str	r3, [r1, #12]
}
 8001e8a:	46c0      	nop			@ (mov r8, r8)
 8001e8c:	46bd      	mov	sp, r7
 8001e8e:	b004      	add	sp, #16
 8001e90:	bdb0      	pop	{r4, r5, r7, pc}
 8001e92:	46c0      	nop			@ (mov r8, r8)
 8001e94:	20000020 	.word	0x20000020
 8001e98:	20000038 	.word	0x20000038
 8001e9c:	20000030 	.word	0x20000030
 8001ea0:	40240000 	.word	0x40240000
 8001ea4:	9999999a 	.word	0x9999999a
 8001ea8:	3fb99999 	.word	0x3fb99999
 8001eac:	d2f1a9fc 	.word	0xd2f1a9fc
 8001eb0:	3f50624d 	.word	0x3f50624d

08001eb4 <Undamped_initialize>:

/* Model initialize function */
void Undamped_initialize(void)
{
 8001eb4:	b580      	push	{r7, lr}
 8001eb6:	af00      	add	r7, sp, #0
  /* (no initialization code required) */
}
 8001eb8:	46c0      	nop			@ (mov r8, r8)
 8001eba:	46bd      	mov	sp, r7
 8001ebc:	bd80      	pop	{r7, pc}
	...

08001ec0 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8001ec0:	b580      	push	{r7, lr}
 8001ec2:	b082      	sub	sp, #8
 8001ec4:	af00      	add	r7, sp, #0
 8001ec6:	0002      	movs	r2, r0
 8001ec8:	1dfb      	adds	r3, r7, #7
 8001eca:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 8001ecc:	1dfb      	adds	r3, r7, #7
 8001ece:	781b      	ldrb	r3, [r3, #0]
 8001ed0:	2b7f      	cmp	r3, #127	@ 0x7f
 8001ed2:	d809      	bhi.n	8001ee8 <__NVIC_EnableIRQ+0x28>
  {
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001ed4:	1dfb      	adds	r3, r7, #7
 8001ed6:	781b      	ldrb	r3, [r3, #0]
 8001ed8:	001a      	movs	r2, r3
 8001eda:	231f      	movs	r3, #31
 8001edc:	401a      	ands	r2, r3
 8001ede:	4b04      	ldr	r3, [pc, #16]	@ (8001ef0 <__NVIC_EnableIRQ+0x30>)
 8001ee0:	2101      	movs	r1, #1
 8001ee2:	4091      	lsls	r1, r2
 8001ee4:	000a      	movs	r2, r1
 8001ee6:	601a      	str	r2, [r3, #0]
  }
}
 8001ee8:	46c0      	nop			@ (mov r8, r8)
 8001eea:	46bd      	mov	sp, r7
 8001eec:	b002      	add	sp, #8
 8001eee:	bd80      	pop	{r7, pc}
 8001ef0:	e000e100 	.word	0xe000e100

08001ef4 <__NVIC_DisableIRQ>:
  \details Disables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
 8001ef4:	b580      	push	{r7, lr}
 8001ef6:	b082      	sub	sp, #8
 8001ef8:	af00      	add	r7, sp, #0
 8001efa:	0002      	movs	r2, r0
 8001efc:	1dfb      	adds	r3, r7, #7
 8001efe:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 8001f00:	1dfb      	adds	r3, r7, #7
 8001f02:	781b      	ldrb	r3, [r3, #0]
 8001f04:	2b7f      	cmp	r3, #127	@ 0x7f
 8001f06:	d810      	bhi.n	8001f2a <__NVIC_DisableIRQ+0x36>
  {
    NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001f08:	1dfb      	adds	r3, r7, #7
 8001f0a:	781b      	ldrb	r3, [r3, #0]
 8001f0c:	001a      	movs	r2, r3
 8001f0e:	231f      	movs	r3, #31
 8001f10:	4013      	ands	r3, r2
 8001f12:	4908      	ldr	r1, [pc, #32]	@ (8001f34 <__NVIC_DisableIRQ+0x40>)
 8001f14:	2201      	movs	r2, #1
 8001f16:	409a      	lsls	r2, r3
 8001f18:	0013      	movs	r3, r2
 8001f1a:	2280      	movs	r2, #128	@ 0x80
 8001f1c:	508b      	str	r3, [r1, r2]
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8001f1e:	f3bf 8f4f 	dsb	sy
}
 8001f22:	46c0      	nop			@ (mov r8, r8)
  __ASM volatile ("isb 0xF":::"memory");
 8001f24:	f3bf 8f6f 	isb	sy
}
 8001f28:	46c0      	nop			@ (mov r8, r8)
    __DSB();
    __ISB();
  }
}
 8001f2a:	46c0      	nop			@ (mov r8, r8)
 8001f2c:	46bd      	mov	sp, r7
 8001f2e:	b002      	add	sp, #8
 8001f30:	bd80      	pop	{r7, pc}
 8001f32:	46c0      	nop			@ (mov r8, r8)
 8001f34:	e000e100 	.word	0xe000e100

08001f38 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8001f38:	b590      	push	{r4, r7, lr}
 8001f3a:	b083      	sub	sp, #12
 8001f3c:	af00      	add	r7, sp, #0
 8001f3e:	0002      	movs	r2, r0
 8001f40:	6039      	str	r1, [r7, #0]
 8001f42:	1dfb      	adds	r3, r7, #7
 8001f44:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 8001f46:	1dfb      	adds	r3, r7, #7
 8001f48:	781b      	ldrb	r3, [r3, #0]
 8001f4a:	2b7f      	cmp	r3, #127	@ 0x7f
 8001f4c:	d828      	bhi.n	8001fa0 <__NVIC_SetPriority+0x68>
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8001f4e:	4a2f      	ldr	r2, [pc, #188]	@ (800200c <__NVIC_SetPriority+0xd4>)
 8001f50:	1dfb      	adds	r3, r7, #7
 8001f52:	781b      	ldrb	r3, [r3, #0]
 8001f54:	b25b      	sxtb	r3, r3
 8001f56:	089b      	lsrs	r3, r3, #2
 8001f58:	33c0      	adds	r3, #192	@ 0xc0
 8001f5a:	009b      	lsls	r3, r3, #2
 8001f5c:	589b      	ldr	r3, [r3, r2]
 8001f5e:	1dfa      	adds	r2, r7, #7
 8001f60:	7812      	ldrb	r2, [r2, #0]
 8001f62:	0011      	movs	r1, r2
 8001f64:	2203      	movs	r2, #3
 8001f66:	400a      	ands	r2, r1
 8001f68:	00d2      	lsls	r2, r2, #3
 8001f6a:	21ff      	movs	r1, #255	@ 0xff
 8001f6c:	4091      	lsls	r1, r2
 8001f6e:	000a      	movs	r2, r1
 8001f70:	43d2      	mvns	r2, r2
 8001f72:	401a      	ands	r2, r3
 8001f74:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8001f76:	683b      	ldr	r3, [r7, #0]
 8001f78:	019b      	lsls	r3, r3, #6
 8001f7a:	22ff      	movs	r2, #255	@ 0xff
 8001f7c:	401a      	ands	r2, r3
 8001f7e:	1dfb      	adds	r3, r7, #7
 8001f80:	781b      	ldrb	r3, [r3, #0]
 8001f82:	0018      	movs	r0, r3
 8001f84:	2303      	movs	r3, #3
 8001f86:	4003      	ands	r3, r0
 8001f88:	00db      	lsls	r3, r3, #3
 8001f8a:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8001f8c:	481f      	ldr	r0, [pc, #124]	@ (800200c <__NVIC_SetPriority+0xd4>)
 8001f8e:	1dfb      	adds	r3, r7, #7
 8001f90:	781b      	ldrb	r3, [r3, #0]
 8001f92:	b25b      	sxtb	r3, r3
 8001f94:	089b      	lsrs	r3, r3, #2
 8001f96:	430a      	orrs	r2, r1
 8001f98:	33c0      	adds	r3, #192	@ 0xc0
 8001f9a:	009b      	lsls	r3, r3, #2
 8001f9c:	501a      	str	r2, [r3, r0]
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
}
 8001f9e:	e031      	b.n	8002004 <__NVIC_SetPriority+0xcc>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8001fa0:	4a1b      	ldr	r2, [pc, #108]	@ (8002010 <__NVIC_SetPriority+0xd8>)
 8001fa2:	1dfb      	adds	r3, r7, #7
 8001fa4:	781b      	ldrb	r3, [r3, #0]
 8001fa6:	0019      	movs	r1, r3
 8001fa8:	230f      	movs	r3, #15
 8001faa:	400b      	ands	r3, r1
 8001fac:	3b08      	subs	r3, #8
 8001fae:	089b      	lsrs	r3, r3, #2
 8001fb0:	3306      	adds	r3, #6
 8001fb2:	009b      	lsls	r3, r3, #2
 8001fb4:	18d3      	adds	r3, r2, r3
 8001fb6:	3304      	adds	r3, #4
 8001fb8:	681b      	ldr	r3, [r3, #0]
 8001fba:	1dfa      	adds	r2, r7, #7
 8001fbc:	7812      	ldrb	r2, [r2, #0]
 8001fbe:	0011      	movs	r1, r2
 8001fc0:	2203      	movs	r2, #3
 8001fc2:	400a      	ands	r2, r1
 8001fc4:	00d2      	lsls	r2, r2, #3
 8001fc6:	21ff      	movs	r1, #255	@ 0xff
 8001fc8:	4091      	lsls	r1, r2
 8001fca:	000a      	movs	r2, r1
 8001fcc:	43d2      	mvns	r2, r2
 8001fce:	401a      	ands	r2, r3
 8001fd0:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8001fd2:	683b      	ldr	r3, [r7, #0]
 8001fd4:	019b      	lsls	r3, r3, #6
 8001fd6:	22ff      	movs	r2, #255	@ 0xff
 8001fd8:	401a      	ands	r2, r3
 8001fda:	1dfb      	adds	r3, r7, #7
 8001fdc:	781b      	ldrb	r3, [r3, #0]
 8001fde:	0018      	movs	r0, r3
 8001fe0:	2303      	movs	r3, #3
 8001fe2:	4003      	ands	r3, r0
 8001fe4:	00db      	lsls	r3, r3, #3
 8001fe6:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8001fe8:	4809      	ldr	r0, [pc, #36]	@ (8002010 <__NVIC_SetPriority+0xd8>)
 8001fea:	1dfb      	adds	r3, r7, #7
 8001fec:	781b      	ldrb	r3, [r3, #0]
 8001fee:	001c      	movs	r4, r3
 8001ff0:	230f      	movs	r3, #15
 8001ff2:	4023      	ands	r3, r4
 8001ff4:	3b08      	subs	r3, #8
 8001ff6:	089b      	lsrs	r3, r3, #2
 8001ff8:	430a      	orrs	r2, r1
 8001ffa:	3306      	adds	r3, #6
 8001ffc:	009b      	lsls	r3, r3, #2
 8001ffe:	18c3      	adds	r3, r0, r3
 8002000:	3304      	adds	r3, #4
 8002002:	601a      	str	r2, [r3, #0]
}
 8002004:	46c0      	nop			@ (mov r8, r8)
 8002006:	46bd      	mov	sp, r7
 8002008:	b003      	add	sp, #12
 800200a:	bd90      	pop	{r4, r7, pc}
 800200c:	e000e100 	.word	0xe000e100
 8002010:	e000ed00 	.word	0xe000ed00

08002014 <Configure_CNI>:
           - configures the CNI
 * Param   None
 * Retval  None
 */
inline void Configure_CNI(void)
{
 8002014:	b580      	push	{r7, lr}
 8002016:	af00      	add	r7, sp, #0
	ConfigureGPIO_UART1();
 8002018:	f000 f896 	bl	8002148 <ConfigureGPIO_UART1>
	Configure_UART1();
 800201c:	f000 f8bc 	bl	8002198 <Configure_UART1>
}
 8002020:	46c0      	nop			@ (mov r8, r8)
 8002022:	46bd      	mov	sp, r7
 8002024:	bd80      	pop	{r7, pc}

08002026 <TransmitMessage_CNI>:

void TransmitMessage_CNI(const observation_t *obs)
{
 8002026:	b580      	push	{r7, lr}
 8002028:	b084      	sub	sp, #16
 800202a:	af00      	add	r7, sp, #0
 800202c:	6078      	str	r0, [r7, #4]
	char *p = (char *)obs;
 800202e:	687b      	ldr	r3, [r7, #4]
 8002030:	60fb      	str	r3, [r7, #12]

	// Transmit the observation message
	for(uint32_t i = 0; i < sizeof(observation_t); i++)
 8002032:	2300      	movs	r3, #0
 8002034:	60bb      	str	r3, [r7, #8]
 8002036:	e009      	b.n	800204c <TransmitMessage_CNI+0x26>
	{
		TransmitByte_CNI(*(p++));
 8002038:	68fb      	ldr	r3, [r7, #12]
 800203a:	1c5a      	adds	r2, r3, #1
 800203c:	60fa      	str	r2, [r7, #12]
 800203e:	781b      	ldrb	r3, [r3, #0]
 8002040:	0018      	movs	r0, r3
 8002042:	f000 f8f5 	bl	8002230 <TransmitByte_CNI>
	for(uint32_t i = 0; i < sizeof(observation_t); i++)
 8002046:	68bb      	ldr	r3, [r7, #8]
 8002048:	3301      	adds	r3, #1
 800204a:	60bb      	str	r3, [r7, #8]
 800204c:	68bb      	ldr	r3, [r7, #8]
 800204e:	2b1f      	cmp	r3, #31
 8002050:	d9f2      	bls.n	8002038 <TransmitMessage_CNI+0x12>
	}
}
 8002052:	46c0      	nop			@ (mov r8, r8)
 8002054:	46c0      	nop			@ (mov r8, r8)
 8002056:	46bd      	mov	sp, r7
 8002058:	b004      	add	sp, #16
 800205a:	bd80      	pop	{r7, pc}

0800205c <IncomingMessageHandler_CNI>:

void IncomingMessageHandler_CNI(void)
{
 800205c:	b580      	push	{r7, lr}
 800205e:	b088      	sub	sp, #32
 8002060:	af00      	add	r7, sp, #0
	observation_t obs = {};
 8002062:	003b      	movs	r3, r7
 8002064:	0018      	movs	r0, r3
 8002066:	2320      	movs	r3, #32
 8002068:	001a      	movs	r2, r3
 800206a:	2100      	movs	r1, #0
 800206c:	f000 ffc7 	bl	8002ffe <memset>

	// Receive an observation message
	if(ReceiveMessage_CNI(&obs))
 8002070:	003b      	movs	r3, r7
 8002072:	0018      	movs	r0, r3
 8002074:	f000 f82e 	bl	80020d4 <ReceiveMessage_CNI>
 8002078:	1e03      	subs	r3, r0, #0
 800207a:	d020      	beq.n	80020be <IncomingMessageHandler_CNI+0x62>
	{
		if(strcmp(obs.name, "reference clock") == 0)
 800207c:	4a12      	ldr	r2, [pc, #72]	@ (80020c8 <IncomingMessageHandler_CNI+0x6c>)
 800207e:	003b      	movs	r3, r7
 8002080:	0011      	movs	r1, r2
 8002082:	0018      	movs	r0, r3
 8002084:	f7fe f840 	bl	8000108 <strcmp>
 8002088:	1e03      	subs	r3, r0, #0
 800208a:	d10a      	bne.n	80020a2 <IncomingMessageHandler_CNI+0x46>
			//
			// WCCOM = 0s (calculated by sender)
			// WCETrec = discarded

			// Write the RT image of the global clock
			Set_GlobalClock(obs.val); // Time of use
 800208c:	003b      	movs	r3, r7
 800208e:	699a      	ldr	r2, [r3, #24]
 8002090:	69db      	ldr	r3, [r3, #28]
 8002092:	0010      	movs	r0, r2
 8002094:	0019      	movs	r1, r3
 8002096:	f7fe f9f5 	bl	8000484 <__aeabi_d2uiz>
 800209a:	0003      	movs	r3, r0
 800209c:	0018      	movs	r0, r3
 800209e:	f000 f9e7 	bl	8002470 <Set_GlobalClock>
		}

		// -------------------------------------------------------------- START
		// REMOVE THIS CODE
		// --------------------------------------------------------------
		if(strcmp(obs.name, "torque") == 0)
 80020a2:	4a0a      	ldr	r2, [pc, #40]	@ (80020cc <IncomingMessageHandler_CNI+0x70>)
 80020a4:	003b      	movs	r3, r7
 80020a6:	0011      	movs	r1, r2
 80020a8:	0018      	movs	r0, r3
 80020aa:	f7fe f82d 	bl	8000108 <strcmp>
 80020ae:	1e03      	subs	r3, r0, #0
 80020b0:	d105      	bne.n	80020be <IncomingMessageHandler_CNI+0x62>
		{
			rtU.controlTorque = (real_T)obs.val;
 80020b2:	003b      	movs	r3, r7
 80020b4:	699a      	ldr	r2, [r3, #24]
 80020b6:	69db      	ldr	r3, [r3, #28]
 80020b8:	4905      	ldr	r1, [pc, #20]	@ (80020d0 <IncomingMessageHandler_CNI+0x74>)
 80020ba:	600a      	str	r2, [r1, #0]
 80020bc:	604b      	str	r3, [r1, #4]
		}
		// --------------------------------------------------------------- STOP
	}
}
 80020be:	46c0      	nop			@ (mov r8, r8)
 80020c0:	46bd      	mov	sp, r7
 80020c2:	b008      	add	sp, #32
 80020c4:	bd80      	pop	{r7, pc}
 80020c6:	46c0      	nop			@ (mov r8, r8)
 80020c8:	08004070 	.word	0x08004070
 80020cc:	08004080 	.word	0x08004080
 80020d0:	20000030 	.word	0x20000030

080020d4 <ReceiveMessage_CNI>:

uint8_t ReceiveMessage_CNI(observation_t *obs)
{
 80020d4:	b590      	push	{r4, r7, lr}
 80020d6:	b087      	sub	sp, #28
 80020d8:	af00      	add	r7, sp, #0
 80020da:	6078      	str	r0, [r7, #4]
	// Data available?
	if(nUnreadBytes_CNI() > 0)
 80020dc:	f000 f8f2 	bl	80022c4 <nUnreadBytes_CNI>
 80020e0:	1e03      	subs	r3, r0, #0
 80020e2:	d02c      	beq.n	800213e <ReceiveMessage_CNI+0x6a>
	{
		// Wait for approximately 40ms, making sure an entire message must have
		// arrived
		uint32_t clock_stop = Get_GlobalClock() + 4;
 80020e4:	f000 f9ba 	bl	800245c <Get_GlobalClock>
 80020e8:	0003      	movs	r3, r0
 80020ea:	3304      	adds	r3, #4
 80020ec:	60fb      	str	r3, [r7, #12]
		while(Get_GlobalClock() < clock_stop)
 80020ee:	46c0      	nop			@ (mov r8, r8)
 80020f0:	f000 f9b4 	bl	800245c <Get_GlobalClock>
 80020f4:	0002      	movs	r2, r0
 80020f6:	68fb      	ldr	r3, [r7, #12]
 80020f8:	4293      	cmp	r3, r2
 80020fa:	d8f9      	bhi.n	80020f0 <ReceiveMessage_CNI+0x1c>
		{;}

		// Received at least an entire message?
		if(nUnreadBytes_CNI() >= sizeof(observation_t))
 80020fc:	f000 f8e2 	bl	80022c4 <nUnreadBytes_CNI>
 8002100:	0003      	movs	r3, r0
 8002102:	2b1f      	cmp	r3, #31
 8002104:	d915      	bls.n	8002132 <ReceiveMessage_CNI+0x5e>
		{
			char *p = (char *)obs;
 8002106:	687b      	ldr	r3, [r7, #4]
 8002108:	617b      	str	r3, [r7, #20]

			for(uint32_t i = 0; i < sizeof(observation_t); i++)
 800210a:	2300      	movs	r3, #0
 800210c:	613b      	str	r3, [r7, #16]
 800210e:	e009      	b.n	8002124 <ReceiveMessage_CNI+0x50>
			{
				*(p++) = ReceiveByte_CNI();
 8002110:	697c      	ldr	r4, [r7, #20]
 8002112:	1c63      	adds	r3, r4, #1
 8002114:	617b      	str	r3, [r7, #20]
 8002116:	f000 f865 	bl	80021e4 <ReceiveByte_CNI>
 800211a:	0003      	movs	r3, r0
 800211c:	7023      	strb	r3, [r4, #0]
			for(uint32_t i = 0; i < sizeof(observation_t); i++)
 800211e:	693b      	ldr	r3, [r7, #16]
 8002120:	3301      	adds	r3, #1
 8002122:	613b      	str	r3, [r7, #16]
 8002124:	693b      	ldr	r3, [r7, #16]
 8002126:	2b1f      	cmp	r3, #31
 8002128:	d9f2      	bls.n	8002110 <ReceiveMessage_CNI+0x3c>
			}

			return 1; // Successfully received a message
 800212a:	2301      	movs	r3, #1
 800212c:	e008      	b.n	8002140 <ReceiveMessage_CNI+0x6c>
		else // Invalid message length
		{
			// Flush the data
			while(nUnreadBytes_CNI() != 0)
			{
				(void)ReceiveByte_CNI();
 800212e:	f000 f859 	bl	80021e4 <ReceiveByte_CNI>
			while(nUnreadBytes_CNI() != 0)
 8002132:	f000 f8c7 	bl	80022c4 <nUnreadBytes_CNI>
 8002136:	1e03      	subs	r3, r0, #0
 8002138:	d1f9      	bne.n	800212e <ReceiveMessage_CNI+0x5a>
			}

			return 0;
 800213a:	2300      	movs	r3, #0
 800213c:	e000      	b.n	8002140 <ReceiveMessage_CNI+0x6c>
		}
	}

	// No data available
	return 0;
 800213e:	2300      	movs	r3, #0
}
 8002140:	0018      	movs	r0, r3
 8002142:	46bd      	mov	sp, r7
 8002144:	b007      	add	sp, #28
 8002146:	bd90      	pop	{r4, r7, pc}

08002148 <ConfigureGPIO_UART1>:
           - Configures the UART pins on GPIO PA2 PA3
 * Param   None
 * Retval  None
 */
inline void ConfigureGPIO_UART1(void)
{
 8002148:	b580      	push	{r7, lr}
 800214a:	af00      	add	r7, sp, #0
    // Enable the peripheral clock of GPIOA
    RCC->AHBENR |= RCC_AHBENR_GPIOAEN;
 800214c:	4b0f      	ldr	r3, [pc, #60]	@ (800218c <ConfigureGPIO_UART1+0x44>)
 800214e:	695a      	ldr	r2, [r3, #20]
 8002150:	4b0e      	ldr	r3, [pc, #56]	@ (800218c <ConfigureGPIO_UART1+0x44>)
 8002152:	2180      	movs	r1, #128	@ 0x80
 8002154:	0289      	lsls	r1, r1, #10
 8002156:	430a      	orrs	r2, r1
 8002158:	615a      	str	r2, [r3, #20]

    // GPIO configuration for UART signals
    // 1. Select AF mode (10) on PA9 and PA10
    // 2. AF1 for UART signals
    GPIOA->MODER = (GPIOA->MODER & ~(GPIO_MODER_MODER9 | GPIO_MODER_MODER10))
 800215a:	2390      	movs	r3, #144	@ 0x90
 800215c:	05db      	lsls	r3, r3, #23
 800215e:	681b      	ldr	r3, [r3, #0]
 8002160:	4a0b      	ldr	r2, [pc, #44]	@ (8002190 <ConfigureGPIO_UART1+0x48>)
 8002162:	401a      	ands	r2, r3
 8002164:	2390      	movs	r3, #144	@ 0x90
 8002166:	05db      	lsls	r3, r3, #23
            | (GPIO_MODER_MODER9_1 | GPIO_MODER_MODER10_1);
 8002168:	21a0      	movs	r1, #160	@ 0xa0
 800216a:	0389      	lsls	r1, r1, #14
 800216c:	430a      	orrs	r2, r1
    GPIOA->MODER = (GPIOA->MODER & ~(GPIO_MODER_MODER9 | GPIO_MODER_MODER10))
 800216e:	601a      	str	r2, [r3, #0]
    GPIOA->AFR[1] = (GPIOA->AFR[1] & ~(GPIO_AFRH_AFRH1 | GPIO_AFRH_AFRH2))
 8002170:	2390      	movs	r3, #144	@ 0x90
 8002172:	05db      	lsls	r3, r3, #23
 8002174:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002176:	4a07      	ldr	r2, [pc, #28]	@ (8002194 <ConfigureGPIO_UART1+0x4c>)
 8002178:	401a      	ands	r2, r3
 800217a:	2390      	movs	r3, #144	@ 0x90
 800217c:	05db      	lsls	r3, r3, #23
            | (1 << (1 * 4)) | (1 << (2 * 4));
 800217e:	2188      	movs	r1, #136	@ 0x88
 8002180:	0049      	lsls	r1, r1, #1
 8002182:	430a      	orrs	r2, r1
    GPIOA->AFR[1] = (GPIOA->AFR[1] & ~(GPIO_AFRH_AFRH1 | GPIO_AFRH_AFRH2))
 8002184:	625a      	str	r2, [r3, #36]	@ 0x24
}
 8002186:	46c0      	nop			@ (mov r8, r8)
 8002188:	46bd      	mov	sp, r7
 800218a:	bd80      	pop	{r7, pc}
 800218c:	40021000 	.word	0x40021000
 8002190:	ffc3ffff 	.word	0xffc3ffff
 8002194:	fffff00f 	.word	0xfffff00f

08002198 <Configure_UART1>:
 *         - 9600,8,n,1
 * Param   None
 * Retval  None
 */
inline void Configure_UART1(void)
{
 8002198:	b580      	push	{r7, lr}
 800219a:	af00      	add	r7, sp, #0
    // Enable the peripheral clock UART
    RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 800219c:	4b0e      	ldr	r3, [pc, #56]	@ (80021d8 <Configure_UART1+0x40>)
 800219e:	699a      	ldr	r2, [r3, #24]
 80021a0:	4b0d      	ldr	r3, [pc, #52]	@ (80021d8 <Configure_UART1+0x40>)
 80021a2:	2180      	movs	r1, #128	@ 0x80
 80021a4:	01c9      	lsls	r1, r1, #7
 80021a6:	430a      	orrs	r2, r1
 80021a8:	619a      	str	r2, [r3, #24]
    // Configure UART
    // 1. Oversampling by 16, 9600 baud
    // 2. 8 data bit, 1 start bit, 1 stop bit, no parity,
    //     transmitter enable, receiver enable
//    USART1->BRR = 480000 / 96;
    USART1->BRR = 480000 / 96;
 80021aa:	4b0c      	ldr	r3, [pc, #48]	@ (80021dc <Configure_UART1+0x44>)
 80021ac:	4a0c      	ldr	r2, [pc, #48]	@ (80021e0 <Configure_UART1+0x48>)
 80021ae:	60da      	str	r2, [r3, #12]
    USART1->CR1 = USART_CR1_TE | USART_CR1_UE | USART_CR1_RXNEIE | USART_CR1_RE;
 80021b0:	4b0a      	ldr	r3, [pc, #40]	@ (80021dc <Configure_UART1+0x44>)
 80021b2:	222d      	movs	r2, #45	@ 0x2d
 80021b4:	601a      	str	r2, [r3, #0]

    // 3. Polling idle frame Transmission
    while ((USART1->ISR & USART_ISR_TC) != USART_ISR_TC)
 80021b6:	46c0      	nop			@ (mov r8, r8)
 80021b8:	4b08      	ldr	r3, [pc, #32]	@ (80021dc <Configure_UART1+0x44>)
 80021ba:	69db      	ldr	r3, [r3, #28]
 80021bc:	2240      	movs	r2, #64	@ 0x40
 80021be:	4013      	ands	r3, r2
 80021c0:	2b40      	cmp	r3, #64	@ 0x40
 80021c2:	d1f9      	bne.n	80021b8 <Configure_UART1+0x20>
    }

    // Configure IT
    // 4. Set priority for UART1_IRQn
    // 5. Enable UART1_IRQn
    NVIC_SetPriority(USART1_IRQn, 0);
 80021c4:	2100      	movs	r1, #0
 80021c6:	201b      	movs	r0, #27
 80021c8:	f7ff feb6 	bl	8001f38 <__NVIC_SetPriority>
    NVIC_EnableIRQ(USART1_IRQn);
 80021cc:	201b      	movs	r0, #27
 80021ce:	f7ff fe77 	bl	8001ec0 <__NVIC_EnableIRQ>
}
 80021d2:	46c0      	nop			@ (mov r8, r8)
 80021d4:	46bd      	mov	sp, r7
 80021d6:	bd80      	pop	{r7, pc}
 80021d8:	40021000 	.word	0x40021000
 80021dc:	40013800 	.word	0x40013800
 80021e0:	00001388 	.word	0x00001388

080021e4 <ReceiveByte_CNI>:

char ReceiveByte_CNI(void)
{
 80021e4:	b580      	push	{r7, lr}
 80021e6:	b082      	sub	sp, #8
 80021e8:	af00      	add	r7, sp, #0
    uint32_t tmptail;

    // Wait for incoming data
    while (UART1_RxHead == UART1_RxTail){;}
 80021ea:	46c0      	nop			@ (mov r8, r8)
 80021ec:	4b0d      	ldr	r3, [pc, #52]	@ (8002224 <ReceiveByte_CNI+0x40>)
 80021ee:	781b      	ldrb	r3, [r3, #0]
 80021f0:	b2da      	uxtb	r2, r3
 80021f2:	4b0d      	ldr	r3, [pc, #52]	@ (8002228 <ReceiveByte_CNI+0x44>)
 80021f4:	781b      	ldrb	r3, [r3, #0]
 80021f6:	b2db      	uxtb	r3, r3
 80021f8:	429a      	cmp	r2, r3
 80021fa:	d0f7      	beq.n	80021ec <ReceiveByte_CNI+0x8>

    // Calculate buffer index
    tmptail = (UART1_RxTail + 1) & UART1_RX_BUFFER_MASK;
 80021fc:	4b0a      	ldr	r3, [pc, #40]	@ (8002228 <ReceiveByte_CNI+0x44>)
 80021fe:	781b      	ldrb	r3, [r3, #0]
 8002200:	b2db      	uxtb	r3, r3
 8002202:	3301      	adds	r3, #1
 8002204:	001a      	movs	r2, r3
 8002206:	23ff      	movs	r3, #255	@ 0xff
 8002208:	4013      	ands	r3, r2
 800220a:	607b      	str	r3, [r7, #4]

    // Store new index
    UART1_RxTail = tmptail;
 800220c:	687b      	ldr	r3, [r7, #4]
 800220e:	b2da      	uxtb	r2, r3
 8002210:	4b05      	ldr	r3, [pc, #20]	@ (8002228 <ReceiveByte_CNI+0x44>)
 8002212:	701a      	strb	r2, [r3, #0]

    // Return data
    return UART1_RxBuf[tmptail];
 8002214:	4a05      	ldr	r2, [pc, #20]	@ (800222c <ReceiveByte_CNI+0x48>)
 8002216:	687b      	ldr	r3, [r7, #4]
 8002218:	18d3      	adds	r3, r2, r3
 800221a:	781b      	ldrb	r3, [r3, #0]
}
 800221c:	0018      	movs	r0, r3
 800221e:	46bd      	mov	sp, r7
 8002220:	b002      	add	sp, #8
 8002222:	bd80      	pop	{r7, pc}
 8002224:	20000150 	.word	0x20000150
 8002228:	20000151 	.word	0x20000151
 800222c:	20000050 	.word	0x20000050

08002230 <TransmitByte_CNI>:

void TransmitByte_CNI(char data)
{
 8002230:	b580      	push	{r7, lr}
 8002232:	b084      	sub	sp, #16
 8002234:	af00      	add	r7, sp, #0
 8002236:	0002      	movs	r2, r0
 8002238:	1dfb      	adds	r3, r7, #7
 800223a:	701a      	strb	r2, [r3, #0]
    uint32_t tmphead;

    // Calculate buffer index
    tmphead = (UART1_TxHead + 1) & UART1_TX_BUFFER_MASK;
 800223c:	4b1d      	ldr	r3, [pc, #116]	@ (80022b4 <TransmitByte_CNI+0x84>)
 800223e:	781b      	ldrb	r3, [r3, #0]
 8002240:	b2db      	uxtb	r3, r3
 8002242:	3301      	adds	r3, #1
 8002244:	001a      	movs	r2, r3
 8002246:	23ff      	movs	r3, #255	@ 0xff
 8002248:	4013      	ands	r3, r2
 800224a:	60fb      	str	r3, [r7, #12]

    // Wait for free space in buffer
    while (tmphead == UART1_TxTail)
 800224c:	46c0      	nop			@ (mov r8, r8)
 800224e:	4b1a      	ldr	r3, [pc, #104]	@ (80022b8 <TransmitByte_CNI+0x88>)
 8002250:	781b      	ldrb	r3, [r3, #0]
 8002252:	b2db      	uxtb	r3, r3
 8002254:	001a      	movs	r2, r3
 8002256:	68fb      	ldr	r3, [r7, #12]
 8002258:	4293      	cmp	r3, r2
 800225a:	d0f8      	beq.n	800224e <TransmitByte_CNI+0x1e>
    {
        ;
    }

    // Store data in buffer
    UART1_TxBuf[tmphead] = data;
 800225c:	4a17      	ldr	r2, [pc, #92]	@ (80022bc <TransmitByte_CNI+0x8c>)
 800225e:	68fb      	ldr	r3, [r7, #12]
 8002260:	18d3      	adds	r3, r2, r3
 8002262:	1dfa      	adds	r2, r7, #7
 8002264:	7812      	ldrb	r2, [r2, #0]
 8002266:	701a      	strb	r2, [r3, #0]

    // Store new index
    UART1_TxHead = tmphead;
 8002268:	68fb      	ldr	r3, [r7, #12]
 800226a:	b2da      	uxtb	r2, r3
 800226c:	4b11      	ldr	r3, [pc, #68]	@ (80022b4 <TransmitByte_CNI+0x84>)
 800226e:	701a      	strb	r2, [r3, #0]

    // Initiate a new transfer if this is not ongoing
    if((USART1->CR1 & USART_CR1_TCIE) == 0)
 8002270:	4b13      	ldr	r3, [pc, #76]	@ (80022c0 <TransmitByte_CNI+0x90>)
 8002272:	681b      	ldr	r3, [r3, #0]
 8002274:	2240      	movs	r2, #64	@ 0x40
 8002276:	4013      	ands	r3, r2
 8002278:	d117      	bne.n	80022aa <TransmitByte_CNI+0x7a>
    {
        // Calculate buffer index
        uint32_t tmptail = (UART1_TxTail + 1) & UART1_TX_BUFFER_MASK;
 800227a:	4b0f      	ldr	r3, [pc, #60]	@ (80022b8 <TransmitByte_CNI+0x88>)
 800227c:	781b      	ldrb	r3, [r3, #0]
 800227e:	b2db      	uxtb	r3, r3
 8002280:	3301      	adds	r3, #1
 8002282:	001a      	movs	r2, r3
 8002284:	23ff      	movs	r3, #255	@ 0xff
 8002286:	4013      	ands	r3, r2
 8002288:	60bb      	str	r3, [r7, #8]

        // Store new index
        UART1_TxTail = tmptail;
 800228a:	68bb      	ldr	r3, [r7, #8]
 800228c:	b2da      	uxtb	r2, r3
 800228e:	4b0a      	ldr	r3, [pc, #40]	@ (80022b8 <TransmitByte_CNI+0x88>)
 8002290:	701a      	strb	r2, [r3, #0]

        // Start transmission
        USART1->TDR = UART1_TxBuf[tmptail];
 8002292:	4a0a      	ldr	r2, [pc, #40]	@ (80022bc <TransmitByte_CNI+0x8c>)
 8002294:	68bb      	ldr	r3, [r7, #8]
 8002296:	18d3      	adds	r3, r2, r3
 8002298:	781a      	ldrb	r2, [r3, #0]
 800229a:	4b09      	ldr	r3, [pc, #36]	@ (80022c0 <TransmitByte_CNI+0x90>)
 800229c:	851a      	strh	r2, [r3, #40]	@ 0x28

        // enable TC interrupt
        USART1->CR1 |= USART_CR1_TCIE;
 800229e:	4b08      	ldr	r3, [pc, #32]	@ (80022c0 <TransmitByte_CNI+0x90>)
 80022a0:	681a      	ldr	r2, [r3, #0]
 80022a2:	4b07      	ldr	r3, [pc, #28]	@ (80022c0 <TransmitByte_CNI+0x90>)
 80022a4:	2140      	movs	r1, #64	@ 0x40
 80022a6:	430a      	orrs	r2, r1
 80022a8:	601a      	str	r2, [r3, #0]
    }
}
 80022aa:	46c0      	nop			@ (mov r8, r8)
 80022ac:	46bd      	mov	sp, r7
 80022ae:	b004      	add	sp, #16
 80022b0:	bd80      	pop	{r7, pc}
 80022b2:	46c0      	nop			@ (mov r8, r8)
 80022b4:	20000254 	.word	0x20000254
 80022b8:	20000255 	.word	0x20000255
 80022bc:	20000154 	.word	0x20000154
 80022c0:	40013800 	.word	0x40013800

080022c4 <nUnreadBytes_CNI>:

/*
 * This function returns the number of unread bytes in the receive buffer
 */
unsigned char nUnreadBytes_CNI(void)
{
 80022c4:	b580      	push	{r7, lr}
 80022c6:	af00      	add	r7, sp, #0
    if(UART1_RxHead == UART1_RxTail)
 80022c8:	4b12      	ldr	r3, [pc, #72]	@ (8002314 <nUnreadBytes_CNI+0x50>)
 80022ca:	781b      	ldrb	r3, [r3, #0]
 80022cc:	b2da      	uxtb	r2, r3
 80022ce:	4b12      	ldr	r3, [pc, #72]	@ (8002318 <nUnreadBytes_CNI+0x54>)
 80022d0:	781b      	ldrb	r3, [r3, #0]
 80022d2:	b2db      	uxtb	r3, r3
 80022d4:	429a      	cmp	r2, r3
 80022d6:	d101      	bne.n	80022dc <nUnreadBytes_CNI+0x18>
        return 0;
 80022d8:	2300      	movs	r3, #0
 80022da:	e018      	b.n	800230e <nUnreadBytes_CNI+0x4a>
    else if(UART1_RxHead > UART1_RxTail)
 80022dc:	4b0d      	ldr	r3, [pc, #52]	@ (8002314 <nUnreadBytes_CNI+0x50>)
 80022de:	781b      	ldrb	r3, [r3, #0]
 80022e0:	b2da      	uxtb	r2, r3
 80022e2:	4b0d      	ldr	r3, [pc, #52]	@ (8002318 <nUnreadBytes_CNI+0x54>)
 80022e4:	781b      	ldrb	r3, [r3, #0]
 80022e6:	b2db      	uxtb	r3, r3
 80022e8:	429a      	cmp	r2, r3
 80022ea:	d908      	bls.n	80022fe <nUnreadBytes_CNI+0x3a>
        return (UART1_RxHead - UART1_RxTail);
 80022ec:	4b09      	ldr	r3, [pc, #36]	@ (8002314 <nUnreadBytes_CNI+0x50>)
 80022ee:	781b      	ldrb	r3, [r3, #0]
 80022f0:	b2da      	uxtb	r2, r3
 80022f2:	4b09      	ldr	r3, [pc, #36]	@ (8002318 <nUnreadBytes_CNI+0x54>)
 80022f4:	781b      	ldrb	r3, [r3, #0]
 80022f6:	b2db      	uxtb	r3, r3
 80022f8:	1ad3      	subs	r3, r2, r3
 80022fa:	b2db      	uxtb	r3, r3
 80022fc:	e007      	b.n	800230e <nUnreadBytes_CNI+0x4a>
    else
        return (UART1_RX_BUFFER_SIZE - UART1_RxTail + UART1_RxHead);
 80022fe:	4b05      	ldr	r3, [pc, #20]	@ (8002314 <nUnreadBytes_CNI+0x50>)
 8002300:	781b      	ldrb	r3, [r3, #0]
 8002302:	b2da      	uxtb	r2, r3
 8002304:	4b04      	ldr	r3, [pc, #16]	@ (8002318 <nUnreadBytes_CNI+0x54>)
 8002306:	781b      	ldrb	r3, [r3, #0]
 8002308:	b2db      	uxtb	r3, r3
 800230a:	1ad3      	subs	r3, r2, r3
 800230c:	b2db      	uxtb	r3, r3
}
 800230e:	0018      	movs	r0, r3
 8002310:	46bd      	mov	sp, r7
 8002312:	bd80      	pop	{r7, pc}
 8002314:	20000150 	.word	0x20000150
 8002318:	20000151 	.word	0x20000151

0800231c <USART1_IRQHandler>:
 * Brief   This function handles UART interrupt request.
 * Param   None
 * Retval  None
 */
void USART1_IRQHandler(void)
{
 800231c:	b580      	push	{r7, lr}
 800231e:	b082      	sub	sp, #8
 8002320:	af00      	add	r7, sp, #0
    if ((USART1->ISR & USART_ISR_TC) == USART_ISR_TC)
 8002322:	4b30      	ldr	r3, [pc, #192]	@ (80023e4 <USART1_IRQHandler+0xc8>)
 8002324:	69db      	ldr	r3, [r3, #28]
 8002326:	2240      	movs	r2, #64	@ 0x40
 8002328:	4013      	ands	r3, r2
 800232a:	2b40      	cmp	r3, #64	@ 0x40
 800232c:	d127      	bne.n	800237e <USART1_IRQHandler+0x62>
    {
        uint32_t tmptail;

        // Check if all data is transmitted
        if (UART1_TxHead != UART1_TxTail)
 800232e:	4b2e      	ldr	r3, [pc, #184]	@ (80023e8 <USART1_IRQHandler+0xcc>)
 8002330:	781b      	ldrb	r3, [r3, #0]
 8002332:	b2da      	uxtb	r2, r3
 8002334:	4b2d      	ldr	r3, [pc, #180]	@ (80023ec <USART1_IRQHandler+0xd0>)
 8002336:	781b      	ldrb	r3, [r3, #0]
 8002338:	b2db      	uxtb	r3, r3
 800233a:	429a      	cmp	r2, r3
 800233c:	d012      	beq.n	8002364 <USART1_IRQHandler+0x48>
        {
            // Calculate buffer index
            tmptail = (UART1_TxTail + 1) & UART1_TX_BUFFER_MASK;
 800233e:	4b2b      	ldr	r3, [pc, #172]	@ (80023ec <USART1_IRQHandler+0xd0>)
 8002340:	781b      	ldrb	r3, [r3, #0]
 8002342:	b2db      	uxtb	r3, r3
 8002344:	3301      	adds	r3, #1
 8002346:	001a      	movs	r2, r3
 8002348:	23ff      	movs	r3, #255	@ 0xff
 800234a:	4013      	ands	r3, r2
 800234c:	603b      	str	r3, [r7, #0]

            // Store new index
            UART1_TxTail = tmptail;
 800234e:	683b      	ldr	r3, [r7, #0]
 8002350:	b2da      	uxtb	r2, r3
 8002352:	4b26      	ldr	r3, [pc, #152]	@ (80023ec <USART1_IRQHandler+0xd0>)
 8002354:	701a      	strb	r2, [r3, #0]

            // Start transmission
            USART1->TDR = UART1_TxBuf[tmptail];
 8002356:	4a26      	ldr	r2, [pc, #152]	@ (80023f0 <USART1_IRQHandler+0xd4>)
 8002358:	683b      	ldr	r3, [r7, #0]
 800235a:	18d3      	adds	r3, r2, r3
 800235c:	781a      	ldrb	r2, [r3, #0]
 800235e:	4b21      	ldr	r3, [pc, #132]	@ (80023e4 <USART1_IRQHandler+0xc8>)
 8002360:	851a      	strh	r2, [r3, #40]	@ 0x28
    }
    else
    {
        NVIC_DisableIRQ(USART1_IRQn); // Disable UART_IRQn
    }
}
 8002362:	e03a      	b.n	80023da <USART1_IRQHandler+0xbe>
            USART1->ICR |= USART_ICR_TCCF; // Clear TC flag
 8002364:	4b1f      	ldr	r3, [pc, #124]	@ (80023e4 <USART1_IRQHandler+0xc8>)
 8002366:	6a1a      	ldr	r2, [r3, #32]
 8002368:	4b1e      	ldr	r3, [pc, #120]	@ (80023e4 <USART1_IRQHandler+0xc8>)
 800236a:	2140      	movs	r1, #64	@ 0x40
 800236c:	430a      	orrs	r2, r1
 800236e:	621a      	str	r2, [r3, #32]
            USART1->CR1 &= ~USART_CR1_TCIE; // Disable TC interrupt
 8002370:	4b1c      	ldr	r3, [pc, #112]	@ (80023e4 <USART1_IRQHandler+0xc8>)
 8002372:	681a      	ldr	r2, [r3, #0]
 8002374:	4b1b      	ldr	r3, [pc, #108]	@ (80023e4 <USART1_IRQHandler+0xc8>)
 8002376:	2140      	movs	r1, #64	@ 0x40
 8002378:	438a      	bics	r2, r1
 800237a:	601a      	str	r2, [r3, #0]
}
 800237c:	e02d      	b.n	80023da <USART1_IRQHandler+0xbe>
    else if ((USART1->ISR & USART_ISR_RXNE) == USART_ISR_RXNE)
 800237e:	4b19      	ldr	r3, [pc, #100]	@ (80023e4 <USART1_IRQHandler+0xc8>)
 8002380:	69db      	ldr	r3, [r3, #28]
 8002382:	2220      	movs	r2, #32
 8002384:	4013      	ands	r3, r2
 8002386:	2b20      	cmp	r3, #32
 8002388:	d117      	bne.n	80023ba <USART1_IRQHandler+0x9e>
        uint8_t data = (uint8_t)(USART1->RDR); // Receive data, clear flag
 800238a:	4b16      	ldr	r3, [pc, #88]	@ (80023e4 <USART1_IRQHandler+0xc8>)
 800238c:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 800238e:	b29a      	uxth	r2, r3
 8002390:	1dfb      	adds	r3, r7, #7
 8002392:	701a      	strb	r2, [r3, #0]
        uint8_t tmphead = (UART1_RxHead + 1) & UART1_RX_BUFFER_MASK;
 8002394:	4b17      	ldr	r3, [pc, #92]	@ (80023f4 <USART1_IRQHandler+0xd8>)
 8002396:	781b      	ldrb	r3, [r3, #0]
 8002398:	b2da      	uxtb	r2, r3
 800239a:	1dbb      	adds	r3, r7, #6
 800239c:	3201      	adds	r2, #1
 800239e:	701a      	strb	r2, [r3, #0]
        UART1_RxHead = tmphead;
 80023a0:	4b14      	ldr	r3, [pc, #80]	@ (80023f4 <USART1_IRQHandler+0xd8>)
 80023a2:	1dba      	adds	r2, r7, #6
 80023a4:	7812      	ldrb	r2, [r2, #0]
 80023a6:	701a      	strb	r2, [r3, #0]
        if (tmphead == UART1_RxTail)
 80023a8:	4b13      	ldr	r3, [pc, #76]	@ (80023f8 <USART1_IRQHandler+0xdc>)
 80023aa:	781b      	ldrb	r3, [r3, #0]
        UART1_RxBuf[tmphead] = data;
 80023ac:	1dbb      	adds	r3, r7, #6
 80023ae:	781b      	ldrb	r3, [r3, #0]
 80023b0:	4a12      	ldr	r2, [pc, #72]	@ (80023fc <USART1_IRQHandler+0xe0>)
 80023b2:	1df9      	adds	r1, r7, #7
 80023b4:	7809      	ldrb	r1, [r1, #0]
 80023b6:	54d1      	strb	r1, [r2, r3]
}
 80023b8:	e00f      	b.n	80023da <USART1_IRQHandler+0xbe>
    else if ((USART1->ISR & USART_ISR_ORE) == USART_ISR_ORE)
 80023ba:	4b0a      	ldr	r3, [pc, #40]	@ (80023e4 <USART1_IRQHandler+0xc8>)
 80023bc:	69db      	ldr	r3, [r3, #28]
 80023be:	2208      	movs	r2, #8
 80023c0:	4013      	ands	r3, r2
 80023c2:	2b08      	cmp	r3, #8
 80023c4:	d106      	bne.n	80023d4 <USART1_IRQHandler+0xb8>
    	USART1->ICR |= USART_ICR_ORECF; // Clear ORE flag
 80023c6:	4b07      	ldr	r3, [pc, #28]	@ (80023e4 <USART1_IRQHandler+0xc8>)
 80023c8:	6a1a      	ldr	r2, [r3, #32]
 80023ca:	4b06      	ldr	r3, [pc, #24]	@ (80023e4 <USART1_IRQHandler+0xc8>)
 80023cc:	2108      	movs	r1, #8
 80023ce:	430a      	orrs	r2, r1
 80023d0:	621a      	str	r2, [r3, #32]
}
 80023d2:	e002      	b.n	80023da <USART1_IRQHandler+0xbe>
        NVIC_DisableIRQ(USART1_IRQn); // Disable UART_IRQn
 80023d4:	201b      	movs	r0, #27
 80023d6:	f7ff fd8d 	bl	8001ef4 <__NVIC_DisableIRQ>
}
 80023da:	46c0      	nop			@ (mov r8, r8)
 80023dc:	46bd      	mov	sp, r7
 80023de:	b002      	add	sp, #8
 80023e0:	bd80      	pop	{r7, pc}
 80023e2:	46c0      	nop			@ (mov r8, r8)
 80023e4:	40013800 	.word	0x40013800
 80023e8:	20000254 	.word	0x20000254
 80023ec:	20000255 	.word	0x20000255
 80023f0:	20000154 	.word	0x20000154
 80023f4:	20000150 	.word	0x20000150
 80023f8:	20000151 	.word	0x20000151
 80023fc:	20000050 	.word	0x20000050

08002400 <Configure_FakeSensor>:
           -
 * Param   None
 * Retval  None
 */
void Configure_FakeSensor(void)
{
 8002400:	b580      	push	{r7, lr}
 8002402:	af00      	add	r7, sp, #0
	value = 0;
 8002404:	4b02      	ldr	r3, [pc, #8]	@ (8002410 <Configure_FakeSensor+0x10>)
 8002406:	2200      	movs	r2, #0
 8002408:	701a      	strb	r2, [r3, #0]
}
 800240a:	46c0      	nop			@ (mov r8, r8)
 800240c:	46bd      	mov	sp, r7
 800240e:	bd80      	pop	{r7, pc}
 8002410:	20000256 	.word	0x20000256

08002414 <Get_FakeSensorValue>:

char Get_FakeSensorValue(void)
{
 8002414:	b580      	push	{r7, lr}
 8002416:	af00      	add	r7, sp, #0
	return value;
 8002418:	4b02      	ldr	r3, [pc, #8]	@ (8002424 <Get_FakeSensorValue+0x10>)
 800241a:	781b      	ldrb	r3, [r3, #0]
 800241c:	b2db      	uxtb	r3, r3
}
 800241e:	0018      	movs	r0, r3
 8002420:	46bd      	mov	sp, r7
 8002422:	bd80      	pop	{r7, pc}
 8002424:	20000256 	.word	0x20000256

08002428 <Set_FakeSensorValue>:

void Set_FakeSensorValue(char v)
{
 8002428:	b580      	push	{r7, lr}
 800242a:	b082      	sub	sp, #8
 800242c:	af00      	add	r7, sp, #0
 800242e:	0002      	movs	r2, r0
 8002430:	1dfb      	adds	r3, r7, #7
 8002432:	701a      	strb	r2, [r3, #0]
	value = v;
 8002434:	4b03      	ldr	r3, [pc, #12]	@ (8002444 <Set_FakeSensorValue+0x1c>)
 8002436:	1dfa      	adds	r2, r7, #7
 8002438:	7812      	ldrb	r2, [r2, #0]
 800243a:	701a      	strb	r2, [r3, #0]
}
 800243c:	46c0      	nop			@ (mov r8, r8)
 800243e:	46bd      	mov	sp, r7
 8002440:	b002      	add	sp, #8
 8002442:	bd80      	pop	{r7, pc}
 8002444:	20000256 	.word	0x20000256

08002448 <Configure_GlobalClock>:
           -
 * Param   None
 * Retval  None
 */
void Configure_GlobalClock(void)
{
 8002448:	b580      	push	{r7, lr}
 800244a:	af00      	add	r7, sp, #0
	global_tick = 0;
 800244c:	4b02      	ldr	r3, [pc, #8]	@ (8002458 <Configure_GlobalClock+0x10>)
 800244e:	2200      	movs	r2, #0
 8002450:	601a      	str	r2, [r3, #0]
}
 8002452:	46c0      	nop			@ (mov r8, r8)
 8002454:	46bd      	mov	sp, r7
 8002456:	bd80      	pop	{r7, pc}
 8002458:	20000258 	.word	0x20000258

0800245c <Get_GlobalClock>:

uint32_t Get_GlobalClock(void)
{
 800245c:	b580      	push	{r7, lr}
 800245e:	af00      	add	r7, sp, #0
	return global_tick;
 8002460:	4b02      	ldr	r3, [pc, #8]	@ (800246c <Get_GlobalClock+0x10>)
 8002462:	681b      	ldr	r3, [r3, #0]
}
 8002464:	0018      	movs	r0, r3
 8002466:	46bd      	mov	sp, r7
 8002468:	bd80      	pop	{r7, pc}
 800246a:	46c0      	nop			@ (mov r8, r8)
 800246c:	20000258 	.word	0x20000258

08002470 <Set_GlobalClock>:

void Set_GlobalClock(uint32_t t)
{
 8002470:	b580      	push	{r7, lr}
 8002472:	b082      	sub	sp, #8
 8002474:	af00      	add	r7, sp, #0
 8002476:	6078      	str	r0, [r7, #4]
	global_tick = t;
 8002478:	4b10      	ldr	r3, [pc, #64]	@ (80024bc <Set_GlobalClock+0x4c>)
 800247a:	687a      	ldr	r2, [r7, #4]
 800247c:	601a      	str	r2, [r3, #0]

	// For debugging purpose: show the synchronization of the global clocks
	// by toggling an LED
	if((global_tick % 20) == 0)
 800247e:	4b0f      	ldr	r3, [pc, #60]	@ (80024bc <Set_GlobalClock+0x4c>)
 8002480:	681b      	ldr	r3, [r3, #0]
 8002482:	2114      	movs	r1, #20
 8002484:	0018      	movs	r0, r3
 8002486:	f7fd fecf 	bl	8000228 <__aeabi_uidivmod>
 800248a:	1e0b      	subs	r3, r1, #0
 800248c:	d105      	bne.n	800249a <Set_GlobalClock+0x2a>
	{
		GPIOA->BSRR = GPIO_BSRR_BR_5;
 800248e:	2390      	movs	r3, #144	@ 0x90
 8002490:	05db      	lsls	r3, r3, #23
 8002492:	2280      	movs	r2, #128	@ 0x80
 8002494:	0392      	lsls	r2, r2, #14
 8002496:	619a      	str	r2, [r3, #24]
	}
	else if((global_tick % 10) == 0)
	{
		GPIOA->BSRR = GPIO_BSRR_BS_5;
	}
}
 8002498:	e00b      	b.n	80024b2 <Set_GlobalClock+0x42>
	else if((global_tick % 10) == 0)
 800249a:	4b08      	ldr	r3, [pc, #32]	@ (80024bc <Set_GlobalClock+0x4c>)
 800249c:	681b      	ldr	r3, [r3, #0]
 800249e:	210a      	movs	r1, #10
 80024a0:	0018      	movs	r0, r3
 80024a2:	f7fd fec1 	bl	8000228 <__aeabi_uidivmod>
 80024a6:	1e0b      	subs	r3, r1, #0
 80024a8:	d103      	bne.n	80024b2 <Set_GlobalClock+0x42>
		GPIOA->BSRR = GPIO_BSRR_BS_5;
 80024aa:	2390      	movs	r3, #144	@ 0x90
 80024ac:	05db      	lsls	r3, r3, #23
 80024ae:	2220      	movs	r2, #32
 80024b0:	619a      	str	r2, [r3, #24]
}
 80024b2:	46c0      	nop			@ (mov r8, r8)
 80024b4:	46bd      	mov	sp, r7
 80024b6:	b002      	add	sp, #8
 80024b8:	bd80      	pop	{r7, pc}
 80024ba:	46c0      	nop			@ (mov r8, r8)
 80024bc:	20000258 	.word	0x20000258

080024c0 <Inc_GlobalClock>:

void Inc_GlobalClock(void)
{
 80024c0:	b580      	push	{r7, lr}
 80024c2:	af00      	add	r7, sp, #0
	global_tick++;
 80024c4:	4b10      	ldr	r3, [pc, #64]	@ (8002508 <Inc_GlobalClock+0x48>)
 80024c6:	681b      	ldr	r3, [r3, #0]
 80024c8:	1c5a      	adds	r2, r3, #1
 80024ca:	4b0f      	ldr	r3, [pc, #60]	@ (8002508 <Inc_GlobalClock+0x48>)
 80024cc:	601a      	str	r2, [r3, #0]

	// For debugging purpose: show the synchronization of the global clocks
	// by toggling an LED
	if((global_tick % 20) == 0)
 80024ce:	4b0e      	ldr	r3, [pc, #56]	@ (8002508 <Inc_GlobalClock+0x48>)
 80024d0:	681b      	ldr	r3, [r3, #0]
 80024d2:	2114      	movs	r1, #20
 80024d4:	0018      	movs	r0, r3
 80024d6:	f7fd fea7 	bl	8000228 <__aeabi_uidivmod>
 80024da:	1e0b      	subs	r3, r1, #0
 80024dc:	d105      	bne.n	80024ea <Inc_GlobalClock+0x2a>
	{
		GPIOA->BSRR = GPIO_BSRR_BR_5;
 80024de:	2390      	movs	r3, #144	@ 0x90
 80024e0:	05db      	lsls	r3, r3, #23
 80024e2:	2280      	movs	r2, #128	@ 0x80
 80024e4:	0392      	lsls	r2, r2, #14
 80024e6:	619a      	str	r2, [r3, #24]
	}
	else if((global_tick % 10) == 0)
	{
		GPIOA->BSRR = GPIO_BSRR_BS_5;
	}
}
 80024e8:	e00b      	b.n	8002502 <Inc_GlobalClock+0x42>
	else if((global_tick % 10) == 0)
 80024ea:	4b07      	ldr	r3, [pc, #28]	@ (8002508 <Inc_GlobalClock+0x48>)
 80024ec:	681b      	ldr	r3, [r3, #0]
 80024ee:	210a      	movs	r1, #10
 80024f0:	0018      	movs	r0, r3
 80024f2:	f7fd fe99 	bl	8000228 <__aeabi_uidivmod>
 80024f6:	1e0b      	subs	r3, r1, #0
 80024f8:	d103      	bne.n	8002502 <Inc_GlobalClock+0x42>
		GPIOA->BSRR = GPIO_BSRR_BS_5;
 80024fa:	2390      	movs	r3, #144	@ 0x90
 80024fc:	05db      	lsls	r3, r3, #23
 80024fe:	2220      	movs	r2, #32
 8002500:	619a      	str	r2, [r3, #24]
}
 8002502:	46c0      	nop			@ (mov r8, r8)
 8002504:	46bd      	mov	sp, r7
 8002506:	bd80      	pop	{r7, pc}
 8002508:	20000258 	.word	0x20000258

0800250c <__NVIC_EnableIRQ>:
{
 800250c:	b580      	push	{r7, lr}
 800250e:	b082      	sub	sp, #8
 8002510:	af00      	add	r7, sp, #0
 8002512:	0002      	movs	r2, r0
 8002514:	1dfb      	adds	r3, r7, #7
 8002516:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 8002518:	1dfb      	adds	r3, r7, #7
 800251a:	781b      	ldrb	r3, [r3, #0]
 800251c:	2b7f      	cmp	r3, #127	@ 0x7f
 800251e:	d809      	bhi.n	8002534 <__NVIC_EnableIRQ+0x28>
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002520:	1dfb      	adds	r3, r7, #7
 8002522:	781b      	ldrb	r3, [r3, #0]
 8002524:	001a      	movs	r2, r3
 8002526:	231f      	movs	r3, #31
 8002528:	401a      	ands	r2, r3
 800252a:	4b04      	ldr	r3, [pc, #16]	@ (800253c <__NVIC_EnableIRQ+0x30>)
 800252c:	2101      	movs	r1, #1
 800252e:	4091      	lsls	r1, r2
 8002530:	000a      	movs	r2, r1
 8002532:	601a      	str	r2, [r3, #0]
}
 8002534:	46c0      	nop			@ (mov r8, r8)
 8002536:	46bd      	mov	sp, r7
 8002538:	b002      	add	sp, #8
 800253a:	bd80      	pop	{r7, pc}
 800253c:	e000e100 	.word	0xe000e100

08002540 <__NVIC_SetPriority>:
{
 8002540:	b590      	push	{r4, r7, lr}
 8002542:	b083      	sub	sp, #12
 8002544:	af00      	add	r7, sp, #0
 8002546:	0002      	movs	r2, r0
 8002548:	6039      	str	r1, [r7, #0]
 800254a:	1dfb      	adds	r3, r7, #7
 800254c:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 800254e:	1dfb      	adds	r3, r7, #7
 8002550:	781b      	ldrb	r3, [r3, #0]
 8002552:	2b7f      	cmp	r3, #127	@ 0x7f
 8002554:	d828      	bhi.n	80025a8 <__NVIC_SetPriority+0x68>
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002556:	4a2f      	ldr	r2, [pc, #188]	@ (8002614 <__NVIC_SetPriority+0xd4>)
 8002558:	1dfb      	adds	r3, r7, #7
 800255a:	781b      	ldrb	r3, [r3, #0]
 800255c:	b25b      	sxtb	r3, r3
 800255e:	089b      	lsrs	r3, r3, #2
 8002560:	33c0      	adds	r3, #192	@ 0xc0
 8002562:	009b      	lsls	r3, r3, #2
 8002564:	589b      	ldr	r3, [r3, r2]
 8002566:	1dfa      	adds	r2, r7, #7
 8002568:	7812      	ldrb	r2, [r2, #0]
 800256a:	0011      	movs	r1, r2
 800256c:	2203      	movs	r2, #3
 800256e:	400a      	ands	r2, r1
 8002570:	00d2      	lsls	r2, r2, #3
 8002572:	21ff      	movs	r1, #255	@ 0xff
 8002574:	4091      	lsls	r1, r2
 8002576:	000a      	movs	r2, r1
 8002578:	43d2      	mvns	r2, r2
 800257a:	401a      	ands	r2, r3
 800257c:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 800257e:	683b      	ldr	r3, [r7, #0]
 8002580:	019b      	lsls	r3, r3, #6
 8002582:	22ff      	movs	r2, #255	@ 0xff
 8002584:	401a      	ands	r2, r3
 8002586:	1dfb      	adds	r3, r7, #7
 8002588:	781b      	ldrb	r3, [r3, #0]
 800258a:	0018      	movs	r0, r3
 800258c:	2303      	movs	r3, #3
 800258e:	4003      	ands	r3, r0
 8002590:	00db      	lsls	r3, r3, #3
 8002592:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002594:	481f      	ldr	r0, [pc, #124]	@ (8002614 <__NVIC_SetPriority+0xd4>)
 8002596:	1dfb      	adds	r3, r7, #7
 8002598:	781b      	ldrb	r3, [r3, #0]
 800259a:	b25b      	sxtb	r3, r3
 800259c:	089b      	lsrs	r3, r3, #2
 800259e:	430a      	orrs	r2, r1
 80025a0:	33c0      	adds	r3, #192	@ 0xc0
 80025a2:	009b      	lsls	r3, r3, #2
 80025a4:	501a      	str	r2, [r3, r0]
}
 80025a6:	e031      	b.n	800260c <__NVIC_SetPriority+0xcc>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80025a8:	4a1b      	ldr	r2, [pc, #108]	@ (8002618 <__NVIC_SetPriority+0xd8>)
 80025aa:	1dfb      	adds	r3, r7, #7
 80025ac:	781b      	ldrb	r3, [r3, #0]
 80025ae:	0019      	movs	r1, r3
 80025b0:	230f      	movs	r3, #15
 80025b2:	400b      	ands	r3, r1
 80025b4:	3b08      	subs	r3, #8
 80025b6:	089b      	lsrs	r3, r3, #2
 80025b8:	3306      	adds	r3, #6
 80025ba:	009b      	lsls	r3, r3, #2
 80025bc:	18d3      	adds	r3, r2, r3
 80025be:	3304      	adds	r3, #4
 80025c0:	681b      	ldr	r3, [r3, #0]
 80025c2:	1dfa      	adds	r2, r7, #7
 80025c4:	7812      	ldrb	r2, [r2, #0]
 80025c6:	0011      	movs	r1, r2
 80025c8:	2203      	movs	r2, #3
 80025ca:	400a      	ands	r2, r1
 80025cc:	00d2      	lsls	r2, r2, #3
 80025ce:	21ff      	movs	r1, #255	@ 0xff
 80025d0:	4091      	lsls	r1, r2
 80025d2:	000a      	movs	r2, r1
 80025d4:	43d2      	mvns	r2, r2
 80025d6:	401a      	ands	r2, r3
 80025d8:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 80025da:	683b      	ldr	r3, [r7, #0]
 80025dc:	019b      	lsls	r3, r3, #6
 80025de:	22ff      	movs	r2, #255	@ 0xff
 80025e0:	401a      	ands	r2, r3
 80025e2:	1dfb      	adds	r3, r7, #7
 80025e4:	781b      	ldrb	r3, [r3, #0]
 80025e6:	0018      	movs	r0, r3
 80025e8:	2303      	movs	r3, #3
 80025ea:	4003      	ands	r3, r0
 80025ec:	00db      	lsls	r3, r3, #3
 80025ee:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80025f0:	4809      	ldr	r0, [pc, #36]	@ (8002618 <__NVIC_SetPriority+0xd8>)
 80025f2:	1dfb      	adds	r3, r7, #7
 80025f4:	781b      	ldrb	r3, [r3, #0]
 80025f6:	001c      	movs	r4, r3
 80025f8:	230f      	movs	r3, #15
 80025fa:	4023      	ands	r3, r4
 80025fc:	3b08      	subs	r3, #8
 80025fe:	089b      	lsrs	r3, r3, #2
 8002600:	430a      	orrs	r2, r1
 8002602:	3306      	adds	r3, #6
 8002604:	009b      	lsls	r3, r3, #2
 8002606:	18c3      	adds	r3, r0, r3
 8002608:	3304      	adds	r3, #4
 800260a:	601a      	str	r2, [r3, #0]
}
 800260c:	46c0      	nop			@ (mov r8, r8)
 800260e:	46bd      	mov	sp, r7
 8002610:	b003      	add	sp, #12
 8002612:	bd90      	pop	{r4, r7, pc}
 8002614:	e000e100 	.word	0xe000e100
 8002618:	e000ed00 	.word	0xe000ed00

0800261c <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 800261c:	b580      	push	{r7, lr}
 800261e:	b082      	sub	sp, #8
 8002620:	af00      	add	r7, sp, #0
 8002622:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8002624:	687b      	ldr	r3, [r7, #4]
 8002626:	1e5a      	subs	r2, r3, #1
 8002628:	2380      	movs	r3, #128	@ 0x80
 800262a:	045b      	lsls	r3, r3, #17
 800262c:	429a      	cmp	r2, r3
 800262e:	d301      	bcc.n	8002634 <SysTick_Config+0x18>
  {
    return (1UL);                                                   /* Reload value impossible */
 8002630:	2301      	movs	r3, #1
 8002632:	e010      	b.n	8002656 <SysTick_Config+0x3a>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8002634:	4b0a      	ldr	r3, [pc, #40]	@ (8002660 <SysTick_Config+0x44>)
 8002636:	687a      	ldr	r2, [r7, #4]
 8002638:	3a01      	subs	r2, #1
 800263a:	605a      	str	r2, [r3, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 800263c:	2301      	movs	r3, #1
 800263e:	425b      	negs	r3, r3
 8002640:	2103      	movs	r1, #3
 8002642:	0018      	movs	r0, r3
 8002644:	f7ff ff7c 	bl	8002540 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8002648:	4b05      	ldr	r3, [pc, #20]	@ (8002660 <SysTick_Config+0x44>)
 800264a:	2200      	movs	r2, #0
 800264c:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800264e:	4b04      	ldr	r3, [pc, #16]	@ (8002660 <SysTick_Config+0x44>)
 8002650:	2207      	movs	r2, #7
 8002652:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8002654:	2300      	movs	r3, #0
}
 8002656:	0018      	movs	r0, r3
 8002658:	46bd      	mov	sp, r7
 800265a:	b002      	add	sp, #8
 800265c:	bd80      	pop	{r7, pc}
 800265e:	46c0      	nop			@ (mov r8, r8)
 8002660:	e000e010 	.word	0xe000e010

08002664 <statesToInt>:
void Inc_LocalClock(void);
uint32_t Get_LocalClock(void);

// Private functions -----------------------------------------------------------
void statesToInt(double x)
{
 8002664:	b5b0      	push	{r4, r5, r7, lr}
 8002666:	b08c      	sub	sp, #48	@ 0x30
 8002668:	af00      	add	r7, sp, #0
 800266a:	6038      	str	r0, [r7, #0]
 800266c:	6079      	str	r1, [r7, #4]
	char *tmpSign = (x < 0) ? "-" : "";
 800266e:	2200      	movs	r2, #0
 8002670:	2300      	movs	r3, #0
 8002672:	6838      	ldr	r0, [r7, #0]
 8002674:	6879      	ldr	r1, [r7, #4]
 8002676:	f7fd fedd 	bl	8000434 <__aeabi_dcmplt>
 800267a:	1e03      	subs	r3, r0, #0
 800267c:	d001      	beq.n	8002682 <statesToInt+0x1e>
 800267e:	4b29      	ldr	r3, [pc, #164]	@ (8002724 <statesToInt+0xc0>)
 8002680:	e000      	b.n	8002684 <statesToInt+0x20>
 8002682:	4b29      	ldr	r3, [pc, #164]	@ (8002728 <statesToInt+0xc4>)
 8002684:	62fb      	str	r3, [r7, #44]	@ 0x2c
	double tmpVal = (x < 0) ? -x : x;
 8002686:	2200      	movs	r2, #0
 8002688:	2300      	movs	r3, #0
 800268a:	6838      	ldr	r0, [r7, #0]
 800268c:	6879      	ldr	r1, [r7, #4]
 800268e:	f7fd fed1 	bl	8000434 <__aeabi_dcmplt>
 8002692:	1e03      	subs	r3, r0, #0
 8002694:	d007      	beq.n	80026a6 <statesToInt+0x42>
 8002696:	683b      	ldr	r3, [r7, #0]
 8002698:	001c      	movs	r4, r3
 800269a:	687b      	ldr	r3, [r7, #4]
 800269c:	2280      	movs	r2, #128	@ 0x80
 800269e:	0612      	lsls	r2, r2, #24
 80026a0:	405a      	eors	r2, r3
 80026a2:	0015      	movs	r5, r2
 80026a4:	e001      	b.n	80026aa <statesToInt+0x46>
 80026a6:	683c      	ldr	r4, [r7, #0]
 80026a8:	687d      	ldr	r5, [r7, #4]
 80026aa:	623c      	str	r4, [r7, #32]
 80026ac:	627d      	str	r5, [r7, #36]	@ 0x24

	int tmpInt1 = tmpVal;                  // Get the integer (678).
 80026ae:	6a38      	ldr	r0, [r7, #32]
 80026b0:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 80026b2:	f7ff fadd 	bl	8001c70 <__aeabi_d2iz>
 80026b6:	0003      	movs	r3, r0
 80026b8:	61fb      	str	r3, [r7, #28]
	double tmpFrac = tmpVal - tmpInt1;      // Get fraction (0.0123).
 80026ba:	69f8      	ldr	r0, [r7, #28]
 80026bc:	f7ff fb14 	bl	8001ce8 <__aeabi_i2d>
 80026c0:	0002      	movs	r2, r0
 80026c2:	000b      	movs	r3, r1
 80026c4:	6a38      	ldr	r0, [r7, #32]
 80026c6:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 80026c8:	f7fe fec8 	bl	800145c <__aeabi_dsub>
 80026cc:	0002      	movs	r2, r0
 80026ce:	000b      	movs	r3, r1
 80026d0:	613a      	str	r2, [r7, #16]
 80026d2:	617b      	str	r3, [r7, #20]
	int tmpInt2 = trunc(tmpFrac * 10000);  // Turn into integer (123).
 80026d4:	2200      	movs	r2, #0
 80026d6:	4b15      	ldr	r3, [pc, #84]	@ (800272c <statesToInt+0xc8>)
 80026d8:	6938      	ldr	r0, [r7, #16]
 80026da:	6979      	ldr	r1, [r7, #20]
 80026dc:	f7fe fbd8 	bl	8000e90 <__aeabi_dmul>
 80026e0:	0002      	movs	r2, r0
 80026e2:	000b      	movs	r3, r1
 80026e4:	0010      	movs	r0, r2
 80026e6:	0019      	movs	r1, r3
 80026e8:	f000 fcfa 	bl	80030e0 <trunc>
 80026ec:	0002      	movs	r2, r0
 80026ee:	000b      	movs	r3, r1
 80026f0:	0010      	movs	r0, r2
 80026f2:	0019      	movs	r1, r3
 80026f4:	f7ff fabc 	bl	8001c70 <__aeabi_d2iz>
 80026f8:	0003      	movs	r3, r0
 80026fa:	60fb      	str	r3, [r7, #12]
	TransmitString_TII(tmpSign);
 80026fc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80026fe:	0018      	movs	r0, r3
 8002700:	f000 fbca 	bl	8002e98 <TransmitString_TII>
	printStates(tmpInt1);
 8002704:	69fb      	ldr	r3, [r7, #28]
 8002706:	0018      	movs	r0, r3
 8002708:	f000 f814 	bl	8002734 <printStates>
	TransmitString_TII(".");
 800270c:	4b08      	ldr	r3, [pc, #32]	@ (8002730 <statesToInt+0xcc>)
 800270e:	0018      	movs	r0, r3
 8002710:	f000 fbc2 	bl	8002e98 <TransmitString_TII>
	printStates(tmpInt2);
 8002714:	68fb      	ldr	r3, [r7, #12]
 8002716:	0018      	movs	r0, r3
 8002718:	f000 f80c 	bl	8002734 <printStates>
}
 800271c:	46c0      	nop			@ (mov r8, r8)
 800271e:	46bd      	mov	sp, r7
 8002720:	b00c      	add	sp, #48	@ 0x30
 8002722:	bdb0      	pop	{r4, r5, r7, pc}
 8002724:	08004088 	.word	0x08004088
 8002728:	0800408c 	.word	0x0800408c
 800272c:	40c38800 	.word	0x40c38800
 8002730:	08004090 	.word	0x08004090

08002734 <printStates>:
void printStates(int number)
{
 8002734:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002736:	b08f      	sub	sp, #60	@ 0x3c
 8002738:	af00      	add	r7, sp, #0
 800273a:	6078      	str	r0, [r7, #4]
	int16_t base_val = 10, digit, i = 0, n = 0;
 800273c:	2332      	movs	r3, #50	@ 0x32
 800273e:	18fb      	adds	r3, r7, r3
 8002740:	220a      	movs	r2, #10
 8002742:	801a      	strh	r2, [r3, #0]
 8002744:	2336      	movs	r3, #54	@ 0x36
 8002746:	18fb      	adds	r3, r7, r3
 8002748:	2200      	movs	r2, #0
 800274a:	801a      	strh	r2, [r3, #0]
 800274c:	2334      	movs	r3, #52	@ 0x34
 800274e:	18fb      	adds	r3, r7, r3
 8002750:	2200      	movs	r2, #0
 8002752:	801a      	strh	r2, [r3, #0]
		char x_str[32], t;
		while (number)
 8002754:	e041      	b.n	80027da <printStates+0xa6>
		{
			digit = number % base_val;
 8002756:	2532      	movs	r5, #50	@ 0x32
 8002758:	197b      	adds	r3, r7, r5
 800275a:	2200      	movs	r2, #0
 800275c:	5e9a      	ldrsh	r2, [r3, r2]
 800275e:	687b      	ldr	r3, [r7, #4]
 8002760:	0011      	movs	r1, r2
 8002762:	0018      	movs	r0, r3
 8002764:	f7fd fe4a 	bl	80003fc <__aeabi_idivmod>
 8002768:	000b      	movs	r3, r1
 800276a:	001a      	movs	r2, r3
 800276c:	242e      	movs	r4, #46	@ 0x2e
 800276e:	193b      	adds	r3, r7, r4
 8002770:	801a      	strh	r2, [r3, #0]
			number /= base_val;
 8002772:	197b      	adds	r3, r7, r5
 8002774:	2200      	movs	r2, #0
 8002776:	5e9b      	ldrsh	r3, [r3, r2]
 8002778:	0019      	movs	r1, r3
 800277a:	6878      	ldr	r0, [r7, #4]
 800277c:	f7fd fd58 	bl	8000230 <__divsi3>
 8002780:	0003      	movs	r3, r0
 8002782:	607b      	str	r3, [r7, #4]
			if (digit < 10)
 8002784:	193b      	adds	r3, r7, r4
 8002786:	2200      	movs	r2, #0
 8002788:	5e9b      	ldrsh	r3, [r3, r2]
 800278a:	2b09      	cmp	r3, #9
 800278c:	dc12      	bgt.n	80027b4 <printStates+0x80>
			x_str[n++] = digit + '0';
 800278e:	193b      	adds	r3, r7, r4
 8002790:	881b      	ldrh	r3, [r3, #0]
 8002792:	b2db      	uxtb	r3, r3
 8002794:	2434      	movs	r4, #52	@ 0x34
 8002796:	193a      	adds	r2, r7, r4
 8002798:	2100      	movs	r1, #0
 800279a:	5e51      	ldrsh	r1, [r2, r1]
 800279c:	b28a      	uxth	r2, r1
 800279e:	3201      	adds	r2, #1
 80027a0:	b290      	uxth	r0, r2
 80027a2:	193a      	adds	r2, r7, r4
 80027a4:	8010      	strh	r0, [r2, #0]
 80027a6:	000a      	movs	r2, r1
 80027a8:	3330      	adds	r3, #48	@ 0x30
 80027aa:	b2d9      	uxtb	r1, r3
 80027ac:	230c      	movs	r3, #12
 80027ae:	18fb      	adds	r3, r7, r3
 80027b0:	5499      	strb	r1, [r3, r2]
 80027b2:	e012      	b.n	80027da <printStates+0xa6>
		    else
			 x_str[n++] = digit + 'A' - 10;   /*handle base > 9 */
 80027b4:	232e      	movs	r3, #46	@ 0x2e
 80027b6:	18fb      	adds	r3, r7, r3
 80027b8:	881b      	ldrh	r3, [r3, #0]
 80027ba:	b2db      	uxtb	r3, r3
 80027bc:	2434      	movs	r4, #52	@ 0x34
 80027be:	193a      	adds	r2, r7, r4
 80027c0:	2100      	movs	r1, #0
 80027c2:	5e51      	ldrsh	r1, [r2, r1]
 80027c4:	b28a      	uxth	r2, r1
 80027c6:	3201      	adds	r2, #1
 80027c8:	b290      	uxth	r0, r2
 80027ca:	193a      	adds	r2, r7, r4
 80027cc:	8010      	strh	r0, [r2, #0]
 80027ce:	000a      	movs	r2, r1
 80027d0:	3337      	adds	r3, #55	@ 0x37
 80027d2:	b2d9      	uxtb	r1, r3
 80027d4:	230c      	movs	r3, #12
 80027d6:	18fb      	adds	r3, r7, r3
 80027d8:	5499      	strb	r1, [r3, r2]
		while (number)
 80027da:	687b      	ldr	r3, [r7, #4]
 80027dc:	2b00      	cmp	r3, #0
 80027de:	d1ba      	bne.n	8002756 <printStates+0x22>
		}
		/* Terminate string */
		x_str[n] = '\0';
 80027e0:	2334      	movs	r3, #52	@ 0x34
 80027e2:	18fb      	adds	r3, r7, r3
 80027e4:	2200      	movs	r2, #0
 80027e6:	5e9b      	ldrsh	r3, [r3, r2]
 80027e8:	220c      	movs	r2, #12
 80027ea:	18ba      	adds	r2, r7, r2
 80027ec:	2100      	movs	r1, #0
 80027ee:	54d1      	strb	r1, [r2, r3]
		/* Reverse string */
		for (i=0; i<n/2; i++)
 80027f0:	2336      	movs	r3, #54	@ 0x36
 80027f2:	18fb      	adds	r3, r7, r3
 80027f4:	2200      	movs	r2, #0
 80027f6:	801a      	strh	r2, [r3, #0]
 80027f8:	e02d      	b.n	8002856 <printStates+0x122>
		{
			t = x_str[i];
 80027fa:	2036      	movs	r0, #54	@ 0x36
 80027fc:	183b      	adds	r3, r7, r0
 80027fe:	2200      	movs	r2, #0
 8002800:	5e9a      	ldrsh	r2, [r3, r2]
 8002802:	2531      	movs	r5, #49	@ 0x31
 8002804:	197b      	adds	r3, r7, r5
 8002806:	240c      	movs	r4, #12
 8002808:	1939      	adds	r1, r7, r4
 800280a:	5c8a      	ldrb	r2, [r1, r2]
 800280c:	701a      	strb	r2, [r3, #0]
			x_str[i] = x_str[n-i-1];
 800280e:	2634      	movs	r6, #52	@ 0x34
 8002810:	19bb      	adds	r3, r7, r6
 8002812:	2200      	movs	r2, #0
 8002814:	5e9a      	ldrsh	r2, [r3, r2]
 8002816:	183b      	adds	r3, r7, r0
 8002818:	2100      	movs	r1, #0
 800281a:	5e5b      	ldrsh	r3, [r3, r1]
 800281c:	1ad3      	subs	r3, r2, r3
 800281e:	1e5a      	subs	r2, r3, #1
 8002820:	183b      	adds	r3, r7, r0
 8002822:	2100      	movs	r1, #0
 8002824:	5e5b      	ldrsh	r3, [r3, r1]
 8002826:	1939      	adds	r1, r7, r4
 8002828:	5c89      	ldrb	r1, [r1, r2]
 800282a:	193a      	adds	r2, r7, r4
 800282c:	54d1      	strb	r1, [r2, r3]
			x_str[n-i-1] = t;
 800282e:	19bb      	adds	r3, r7, r6
 8002830:	2200      	movs	r2, #0
 8002832:	5e9a      	ldrsh	r2, [r3, r2]
 8002834:	183b      	adds	r3, r7, r0
 8002836:	2100      	movs	r1, #0
 8002838:	5e5b      	ldrsh	r3, [r3, r1]
 800283a:	1ad3      	subs	r3, r2, r3
 800283c:	3b01      	subs	r3, #1
 800283e:	193a      	adds	r2, r7, r4
 8002840:	1979      	adds	r1, r7, r5
 8002842:	7809      	ldrb	r1, [r1, #0]
 8002844:	54d1      	strb	r1, [r2, r3]
		for (i=0; i<n/2; i++)
 8002846:	183b      	adds	r3, r7, r0
 8002848:	2200      	movs	r2, #0
 800284a:	5e9b      	ldrsh	r3, [r3, r2]
 800284c:	b29b      	uxth	r3, r3
 800284e:	3301      	adds	r3, #1
 8002850:	b29a      	uxth	r2, r3
 8002852:	183b      	adds	r3, r7, r0
 8002854:	801a      	strh	r2, [r3, #0]
 8002856:	2334      	movs	r3, #52	@ 0x34
 8002858:	18fb      	adds	r3, r7, r3
 800285a:	2200      	movs	r2, #0
 800285c:	5e9b      	ldrsh	r3, [r3, r2]
 800285e:	2b00      	cmp	r3, #0
 8002860:	da00      	bge.n	8002864 <printStates+0x130>
 8002862:	3301      	adds	r3, #1
 8002864:	105b      	asrs	r3, r3, #1
 8002866:	b21b      	sxth	r3, r3
 8002868:	2236      	movs	r2, #54	@ 0x36
 800286a:	18ba      	adds	r2, r7, r2
 800286c:	2100      	movs	r1, #0
 800286e:	5e52      	ldrsh	r2, [r2, r1]
 8002870:	429a      	cmp	r2, r3
 8002872:	dbc2      	blt.n	80027fa <printStates+0xc6>
	    }
		if (x_str[0]=='\0')
 8002874:	230c      	movs	r3, #12
 8002876:	18fb      	adds	r3, r7, r3
 8002878:	781b      	ldrb	r3, [r3, #0]
 800287a:	2b00      	cmp	r3, #0
 800287c:	d104      	bne.n	8002888 <printStates+0x154>
		{
			TransmitString_TII("0");
 800287e:	4b07      	ldr	r3, [pc, #28]	@ (800289c <printStates+0x168>)
 8002880:	0018      	movs	r0, r3
 8002882:	f000 fb09 	bl	8002e98 <TransmitString_TII>
		{
			TransmitString_TII(x_str);

		}

}
 8002886:	e004      	b.n	8002892 <printStates+0x15e>
			TransmitString_TII(x_str);
 8002888:	230c      	movs	r3, #12
 800288a:	18fb      	adds	r3, r7, r3
 800288c:	0018      	movs	r0, r3
 800288e:	f000 fb03 	bl	8002e98 <TransmitString_TII>
}
 8002892:	46c0      	nop			@ (mov r8, r8)
 8002894:	46bd      	mov	sp, r7
 8002896:	b00f      	add	sp, #60	@ 0x3c
 8002898:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800289a:	46c0      	nop			@ (mov r8, r8)
 800289c:	08004094 	.word	0x08004094

080028a0 <Get_LocalClock>:
void Inc_LocalClock(void)
{
	local_tick++;
}
uint32_t Get_LocalClock(void)
{
 80028a0:	b580      	push	{r7, lr}
 80028a2:	af00      	add	r7, sp, #0
	return local_tick;
 80028a4:	4b02      	ldr	r3, [pc, #8]	@ (80028b0 <Get_LocalClock+0x10>)
 80028a6:	681b      	ldr	r3, [r3, #0]
}
 80028a8:	0018      	movs	r0, r3
 80028aa:	46bd      	mov	sp, r7
 80028ac:	bd80      	pop	{r7, pc}
 80028ae:	46c0      	nop			@ (mov r8, r8)
 80028b0:	20000260 	.word	0x20000260

080028b4 <main>:
  * Brief  Main program.
  * Param  None
  * Return None
  */
int main(void)
{
 80028b4:	b5b0      	push	{r4, r5, r7, lr}
 80028b6:	b09a      	sub	sp, #104	@ 0x68
 80028b8:	af00      	add	r7, sp, #0
     * file (startup_stm32f072xb.s) before to branch to application main.
     * To reconfigure the default setting of SystemInit() function, refer to
     * system_stm32f0xx.c file
     */

	SysTick_Config(80000); // SysTick interrupt every 1ms (System runs on 8MHz)
 80028ba:	4b6e      	ldr	r3, [pc, #440]	@ (8002a74 <main+0x1c0>)
 80028bc:	0018      	movs	r0, r3
 80028be:	f7ff fead 	bl	800261c <SysTick_Config>

	Configure_GlobalClock();
 80028c2:	f7ff fdc1 	bl	8002448 <Configure_GlobalClock>

    ConfigureGPIO();
 80028c6:	f000 f903 	bl	8002ad0 <ConfigureGPIO>
    ConfigureExternalIT();
 80028ca:	f000 f919 	bl	8002b00 <ConfigureExternalIT>
    ConfigureGPIO_TII(); // Used for monitoring the component
 80028ce:	f000 fa4d 	bl	8002d6c <ConfigureGPIO_TII>
    Configure_TII();
 80028d2:	f000 fa71 	bl	8002db8 <Configure_TII>
    Configure_CNI(); // For master-node communication
 80028d6:	f7ff fb9d 	bl	8002014 <Configure_CNI>
    Configure_FakeSensor();
 80028da:	f7ff fd91 	bl	8002400 <Configure_FakeSensor>

    /* Initialize Simulink model */
     Undamped_initialize();
 80028de:	f7ff fae9 	bl	8001eb4 <Undamped_initialize>
     TransmitString_TII("Pendulum Plant Emulator Started\r\n");
 80028e2:	4b65      	ldr	r3, [pc, #404]	@ (8002a78 <main+0x1c4>)
 80028e4:	0018      	movs	r0, r3
 80028e6:	f000 fad7 	bl	8002e98 <TransmitString_TII>

     uint32_t tick=0;
 80028ea:	2300      	movs	r3, #0
 80028ec:	667b      	str	r3, [r7, #100]	@ 0x64
     uint32_t lasttick=0;
 80028ee:	2300      	movs	r3, #0
 80028f0:	663b      	str	r3, [r7, #96]	@ 0x60

    while(1) // Infinite loop
    {
    	if(mode == MASTER)
 80028f2:	4b62      	ldr	r3, [pc, #392]	@ (8002a7c <main+0x1c8>)
 80028f4:	781b      	ldrb	r3, [r3, #0]
 80028f6:	b2db      	uxtb	r3, r3
 80028f8:	2b01      	cmp	r3, #1
 80028fa:	d105      	bne.n	8002908 <main+0x54>
    	{
        	// Wait for 1000ms
    		delay_ms(1000);
 80028fc:	23fa      	movs	r3, #250	@ 0xfa
 80028fe:	009b      	lsls	r3, r3, #2
 8002900:	0018      	movs	r0, r3
 8002902:	f000 f8cf 	bl	8002aa4 <delay_ms>
 8002906:	e7f4      	b.n	80028f2 <main+0x3e>

    	}
    	else // Node
    	{

    		lasttick = tick;
 8002908:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800290a:	663b      	str	r3, [r7, #96]	@ 0x60
        	tick= Get_LocalClock();
 800290c:	f7ff ffc8 	bl	80028a0 <Get_LocalClock>
 8002910:	0003      	movs	r3, r0
 8002912:	667b      	str	r3, [r7, #100]	@ 0x64
        	if (tick>lasttick)
 8002914:	6e7a      	ldr	r2, [r7, #100]	@ 0x64
 8002916:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8002918:	429a      	cmp	r2, r3
 800291a:	d800      	bhi.n	800291e <main+0x6a>
 800291c:	e098      	b.n	8002a50 <main+0x19c>
        	{
        		IncomingMessageHandler_CNI();
 800291e:	f7ff fb9d 	bl	800205c <IncomingMessageHandler_CNI>
        		// Execute one simulation step
        		Undamped_step();
 8002922:	f7ff fa51 	bl	8001dc8 <Undamped_step>

        		// Output data in the format: torque, acceleration, velocity, displacement
        		statesToInt(rtU.controlTorque);
 8002926:	4b56      	ldr	r3, [pc, #344]	@ (8002a80 <main+0x1cc>)
 8002928:	681a      	ldr	r2, [r3, #0]
 800292a:	685b      	ldr	r3, [r3, #4]
 800292c:	0010      	movs	r0, r2
 800292e:	0019      	movs	r1, r3
 8002930:	f7ff fe98 	bl	8002664 <statesToInt>
        		TransmitString_TII((char*)" ");  // Input torque
 8002934:	4b53      	ldr	r3, [pc, #332]	@ (8002a84 <main+0x1d0>)
 8002936:	0018      	movs	r0, r3
 8002938:	f000 faae 	bl	8002e98 <TransmitString_TII>
        		statesToInt(rtY.thetaDoubleDot);     // Angular acceleration
 800293c:	4b52      	ldr	r3, [pc, #328]	@ (8002a88 <main+0x1d4>)
 800293e:	691a      	ldr	r2, [r3, #16]
 8002940:	695b      	ldr	r3, [r3, #20]
 8002942:	0010      	movs	r0, r2
 8002944:	0019      	movs	r1, r3
 8002946:	f7ff fe8d 	bl	8002664 <statesToInt>
        		TransmitString_TII(" ");
 800294a:	4b4e      	ldr	r3, [pc, #312]	@ (8002a84 <main+0x1d0>)
 800294c:	0018      	movs	r0, r3
 800294e:	f000 faa3 	bl	8002e98 <TransmitString_TII>
        		statesToInt(rtY.thetaDot);           // Angular velocity
 8002952:	4b4d      	ldr	r3, [pc, #308]	@ (8002a88 <main+0x1d4>)
 8002954:	689a      	ldr	r2, [r3, #8]
 8002956:	68db      	ldr	r3, [r3, #12]
 8002958:	0010      	movs	r0, r2
 800295a:	0019      	movs	r1, r3
 800295c:	f7ff fe82 	bl	8002664 <statesToInt>
        		TransmitString_TII(" ");
 8002960:	4b48      	ldr	r3, [pc, #288]	@ (8002a84 <main+0x1d0>)
 8002962:	0018      	movs	r0, r3
 8002964:	f000 fa98 	bl	8002e98 <TransmitString_TII>
        		statesToInt(rtY.theta);              // Angular position
 8002968:	4b47      	ldr	r3, [pc, #284]	@ (8002a88 <main+0x1d4>)
 800296a:	681a      	ldr	r2, [r3, #0]
 800296c:	685b      	ldr	r3, [r3, #4]
 800296e:	0010      	movs	r0, r2
 8002970:	0019      	movs	r1, r3
 8002972:	f7ff fe77 	bl	8002664 <statesToInt>
        		TransmitString_TII(" ");
 8002976:	4b43      	ldr	r3, [pc, #268]	@ (8002a84 <main+0x1d0>)
 8002978:	0018      	movs	r0, r3
 800297a:	f000 fa8d 	bl	8002e98 <TransmitString_TII>
        		statesToInt((double)Get_GlobalClock());        // Show global clock
 800297e:	f7ff fd6d 	bl	800245c <Get_GlobalClock>
 8002982:	0003      	movs	r3, r0
 8002984:	0018      	movs	r0, r3
 8002986:	f7ff f9dd 	bl	8001d44 <__aeabi_ui2d>
 800298a:	0002      	movs	r2, r0
 800298c:	000b      	movs	r3, r1
 800298e:	0010      	movs	r0, r2
 8002990:	0019      	movs	r1, r3
 8002992:	f7ff fe67 	bl	8002664 <statesToInt>

        		TransmitString_TII("\r\n");
 8002996:	4b3d      	ldr	r3, [pc, #244]	@ (8002a8c <main+0x1d8>)
 8002998:	0018      	movs	r0, r3
 800299a:	f000 fa7d 	bl	8002e98 <TransmitString_TII>

        		observation_t obs =
 800299e:	0039      	movs	r1, r7
 80029a0:	4a3b      	ldr	r2, [pc, #236]	@ (8002a90 <main+0x1dc>)
 80029a2:	000b      	movs	r3, r1
 80029a4:	ca31      	ldmia	r2!, {r0, r4, r5}
 80029a6:	c331      	stmia	r3!, {r0, r4, r5}
 80029a8:	7812      	ldrb	r2, [r2, #0]
 80029aa:	701a      	strb	r2, [r3, #0]
 80029ac:	230d      	movs	r3, #13
 80029ae:	18cb      	adds	r3, r1, r3
 80029b0:	2203      	movs	r2, #3
 80029b2:	2100      	movs	r1, #0
 80029b4:	0018      	movs	r0, r3
 80029b6:	f000 fb22 	bl	8002ffe <memset>
        			{"acceleration", Get_GlobalClock(), (double)rtY.thetaDoubleDot};
 80029ba:	f7ff fd4f 	bl	800245c <Get_GlobalClock>
 80029be:	0002      	movs	r2, r0
        		observation_t obs =
 80029c0:	003b      	movs	r3, r7
 80029c2:	611a      	str	r2, [r3, #16]
        			{"acceleration", Get_GlobalClock(), (double)rtY.thetaDoubleDot};
 80029c4:	4b30      	ldr	r3, [pc, #192]	@ (8002a88 <main+0x1d4>)
 80029c6:	691a      	ldr	r2, [r3, #16]
 80029c8:	695b      	ldr	r3, [r3, #20]
        		observation_t obs =
 80029ca:	0039      	movs	r1, r7
 80029cc:	618a      	str	r2, [r1, #24]
 80029ce:	61cb      	str	r3, [r1, #28]

        		// Transmit the observation message
        		TransmitMessage_CNI(&obs);
 80029d0:	003b      	movs	r3, r7
 80029d2:	0018      	movs	r0, r3
 80029d4:	f7ff fb27 	bl	8002026 <TransmitMessage_CNI>

    			observation_t obs1 =
 80029d8:	2520      	movs	r5, #32
 80029da:	1979      	adds	r1, r7, r5
 80029dc:	4a2d      	ldr	r2, [pc, #180]	@ (8002a94 <main+0x1e0>)
 80029de:	000b      	movs	r3, r1
 80029e0:	ca11      	ldmia	r2!, {r0, r4}
 80029e2:	c311      	stmia	r3!, {r0, r4}
 80029e4:	7812      	ldrb	r2, [r2, #0]
 80029e6:	701a      	strb	r2, [r3, #0]
 80029e8:	2309      	movs	r3, #9
 80029ea:	18cb      	adds	r3, r1, r3
 80029ec:	2207      	movs	r2, #7
 80029ee:	2100      	movs	r1, #0
 80029f0:	0018      	movs	r0, r3
 80029f2:	f000 fb04 	bl	8002ffe <memset>
    				{"velocity", Get_GlobalClock(), (double)rtY.thetaDot};
 80029f6:	f7ff fd31 	bl	800245c <Get_GlobalClock>
 80029fa:	0002      	movs	r2, r0
    			observation_t obs1 =
 80029fc:	197b      	adds	r3, r7, r5
 80029fe:	611a      	str	r2, [r3, #16]
    				{"velocity", Get_GlobalClock(), (double)rtY.thetaDot};
 8002a00:	4b21      	ldr	r3, [pc, #132]	@ (8002a88 <main+0x1d4>)
 8002a02:	689a      	ldr	r2, [r3, #8]
 8002a04:	68db      	ldr	r3, [r3, #12]
    			observation_t obs1 =
 8002a06:	1979      	adds	r1, r7, r5
 8002a08:	618a      	str	r2, [r1, #24]
 8002a0a:	61cb      	str	r3, [r1, #28]
    			TransmitMessage_CNI(&obs1);
 8002a0c:	197b      	adds	r3, r7, r5
 8002a0e:	0018      	movs	r0, r3
 8002a10:	f7ff fb09 	bl	8002026 <TransmitMessage_CNI>

    			observation_t obs2 =
 8002a14:	2440      	movs	r4, #64	@ 0x40
 8002a16:	1939      	adds	r1, r7, r4
 8002a18:	4a1f      	ldr	r2, [pc, #124]	@ (8002a98 <main+0x1e4>)
 8002a1a:	000b      	movs	r3, r1
 8002a1c:	6810      	ldr	r0, [r2, #0]
 8002a1e:	6018      	str	r0, [r3, #0]
 8002a20:	8892      	ldrh	r2, [r2, #4]
 8002a22:	809a      	strh	r2, [r3, #4]
 8002a24:	2306      	movs	r3, #6
 8002a26:	18cb      	adds	r3, r1, r3
 8002a28:	220a      	movs	r2, #10
 8002a2a:	2100      	movs	r1, #0
 8002a2c:	0018      	movs	r0, r3
 8002a2e:	f000 fae6 	bl	8002ffe <memset>
    								{"angle", Get_GlobalClock(), (double)rtY.theta};
 8002a32:	f7ff fd13 	bl	800245c <Get_GlobalClock>
 8002a36:	0002      	movs	r2, r0
    			observation_t obs2 =
 8002a38:	193b      	adds	r3, r7, r4
 8002a3a:	611a      	str	r2, [r3, #16]
    								{"angle", Get_GlobalClock(), (double)rtY.theta};
 8002a3c:	4b12      	ldr	r3, [pc, #72]	@ (8002a88 <main+0x1d4>)
 8002a3e:	681a      	ldr	r2, [r3, #0]
 8002a40:	685b      	ldr	r3, [r3, #4]
    			observation_t obs2 =
 8002a42:	1939      	adds	r1, r7, r4
 8002a44:	618a      	str	r2, [r1, #24]
 8002a46:	61cb      	str	r3, [r1, #28]
    							TransmitMessage_CNI(&obs2);
 8002a48:	193b      	adds	r3, r7, r4
 8002a4a:	0018      	movs	r0, r3
 8002a4c:	f7ff faeb 	bl	8002026 <TransmitMessage_CNI>

        	}
    	    if((local_tick % 500) == 0){
 8002a50:	4b12      	ldr	r3, [pc, #72]	@ (8002a9c <main+0x1e8>)
 8002a52:	681b      	ldr	r3, [r3, #0]
 8002a54:	22fa      	movs	r2, #250	@ 0xfa
 8002a56:	0051      	lsls	r1, r2, #1
 8002a58:	0018      	movs	r0, r3
 8002a5a:	f7fd fbe5 	bl	8000228 <__aeabi_uidivmod>

    	    }

    		// Read the RT image of the fake sensor
    		if(Get_FakeSensorValue() == 1)
 8002a5e:	f7ff fcd9 	bl	8002414 <Get_FakeSensorValue>
 8002a62:	0003      	movs	r3, r0
 8002a64:	2b01      	cmp	r3, #1
 8002a66:	d000      	beq.n	8002a6a <main+0x1b6>
 8002a68:	e743      	b.n	80028f2 <main+0x3e>
    		{
    			// Transmit message
    			TransmitString_TII("B1 clicked on master\r\n");
 8002a6a:	4b0d      	ldr	r3, [pc, #52]	@ (8002aa0 <main+0x1ec>)
 8002a6c:	0018      	movs	r0, r3
 8002a6e:	f000 fa13 	bl	8002e98 <TransmitString_TII>
    	if(mode == MASTER)
 8002a72:	e73e      	b.n	80028f2 <main+0x3e>
 8002a74:	00013880 	.word	0x00013880
 8002a78:	08004098 	.word	0x08004098
 8002a7c:	2000025c 	.word	0x2000025c
 8002a80:	20000030 	.word	0x20000030
 8002a84:	080040bc 	.word	0x080040bc
 8002a88:	20000038 	.word	0x20000038
 8002a8c:	080040c0 	.word	0x080040c0
 8002a90:	080040dc 	.word	0x080040dc
 8002a94:	080040ec 	.word	0x080040ec
 8002a98:	080040fc 	.word	0x080040fc
 8002a9c:	20000260 	.word	0x20000260
 8002aa0:	080040c4 	.word	0x080040c4

08002aa4 <delay_ms>:
  *        - variable is incremented every 1ms
  * Param  None
  * Return None
  */
inline void delay_ms(const uint32_t t)
{
 8002aa4:	b580      	push	{r7, lr}
 8002aa6:	b084      	sub	sp, #16
 8002aa8:	af00      	add	r7, sp, #0
 8002aaa:	6078      	str	r0, [r7, #4]
	uint32_t tick_stop = local_tick + t;
 8002aac:	4b07      	ldr	r3, [pc, #28]	@ (8002acc <delay_ms+0x28>)
 8002aae:	681b      	ldr	r3, [r3, #0]
 8002ab0:	687a      	ldr	r2, [r7, #4]
 8002ab2:	18d3      	adds	r3, r2, r3
 8002ab4:	60fb      	str	r3, [r7, #12]

	while(local_tick < tick_stop)
 8002ab6:	46c0      	nop			@ (mov r8, r8)
 8002ab8:	4b04      	ldr	r3, [pc, #16]	@ (8002acc <delay_ms+0x28>)
 8002aba:	681b      	ldr	r3, [r3, #0]
 8002abc:	68fa      	ldr	r2, [r7, #12]
 8002abe:	429a      	cmp	r2, r3
 8002ac0:	d8fa      	bhi.n	8002ab8 <delay_ms+0x14>
	{
		; // Do nothing
	}
}
 8002ac2:	46c0      	nop			@ (mov r8, r8)
 8002ac4:	46c0      	nop			@ (mov r8, r8)
 8002ac6:	46bd      	mov	sp, r7
 8002ac8:	b004      	add	sp, #16
 8002aca:	bd80      	pop	{r7, pc}
 8002acc:	20000260 	.word	0x20000260

08002ad0 <ConfigureGPIO>:
  *        - configures GPIO PA5 in output mode for the Green LED pin
  * Param  None
  * Return None
  */
inline void ConfigureGPIO(void)
{  
 8002ad0:	b580      	push	{r7, lr}
 8002ad2:	af00      	add	r7, sp, #0
    // 1. Enable the peripheral clock of GPIOA
    // 2. Select output mode (01) on PA5
    RCC->AHBENR |= RCC_AHBENR_GPIOAEN;
 8002ad4:	4b09      	ldr	r3, [pc, #36]	@ (8002afc <ConfigureGPIO+0x2c>)
 8002ad6:	695a      	ldr	r2, [r3, #20]
 8002ad8:	4b08      	ldr	r3, [pc, #32]	@ (8002afc <ConfigureGPIO+0x2c>)
 8002ada:	2180      	movs	r1, #128	@ 0x80
 8002adc:	0289      	lsls	r1, r1, #10
 8002ade:	430a      	orrs	r2, r1
 8002ae0:	615a      	str	r2, [r3, #20]
    GPIOA->MODER |= GPIO_MODER_MODER5_0;
 8002ae2:	2390      	movs	r3, #144	@ 0x90
 8002ae4:	05db      	lsls	r3, r3, #23
 8002ae6:	681a      	ldr	r2, [r3, #0]
 8002ae8:	2390      	movs	r3, #144	@ 0x90
 8002aea:	05db      	lsls	r3, r3, #23
 8002aec:	2180      	movs	r1, #128	@ 0x80
 8002aee:	00c9      	lsls	r1, r1, #3
 8002af0:	430a      	orrs	r2, r1
 8002af2:	601a      	str	r2, [r3, #0]
}
 8002af4:	46c0      	nop			@ (mov r8, r8)
 8002af6:	46bd      	mov	sp, r7
 8002af8:	bd80      	pop	{r7, pc}
 8002afa:	46c0      	nop			@ (mov r8, r8)
 8002afc:	40021000 	.word	0x40021000

08002b00 <ConfigureExternalIT>:
  *        - configures NVIC IRQ
  * Param  None
  * Return None
  */
inline void ConfigureExternalIT(void)
{  
 8002b00:	b580      	push	{r7, lr}
 8002b02:	af00      	add	r7, sp, #0
    // 1. Enable the peripheral clock of SYSCFG
    // 2. Enable the peripheral clock of GPIOC
    // 3. Select PORTC for EXTI13 by writing 0010 in SYSCFG_EXTICR4
    // 4. Configure the corresponding mask bit in the EXTI_IMR register
    // 5. Configure the Trigger Selection bits on falling edge
    RCC->APB2ENR |= RCC_APB2ENR_SYSCFGCOMPEN;
 8002b04:	4b15      	ldr	r3, [pc, #84]	@ (8002b5c <ConfigureExternalIT+0x5c>)
 8002b06:	699a      	ldr	r2, [r3, #24]
 8002b08:	4b14      	ldr	r3, [pc, #80]	@ (8002b5c <ConfigureExternalIT+0x5c>)
 8002b0a:	2101      	movs	r1, #1
 8002b0c:	430a      	orrs	r2, r1
 8002b0e:	619a      	str	r2, [r3, #24]
    RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 8002b10:	4b12      	ldr	r3, [pc, #72]	@ (8002b5c <ConfigureExternalIT+0x5c>)
 8002b12:	695a      	ldr	r2, [r3, #20]
 8002b14:	4b11      	ldr	r3, [pc, #68]	@ (8002b5c <ConfigureExternalIT+0x5c>)
 8002b16:	2180      	movs	r1, #128	@ 0x80
 8002b18:	0309      	lsls	r1, r1, #12
 8002b1a:	430a      	orrs	r2, r1
 8002b1c:	615a      	str	r2, [r3, #20]
    SYSCFG->EXTICR[3] |= SYSCFG_EXTICR4_EXTI13_PC;
 8002b1e:	4b10      	ldr	r3, [pc, #64]	@ (8002b60 <ConfigureExternalIT+0x60>)
 8002b20:	695a      	ldr	r2, [r3, #20]
 8002b22:	4b0f      	ldr	r3, [pc, #60]	@ (8002b60 <ConfigureExternalIT+0x60>)
 8002b24:	2120      	movs	r1, #32
 8002b26:	430a      	orrs	r2, r1
 8002b28:	615a      	str	r2, [r3, #20]
    EXTI->IMR |= EXTI_IMR_MR13;
 8002b2a:	4b0e      	ldr	r3, [pc, #56]	@ (8002b64 <ConfigureExternalIT+0x64>)
 8002b2c:	681a      	ldr	r2, [r3, #0]
 8002b2e:	4b0d      	ldr	r3, [pc, #52]	@ (8002b64 <ConfigureExternalIT+0x64>)
 8002b30:	2180      	movs	r1, #128	@ 0x80
 8002b32:	0189      	lsls	r1, r1, #6
 8002b34:	430a      	orrs	r2, r1
 8002b36:	601a      	str	r2, [r3, #0]
    EXTI->FTSR |= EXTI_FTSR_TR13;
 8002b38:	4b0a      	ldr	r3, [pc, #40]	@ (8002b64 <ConfigureExternalIT+0x64>)
 8002b3a:	68da      	ldr	r2, [r3, #12]
 8002b3c:	4b09      	ldr	r3, [pc, #36]	@ (8002b64 <ConfigureExternalIT+0x64>)
 8002b3e:	2180      	movs	r1, #128	@ 0x80
 8002b40:	0189      	lsls	r1, r1, #6
 8002b42:	430a      	orrs	r2, r1
 8002b44:	60da      	str	r2, [r3, #12]

    // Configure NVIC for External Interrupt
    // 6. Set priority for EXTI4_15
    // 7. Enable Interrupt on EXTI4_15
    NVIC_SetPriority(EXTI4_15_IRQn, 3);
 8002b46:	2103      	movs	r1, #3
 8002b48:	2007      	movs	r0, #7
 8002b4a:	f7ff fcf9 	bl	8002540 <__NVIC_SetPriority>
    NVIC_EnableIRQ(EXTI4_15_IRQn);
 8002b4e:	2007      	movs	r0, #7
 8002b50:	f7ff fcdc 	bl	800250c <__NVIC_EnableIRQ>
}
 8002b54:	46c0      	nop			@ (mov r8, r8)
 8002b56:	46bd      	mov	sp, r7
 8002b58:	bd80      	pop	{r7, pc}
 8002b5a:	46c0      	nop			@ (mov r8, r8)
 8002b5c:	40021000 	.word	0x40021000
 8002b60:	40010000 	.word	0x40010000
 8002b64:	40010400 	.word	0x40010400

08002b68 <NMI_Handler>:
  * Brief  This function handles NMI exception.
  * Param  None
  * Return None
  */
void NMI_Handler(void)
{
 8002b68:	b580      	push	{r7, lr}
 8002b6a:	af00      	add	r7, sp, #0
}
 8002b6c:	46c0      	nop			@ (mov r8, r8)
 8002b6e:	46bd      	mov	sp, r7
 8002b70:	bd80      	pop	{r7, pc}

08002b72 <HardFault_Handler>:
  * Brief  This function handles Hard Fault exception.
  * Param  None
  * Return None
  */
void HardFault_Handler(void)
{
 8002b72:	b580      	push	{r7, lr}
 8002b74:	af00      	add	r7, sp, #0
    // Go to infinite loop when Hard Fault exception occurs
    while (1)
 8002b76:	46c0      	nop			@ (mov r8, r8)
 8002b78:	e7fd      	b.n	8002b76 <HardFault_Handler+0x4>

08002b7a <SVC_Handler>:
  * Brief  This function handles SVCall exception.
  * Param  None
  * Return None
  */
void SVC_Handler(void)
{
 8002b7a:	b580      	push	{r7, lr}
 8002b7c:	af00      	add	r7, sp, #0
}
 8002b7e:	46c0      	nop			@ (mov r8, r8)
 8002b80:	46bd      	mov	sp, r7
 8002b82:	bd80      	pop	{r7, pc}

08002b84 <PendSV_Handler>:
  * Brief  This function handles PendSVC exception.
  * Param  None
  * Return None
  */
void PendSV_Handler(void)
{
 8002b84:	b580      	push	{r7, lr}
 8002b86:	af00      	add	r7, sp, #0
}
 8002b88:	46c0      	nop			@ (mov r8, r8)
 8002b8a:	46bd      	mov	sp, r7
 8002b8c:	bd80      	pop	{r7, pc}
	...

08002b90 <SysTick_Handler>:
  * Brief  This function handles SysTick exception.
  * Param  None
  * Return None
  */
void SysTick_Handler(void)
{
 8002b90:	b580      	push	{r7, lr}
 8002b92:	af00      	add	r7, sp, #0
	// Increment local clock every 1ms
	local_tick++;
 8002b94:	4b08      	ldr	r3, [pc, #32]	@ (8002bb8 <SysTick_Handler+0x28>)
 8002b96:	681b      	ldr	r3, [r3, #0]
 8002b98:	1c5a      	adds	r2, r3, #1
 8002b9a:	4b07      	ldr	r3, [pc, #28]	@ (8002bb8 <SysTick_Handler+0x28>)
 8002b9c:	601a      	str	r2, [r3, #0]

	// Increment global clock every 50ms
	if((local_tick % 50) == 0)
 8002b9e:	4b06      	ldr	r3, [pc, #24]	@ (8002bb8 <SysTick_Handler+0x28>)
 8002ba0:	681b      	ldr	r3, [r3, #0]
 8002ba2:	2132      	movs	r1, #50	@ 0x32
 8002ba4:	0018      	movs	r0, r3
 8002ba6:	f7fd fb3f 	bl	8000228 <__aeabi_uidivmod>
 8002baa:	1e0b      	subs	r3, r1, #0
 8002bac:	d101      	bne.n	8002bb2 <SysTick_Handler+0x22>
	{
		// Write the RT image of the global clock
		Inc_GlobalClock();
 8002bae:	f7ff fc87 	bl	80024c0 <Inc_GlobalClock>
	}
}
 8002bb2:	46c0      	nop			@ (mov r8, r8)
 8002bb4:	46bd      	mov	sp, r7
 8002bb6:	bd80      	pop	{r7, pc}
 8002bb8:	20000260 	.word	0x20000260

08002bbc <EXTI4_15_IRQHandler>:
  * Brief  This function handles EXTI4_15 interrupt request.
  * Param  None
  * Return None
  */
void EXTI4_15_IRQHandler(void)
{
 8002bbc:	b580      	push	{r7, lr}
 8002bbe:	af00      	add	r7, sp, #0
    // Check line 13 has triggered the IT
    if ((EXTI->PR & EXTI_PR_PR13) != 0)
 8002bc0:	4b10      	ldr	r3, [pc, #64]	@ (8002c04 <EXTI4_15_IRQHandler+0x48>)
 8002bc2:	695a      	ldr	r2, [r3, #20]
 8002bc4:	2380      	movs	r3, #128	@ 0x80
 8002bc6:	019b      	lsls	r3, r3, #6
 8002bc8:	4013      	ands	r3, r2
 8002bca:	d017      	beq.n	8002bfc <EXTI4_15_IRQHandler+0x40>
    {
    	if(mode == MASTER)
 8002bcc:	4b0e      	ldr	r3, [pc, #56]	@ (8002c08 <EXTI4_15_IRQHandler+0x4c>)
 8002bce:	781b      	ldrb	r3, [r3, #0]
 8002bd0:	b2db      	uxtb	r3, r3
 8002bd2:	2b01      	cmp	r3, #1
 8002bd4:	d10b      	bne.n	8002bee <EXTI4_15_IRQHandler+0x32>
    	{
			// Update the RT image of the fake sensor
			if(Get_FakeSensorValue() == 0)
 8002bd6:	f7ff fc1d 	bl	8002414 <Get_FakeSensorValue>
 8002bda:	1e03      	subs	r3, r0, #0
 8002bdc:	d103      	bne.n	8002be6 <EXTI4_15_IRQHandler+0x2a>
			{
				Set_FakeSensorValue(1);
 8002bde:	2001      	movs	r0, #1
 8002be0:	f7ff fc22 	bl	8002428 <Set_FakeSensorValue>
 8002be4:	e006      	b.n	8002bf4 <EXTI4_15_IRQHandler+0x38>
			}
			else
			{
				Set_FakeSensorValue(0);
 8002be6:	2000      	movs	r0, #0
 8002be8:	f7ff fc1e 	bl	8002428 <Set_FakeSensorValue>
 8002bec:	e002      	b.n	8002bf4 <EXTI4_15_IRQHandler+0x38>
			}
    	}
    	else
    	{
    		mode = MASTER;
 8002bee:	4b06      	ldr	r3, [pc, #24]	@ (8002c08 <EXTI4_15_IRQHandler+0x4c>)
 8002bf0:	2201      	movs	r2, #1
 8002bf2:	701a      	strb	r2, [r3, #0]
    	}

        // Clear the pending bit
        EXTI->PR = EXTI_PR_PR13;
 8002bf4:	4b03      	ldr	r3, [pc, #12]	@ (8002c04 <EXTI4_15_IRQHandler+0x48>)
 8002bf6:	2280      	movs	r2, #128	@ 0x80
 8002bf8:	0192      	lsls	r2, r2, #6
 8002bfa:	615a      	str	r2, [r3, #20]
    }
    else // Should never occur
    {
        ;
    }
}
 8002bfc:	46c0      	nop			@ (mov r8, r8)
 8002bfe:	46bd      	mov	sp, r7
 8002c00:	bd80      	pop	{r7, pc}
 8002c02:	46c0      	nop			@ (mov r8, r8)
 8002c04:	40010400 	.word	0x40010400
 8002c08:	2000025c 	.word	0x2000025c

08002c0c <SystemInit>:
  * @brief  Setup the microcontroller system
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8002c0c:	b580      	push	{r7, lr}
 8002c0e:	af00      	add	r7, sp, #0
                         before branch to main program. This call is made inside
                         the "startup_stm32f0xx.s" file.
                         User can setups the default system clock (System clock source, PLL Multiplier
                         and Divider factors, AHB/APBx prescalers and Flash settings).
   */
}
 8002c10:	46c0      	nop			@ (mov r8, r8)
 8002c12:	46bd      	mov	sp, r7
 8002c14:	bd80      	pop	{r7, pc}
	...

08002c18 <__NVIC_EnableIRQ>:
{
 8002c18:	b580      	push	{r7, lr}
 8002c1a:	b082      	sub	sp, #8
 8002c1c:	af00      	add	r7, sp, #0
 8002c1e:	0002      	movs	r2, r0
 8002c20:	1dfb      	adds	r3, r7, #7
 8002c22:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 8002c24:	1dfb      	adds	r3, r7, #7
 8002c26:	781b      	ldrb	r3, [r3, #0]
 8002c28:	2b7f      	cmp	r3, #127	@ 0x7f
 8002c2a:	d809      	bhi.n	8002c40 <__NVIC_EnableIRQ+0x28>
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002c2c:	1dfb      	adds	r3, r7, #7
 8002c2e:	781b      	ldrb	r3, [r3, #0]
 8002c30:	001a      	movs	r2, r3
 8002c32:	231f      	movs	r3, #31
 8002c34:	401a      	ands	r2, r3
 8002c36:	4b04      	ldr	r3, [pc, #16]	@ (8002c48 <__NVIC_EnableIRQ+0x30>)
 8002c38:	2101      	movs	r1, #1
 8002c3a:	4091      	lsls	r1, r2
 8002c3c:	000a      	movs	r2, r1
 8002c3e:	601a      	str	r2, [r3, #0]
}
 8002c40:	46c0      	nop			@ (mov r8, r8)
 8002c42:	46bd      	mov	sp, r7
 8002c44:	b002      	add	sp, #8
 8002c46:	bd80      	pop	{r7, pc}
 8002c48:	e000e100 	.word	0xe000e100

08002c4c <__NVIC_DisableIRQ>:
{
 8002c4c:	b580      	push	{r7, lr}
 8002c4e:	b082      	sub	sp, #8
 8002c50:	af00      	add	r7, sp, #0
 8002c52:	0002      	movs	r2, r0
 8002c54:	1dfb      	adds	r3, r7, #7
 8002c56:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 8002c58:	1dfb      	adds	r3, r7, #7
 8002c5a:	781b      	ldrb	r3, [r3, #0]
 8002c5c:	2b7f      	cmp	r3, #127	@ 0x7f
 8002c5e:	d810      	bhi.n	8002c82 <__NVIC_DisableIRQ+0x36>
    NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002c60:	1dfb      	adds	r3, r7, #7
 8002c62:	781b      	ldrb	r3, [r3, #0]
 8002c64:	001a      	movs	r2, r3
 8002c66:	231f      	movs	r3, #31
 8002c68:	4013      	ands	r3, r2
 8002c6a:	4908      	ldr	r1, [pc, #32]	@ (8002c8c <__NVIC_DisableIRQ+0x40>)
 8002c6c:	2201      	movs	r2, #1
 8002c6e:	409a      	lsls	r2, r3
 8002c70:	0013      	movs	r3, r2
 8002c72:	2280      	movs	r2, #128	@ 0x80
 8002c74:	508b      	str	r3, [r1, r2]
  __ASM volatile ("dsb 0xF":::"memory");
 8002c76:	f3bf 8f4f 	dsb	sy
}
 8002c7a:	46c0      	nop			@ (mov r8, r8)
  __ASM volatile ("isb 0xF":::"memory");
 8002c7c:	f3bf 8f6f 	isb	sy
}
 8002c80:	46c0      	nop			@ (mov r8, r8)
}
 8002c82:	46c0      	nop			@ (mov r8, r8)
 8002c84:	46bd      	mov	sp, r7
 8002c86:	b002      	add	sp, #8
 8002c88:	bd80      	pop	{r7, pc}
 8002c8a:	46c0      	nop			@ (mov r8, r8)
 8002c8c:	e000e100 	.word	0xe000e100

08002c90 <__NVIC_SetPriority>:
{
 8002c90:	b590      	push	{r4, r7, lr}
 8002c92:	b083      	sub	sp, #12
 8002c94:	af00      	add	r7, sp, #0
 8002c96:	0002      	movs	r2, r0
 8002c98:	6039      	str	r1, [r7, #0]
 8002c9a:	1dfb      	adds	r3, r7, #7
 8002c9c:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 8002c9e:	1dfb      	adds	r3, r7, #7
 8002ca0:	781b      	ldrb	r3, [r3, #0]
 8002ca2:	2b7f      	cmp	r3, #127	@ 0x7f
 8002ca4:	d828      	bhi.n	8002cf8 <__NVIC_SetPriority+0x68>
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002ca6:	4a2f      	ldr	r2, [pc, #188]	@ (8002d64 <__NVIC_SetPriority+0xd4>)
 8002ca8:	1dfb      	adds	r3, r7, #7
 8002caa:	781b      	ldrb	r3, [r3, #0]
 8002cac:	b25b      	sxtb	r3, r3
 8002cae:	089b      	lsrs	r3, r3, #2
 8002cb0:	33c0      	adds	r3, #192	@ 0xc0
 8002cb2:	009b      	lsls	r3, r3, #2
 8002cb4:	589b      	ldr	r3, [r3, r2]
 8002cb6:	1dfa      	adds	r2, r7, #7
 8002cb8:	7812      	ldrb	r2, [r2, #0]
 8002cba:	0011      	movs	r1, r2
 8002cbc:	2203      	movs	r2, #3
 8002cbe:	400a      	ands	r2, r1
 8002cc0:	00d2      	lsls	r2, r2, #3
 8002cc2:	21ff      	movs	r1, #255	@ 0xff
 8002cc4:	4091      	lsls	r1, r2
 8002cc6:	000a      	movs	r2, r1
 8002cc8:	43d2      	mvns	r2, r2
 8002cca:	401a      	ands	r2, r3
 8002ccc:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8002cce:	683b      	ldr	r3, [r7, #0]
 8002cd0:	019b      	lsls	r3, r3, #6
 8002cd2:	22ff      	movs	r2, #255	@ 0xff
 8002cd4:	401a      	ands	r2, r3
 8002cd6:	1dfb      	adds	r3, r7, #7
 8002cd8:	781b      	ldrb	r3, [r3, #0]
 8002cda:	0018      	movs	r0, r3
 8002cdc:	2303      	movs	r3, #3
 8002cde:	4003      	ands	r3, r0
 8002ce0:	00db      	lsls	r3, r3, #3
 8002ce2:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002ce4:	481f      	ldr	r0, [pc, #124]	@ (8002d64 <__NVIC_SetPriority+0xd4>)
 8002ce6:	1dfb      	adds	r3, r7, #7
 8002ce8:	781b      	ldrb	r3, [r3, #0]
 8002cea:	b25b      	sxtb	r3, r3
 8002cec:	089b      	lsrs	r3, r3, #2
 8002cee:	430a      	orrs	r2, r1
 8002cf0:	33c0      	adds	r3, #192	@ 0xc0
 8002cf2:	009b      	lsls	r3, r3, #2
 8002cf4:	501a      	str	r2, [r3, r0]
}
 8002cf6:	e031      	b.n	8002d5c <__NVIC_SetPriority+0xcc>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002cf8:	4a1b      	ldr	r2, [pc, #108]	@ (8002d68 <__NVIC_SetPriority+0xd8>)
 8002cfa:	1dfb      	adds	r3, r7, #7
 8002cfc:	781b      	ldrb	r3, [r3, #0]
 8002cfe:	0019      	movs	r1, r3
 8002d00:	230f      	movs	r3, #15
 8002d02:	400b      	ands	r3, r1
 8002d04:	3b08      	subs	r3, #8
 8002d06:	089b      	lsrs	r3, r3, #2
 8002d08:	3306      	adds	r3, #6
 8002d0a:	009b      	lsls	r3, r3, #2
 8002d0c:	18d3      	adds	r3, r2, r3
 8002d0e:	3304      	adds	r3, #4
 8002d10:	681b      	ldr	r3, [r3, #0]
 8002d12:	1dfa      	adds	r2, r7, #7
 8002d14:	7812      	ldrb	r2, [r2, #0]
 8002d16:	0011      	movs	r1, r2
 8002d18:	2203      	movs	r2, #3
 8002d1a:	400a      	ands	r2, r1
 8002d1c:	00d2      	lsls	r2, r2, #3
 8002d1e:	21ff      	movs	r1, #255	@ 0xff
 8002d20:	4091      	lsls	r1, r2
 8002d22:	000a      	movs	r2, r1
 8002d24:	43d2      	mvns	r2, r2
 8002d26:	401a      	ands	r2, r3
 8002d28:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8002d2a:	683b      	ldr	r3, [r7, #0]
 8002d2c:	019b      	lsls	r3, r3, #6
 8002d2e:	22ff      	movs	r2, #255	@ 0xff
 8002d30:	401a      	ands	r2, r3
 8002d32:	1dfb      	adds	r3, r7, #7
 8002d34:	781b      	ldrb	r3, [r3, #0]
 8002d36:	0018      	movs	r0, r3
 8002d38:	2303      	movs	r3, #3
 8002d3a:	4003      	ands	r3, r0
 8002d3c:	00db      	lsls	r3, r3, #3
 8002d3e:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002d40:	4809      	ldr	r0, [pc, #36]	@ (8002d68 <__NVIC_SetPriority+0xd8>)
 8002d42:	1dfb      	adds	r3, r7, #7
 8002d44:	781b      	ldrb	r3, [r3, #0]
 8002d46:	001c      	movs	r4, r3
 8002d48:	230f      	movs	r3, #15
 8002d4a:	4023      	ands	r3, r4
 8002d4c:	3b08      	subs	r3, #8
 8002d4e:	089b      	lsrs	r3, r3, #2
 8002d50:	430a      	orrs	r2, r1
 8002d52:	3306      	adds	r3, #6
 8002d54:	009b      	lsls	r3, r3, #2
 8002d56:	18c3      	adds	r3, r0, r3
 8002d58:	3304      	adds	r3, #4
 8002d5a:	601a      	str	r2, [r3, #0]
}
 8002d5c:	46c0      	nop			@ (mov r8, r8)
 8002d5e:	46bd      	mov	sp, r7
 8002d60:	b003      	add	sp, #12
 8002d62:	bd90      	pop	{r4, r7, pc}
 8002d64:	e000e100 	.word	0xe000e100
 8002d68:	e000ed00 	.word	0xe000ed00

08002d6c <ConfigureGPIO_TII>:
           - Configures the UART pins on GPIO PA2 PA3
 * Param   None
 * Retval  None
 */
inline void ConfigureGPIO_TII(void)
{
 8002d6c:	b580      	push	{r7, lr}
 8002d6e:	af00      	add	r7, sp, #0
    // Enable the peripheral clock of GPIOA
    RCC->AHBENR |= RCC_AHBENR_GPIOAEN;
 8002d70:	4b0f      	ldr	r3, [pc, #60]	@ (8002db0 <ConfigureGPIO_TII+0x44>)
 8002d72:	695a      	ldr	r2, [r3, #20]
 8002d74:	4b0e      	ldr	r3, [pc, #56]	@ (8002db0 <ConfigureGPIO_TII+0x44>)
 8002d76:	2180      	movs	r1, #128	@ 0x80
 8002d78:	0289      	lsls	r1, r1, #10
 8002d7a:	430a      	orrs	r2, r1
 8002d7c:	615a      	str	r2, [r3, #20]

    // GPIO configuration for UART signals
    // 1. Select AF mode (10) on PA2 and PA3
    // 2. AF1 for UART signals
    GPIOA->MODER = (GPIOA->MODER & ~(GPIO_MODER_MODER2 | GPIO_MODER_MODER3))
 8002d7e:	2390      	movs	r3, #144	@ 0x90
 8002d80:	05db      	lsls	r3, r3, #23
 8002d82:	681b      	ldr	r3, [r3, #0]
 8002d84:	22f0      	movs	r2, #240	@ 0xf0
 8002d86:	4393      	bics	r3, r2
 8002d88:	001a      	movs	r2, r3
 8002d8a:	2390      	movs	r3, #144	@ 0x90
 8002d8c:	05db      	lsls	r3, r3, #23
            | (GPIO_MODER_MODER2_1 | GPIO_MODER_MODER3_1);
 8002d8e:	21a0      	movs	r1, #160	@ 0xa0
 8002d90:	430a      	orrs	r2, r1
    GPIOA->MODER = (GPIOA->MODER & ~(GPIO_MODER_MODER2 | GPIO_MODER_MODER3))
 8002d92:	601a      	str	r2, [r3, #0]
    GPIOA->AFR[0] = (GPIOA->AFR[0] & ~(GPIO_AFRL_AFRL2 | GPIO_AFRL_AFRL3))
 8002d94:	2390      	movs	r3, #144	@ 0x90
 8002d96:	05db      	lsls	r3, r3, #23
 8002d98:	6a1b      	ldr	r3, [r3, #32]
 8002d9a:	4a06      	ldr	r2, [pc, #24]	@ (8002db4 <ConfigureGPIO_TII+0x48>)
 8002d9c:	401a      	ands	r2, r3
 8002d9e:	2390      	movs	r3, #144	@ 0x90
 8002da0:	05db      	lsls	r3, r3, #23
            | (1 << (2 * 4)) | (1 << (3 * 4));
 8002da2:	2188      	movs	r1, #136	@ 0x88
 8002da4:	0149      	lsls	r1, r1, #5
 8002da6:	430a      	orrs	r2, r1
    GPIOA->AFR[0] = (GPIOA->AFR[0] & ~(GPIO_AFRL_AFRL2 | GPIO_AFRL_AFRL3))
 8002da8:	621a      	str	r2, [r3, #32]
}
 8002daa:	46c0      	nop			@ (mov r8, r8)
 8002dac:	46bd      	mov	sp, r7
 8002dae:	bd80      	pop	{r7, pc}
 8002db0:	40021000 	.word	0x40021000
 8002db4:	ffff00ff 	.word	0xffff00ff

08002db8 <Configure_TII>:
 *         - 9600,8,n,1
 * Param   None
 * Retval  None
 */
inline void Configure_TII(void)
{
 8002db8:	b580      	push	{r7, lr}
 8002dba:	af00      	add	r7, sp, #0
    // Enable the peripheral clock UART
    RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
 8002dbc:	4b0e      	ldr	r3, [pc, #56]	@ (8002df8 <Configure_TII+0x40>)
 8002dbe:	69da      	ldr	r2, [r3, #28]
 8002dc0:	4b0d      	ldr	r3, [pc, #52]	@ (8002df8 <Configure_TII+0x40>)
 8002dc2:	2180      	movs	r1, #128	@ 0x80
 8002dc4:	0289      	lsls	r1, r1, #10
 8002dc6:	430a      	orrs	r2, r1
 8002dc8:	61da      	str	r2, [r3, #28]

    // Configure UART
    // 1. Oversampling by 16, 9600 baud
    // 2. 8 data bit, 1 start bit, 1 stop bit, no parity,
    //     transmitter enable, receiver enable
    USART2->BRR = 833;
 8002dca:	4b0c      	ldr	r3, [pc, #48]	@ (8002dfc <Configure_TII+0x44>)
 8002dcc:	4a0c      	ldr	r2, [pc, #48]	@ (8002e00 <Configure_TII+0x48>)
 8002dce:	60da      	str	r2, [r3, #12]
    USART2->CR1 = USART_CR1_TE | USART_CR1_UE | USART_CR1_RXNEIE | USART_CR1_RE;
 8002dd0:	4b0a      	ldr	r3, [pc, #40]	@ (8002dfc <Configure_TII+0x44>)
 8002dd2:	222d      	movs	r2, #45	@ 0x2d
 8002dd4:	601a      	str	r2, [r3, #0]

    // 3. Polling idle frame Transmission
    while ((USART2->ISR & USART_ISR_TC) != USART_ISR_TC)
 8002dd6:	46c0      	nop			@ (mov r8, r8)
 8002dd8:	4b08      	ldr	r3, [pc, #32]	@ (8002dfc <Configure_TII+0x44>)
 8002dda:	69db      	ldr	r3, [r3, #28]
 8002ddc:	2240      	movs	r2, #64	@ 0x40
 8002dde:	4013      	ands	r3, r2
 8002de0:	2b40      	cmp	r3, #64	@ 0x40
 8002de2:	d1f9      	bne.n	8002dd8 <Configure_TII+0x20>
    }

    // Configure IT
    // 4. Set priority for UART_IRQn
    // 5. Enable UART_IRQn
    NVIC_SetPriority(USART2_IRQn, 0);
 8002de4:	2100      	movs	r1, #0
 8002de6:	201c      	movs	r0, #28
 8002de8:	f7ff ff52 	bl	8002c90 <__NVIC_SetPriority>
    NVIC_EnableIRQ(USART2_IRQn);
 8002dec:	201c      	movs	r0, #28
 8002dee:	f7ff ff13 	bl	8002c18 <__NVIC_EnableIRQ>
}
 8002df2:	46c0      	nop			@ (mov r8, r8)
 8002df4:	46bd      	mov	sp, r7
 8002df6:	bd80      	pop	{r7, pc}
 8002df8:	40021000 	.word	0x40021000
 8002dfc:	40004400 	.word	0x40004400
 8002e00:	00000341 	.word	0x00000341

08002e04 <TransmitByte_TII>:
    // Return data
    return UART_RxBuf[tmptail];
}

void TransmitByte_TII(char data)
{
 8002e04:	b580      	push	{r7, lr}
 8002e06:	b084      	sub	sp, #16
 8002e08:	af00      	add	r7, sp, #0
 8002e0a:	0002      	movs	r2, r0
 8002e0c:	1dfb      	adds	r3, r7, #7
 8002e0e:	701a      	strb	r2, [r3, #0]
    uint32_t tmphead;

    // Calculate buffer index
    tmphead = (UART_TxHead + 1) & UART_TX_BUFFER_MASK;
 8002e10:	4b1d      	ldr	r3, [pc, #116]	@ (8002e88 <TransmitByte_TII+0x84>)
 8002e12:	781b      	ldrb	r3, [r3, #0]
 8002e14:	b2db      	uxtb	r3, r3
 8002e16:	3301      	adds	r3, #1
 8002e18:	001a      	movs	r2, r3
 8002e1a:	233f      	movs	r3, #63	@ 0x3f
 8002e1c:	4013      	ands	r3, r2
 8002e1e:	60fb      	str	r3, [r7, #12]

    // Wait for free space in buffer
    while (tmphead == UART_TxTail)
 8002e20:	46c0      	nop			@ (mov r8, r8)
 8002e22:	4b1a      	ldr	r3, [pc, #104]	@ (8002e8c <TransmitByte_TII+0x88>)
 8002e24:	781b      	ldrb	r3, [r3, #0]
 8002e26:	b2db      	uxtb	r3, r3
 8002e28:	001a      	movs	r2, r3
 8002e2a:	68fb      	ldr	r3, [r7, #12]
 8002e2c:	4293      	cmp	r3, r2
 8002e2e:	d0f8      	beq.n	8002e22 <TransmitByte_TII+0x1e>
    {
        ;
    }

    // Store data in buffer
    UART_TxBuf[tmphead] = data;
 8002e30:	4a17      	ldr	r2, [pc, #92]	@ (8002e90 <TransmitByte_TII+0x8c>)
 8002e32:	68fb      	ldr	r3, [r7, #12]
 8002e34:	18d3      	adds	r3, r2, r3
 8002e36:	1dfa      	adds	r2, r7, #7
 8002e38:	7812      	ldrb	r2, [r2, #0]
 8002e3a:	701a      	strb	r2, [r3, #0]

    // Store new index
    UART_TxHead = tmphead;
 8002e3c:	68fb      	ldr	r3, [r7, #12]
 8002e3e:	b2da      	uxtb	r2, r3
 8002e40:	4b11      	ldr	r3, [pc, #68]	@ (8002e88 <TransmitByte_TII+0x84>)
 8002e42:	701a      	strb	r2, [r3, #0]

    // Initiate a new transfer if this is not ongoing
    if((USART2->CR1 & USART_CR1_TCIE) == 0)
 8002e44:	4b13      	ldr	r3, [pc, #76]	@ (8002e94 <TransmitByte_TII+0x90>)
 8002e46:	681b      	ldr	r3, [r3, #0]
 8002e48:	2240      	movs	r2, #64	@ 0x40
 8002e4a:	4013      	ands	r3, r2
 8002e4c:	d117      	bne.n	8002e7e <TransmitByte_TII+0x7a>
    {
        // Calculate buffer index
        uint32_t tmptail = (UART_TxTail + 1) & UART_TX_BUFFER_MASK;
 8002e4e:	4b0f      	ldr	r3, [pc, #60]	@ (8002e8c <TransmitByte_TII+0x88>)
 8002e50:	781b      	ldrb	r3, [r3, #0]
 8002e52:	b2db      	uxtb	r3, r3
 8002e54:	3301      	adds	r3, #1
 8002e56:	001a      	movs	r2, r3
 8002e58:	233f      	movs	r3, #63	@ 0x3f
 8002e5a:	4013      	ands	r3, r2
 8002e5c:	60bb      	str	r3, [r7, #8]

        // Store new index
        UART_TxTail = tmptail;
 8002e5e:	68bb      	ldr	r3, [r7, #8]
 8002e60:	b2da      	uxtb	r2, r3
 8002e62:	4b0a      	ldr	r3, [pc, #40]	@ (8002e8c <TransmitByte_TII+0x88>)
 8002e64:	701a      	strb	r2, [r3, #0]

        // Start transmission
        USART2->TDR = UART_TxBuf[tmptail];
 8002e66:	4a0a      	ldr	r2, [pc, #40]	@ (8002e90 <TransmitByte_TII+0x8c>)
 8002e68:	68bb      	ldr	r3, [r7, #8]
 8002e6a:	18d3      	adds	r3, r2, r3
 8002e6c:	781a      	ldrb	r2, [r3, #0]
 8002e6e:	4b09      	ldr	r3, [pc, #36]	@ (8002e94 <TransmitByte_TII+0x90>)
 8002e70:	851a      	strh	r2, [r3, #40]	@ 0x28

        // enable TC interrupt
        USART2->CR1 |= USART_CR1_TCIE;
 8002e72:	4b08      	ldr	r3, [pc, #32]	@ (8002e94 <TransmitByte_TII+0x90>)
 8002e74:	681a      	ldr	r2, [r3, #0]
 8002e76:	4b07      	ldr	r3, [pc, #28]	@ (8002e94 <TransmitByte_TII+0x90>)
 8002e78:	2140      	movs	r1, #64	@ 0x40
 8002e7a:	430a      	orrs	r2, r1
 8002e7c:	601a      	str	r2, [r3, #0]
    }
}
 8002e7e:	46c0      	nop			@ (mov r8, r8)
 8002e80:	46bd      	mov	sp, r7
 8002e82:	b004      	add	sp, #16
 8002e84:	bd80      	pop	{r7, pc}
 8002e86:	46c0      	nop			@ (mov r8, r8)
 8002e88:	200002e8 	.word	0x200002e8
 8002e8c:	200002e9 	.word	0x200002e9
 8002e90:	200002a8 	.word	0x200002a8
 8002e94:	40004400 	.word	0x40004400

08002e98 <TransmitString_TII>:
 *   transmit a byte via the UART
 * - Bytes are transmitted until the terminator
 *   character '\0' is detected. Then the function returns.
 */
void TransmitString_TII(char *str)
{
 8002e98:	b580      	push	{r7, lr}
 8002e9a:	b082      	sub	sp, #8
 8002e9c:	af00      	add	r7, sp, #0
 8002e9e:	6078      	str	r0, [r7, #4]
    while(*str)
 8002ea0:	e006      	b.n	8002eb0 <TransmitString_TII+0x18>
    {
        TransmitByte_TII(*str++);
 8002ea2:	687b      	ldr	r3, [r7, #4]
 8002ea4:	1c5a      	adds	r2, r3, #1
 8002ea6:	607a      	str	r2, [r7, #4]
 8002ea8:	781b      	ldrb	r3, [r3, #0]
 8002eaa:	0018      	movs	r0, r3
 8002eac:	f7ff ffaa 	bl	8002e04 <TransmitByte_TII>
    while(*str)
 8002eb0:	687b      	ldr	r3, [r7, #4]
 8002eb2:	781b      	ldrb	r3, [r3, #0]
 8002eb4:	2b00      	cmp	r3, #0
 8002eb6:	d1f4      	bne.n	8002ea2 <TransmitString_TII+0xa>
    }
}
 8002eb8:	46c0      	nop			@ (mov r8, r8)
 8002eba:	46c0      	nop			@ (mov r8, r8)
 8002ebc:	46bd      	mov	sp, r7
 8002ebe:	b002      	add	sp, #8
 8002ec0:	bd80      	pop	{r7, pc}
	...

08002ec4 <USART2_IRQHandler>:
 * Brief   This function handles UART interrupt request.
 * Param   None
 * Retval  None
 */
void USART2_IRQHandler(void)
{
 8002ec4:	b580      	push	{r7, lr}
 8002ec6:	b082      	sub	sp, #8
 8002ec8:	af00      	add	r7, sp, #0
    if ((USART2->ISR & USART_ISR_TC) == USART_ISR_TC)
 8002eca:	4b31      	ldr	r3, [pc, #196]	@ (8002f90 <USART2_IRQHandler+0xcc>)
 8002ecc:	69db      	ldr	r3, [r3, #28]
 8002ece:	2240      	movs	r2, #64	@ 0x40
 8002ed0:	4013      	ands	r3, r2
 8002ed2:	2b40      	cmp	r3, #64	@ 0x40
 8002ed4:	d127      	bne.n	8002f26 <USART2_IRQHandler+0x62>
    {
        uint32_t tmptail;

        // Check if all data is transmitted
        if (UART_TxHead != UART_TxTail)
 8002ed6:	4b2f      	ldr	r3, [pc, #188]	@ (8002f94 <USART2_IRQHandler+0xd0>)
 8002ed8:	781b      	ldrb	r3, [r3, #0]
 8002eda:	b2da      	uxtb	r2, r3
 8002edc:	4b2e      	ldr	r3, [pc, #184]	@ (8002f98 <USART2_IRQHandler+0xd4>)
 8002ede:	781b      	ldrb	r3, [r3, #0]
 8002ee0:	b2db      	uxtb	r3, r3
 8002ee2:	429a      	cmp	r2, r3
 8002ee4:	d012      	beq.n	8002f0c <USART2_IRQHandler+0x48>
        {
            // Calculate buffer index
            tmptail = (UART_TxTail + 1) & UART_TX_BUFFER_MASK;
 8002ee6:	4b2c      	ldr	r3, [pc, #176]	@ (8002f98 <USART2_IRQHandler+0xd4>)
 8002ee8:	781b      	ldrb	r3, [r3, #0]
 8002eea:	b2db      	uxtb	r3, r3
 8002eec:	3301      	adds	r3, #1
 8002eee:	001a      	movs	r2, r3
 8002ef0:	233f      	movs	r3, #63	@ 0x3f
 8002ef2:	4013      	ands	r3, r2
 8002ef4:	603b      	str	r3, [r7, #0]

            // Store new index
            UART_TxTail = tmptail;
 8002ef6:	683b      	ldr	r3, [r7, #0]
 8002ef8:	b2da      	uxtb	r2, r3
 8002efa:	4b27      	ldr	r3, [pc, #156]	@ (8002f98 <USART2_IRQHandler+0xd4>)
 8002efc:	701a      	strb	r2, [r3, #0]

            // Start transmission
            USART2->TDR = UART_TxBuf[tmptail];
 8002efe:	4a27      	ldr	r2, [pc, #156]	@ (8002f9c <USART2_IRQHandler+0xd8>)
 8002f00:	683b      	ldr	r3, [r7, #0]
 8002f02:	18d3      	adds	r3, r2, r3
 8002f04:	781a      	ldrb	r2, [r3, #0]
 8002f06:	4b22      	ldr	r3, [pc, #136]	@ (8002f90 <USART2_IRQHandler+0xcc>)
 8002f08:	851a      	strh	r2, [r3, #40]	@ 0x28
    }
    else
    {
        NVIC_DisableIRQ(USART2_IRQn); // Disable UART_IRQn
    }
}
 8002f0a:	e03d      	b.n	8002f88 <USART2_IRQHandler+0xc4>
            USART2->ICR |= USART_ICR_TCCF; // Clear TC flag
 8002f0c:	4b20      	ldr	r3, [pc, #128]	@ (8002f90 <USART2_IRQHandler+0xcc>)
 8002f0e:	6a1a      	ldr	r2, [r3, #32]
 8002f10:	4b1f      	ldr	r3, [pc, #124]	@ (8002f90 <USART2_IRQHandler+0xcc>)
 8002f12:	2140      	movs	r1, #64	@ 0x40
 8002f14:	430a      	orrs	r2, r1
 8002f16:	621a      	str	r2, [r3, #32]
            USART2->CR1 &= ~USART_CR1_TCIE; // Disable TC interrupt
 8002f18:	4b1d      	ldr	r3, [pc, #116]	@ (8002f90 <USART2_IRQHandler+0xcc>)
 8002f1a:	681a      	ldr	r2, [r3, #0]
 8002f1c:	4b1c      	ldr	r3, [pc, #112]	@ (8002f90 <USART2_IRQHandler+0xcc>)
 8002f1e:	2140      	movs	r1, #64	@ 0x40
 8002f20:	438a      	bics	r2, r1
 8002f22:	601a      	str	r2, [r3, #0]
}
 8002f24:	e030      	b.n	8002f88 <USART2_IRQHandler+0xc4>
    else if ((USART2->ISR & USART_ISR_RXNE) == USART_ISR_RXNE)
 8002f26:	4b1a      	ldr	r3, [pc, #104]	@ (8002f90 <USART2_IRQHandler+0xcc>)
 8002f28:	69db      	ldr	r3, [r3, #28]
 8002f2a:	2220      	movs	r2, #32
 8002f2c:	4013      	ands	r3, r2
 8002f2e:	2b20      	cmp	r3, #32
 8002f30:	d11a      	bne.n	8002f68 <USART2_IRQHandler+0xa4>
        uint8_t data = (uint8_t)(USART2->RDR); // Receive data, clear flag
 8002f32:	4b17      	ldr	r3, [pc, #92]	@ (8002f90 <USART2_IRQHandler+0xcc>)
 8002f34:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 8002f36:	b29a      	uxth	r2, r3
 8002f38:	1dfb      	adds	r3, r7, #7
 8002f3a:	701a      	strb	r2, [r3, #0]
        uint8_t tmphead = (UART_RxHead + 1) & UART_RX_BUFFER_MASK;
 8002f3c:	4b18      	ldr	r3, [pc, #96]	@ (8002fa0 <USART2_IRQHandler+0xdc>)
 8002f3e:	781b      	ldrb	r3, [r3, #0]
 8002f40:	b2db      	uxtb	r3, r3
 8002f42:	3301      	adds	r3, #1
 8002f44:	b2da      	uxtb	r2, r3
 8002f46:	1dbb      	adds	r3, r7, #6
 8002f48:	213f      	movs	r1, #63	@ 0x3f
 8002f4a:	400a      	ands	r2, r1
 8002f4c:	701a      	strb	r2, [r3, #0]
        UART_RxHead = tmphead;
 8002f4e:	4b14      	ldr	r3, [pc, #80]	@ (8002fa0 <USART2_IRQHandler+0xdc>)
 8002f50:	1dba      	adds	r2, r7, #6
 8002f52:	7812      	ldrb	r2, [r2, #0]
 8002f54:	701a      	strb	r2, [r3, #0]
        if (tmphead == UART_RxTail)
 8002f56:	4b13      	ldr	r3, [pc, #76]	@ (8002fa4 <USART2_IRQHandler+0xe0>)
 8002f58:	781b      	ldrb	r3, [r3, #0]
        UART_RxBuf[tmphead] = data;
 8002f5a:	1dbb      	adds	r3, r7, #6
 8002f5c:	781b      	ldrb	r3, [r3, #0]
 8002f5e:	4a12      	ldr	r2, [pc, #72]	@ (8002fa8 <USART2_IRQHandler+0xe4>)
 8002f60:	1df9      	adds	r1, r7, #7
 8002f62:	7809      	ldrb	r1, [r1, #0]
 8002f64:	54d1      	strb	r1, [r2, r3]
}
 8002f66:	e00f      	b.n	8002f88 <USART2_IRQHandler+0xc4>
    else if ((USART2->ISR & USART_ISR_ORE) == USART_ISR_ORE)
 8002f68:	4b09      	ldr	r3, [pc, #36]	@ (8002f90 <USART2_IRQHandler+0xcc>)
 8002f6a:	69db      	ldr	r3, [r3, #28]
 8002f6c:	2208      	movs	r2, #8
 8002f6e:	4013      	ands	r3, r2
 8002f70:	2b08      	cmp	r3, #8
 8002f72:	d106      	bne.n	8002f82 <USART2_IRQHandler+0xbe>
    	USART2->ICR |= USART_ICR_ORECF; // Clear ORE flag
 8002f74:	4b06      	ldr	r3, [pc, #24]	@ (8002f90 <USART2_IRQHandler+0xcc>)
 8002f76:	6a1a      	ldr	r2, [r3, #32]
 8002f78:	4b05      	ldr	r3, [pc, #20]	@ (8002f90 <USART2_IRQHandler+0xcc>)
 8002f7a:	2108      	movs	r1, #8
 8002f7c:	430a      	orrs	r2, r1
 8002f7e:	621a      	str	r2, [r3, #32]
}
 8002f80:	e002      	b.n	8002f88 <USART2_IRQHandler+0xc4>
        NVIC_DisableIRQ(USART2_IRQn); // Disable UART_IRQn
 8002f82:	201c      	movs	r0, #28
 8002f84:	f7ff fe62 	bl	8002c4c <__NVIC_DisableIRQ>
}
 8002f88:	46c0      	nop			@ (mov r8, r8)
 8002f8a:	46bd      	mov	sp, r7
 8002f8c:	b002      	add	sp, #8
 8002f8e:	bd80      	pop	{r7, pc}
 8002f90:	40004400 	.word	0x40004400
 8002f94:	200002e8 	.word	0x200002e8
 8002f98:	200002e9 	.word	0x200002e9
 8002f9c:	200002a8 	.word	0x200002a8
 8002fa0:	200002a4 	.word	0x200002a4
 8002fa4:	200002a5 	.word	0x200002a5
 8002fa8:	20000264 	.word	0x20000264

08002fac <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8002fac:	480d      	ldr	r0, [pc, #52]	@ (8002fe4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8002fae:	4685      	mov	sp, r0
  
/* Call the clock system initialization function.*/
  bl  SystemInit
 8002fb0:	f7ff fe2c 	bl	8002c0c <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8002fb4:	480c      	ldr	r0, [pc, #48]	@ (8002fe8 <LoopForever+0x6>)
  ldr r1, =_edata
 8002fb6:	490d      	ldr	r1, [pc, #52]	@ (8002fec <LoopForever+0xa>)
  ldr r2, =_sidata
 8002fb8:	4a0d      	ldr	r2, [pc, #52]	@ (8002ff0 <LoopForever+0xe>)
  movs r3, #0
 8002fba:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8002fbc:	e002      	b.n	8002fc4 <LoopCopyDataInit>

08002fbe <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8002fbe:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8002fc0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8002fc2:	3304      	adds	r3, #4

08002fc4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8002fc4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8002fc6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8002fc8:	d3f9      	bcc.n	8002fbe <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8002fca:	4a0a      	ldr	r2, [pc, #40]	@ (8002ff4 <LoopForever+0x12>)
  ldr r4, =_ebss
 8002fcc:	4c0a      	ldr	r4, [pc, #40]	@ (8002ff8 <LoopForever+0x16>)
  movs r3, #0
 8002fce:	2300      	movs	r3, #0
  b LoopFillZerobss
 8002fd0:	e001      	b.n	8002fd6 <LoopFillZerobss>

08002fd2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8002fd2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8002fd4:	3204      	adds	r2, #4

08002fd6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8002fd6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8002fd8:	d3fb      	bcc.n	8002fd2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8002fda:	f000 f819 	bl	8003010 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8002fde:	f7ff fc69 	bl	80028b4 <main>

08002fe2 <LoopForever>:

LoopForever:
    b LoopForever
 8002fe2:	e7fe      	b.n	8002fe2 <LoopForever>
  ldr   r0, =_estack
 8002fe4:	20004000 	.word	0x20004000
  ldr r0, =_sdata
 8002fe8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8002fec:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8002ff0:	080042f0 	.word	0x080042f0
  ldr r2, =_sbss
 8002ff4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8002ff8:	200002ec 	.word	0x200002ec

08002ffc <ADC1_COMP_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8002ffc:	e7fe      	b.n	8002ffc <ADC1_COMP_IRQHandler>

08002ffe <memset>:
 8002ffe:	0003      	movs	r3, r0
 8003000:	1882      	adds	r2, r0, r2
 8003002:	4293      	cmp	r3, r2
 8003004:	d100      	bne.n	8003008 <memset+0xa>
 8003006:	4770      	bx	lr
 8003008:	7019      	strb	r1, [r3, #0]
 800300a:	3301      	adds	r3, #1
 800300c:	e7f9      	b.n	8003002 <memset+0x4>
	...

08003010 <__libc_init_array>:
 8003010:	b570      	push	{r4, r5, r6, lr}
 8003012:	2600      	movs	r6, #0
 8003014:	4c0c      	ldr	r4, [pc, #48]	@ (8003048 <__libc_init_array+0x38>)
 8003016:	4d0d      	ldr	r5, [pc, #52]	@ (800304c <__libc_init_array+0x3c>)
 8003018:	1b64      	subs	r4, r4, r5
 800301a:	10a4      	asrs	r4, r4, #2
 800301c:	42a6      	cmp	r6, r4
 800301e:	d109      	bne.n	8003034 <__libc_init_array+0x24>
 8003020:	2600      	movs	r6, #0
 8003022:	f001 f819 	bl	8004058 <_init>
 8003026:	4c0a      	ldr	r4, [pc, #40]	@ (8003050 <__libc_init_array+0x40>)
 8003028:	4d0a      	ldr	r5, [pc, #40]	@ (8003054 <__libc_init_array+0x44>)
 800302a:	1b64      	subs	r4, r4, r5
 800302c:	10a4      	asrs	r4, r4, #2
 800302e:	42a6      	cmp	r6, r4
 8003030:	d105      	bne.n	800303e <__libc_init_array+0x2e>
 8003032:	bd70      	pop	{r4, r5, r6, pc}
 8003034:	00b3      	lsls	r3, r6, #2
 8003036:	58eb      	ldr	r3, [r5, r3]
 8003038:	4798      	blx	r3
 800303a:	3601      	adds	r6, #1
 800303c:	e7ee      	b.n	800301c <__libc_init_array+0xc>
 800303e:	00b3      	lsls	r3, r6, #2
 8003040:	58eb      	ldr	r3, [r5, r3]
 8003042:	4798      	blx	r3
 8003044:	3601      	adds	r6, #1
 8003046:	e7f2      	b.n	800302e <__libc_init_array+0x1e>
 8003048:	080042e8 	.word	0x080042e8
 800304c:	080042e8 	.word	0x080042e8
 8003050:	080042ec 	.word	0x080042ec
 8003054:	080042e8 	.word	0x080042e8

08003058 <sin>:
 8003058:	b530      	push	{r4, r5, lr}
 800305a:	4a1f      	ldr	r2, [pc, #124]	@ (80030d8 <sin+0x80>)
 800305c:	004b      	lsls	r3, r1, #1
 800305e:	b087      	sub	sp, #28
 8003060:	085b      	lsrs	r3, r3, #1
 8003062:	4293      	cmp	r3, r2
 8003064:	d806      	bhi.n	8003074 <sin+0x1c>
 8003066:	2300      	movs	r3, #0
 8003068:	2200      	movs	r2, #0
 800306a:	9300      	str	r3, [sp, #0]
 800306c:	2300      	movs	r3, #0
 800306e:	f000 f92b 	bl	80032c8 <__kernel_sin>
 8003072:	e006      	b.n	8003082 <sin+0x2a>
 8003074:	4a19      	ldr	r2, [pc, #100]	@ (80030dc <sin+0x84>)
 8003076:	4293      	cmp	r3, r2
 8003078:	d905      	bls.n	8003086 <sin+0x2e>
 800307a:	0002      	movs	r2, r0
 800307c:	000b      	movs	r3, r1
 800307e:	f7fe f9ed 	bl	800145c <__aeabi_dsub>
 8003082:	b007      	add	sp, #28
 8003084:	bd30      	pop	{r4, r5, pc}
 8003086:	aa02      	add	r2, sp, #8
 8003088:	f000 f9ca 	bl	8003420 <__ieee754_rem_pio2>
 800308c:	9c04      	ldr	r4, [sp, #16]
 800308e:	9d05      	ldr	r5, [sp, #20]
 8003090:	2303      	movs	r3, #3
 8003092:	4003      	ands	r3, r0
 8003094:	9802      	ldr	r0, [sp, #8]
 8003096:	9903      	ldr	r1, [sp, #12]
 8003098:	2b01      	cmp	r3, #1
 800309a:	d008      	beq.n	80030ae <sin+0x56>
 800309c:	2b02      	cmp	r3, #2
 800309e:	d00b      	beq.n	80030b8 <sin+0x60>
 80030a0:	2b00      	cmp	r3, #0
 80030a2:	d113      	bne.n	80030cc <sin+0x74>
 80030a4:	3301      	adds	r3, #1
 80030a6:	9300      	str	r3, [sp, #0]
 80030a8:	0022      	movs	r2, r4
 80030aa:	002b      	movs	r3, r5
 80030ac:	e7df      	b.n	800306e <sin+0x16>
 80030ae:	0022      	movs	r2, r4
 80030b0:	002b      	movs	r3, r5
 80030b2:	f000 f849 	bl	8003148 <__kernel_cos>
 80030b6:	e7e4      	b.n	8003082 <sin+0x2a>
 80030b8:	2301      	movs	r3, #1
 80030ba:	0022      	movs	r2, r4
 80030bc:	9300      	str	r3, [sp, #0]
 80030be:	002b      	movs	r3, r5
 80030c0:	f000 f902 	bl	80032c8 <__kernel_sin>
 80030c4:	2380      	movs	r3, #128	@ 0x80
 80030c6:	061b      	lsls	r3, r3, #24
 80030c8:	18c9      	adds	r1, r1, r3
 80030ca:	e7da      	b.n	8003082 <sin+0x2a>
 80030cc:	0022      	movs	r2, r4
 80030ce:	002b      	movs	r3, r5
 80030d0:	f000 f83a 	bl	8003148 <__kernel_cos>
 80030d4:	e7f6      	b.n	80030c4 <sin+0x6c>
 80030d6:	46c0      	nop			@ (mov r8, r8)
 80030d8:	3fe921fb 	.word	0x3fe921fb
 80030dc:	7fefffff 	.word	0x7fefffff

080030e0 <trunc>:
 80030e0:	4a16      	ldr	r2, [pc, #88]	@ (800313c <trunc+0x5c>)
 80030e2:	004b      	lsls	r3, r1, #1
 80030e4:	0d5b      	lsrs	r3, r3, #21
 80030e6:	189a      	adds	r2, r3, r2
 80030e8:	b570      	push	{r4, r5, r6, lr}
 80030ea:	000e      	movs	r6, r1
 80030ec:	2a13      	cmp	r2, #19
 80030ee:	dc0f      	bgt.n	8003110 <trunc+0x30>
 80030f0:	0fc9      	lsrs	r1, r1, #31
 80030f2:	07c9      	lsls	r1, r1, #31
 80030f4:	2a00      	cmp	r2, #0
 80030f6:	da02      	bge.n	80030fe <trunc+0x1e>
 80030f8:	2200      	movs	r2, #0
 80030fa:	0010      	movs	r0, r2
 80030fc:	bd70      	pop	{r4, r5, r6, pc}
 80030fe:	4b10      	ldr	r3, [pc, #64]	@ (8003140 <trunc+0x60>)
 8003100:	2400      	movs	r4, #0
 8003102:	4113      	asrs	r3, r2
 8003104:	4033      	ands	r3, r6
 8003106:	430b      	orrs	r3, r1
 8003108:	001d      	movs	r5, r3
 800310a:	0020      	movs	r0, r4
 800310c:	0029      	movs	r1, r5
 800310e:	e7f5      	b.n	80030fc <trunc+0x1c>
 8003110:	2a33      	cmp	r2, #51	@ 0x33
 8003112:	dd08      	ble.n	8003126 <trunc+0x46>
 8003114:	2380      	movs	r3, #128	@ 0x80
 8003116:	00db      	lsls	r3, r3, #3
 8003118:	429a      	cmp	r2, r3
 800311a:	d1ef      	bne.n	80030fc <trunc+0x1c>
 800311c:	0002      	movs	r2, r0
 800311e:	000b      	movs	r3, r1
 8003120:	f7fd f9ce 	bl	80004c0 <__aeabi_dadd>
 8003124:	e7ea      	b.n	80030fc <trunc+0x1c>
 8003126:	4a07      	ldr	r2, [pc, #28]	@ (8003144 <trunc+0x64>)
 8003128:	000d      	movs	r5, r1
 800312a:	189b      	adds	r3, r3, r2
 800312c:	2201      	movs	r2, #1
 800312e:	4252      	negs	r2, r2
 8003130:	40da      	lsrs	r2, r3
 8003132:	0003      	movs	r3, r0
 8003134:	4393      	bics	r3, r2
 8003136:	001c      	movs	r4, r3
 8003138:	e7e7      	b.n	800310a <trunc+0x2a>
 800313a:	46c0      	nop			@ (mov r8, r8)
 800313c:	fffffc01 	.word	0xfffffc01
 8003140:	fff00000 	.word	0xfff00000
 8003144:	fffffbed 	.word	0xfffffbed

08003148 <__kernel_cos>:
 8003148:	b5f0      	push	{r4, r5, r6, r7, lr}
 800314a:	b087      	sub	sp, #28
 800314c:	9204      	str	r2, [sp, #16]
 800314e:	9305      	str	r3, [sp, #20]
 8003150:	004b      	lsls	r3, r1, #1
 8003152:	085b      	lsrs	r3, r3, #1
 8003154:	9301      	str	r3, [sp, #4]
 8003156:	23f9      	movs	r3, #249	@ 0xf9
 8003158:	9a01      	ldr	r2, [sp, #4]
 800315a:	0004      	movs	r4, r0
 800315c:	000d      	movs	r5, r1
 800315e:	059b      	lsls	r3, r3, #22
 8003160:	429a      	cmp	r2, r3
 8003162:	d204      	bcs.n	800316e <__kernel_cos+0x26>
 8003164:	f7fe fd84 	bl	8001c70 <__aeabi_d2iz>
 8003168:	2800      	cmp	r0, #0
 800316a:	d100      	bne.n	800316e <__kernel_cos+0x26>
 800316c:	e084      	b.n	8003278 <__kernel_cos+0x130>
 800316e:	0022      	movs	r2, r4
 8003170:	002b      	movs	r3, r5
 8003172:	0020      	movs	r0, r4
 8003174:	0029      	movs	r1, r5
 8003176:	f7fd fe8b 	bl	8000e90 <__aeabi_dmul>
 800317a:	2200      	movs	r2, #0
 800317c:	4b40      	ldr	r3, [pc, #256]	@ (8003280 <__kernel_cos+0x138>)
 800317e:	0006      	movs	r6, r0
 8003180:	000f      	movs	r7, r1
 8003182:	f7fd fe85 	bl	8000e90 <__aeabi_dmul>
 8003186:	4a3f      	ldr	r2, [pc, #252]	@ (8003284 <__kernel_cos+0x13c>)
 8003188:	9002      	str	r0, [sp, #8]
 800318a:	9103      	str	r1, [sp, #12]
 800318c:	4b3e      	ldr	r3, [pc, #248]	@ (8003288 <__kernel_cos+0x140>)
 800318e:	0030      	movs	r0, r6
 8003190:	0039      	movs	r1, r7
 8003192:	f7fd fe7d 	bl	8000e90 <__aeabi_dmul>
 8003196:	4a3d      	ldr	r2, [pc, #244]	@ (800328c <__kernel_cos+0x144>)
 8003198:	4b3d      	ldr	r3, [pc, #244]	@ (8003290 <__kernel_cos+0x148>)
 800319a:	f7fd f991 	bl	80004c0 <__aeabi_dadd>
 800319e:	0032      	movs	r2, r6
 80031a0:	003b      	movs	r3, r7
 80031a2:	f7fd fe75 	bl	8000e90 <__aeabi_dmul>
 80031a6:	4a3b      	ldr	r2, [pc, #236]	@ (8003294 <__kernel_cos+0x14c>)
 80031a8:	4b3b      	ldr	r3, [pc, #236]	@ (8003298 <__kernel_cos+0x150>)
 80031aa:	f7fe f957 	bl	800145c <__aeabi_dsub>
 80031ae:	0032      	movs	r2, r6
 80031b0:	003b      	movs	r3, r7
 80031b2:	f7fd fe6d 	bl	8000e90 <__aeabi_dmul>
 80031b6:	4a39      	ldr	r2, [pc, #228]	@ (800329c <__kernel_cos+0x154>)
 80031b8:	4b39      	ldr	r3, [pc, #228]	@ (80032a0 <__kernel_cos+0x158>)
 80031ba:	f7fd f981 	bl	80004c0 <__aeabi_dadd>
 80031be:	0032      	movs	r2, r6
 80031c0:	003b      	movs	r3, r7
 80031c2:	f7fd fe65 	bl	8000e90 <__aeabi_dmul>
 80031c6:	4a37      	ldr	r2, [pc, #220]	@ (80032a4 <__kernel_cos+0x15c>)
 80031c8:	4b37      	ldr	r3, [pc, #220]	@ (80032a8 <__kernel_cos+0x160>)
 80031ca:	f7fe f947 	bl	800145c <__aeabi_dsub>
 80031ce:	0032      	movs	r2, r6
 80031d0:	003b      	movs	r3, r7
 80031d2:	f7fd fe5d 	bl	8000e90 <__aeabi_dmul>
 80031d6:	4a35      	ldr	r2, [pc, #212]	@ (80032ac <__kernel_cos+0x164>)
 80031d8:	4b35      	ldr	r3, [pc, #212]	@ (80032b0 <__kernel_cos+0x168>)
 80031da:	f7fd f971 	bl	80004c0 <__aeabi_dadd>
 80031de:	0032      	movs	r2, r6
 80031e0:	003b      	movs	r3, r7
 80031e2:	f7fd fe55 	bl	8000e90 <__aeabi_dmul>
 80031e6:	0032      	movs	r2, r6
 80031e8:	003b      	movs	r3, r7
 80031ea:	f7fd fe51 	bl	8000e90 <__aeabi_dmul>
 80031ee:	9a04      	ldr	r2, [sp, #16]
 80031f0:	9b05      	ldr	r3, [sp, #20]
 80031f2:	0006      	movs	r6, r0
 80031f4:	000f      	movs	r7, r1
 80031f6:	0020      	movs	r0, r4
 80031f8:	0029      	movs	r1, r5
 80031fa:	f7fd fe49 	bl	8000e90 <__aeabi_dmul>
 80031fe:	0002      	movs	r2, r0
 8003200:	000b      	movs	r3, r1
 8003202:	0030      	movs	r0, r6
 8003204:	0039      	movs	r1, r7
 8003206:	f7fe f929 	bl	800145c <__aeabi_dsub>
 800320a:	4b2a      	ldr	r3, [pc, #168]	@ (80032b4 <__kernel_cos+0x16c>)
 800320c:	9a01      	ldr	r2, [sp, #4]
 800320e:	9004      	str	r0, [sp, #16]
 8003210:	9105      	str	r1, [sp, #20]
 8003212:	429a      	cmp	r2, r3
 8003214:	d80d      	bhi.n	8003232 <__kernel_cos+0xea>
 8003216:	0002      	movs	r2, r0
 8003218:	000b      	movs	r3, r1
 800321a:	9802      	ldr	r0, [sp, #8]
 800321c:	9903      	ldr	r1, [sp, #12]
 800321e:	f7fe f91d 	bl	800145c <__aeabi_dsub>
 8003222:	0002      	movs	r2, r0
 8003224:	2000      	movs	r0, #0
 8003226:	000b      	movs	r3, r1
 8003228:	4923      	ldr	r1, [pc, #140]	@ (80032b8 <__kernel_cos+0x170>)
 800322a:	f7fe f917 	bl	800145c <__aeabi_dsub>
 800322e:	b007      	add	sp, #28
 8003230:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003232:	4b22      	ldr	r3, [pc, #136]	@ (80032bc <__kernel_cos+0x174>)
 8003234:	9a01      	ldr	r2, [sp, #4]
 8003236:	2600      	movs	r6, #0
 8003238:	429a      	cmp	r2, r3
 800323a:	d81b      	bhi.n	8003274 <__kernel_cos+0x12c>
 800323c:	0013      	movs	r3, r2
 800323e:	4a20      	ldr	r2, [pc, #128]	@ (80032c0 <__kernel_cos+0x178>)
 8003240:	4694      	mov	ip, r2
 8003242:	4463      	add	r3, ip
 8003244:	001f      	movs	r7, r3
 8003246:	0032      	movs	r2, r6
 8003248:	003b      	movs	r3, r7
 800324a:	2000      	movs	r0, #0
 800324c:	491a      	ldr	r1, [pc, #104]	@ (80032b8 <__kernel_cos+0x170>)
 800324e:	f7fe f905 	bl	800145c <__aeabi_dsub>
 8003252:	0032      	movs	r2, r6
 8003254:	0004      	movs	r4, r0
 8003256:	000d      	movs	r5, r1
 8003258:	9802      	ldr	r0, [sp, #8]
 800325a:	9903      	ldr	r1, [sp, #12]
 800325c:	003b      	movs	r3, r7
 800325e:	f7fe f8fd 	bl	800145c <__aeabi_dsub>
 8003262:	9a04      	ldr	r2, [sp, #16]
 8003264:	9b05      	ldr	r3, [sp, #20]
 8003266:	f7fe f8f9 	bl	800145c <__aeabi_dsub>
 800326a:	0002      	movs	r2, r0
 800326c:	000b      	movs	r3, r1
 800326e:	0020      	movs	r0, r4
 8003270:	0029      	movs	r1, r5
 8003272:	e7da      	b.n	800322a <__kernel_cos+0xe2>
 8003274:	4f13      	ldr	r7, [pc, #76]	@ (80032c4 <__kernel_cos+0x17c>)
 8003276:	e7e6      	b.n	8003246 <__kernel_cos+0xfe>
 8003278:	2000      	movs	r0, #0
 800327a:	490f      	ldr	r1, [pc, #60]	@ (80032b8 <__kernel_cos+0x170>)
 800327c:	e7d7      	b.n	800322e <__kernel_cos+0xe6>
 800327e:	46c0      	nop			@ (mov r8, r8)
 8003280:	3fe00000 	.word	0x3fe00000
 8003284:	be8838d4 	.word	0xbe8838d4
 8003288:	bda8fae9 	.word	0xbda8fae9
 800328c:	bdb4b1c4 	.word	0xbdb4b1c4
 8003290:	3e21ee9e 	.word	0x3e21ee9e
 8003294:	809c52ad 	.word	0x809c52ad
 8003298:	3e927e4f 	.word	0x3e927e4f
 800329c:	19cb1590 	.word	0x19cb1590
 80032a0:	3efa01a0 	.word	0x3efa01a0
 80032a4:	16c15177 	.word	0x16c15177
 80032a8:	3f56c16c 	.word	0x3f56c16c
 80032ac:	5555554c 	.word	0x5555554c
 80032b0:	3fa55555 	.word	0x3fa55555
 80032b4:	3fd33332 	.word	0x3fd33332
 80032b8:	3ff00000 	.word	0x3ff00000
 80032bc:	3fe90000 	.word	0x3fe90000
 80032c0:	ffe00000 	.word	0xffe00000
 80032c4:	3fd20000 	.word	0x3fd20000

080032c8 <__kernel_sin>:
 80032c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80032ca:	b089      	sub	sp, #36	@ 0x24
 80032cc:	9202      	str	r2, [sp, #8]
 80032ce:	9303      	str	r3, [sp, #12]
 80032d0:	22f9      	movs	r2, #249	@ 0xf9
 80032d2:	004b      	lsls	r3, r1, #1
 80032d4:	0006      	movs	r6, r0
 80032d6:	000f      	movs	r7, r1
 80032d8:	085b      	lsrs	r3, r3, #1
 80032da:	0592      	lsls	r2, r2, #22
 80032dc:	4293      	cmp	r3, r2
 80032de:	d203      	bcs.n	80032e8 <__kernel_sin+0x20>
 80032e0:	f7fe fcc6 	bl	8001c70 <__aeabi_d2iz>
 80032e4:	2800      	cmp	r0, #0
 80032e6:	d04c      	beq.n	8003382 <__kernel_sin+0xba>
 80032e8:	0032      	movs	r2, r6
 80032ea:	003b      	movs	r3, r7
 80032ec:	0030      	movs	r0, r6
 80032ee:	0039      	movs	r1, r7
 80032f0:	f7fd fdce 	bl	8000e90 <__aeabi_dmul>
 80032f4:	0004      	movs	r4, r0
 80032f6:	000d      	movs	r5, r1
 80032f8:	0002      	movs	r2, r0
 80032fa:	000b      	movs	r3, r1
 80032fc:	0030      	movs	r0, r6
 80032fe:	0039      	movs	r1, r7
 8003300:	f7fd fdc6 	bl	8000e90 <__aeabi_dmul>
 8003304:	4a39      	ldr	r2, [pc, #228]	@ (80033ec <__kernel_sin+0x124>)
 8003306:	9000      	str	r0, [sp, #0]
 8003308:	9101      	str	r1, [sp, #4]
 800330a:	4b39      	ldr	r3, [pc, #228]	@ (80033f0 <__kernel_sin+0x128>)
 800330c:	0020      	movs	r0, r4
 800330e:	0029      	movs	r1, r5
 8003310:	f7fd fdbe 	bl	8000e90 <__aeabi_dmul>
 8003314:	4a37      	ldr	r2, [pc, #220]	@ (80033f4 <__kernel_sin+0x12c>)
 8003316:	4b38      	ldr	r3, [pc, #224]	@ (80033f8 <__kernel_sin+0x130>)
 8003318:	f7fe f8a0 	bl	800145c <__aeabi_dsub>
 800331c:	0022      	movs	r2, r4
 800331e:	002b      	movs	r3, r5
 8003320:	f7fd fdb6 	bl	8000e90 <__aeabi_dmul>
 8003324:	4a35      	ldr	r2, [pc, #212]	@ (80033fc <__kernel_sin+0x134>)
 8003326:	4b36      	ldr	r3, [pc, #216]	@ (8003400 <__kernel_sin+0x138>)
 8003328:	f7fd f8ca 	bl	80004c0 <__aeabi_dadd>
 800332c:	0022      	movs	r2, r4
 800332e:	002b      	movs	r3, r5
 8003330:	f7fd fdae 	bl	8000e90 <__aeabi_dmul>
 8003334:	4a33      	ldr	r2, [pc, #204]	@ (8003404 <__kernel_sin+0x13c>)
 8003336:	4b34      	ldr	r3, [pc, #208]	@ (8003408 <__kernel_sin+0x140>)
 8003338:	f7fe f890 	bl	800145c <__aeabi_dsub>
 800333c:	0022      	movs	r2, r4
 800333e:	002b      	movs	r3, r5
 8003340:	f7fd fda6 	bl	8000e90 <__aeabi_dmul>
 8003344:	4b31      	ldr	r3, [pc, #196]	@ (800340c <__kernel_sin+0x144>)
 8003346:	4a32      	ldr	r2, [pc, #200]	@ (8003410 <__kernel_sin+0x148>)
 8003348:	f7fd f8ba 	bl	80004c0 <__aeabi_dadd>
 800334c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800334e:	9004      	str	r0, [sp, #16]
 8003350:	9105      	str	r1, [sp, #20]
 8003352:	2b00      	cmp	r3, #0
 8003354:	d119      	bne.n	800338a <__kernel_sin+0xc2>
 8003356:	0002      	movs	r2, r0
 8003358:	000b      	movs	r3, r1
 800335a:	0020      	movs	r0, r4
 800335c:	0029      	movs	r1, r5
 800335e:	f7fd fd97 	bl	8000e90 <__aeabi_dmul>
 8003362:	4a2c      	ldr	r2, [pc, #176]	@ (8003414 <__kernel_sin+0x14c>)
 8003364:	4b2c      	ldr	r3, [pc, #176]	@ (8003418 <__kernel_sin+0x150>)
 8003366:	f7fe f879 	bl	800145c <__aeabi_dsub>
 800336a:	9a00      	ldr	r2, [sp, #0]
 800336c:	9b01      	ldr	r3, [sp, #4]
 800336e:	f7fd fd8f 	bl	8000e90 <__aeabi_dmul>
 8003372:	0002      	movs	r2, r0
 8003374:	000b      	movs	r3, r1
 8003376:	0030      	movs	r0, r6
 8003378:	0039      	movs	r1, r7
 800337a:	f7fd f8a1 	bl	80004c0 <__aeabi_dadd>
 800337e:	0006      	movs	r6, r0
 8003380:	000f      	movs	r7, r1
 8003382:	0030      	movs	r0, r6
 8003384:	0039      	movs	r1, r7
 8003386:	b009      	add	sp, #36	@ 0x24
 8003388:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800338a:	2200      	movs	r2, #0
 800338c:	9802      	ldr	r0, [sp, #8]
 800338e:	9903      	ldr	r1, [sp, #12]
 8003390:	4b22      	ldr	r3, [pc, #136]	@ (800341c <__kernel_sin+0x154>)
 8003392:	f7fd fd7d 	bl	8000e90 <__aeabi_dmul>
 8003396:	9a04      	ldr	r2, [sp, #16]
 8003398:	9b05      	ldr	r3, [sp, #20]
 800339a:	9006      	str	r0, [sp, #24]
 800339c:	9107      	str	r1, [sp, #28]
 800339e:	9800      	ldr	r0, [sp, #0]
 80033a0:	9901      	ldr	r1, [sp, #4]
 80033a2:	f7fd fd75 	bl	8000e90 <__aeabi_dmul>
 80033a6:	0002      	movs	r2, r0
 80033a8:	000b      	movs	r3, r1
 80033aa:	9806      	ldr	r0, [sp, #24]
 80033ac:	9907      	ldr	r1, [sp, #28]
 80033ae:	f7fe f855 	bl	800145c <__aeabi_dsub>
 80033b2:	0022      	movs	r2, r4
 80033b4:	002b      	movs	r3, r5
 80033b6:	f7fd fd6b 	bl	8000e90 <__aeabi_dmul>
 80033ba:	9a02      	ldr	r2, [sp, #8]
 80033bc:	9b03      	ldr	r3, [sp, #12]
 80033be:	f7fe f84d 	bl	800145c <__aeabi_dsub>
 80033c2:	4a14      	ldr	r2, [pc, #80]	@ (8003414 <__kernel_sin+0x14c>)
 80033c4:	0004      	movs	r4, r0
 80033c6:	000d      	movs	r5, r1
 80033c8:	9800      	ldr	r0, [sp, #0]
 80033ca:	9901      	ldr	r1, [sp, #4]
 80033cc:	4b12      	ldr	r3, [pc, #72]	@ (8003418 <__kernel_sin+0x150>)
 80033ce:	f7fd fd5f 	bl	8000e90 <__aeabi_dmul>
 80033d2:	0002      	movs	r2, r0
 80033d4:	000b      	movs	r3, r1
 80033d6:	0020      	movs	r0, r4
 80033d8:	0029      	movs	r1, r5
 80033da:	f7fd f871 	bl	80004c0 <__aeabi_dadd>
 80033de:	0002      	movs	r2, r0
 80033e0:	000b      	movs	r3, r1
 80033e2:	0030      	movs	r0, r6
 80033e4:	0039      	movs	r1, r7
 80033e6:	f7fe f839 	bl	800145c <__aeabi_dsub>
 80033ea:	e7c8      	b.n	800337e <__kernel_sin+0xb6>
 80033ec:	5acfd57c 	.word	0x5acfd57c
 80033f0:	3de5d93a 	.word	0x3de5d93a
 80033f4:	8a2b9ceb 	.word	0x8a2b9ceb
 80033f8:	3e5ae5e6 	.word	0x3e5ae5e6
 80033fc:	57b1fe7d 	.word	0x57b1fe7d
 8003400:	3ec71de3 	.word	0x3ec71de3
 8003404:	19c161d5 	.word	0x19c161d5
 8003408:	3f2a01a0 	.word	0x3f2a01a0
 800340c:	3f811111 	.word	0x3f811111
 8003410:	1110f8a6 	.word	0x1110f8a6
 8003414:	55555549 	.word	0x55555549
 8003418:	3fc55555 	.word	0x3fc55555
 800341c:	3fe00000 	.word	0x3fe00000

08003420 <__ieee754_rem_pio2>:
 8003420:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003422:	4baf      	ldr	r3, [pc, #700]	@ (80036e0 <__ieee754_rem_pio2+0x2c0>)
 8003424:	b095      	sub	sp, #84	@ 0x54
 8003426:	004d      	lsls	r5, r1, #1
 8003428:	0017      	movs	r7, r2
 800342a:	910d      	str	r1, [sp, #52]	@ 0x34
 800342c:	086d      	lsrs	r5, r5, #1
 800342e:	429d      	cmp	r5, r3
 8003430:	d807      	bhi.n	8003442 <__ieee754_rem_pio2+0x22>
 8003432:	6010      	str	r0, [r2, #0]
 8003434:	6051      	str	r1, [r2, #4]
 8003436:	2300      	movs	r3, #0
 8003438:	2200      	movs	r2, #0
 800343a:	60ba      	str	r2, [r7, #8]
 800343c:	60fb      	str	r3, [r7, #12]
 800343e:	2300      	movs	r3, #0
 8003440:	e024      	b.n	800348c <__ieee754_rem_pio2+0x6c>
 8003442:	4ba8      	ldr	r3, [pc, #672]	@ (80036e4 <__ieee754_rem_pio2+0x2c4>)
 8003444:	429d      	cmp	r5, r3
 8003446:	d900      	bls.n	800344a <__ieee754_rem_pio2+0x2a>
 8003448:	e072      	b.n	8003530 <__ieee754_rem_pio2+0x110>
 800344a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800344c:	4ca6      	ldr	r4, [pc, #664]	@ (80036e8 <__ieee754_rem_pio2+0x2c8>)
 800344e:	4aa7      	ldr	r2, [pc, #668]	@ (80036ec <__ieee754_rem_pio2+0x2cc>)
 8003450:	2b00      	cmp	r3, #0
 8003452:	dd37      	ble.n	80034c4 <__ieee754_rem_pio2+0xa4>
 8003454:	4ba4      	ldr	r3, [pc, #656]	@ (80036e8 <__ieee754_rem_pio2+0x2c8>)
 8003456:	f7fe f801 	bl	800145c <__aeabi_dsub>
 800345a:	9002      	str	r0, [sp, #8]
 800345c:	9103      	str	r1, [sp, #12]
 800345e:	42a5      	cmp	r5, r4
 8003460:	d018      	beq.n	8003494 <__ieee754_rem_pio2+0x74>
 8003462:	4aa3      	ldr	r2, [pc, #652]	@ (80036f0 <__ieee754_rem_pio2+0x2d0>)
 8003464:	4ba3      	ldr	r3, [pc, #652]	@ (80036f4 <__ieee754_rem_pio2+0x2d4>)
 8003466:	f7fd fff9 	bl	800145c <__aeabi_dsub>
 800346a:	0002      	movs	r2, r0
 800346c:	000b      	movs	r3, r1
 800346e:	0004      	movs	r4, r0
 8003470:	000d      	movs	r5, r1
 8003472:	9802      	ldr	r0, [sp, #8]
 8003474:	9903      	ldr	r1, [sp, #12]
 8003476:	f7fd fff1 	bl	800145c <__aeabi_dsub>
 800347a:	4a9d      	ldr	r2, [pc, #628]	@ (80036f0 <__ieee754_rem_pio2+0x2d0>)
 800347c:	4b9d      	ldr	r3, [pc, #628]	@ (80036f4 <__ieee754_rem_pio2+0x2d4>)
 800347e:	f7fd ffed 	bl	800145c <__aeabi_dsub>
 8003482:	2301      	movs	r3, #1
 8003484:	603c      	str	r4, [r7, #0]
 8003486:	607d      	str	r5, [r7, #4]
 8003488:	60b8      	str	r0, [r7, #8]
 800348a:	60f9      	str	r1, [r7, #12]
 800348c:	9302      	str	r3, [sp, #8]
 800348e:	9802      	ldr	r0, [sp, #8]
 8003490:	b015      	add	sp, #84	@ 0x54
 8003492:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003494:	22d3      	movs	r2, #211	@ 0xd3
 8003496:	9802      	ldr	r0, [sp, #8]
 8003498:	9903      	ldr	r1, [sp, #12]
 800349a:	4b96      	ldr	r3, [pc, #600]	@ (80036f4 <__ieee754_rem_pio2+0x2d4>)
 800349c:	0552      	lsls	r2, r2, #21
 800349e:	f7fd ffdd 	bl	800145c <__aeabi_dsub>
 80034a2:	4a95      	ldr	r2, [pc, #596]	@ (80036f8 <__ieee754_rem_pio2+0x2d8>)
 80034a4:	4b95      	ldr	r3, [pc, #596]	@ (80036fc <__ieee754_rem_pio2+0x2dc>)
 80034a6:	9002      	str	r0, [sp, #8]
 80034a8:	9103      	str	r1, [sp, #12]
 80034aa:	f7fd ffd7 	bl	800145c <__aeabi_dsub>
 80034ae:	0002      	movs	r2, r0
 80034b0:	000b      	movs	r3, r1
 80034b2:	0004      	movs	r4, r0
 80034b4:	000d      	movs	r5, r1
 80034b6:	9802      	ldr	r0, [sp, #8]
 80034b8:	9903      	ldr	r1, [sp, #12]
 80034ba:	f7fd ffcf 	bl	800145c <__aeabi_dsub>
 80034be:	4a8e      	ldr	r2, [pc, #568]	@ (80036f8 <__ieee754_rem_pio2+0x2d8>)
 80034c0:	4b8e      	ldr	r3, [pc, #568]	@ (80036fc <__ieee754_rem_pio2+0x2dc>)
 80034c2:	e7dc      	b.n	800347e <__ieee754_rem_pio2+0x5e>
 80034c4:	4b88      	ldr	r3, [pc, #544]	@ (80036e8 <__ieee754_rem_pio2+0x2c8>)
 80034c6:	f7fc fffb 	bl	80004c0 <__aeabi_dadd>
 80034ca:	9002      	str	r0, [sp, #8]
 80034cc:	9103      	str	r1, [sp, #12]
 80034ce:	42a5      	cmp	r5, r4
 80034d0:	d016      	beq.n	8003500 <__ieee754_rem_pio2+0xe0>
 80034d2:	4a87      	ldr	r2, [pc, #540]	@ (80036f0 <__ieee754_rem_pio2+0x2d0>)
 80034d4:	4b87      	ldr	r3, [pc, #540]	@ (80036f4 <__ieee754_rem_pio2+0x2d4>)
 80034d6:	f7fc fff3 	bl	80004c0 <__aeabi_dadd>
 80034da:	0002      	movs	r2, r0
 80034dc:	000b      	movs	r3, r1
 80034de:	0004      	movs	r4, r0
 80034e0:	000d      	movs	r5, r1
 80034e2:	9802      	ldr	r0, [sp, #8]
 80034e4:	9903      	ldr	r1, [sp, #12]
 80034e6:	f7fd ffb9 	bl	800145c <__aeabi_dsub>
 80034ea:	4a81      	ldr	r2, [pc, #516]	@ (80036f0 <__ieee754_rem_pio2+0x2d0>)
 80034ec:	4b81      	ldr	r3, [pc, #516]	@ (80036f4 <__ieee754_rem_pio2+0x2d4>)
 80034ee:	f7fc ffe7 	bl	80004c0 <__aeabi_dadd>
 80034f2:	2301      	movs	r3, #1
 80034f4:	603c      	str	r4, [r7, #0]
 80034f6:	607d      	str	r5, [r7, #4]
 80034f8:	60b8      	str	r0, [r7, #8]
 80034fa:	60f9      	str	r1, [r7, #12]
 80034fc:	425b      	negs	r3, r3
 80034fe:	e7c5      	b.n	800348c <__ieee754_rem_pio2+0x6c>
 8003500:	22d3      	movs	r2, #211	@ 0xd3
 8003502:	9802      	ldr	r0, [sp, #8]
 8003504:	9903      	ldr	r1, [sp, #12]
 8003506:	4b7b      	ldr	r3, [pc, #492]	@ (80036f4 <__ieee754_rem_pio2+0x2d4>)
 8003508:	0552      	lsls	r2, r2, #21
 800350a:	f7fc ffd9 	bl	80004c0 <__aeabi_dadd>
 800350e:	4a7a      	ldr	r2, [pc, #488]	@ (80036f8 <__ieee754_rem_pio2+0x2d8>)
 8003510:	4b7a      	ldr	r3, [pc, #488]	@ (80036fc <__ieee754_rem_pio2+0x2dc>)
 8003512:	9002      	str	r0, [sp, #8]
 8003514:	9103      	str	r1, [sp, #12]
 8003516:	f7fc ffd3 	bl	80004c0 <__aeabi_dadd>
 800351a:	0002      	movs	r2, r0
 800351c:	000b      	movs	r3, r1
 800351e:	0004      	movs	r4, r0
 8003520:	000d      	movs	r5, r1
 8003522:	9802      	ldr	r0, [sp, #8]
 8003524:	9903      	ldr	r1, [sp, #12]
 8003526:	f7fd ff99 	bl	800145c <__aeabi_dsub>
 800352a:	4a73      	ldr	r2, [pc, #460]	@ (80036f8 <__ieee754_rem_pio2+0x2d8>)
 800352c:	4b73      	ldr	r3, [pc, #460]	@ (80036fc <__ieee754_rem_pio2+0x2dc>)
 800352e:	e7de      	b.n	80034ee <__ieee754_rem_pio2+0xce>
 8003530:	4b73      	ldr	r3, [pc, #460]	@ (8003700 <__ieee754_rem_pio2+0x2e0>)
 8003532:	429d      	cmp	r5, r3
 8003534:	d900      	bls.n	8003538 <__ieee754_rem_pio2+0x118>
 8003536:	e0c6      	b.n	80036c6 <__ieee754_rem_pio2+0x2a6>
 8003538:	f000 f94e 	bl	80037d8 <fabs>
 800353c:	4a71      	ldr	r2, [pc, #452]	@ (8003704 <__ieee754_rem_pio2+0x2e4>)
 800353e:	4b72      	ldr	r3, [pc, #456]	@ (8003708 <__ieee754_rem_pio2+0x2e8>)
 8003540:	9004      	str	r0, [sp, #16]
 8003542:	9105      	str	r1, [sp, #20]
 8003544:	f7fd fca4 	bl	8000e90 <__aeabi_dmul>
 8003548:	2200      	movs	r2, #0
 800354a:	4b70      	ldr	r3, [pc, #448]	@ (800370c <__ieee754_rem_pio2+0x2ec>)
 800354c:	f7fc ffb8 	bl	80004c0 <__aeabi_dadd>
 8003550:	f7fe fb8e 	bl	8001c70 <__aeabi_d2iz>
 8003554:	9002      	str	r0, [sp, #8]
 8003556:	f7fe fbc7 	bl	8001ce8 <__aeabi_i2d>
 800355a:	4a64      	ldr	r2, [pc, #400]	@ (80036ec <__ieee754_rem_pio2+0x2cc>)
 800355c:	4b62      	ldr	r3, [pc, #392]	@ (80036e8 <__ieee754_rem_pio2+0x2c8>)
 800355e:	9008      	str	r0, [sp, #32]
 8003560:	9109      	str	r1, [sp, #36]	@ 0x24
 8003562:	f7fd fc95 	bl	8000e90 <__aeabi_dmul>
 8003566:	0002      	movs	r2, r0
 8003568:	000b      	movs	r3, r1
 800356a:	9804      	ldr	r0, [sp, #16]
 800356c:	9905      	ldr	r1, [sp, #20]
 800356e:	f7fd ff75 	bl	800145c <__aeabi_dsub>
 8003572:	4b60      	ldr	r3, [pc, #384]	@ (80036f4 <__ieee754_rem_pio2+0x2d4>)
 8003574:	9004      	str	r0, [sp, #16]
 8003576:	9105      	str	r1, [sp, #20]
 8003578:	9808      	ldr	r0, [sp, #32]
 800357a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800357c:	4a5c      	ldr	r2, [pc, #368]	@ (80036f0 <__ieee754_rem_pio2+0x2d0>)
 800357e:	f7fd fc87 	bl	8000e90 <__aeabi_dmul>
 8003582:	9b02      	ldr	r3, [sp, #8]
 8003584:	9006      	str	r0, [sp, #24]
 8003586:	9107      	str	r1, [sp, #28]
 8003588:	2b1f      	cmp	r3, #31
 800358a:	dc0d      	bgt.n	80035a8 <__ieee754_rem_pio2+0x188>
 800358c:	9a02      	ldr	r2, [sp, #8]
 800358e:	4b60      	ldr	r3, [pc, #384]	@ (8003710 <__ieee754_rem_pio2+0x2f0>)
 8003590:	3a01      	subs	r2, #1
 8003592:	0092      	lsls	r2, r2, #2
 8003594:	58d3      	ldr	r3, [r2, r3]
 8003596:	42ab      	cmp	r3, r5
 8003598:	d006      	beq.n	80035a8 <__ieee754_rem_pio2+0x188>
 800359a:	0002      	movs	r2, r0
 800359c:	000b      	movs	r3, r1
 800359e:	9804      	ldr	r0, [sp, #16]
 80035a0:	9905      	ldr	r1, [sp, #20]
 80035a2:	f7fd ff5b 	bl	800145c <__aeabi_dsub>
 80035a6:	e00b      	b.n	80035c0 <__ieee754_rem_pio2+0x1a0>
 80035a8:	9a06      	ldr	r2, [sp, #24]
 80035aa:	9b07      	ldr	r3, [sp, #28]
 80035ac:	9804      	ldr	r0, [sp, #16]
 80035ae:	9905      	ldr	r1, [sp, #20]
 80035b0:	f7fd ff54 	bl	800145c <__aeabi_dsub>
 80035b4:	004b      	lsls	r3, r1, #1
 80035b6:	152e      	asrs	r6, r5, #20
 80035b8:	0d5b      	lsrs	r3, r3, #21
 80035ba:	1af3      	subs	r3, r6, r3
 80035bc:	2b10      	cmp	r3, #16
 80035be:	dc02      	bgt.n	80035c6 <__ieee754_rem_pio2+0x1a6>
 80035c0:	6038      	str	r0, [r7, #0]
 80035c2:	6079      	str	r1, [r7, #4]
 80035c4:	e039      	b.n	800363a <__ieee754_rem_pio2+0x21a>
 80035c6:	22d3      	movs	r2, #211	@ 0xd3
 80035c8:	9808      	ldr	r0, [sp, #32]
 80035ca:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80035cc:	4b49      	ldr	r3, [pc, #292]	@ (80036f4 <__ieee754_rem_pio2+0x2d4>)
 80035ce:	0552      	lsls	r2, r2, #21
 80035d0:	f7fd fc5e 	bl	8000e90 <__aeabi_dmul>
 80035d4:	0004      	movs	r4, r0
 80035d6:	000d      	movs	r5, r1
 80035d8:	0002      	movs	r2, r0
 80035da:	000b      	movs	r3, r1
 80035dc:	9804      	ldr	r0, [sp, #16]
 80035de:	9905      	ldr	r1, [sp, #20]
 80035e0:	f7fd ff3c 	bl	800145c <__aeabi_dsub>
 80035e4:	0002      	movs	r2, r0
 80035e6:	000b      	movs	r3, r1
 80035e8:	900a      	str	r0, [sp, #40]	@ 0x28
 80035ea:	910b      	str	r1, [sp, #44]	@ 0x2c
 80035ec:	9804      	ldr	r0, [sp, #16]
 80035ee:	9905      	ldr	r1, [sp, #20]
 80035f0:	f7fd ff34 	bl	800145c <__aeabi_dsub>
 80035f4:	0022      	movs	r2, r4
 80035f6:	002b      	movs	r3, r5
 80035f8:	f7fd ff30 	bl	800145c <__aeabi_dsub>
 80035fc:	0004      	movs	r4, r0
 80035fe:	000d      	movs	r5, r1
 8003600:	9808      	ldr	r0, [sp, #32]
 8003602:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8003604:	4a3c      	ldr	r2, [pc, #240]	@ (80036f8 <__ieee754_rem_pio2+0x2d8>)
 8003606:	4b3d      	ldr	r3, [pc, #244]	@ (80036fc <__ieee754_rem_pio2+0x2dc>)
 8003608:	f7fd fc42 	bl	8000e90 <__aeabi_dmul>
 800360c:	0022      	movs	r2, r4
 800360e:	002b      	movs	r3, r5
 8003610:	f7fd ff24 	bl	800145c <__aeabi_dsub>
 8003614:	000b      	movs	r3, r1
 8003616:	0002      	movs	r2, r0
 8003618:	9006      	str	r0, [sp, #24]
 800361a:	9107      	str	r1, [sp, #28]
 800361c:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800361e:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8003620:	f7fd ff1c 	bl	800145c <__aeabi_dsub>
 8003624:	004b      	lsls	r3, r1, #1
 8003626:	0d5b      	lsrs	r3, r3, #21
 8003628:	1af3      	subs	r3, r6, r3
 800362a:	2b31      	cmp	r3, #49	@ 0x31
 800362c:	dc21      	bgt.n	8003672 <__ieee754_rem_pio2+0x252>
 800362e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003630:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8003632:	6038      	str	r0, [r7, #0]
 8003634:	6079      	str	r1, [r7, #4]
 8003636:	9304      	str	r3, [sp, #16]
 8003638:	9405      	str	r4, [sp, #20]
 800363a:	683c      	ldr	r4, [r7, #0]
 800363c:	687d      	ldr	r5, [r7, #4]
 800363e:	9804      	ldr	r0, [sp, #16]
 8003640:	9905      	ldr	r1, [sp, #20]
 8003642:	0022      	movs	r2, r4
 8003644:	002b      	movs	r3, r5
 8003646:	f7fd ff09 	bl	800145c <__aeabi_dsub>
 800364a:	9a06      	ldr	r2, [sp, #24]
 800364c:	9b07      	ldr	r3, [sp, #28]
 800364e:	f7fd ff05 	bl	800145c <__aeabi_dsub>
 8003652:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8003654:	60b8      	str	r0, [r7, #8]
 8003656:	60f9      	str	r1, [r7, #12]
 8003658:	2b00      	cmp	r3, #0
 800365a:	db00      	blt.n	800365e <__ieee754_rem_pio2+0x23e>
 800365c:	e717      	b.n	800348e <__ieee754_rem_pio2+0x6e>
 800365e:	2280      	movs	r2, #128	@ 0x80
 8003660:	0612      	lsls	r2, r2, #24
 8003662:	18ab      	adds	r3, r5, r2
 8003664:	607b      	str	r3, [r7, #4]
 8003666:	188b      	adds	r3, r1, r2
 8003668:	603c      	str	r4, [r7, #0]
 800366a:	60b8      	str	r0, [r7, #8]
 800366c:	60fb      	str	r3, [r7, #12]
 800366e:	9b02      	ldr	r3, [sp, #8]
 8003670:	e744      	b.n	80034fc <__ieee754_rem_pio2+0xdc>
 8003672:	22b8      	movs	r2, #184	@ 0xb8
 8003674:	9808      	ldr	r0, [sp, #32]
 8003676:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8003678:	4b20      	ldr	r3, [pc, #128]	@ (80036fc <__ieee754_rem_pio2+0x2dc>)
 800367a:	0592      	lsls	r2, r2, #22
 800367c:	f7fd fc08 	bl	8000e90 <__aeabi_dmul>
 8003680:	0004      	movs	r4, r0
 8003682:	000d      	movs	r5, r1
 8003684:	0002      	movs	r2, r0
 8003686:	000b      	movs	r3, r1
 8003688:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800368a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800368c:	f7fd fee6 	bl	800145c <__aeabi_dsub>
 8003690:	0002      	movs	r2, r0
 8003692:	000b      	movs	r3, r1
 8003694:	9004      	str	r0, [sp, #16]
 8003696:	9105      	str	r1, [sp, #20]
 8003698:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800369a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800369c:	f7fd fede 	bl	800145c <__aeabi_dsub>
 80036a0:	0022      	movs	r2, r4
 80036a2:	002b      	movs	r3, r5
 80036a4:	f7fd feda 	bl	800145c <__aeabi_dsub>
 80036a8:	0004      	movs	r4, r0
 80036aa:	000d      	movs	r5, r1
 80036ac:	9808      	ldr	r0, [sp, #32]
 80036ae:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80036b0:	4a18      	ldr	r2, [pc, #96]	@ (8003714 <__ieee754_rem_pio2+0x2f4>)
 80036b2:	4b19      	ldr	r3, [pc, #100]	@ (8003718 <__ieee754_rem_pio2+0x2f8>)
 80036b4:	f7fd fbec 	bl	8000e90 <__aeabi_dmul>
 80036b8:	0022      	movs	r2, r4
 80036ba:	002b      	movs	r3, r5
 80036bc:	f7fd fece 	bl	800145c <__aeabi_dsub>
 80036c0:	9006      	str	r0, [sp, #24]
 80036c2:	9107      	str	r1, [sp, #28]
 80036c4:	e769      	b.n	800359a <__ieee754_rem_pio2+0x17a>
 80036c6:	4b15      	ldr	r3, [pc, #84]	@ (800371c <__ieee754_rem_pio2+0x2fc>)
 80036c8:	429d      	cmp	r5, r3
 80036ca:	d929      	bls.n	8003720 <__ieee754_rem_pio2+0x300>
 80036cc:	0002      	movs	r2, r0
 80036ce:	000b      	movs	r3, r1
 80036d0:	f7fd fec4 	bl	800145c <__aeabi_dsub>
 80036d4:	60b8      	str	r0, [r7, #8]
 80036d6:	60f9      	str	r1, [r7, #12]
 80036d8:	6038      	str	r0, [r7, #0]
 80036da:	6079      	str	r1, [r7, #4]
 80036dc:	e6af      	b.n	800343e <__ieee754_rem_pio2+0x1e>
 80036de:	46c0      	nop			@ (mov r8, r8)
 80036e0:	3fe921fb 	.word	0x3fe921fb
 80036e4:	4002d97b 	.word	0x4002d97b
 80036e8:	3ff921fb 	.word	0x3ff921fb
 80036ec:	54400000 	.word	0x54400000
 80036f0:	1a626331 	.word	0x1a626331
 80036f4:	3dd0b461 	.word	0x3dd0b461
 80036f8:	2e037073 	.word	0x2e037073
 80036fc:	3ba3198a 	.word	0x3ba3198a
 8003700:	413921fb 	.word	0x413921fb
 8003704:	6dc9c883 	.word	0x6dc9c883
 8003708:	3fe45f30 	.word	0x3fe45f30
 800370c:	3fe00000 	.word	0x3fe00000
 8003710:	0800410c 	.word	0x0800410c
 8003714:	252049c1 	.word	0x252049c1
 8003718:	397b839a 	.word	0x397b839a
 800371c:	7fefffff 	.word	0x7fefffff
 8003720:	4b2a      	ldr	r3, [pc, #168]	@ (80037cc <__ieee754_rem_pio2+0x3ac>)
 8003722:	152e      	asrs	r6, r5, #20
 8003724:	18f6      	adds	r6, r6, r3
 8003726:	0531      	lsls	r1, r6, #20
 8003728:	1a6b      	subs	r3, r5, r1
 800372a:	0019      	movs	r1, r3
 800372c:	001d      	movs	r5, r3
 800372e:	0004      	movs	r4, r0
 8003730:	f7fe fa9e 	bl	8001c70 <__aeabi_d2iz>
 8003734:	f7fe fad8 	bl	8001ce8 <__aeabi_i2d>
 8003738:	0002      	movs	r2, r0
 800373a:	000b      	movs	r3, r1
 800373c:	0020      	movs	r0, r4
 800373e:	0029      	movs	r1, r5
 8003740:	920e      	str	r2, [sp, #56]	@ 0x38
 8003742:	930f      	str	r3, [sp, #60]	@ 0x3c
 8003744:	f7fd fe8a 	bl	800145c <__aeabi_dsub>
 8003748:	2200      	movs	r2, #0
 800374a:	4b21      	ldr	r3, [pc, #132]	@ (80037d0 <__ieee754_rem_pio2+0x3b0>)
 800374c:	f7fd fba0 	bl	8000e90 <__aeabi_dmul>
 8003750:	000d      	movs	r5, r1
 8003752:	0004      	movs	r4, r0
 8003754:	f7fe fa8c 	bl	8001c70 <__aeabi_d2iz>
 8003758:	f7fe fac6 	bl	8001ce8 <__aeabi_i2d>
 800375c:	0002      	movs	r2, r0
 800375e:	000b      	movs	r3, r1
 8003760:	0020      	movs	r0, r4
 8003762:	0029      	movs	r1, r5
 8003764:	9210      	str	r2, [sp, #64]	@ 0x40
 8003766:	9311      	str	r3, [sp, #68]	@ 0x44
 8003768:	f7fd fe78 	bl	800145c <__aeabi_dsub>
 800376c:	2200      	movs	r2, #0
 800376e:	4b18      	ldr	r3, [pc, #96]	@ (80037d0 <__ieee754_rem_pio2+0x3b0>)
 8003770:	f7fd fb8e 	bl	8000e90 <__aeabi_dmul>
 8003774:	2503      	movs	r5, #3
 8003776:	9012      	str	r0, [sp, #72]	@ 0x48
 8003778:	9113      	str	r1, [sp, #76]	@ 0x4c
 800377a:	ac0e      	add	r4, sp, #56	@ 0x38
 800377c:	2200      	movs	r2, #0
 800377e:	6920      	ldr	r0, [r4, #16]
 8003780:	6961      	ldr	r1, [r4, #20]
 8003782:	2300      	movs	r3, #0
 8003784:	9502      	str	r5, [sp, #8]
 8003786:	3c08      	subs	r4, #8
 8003788:	3d01      	subs	r5, #1
 800378a:	f7fc fe4d 	bl	8000428 <__aeabi_dcmpeq>
 800378e:	2800      	cmp	r0, #0
 8003790:	d1f4      	bne.n	800377c <__ieee754_rem_pio2+0x35c>
 8003792:	4b10      	ldr	r3, [pc, #64]	@ (80037d4 <__ieee754_rem_pio2+0x3b4>)
 8003794:	0032      	movs	r2, r6
 8003796:	9301      	str	r3, [sp, #4]
 8003798:	2302      	movs	r3, #2
 800379a:	0039      	movs	r1, r7
 800379c:	9300      	str	r3, [sp, #0]
 800379e:	a80e      	add	r0, sp, #56	@ 0x38
 80037a0:	9b02      	ldr	r3, [sp, #8]
 80037a2:	f000 f81d 	bl	80037e0 <__kernel_rem_pio2>
 80037a6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80037a8:	9002      	str	r0, [sp, #8]
 80037aa:	2b00      	cmp	r3, #0
 80037ac:	db00      	blt.n	80037b0 <__ieee754_rem_pio2+0x390>
 80037ae:	e66e      	b.n	800348e <__ieee754_rem_pio2+0x6e>
 80037b0:	2080      	movs	r0, #128	@ 0x80
 80037b2:	6879      	ldr	r1, [r7, #4]
 80037b4:	683a      	ldr	r2, [r7, #0]
 80037b6:	0600      	lsls	r0, r0, #24
 80037b8:	180b      	adds	r3, r1, r0
 80037ba:	68f9      	ldr	r1, [r7, #12]
 80037bc:	603a      	str	r2, [r7, #0]
 80037be:	607b      	str	r3, [r7, #4]
 80037c0:	68ba      	ldr	r2, [r7, #8]
 80037c2:	180b      	adds	r3, r1, r0
 80037c4:	60ba      	str	r2, [r7, #8]
 80037c6:	60fb      	str	r3, [r7, #12]
 80037c8:	e751      	b.n	800366e <__ieee754_rem_pio2+0x24e>
 80037ca:	46c0      	nop			@ (mov r8, r8)
 80037cc:	fffffbea 	.word	0xfffffbea
 80037d0:	41700000 	.word	0x41700000
 80037d4:	0800418c 	.word	0x0800418c

080037d8 <fabs>:
 80037d8:	0049      	lsls	r1, r1, #1
 80037da:	084b      	lsrs	r3, r1, #1
 80037dc:	0019      	movs	r1, r3
 80037de:	4770      	bx	lr

080037e0 <__kernel_rem_pio2>:
 80037e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80037e2:	4cc6      	ldr	r4, [pc, #792]	@ (8003afc <__kernel_rem_pio2+0x31c>)
 80037e4:	44a5      	add	sp, r4
 80037e6:	0014      	movs	r4, r2
 80037e8:	9aa4      	ldr	r2, [sp, #656]	@ 0x290
 80037ea:	930e      	str	r3, [sp, #56]	@ 0x38
 80037ec:	4bc4      	ldr	r3, [pc, #784]	@ (8003b00 <__kernel_rem_pio2+0x320>)
 80037ee:	0092      	lsls	r2, r2, #2
 80037f0:	58d3      	ldr	r3, [r2, r3]
 80037f2:	900f      	str	r0, [sp, #60]	@ 0x3c
 80037f4:	9308      	str	r3, [sp, #32]
 80037f6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80037f8:	9105      	str	r1, [sp, #20]
 80037fa:	3b01      	subs	r3, #1
 80037fc:	930d      	str	r3, [sp, #52]	@ 0x34
 80037fe:	2300      	movs	r3, #0
 8003800:	9300      	str	r3, [sp, #0]
 8003802:	0023      	movs	r3, r4
 8003804:	3314      	adds	r3, #20
 8003806:	db04      	blt.n	8003812 <__kernel_rem_pio2+0x32>
 8003808:	2118      	movs	r1, #24
 800380a:	1ee0      	subs	r0, r4, #3
 800380c:	f7fc fd10 	bl	8000230 <__divsi3>
 8003810:	9000      	str	r0, [sp, #0]
 8003812:	9b00      	ldr	r3, [sp, #0]
 8003814:	ae26      	add	r6, sp, #152	@ 0x98
 8003816:	1c5a      	adds	r2, r3, #1
 8003818:	2318      	movs	r3, #24
 800381a:	425b      	negs	r3, r3
 800381c:	4353      	muls	r3, r2
 800381e:	191b      	adds	r3, r3, r4
 8003820:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8003822:	9302      	str	r3, [sp, #8]
 8003824:	9b00      	ldr	r3, [sp, #0]
 8003826:	1a9d      	subs	r5, r3, r2
 8003828:	002c      	movs	r4, r5
 800382a:	9b08      	ldr	r3, [sp, #32]
 800382c:	189f      	adds	r7, r3, r2
 800382e:	1b63      	subs	r3, r4, r5
 8003830:	429f      	cmp	r7, r3
 8003832:	da0f      	bge.n	8003854 <__kernel_rem_pio2+0x74>
 8003834:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8003836:	af76      	add	r7, sp, #472	@ 0x1d8
 8003838:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800383a:	9a08      	ldr	r2, [sp, #32]
 800383c:	1aeb      	subs	r3, r5, r3
 800383e:	429a      	cmp	r2, r3
 8003840:	db30      	blt.n	80038a4 <__kernel_rem_pio2+0xc4>
 8003842:	00eb      	lsls	r3, r5, #3
 8003844:	aa26      	add	r2, sp, #152	@ 0x98
 8003846:	2400      	movs	r4, #0
 8003848:	189e      	adds	r6, r3, r2
 800384a:	2300      	movs	r3, #0
 800384c:	9306      	str	r3, [sp, #24]
 800384e:	9407      	str	r4, [sp, #28]
 8003850:	2400      	movs	r4, #0
 8003852:	e01e      	b.n	8003892 <__kernel_rem_pio2+0xb2>
 8003854:	2c00      	cmp	r4, #0
 8003856:	db07      	blt.n	8003868 <__kernel_rem_pio2+0x88>
 8003858:	9aa5      	ldr	r2, [sp, #660]	@ 0x294
 800385a:	00a3      	lsls	r3, r4, #2
 800385c:	58d0      	ldr	r0, [r2, r3]
 800385e:	f7fe fa43 	bl	8001ce8 <__aeabi_i2d>
 8003862:	c603      	stmia	r6!, {r0, r1}
 8003864:	3401      	adds	r4, #1
 8003866:	e7e2      	b.n	800382e <__kernel_rem_pio2+0x4e>
 8003868:	2000      	movs	r0, #0
 800386a:	2100      	movs	r1, #0
 800386c:	e7f9      	b.n	8003862 <__kernel_rem_pio2+0x82>
 800386e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8003870:	00e1      	lsls	r1, r4, #3
 8003872:	1859      	adds	r1, r3, r1
 8003874:	6808      	ldr	r0, [r1, #0]
 8003876:	6849      	ldr	r1, [r1, #4]
 8003878:	6832      	ldr	r2, [r6, #0]
 800387a:	6873      	ldr	r3, [r6, #4]
 800387c:	f7fd fb08 	bl	8000e90 <__aeabi_dmul>
 8003880:	0002      	movs	r2, r0
 8003882:	000b      	movs	r3, r1
 8003884:	9806      	ldr	r0, [sp, #24]
 8003886:	9907      	ldr	r1, [sp, #28]
 8003888:	f7fc fe1a 	bl	80004c0 <__aeabi_dadd>
 800388c:	9006      	str	r0, [sp, #24]
 800388e:	9107      	str	r1, [sp, #28]
 8003890:	3401      	adds	r4, #1
 8003892:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8003894:	3e08      	subs	r6, #8
 8003896:	429c      	cmp	r4, r3
 8003898:	dde9      	ble.n	800386e <__kernel_rem_pio2+0x8e>
 800389a:	9b06      	ldr	r3, [sp, #24]
 800389c:	9c07      	ldr	r4, [sp, #28]
 800389e:	3501      	adds	r5, #1
 80038a0:	c718      	stmia	r7!, {r3, r4}
 80038a2:	e7c9      	b.n	8003838 <__kernel_rem_pio2+0x58>
 80038a4:	9b08      	ldr	r3, [sp, #32]
 80038a6:	aa12      	add	r2, sp, #72	@ 0x48
 80038a8:	009b      	lsls	r3, r3, #2
 80038aa:	189b      	adds	r3, r3, r2
 80038ac:	9311      	str	r3, [sp, #68]	@ 0x44
 80038ae:	9b00      	ldr	r3, [sp, #0]
 80038b0:	9aa5      	ldr	r2, [sp, #660]	@ 0x294
 80038b2:	009b      	lsls	r3, r3, #2
 80038b4:	18d3      	adds	r3, r2, r3
 80038b6:	9310      	str	r3, [sp, #64]	@ 0x40
 80038b8:	9b08      	ldr	r3, [sp, #32]
 80038ba:	9300      	str	r3, [sp, #0]
 80038bc:	9b00      	ldr	r3, [sp, #0]
 80038be:	aa76      	add	r2, sp, #472	@ 0x1d8
 80038c0:	00db      	lsls	r3, r3, #3
 80038c2:	18d3      	adds	r3, r2, r3
 80038c4:	681e      	ldr	r6, [r3, #0]
 80038c6:	685f      	ldr	r7, [r3, #4]
 80038c8:	ab12      	add	r3, sp, #72	@ 0x48
 80038ca:	001d      	movs	r5, r3
 80038cc:	9c00      	ldr	r4, [sp, #0]
 80038ce:	930a      	str	r3, [sp, #40]	@ 0x28
 80038d0:	2c00      	cmp	r4, #0
 80038d2:	dc73      	bgt.n	80039bc <__kernel_rem_pio2+0x1dc>
 80038d4:	0030      	movs	r0, r6
 80038d6:	0039      	movs	r1, r7
 80038d8:	9a02      	ldr	r2, [sp, #8]
 80038da:	f000 fad5 	bl	8003e88 <scalbn>
 80038de:	23ff      	movs	r3, #255	@ 0xff
 80038e0:	2200      	movs	r2, #0
 80038e2:	059b      	lsls	r3, r3, #22
 80038e4:	0004      	movs	r4, r0
 80038e6:	000d      	movs	r5, r1
 80038e8:	f7fd fad2 	bl	8000e90 <__aeabi_dmul>
 80038ec:	f000 fb38 	bl	8003f60 <floor>
 80038f0:	2200      	movs	r2, #0
 80038f2:	4b84      	ldr	r3, [pc, #528]	@ (8003b04 <__kernel_rem_pio2+0x324>)
 80038f4:	f7fd facc 	bl	8000e90 <__aeabi_dmul>
 80038f8:	0002      	movs	r2, r0
 80038fa:	000b      	movs	r3, r1
 80038fc:	0020      	movs	r0, r4
 80038fe:	0029      	movs	r1, r5
 8003900:	f7fd fdac 	bl	800145c <__aeabi_dsub>
 8003904:	000d      	movs	r5, r1
 8003906:	0004      	movs	r4, r0
 8003908:	f7fe f9b2 	bl	8001c70 <__aeabi_d2iz>
 800390c:	900c      	str	r0, [sp, #48]	@ 0x30
 800390e:	f7fe f9eb 	bl	8001ce8 <__aeabi_i2d>
 8003912:	000b      	movs	r3, r1
 8003914:	0002      	movs	r2, r0
 8003916:	0029      	movs	r1, r5
 8003918:	0020      	movs	r0, r4
 800391a:	f7fd fd9f 	bl	800145c <__aeabi_dsub>
 800391e:	9b02      	ldr	r3, [sp, #8]
 8003920:	0006      	movs	r6, r0
 8003922:	000f      	movs	r7, r1
 8003924:	2b00      	cmp	r3, #0
 8003926:	dd6f      	ble.n	8003a08 <__kernel_rem_pio2+0x228>
 8003928:	2018      	movs	r0, #24
 800392a:	9b00      	ldr	r3, [sp, #0]
 800392c:	aa12      	add	r2, sp, #72	@ 0x48
 800392e:	3b01      	subs	r3, #1
 8003930:	009b      	lsls	r3, r3, #2
 8003932:	589a      	ldr	r2, [r3, r2]
 8003934:	9902      	ldr	r1, [sp, #8]
 8003936:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8003938:	1a40      	subs	r0, r0, r1
 800393a:	0011      	movs	r1, r2
 800393c:	4101      	asrs	r1, r0
 800393e:	1864      	adds	r4, r4, r1
 8003940:	4081      	lsls	r1, r0
 8003942:	1a52      	subs	r2, r2, r1
 8003944:	a912      	add	r1, sp, #72	@ 0x48
 8003946:	505a      	str	r2, [r3, r1]
 8003948:	2317      	movs	r3, #23
 800394a:	9902      	ldr	r1, [sp, #8]
 800394c:	940c      	str	r4, [sp, #48]	@ 0x30
 800394e:	1a5b      	subs	r3, r3, r1
 8003950:	411a      	asrs	r2, r3
 8003952:	9206      	str	r2, [sp, #24]
 8003954:	9b06      	ldr	r3, [sp, #24]
 8003956:	2b00      	cmp	r3, #0
 8003958:	dd68      	ble.n	8003a2c <__kernel_rem_pio2+0x24c>
 800395a:	2200      	movs	r2, #0
 800395c:	2580      	movs	r5, #128	@ 0x80
 800395e:	0014      	movs	r4, r2
 8003960:	2101      	movs	r1, #1
 8003962:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8003964:	4868      	ldr	r0, [pc, #416]	@ (8003b08 <__kernel_rem_pio2+0x328>)
 8003966:	3301      	adds	r3, #1
 8003968:	930c      	str	r3, [sp, #48]	@ 0x30
 800396a:	046d      	lsls	r5, r5, #17
 800396c:	9b00      	ldr	r3, [sp, #0]
 800396e:	4293      	cmp	r3, r2
 8003970:	dd00      	ble.n	8003974 <__kernel_rem_pio2+0x194>
 8003972:	e098      	b.n	8003aa6 <__kernel_rem_pio2+0x2c6>
 8003974:	9b02      	ldr	r3, [sp, #8]
 8003976:	2b00      	cmp	r3, #0
 8003978:	dd05      	ble.n	8003986 <__kernel_rem_pio2+0x1a6>
 800397a:	2b01      	cmp	r3, #1
 800397c:	d100      	bne.n	8003980 <__kernel_rem_pio2+0x1a0>
 800397e:	e0a4      	b.n	8003aca <__kernel_rem_pio2+0x2ea>
 8003980:	2b02      	cmp	r3, #2
 8003982:	d100      	bne.n	8003986 <__kernel_rem_pio2+0x1a6>
 8003984:	e0ab      	b.n	8003ade <__kernel_rem_pio2+0x2fe>
 8003986:	9b06      	ldr	r3, [sp, #24]
 8003988:	2b02      	cmp	r3, #2
 800398a:	d14f      	bne.n	8003a2c <__kernel_rem_pio2+0x24c>
 800398c:	0032      	movs	r2, r6
 800398e:	003b      	movs	r3, r7
 8003990:	2000      	movs	r0, #0
 8003992:	495e      	ldr	r1, [pc, #376]	@ (8003b0c <__kernel_rem_pio2+0x32c>)
 8003994:	f7fd fd62 	bl	800145c <__aeabi_dsub>
 8003998:	0006      	movs	r6, r0
 800399a:	000f      	movs	r7, r1
 800399c:	2c00      	cmp	r4, #0
 800399e:	d045      	beq.n	8003a2c <__kernel_rem_pio2+0x24c>
 80039a0:	9a02      	ldr	r2, [sp, #8]
 80039a2:	2000      	movs	r0, #0
 80039a4:	4959      	ldr	r1, [pc, #356]	@ (8003b0c <__kernel_rem_pio2+0x32c>)
 80039a6:	f000 fa6f 	bl	8003e88 <scalbn>
 80039aa:	0002      	movs	r2, r0
 80039ac:	000b      	movs	r3, r1
 80039ae:	0030      	movs	r0, r6
 80039b0:	0039      	movs	r1, r7
 80039b2:	f7fd fd53 	bl	800145c <__aeabi_dsub>
 80039b6:	0006      	movs	r6, r0
 80039b8:	000f      	movs	r7, r1
 80039ba:	e037      	b.n	8003a2c <__kernel_rem_pio2+0x24c>
 80039bc:	2200      	movs	r2, #0
 80039be:	4b54      	ldr	r3, [pc, #336]	@ (8003b10 <__kernel_rem_pio2+0x330>)
 80039c0:	0030      	movs	r0, r6
 80039c2:	0039      	movs	r1, r7
 80039c4:	f7fd fa64 	bl	8000e90 <__aeabi_dmul>
 80039c8:	f7fe f952 	bl	8001c70 <__aeabi_d2iz>
 80039cc:	f7fe f98c 	bl	8001ce8 <__aeabi_i2d>
 80039d0:	2200      	movs	r2, #0
 80039d2:	4b50      	ldr	r3, [pc, #320]	@ (8003b14 <__kernel_rem_pio2+0x334>)
 80039d4:	9006      	str	r0, [sp, #24]
 80039d6:	9107      	str	r1, [sp, #28]
 80039d8:	f7fd fa5a 	bl	8000e90 <__aeabi_dmul>
 80039dc:	0002      	movs	r2, r0
 80039de:	000b      	movs	r3, r1
 80039e0:	0030      	movs	r0, r6
 80039e2:	0039      	movs	r1, r7
 80039e4:	f7fd fd3a 	bl	800145c <__aeabi_dsub>
 80039e8:	f7fe f942 	bl	8001c70 <__aeabi_d2iz>
 80039ec:	3c01      	subs	r4, #1
 80039ee:	aa76      	add	r2, sp, #472	@ 0x1d8
 80039f0:	00e3      	lsls	r3, r4, #3
 80039f2:	18d3      	adds	r3, r2, r3
 80039f4:	c501      	stmia	r5!, {r0}
 80039f6:	681a      	ldr	r2, [r3, #0]
 80039f8:	685b      	ldr	r3, [r3, #4]
 80039fa:	9806      	ldr	r0, [sp, #24]
 80039fc:	9907      	ldr	r1, [sp, #28]
 80039fe:	f7fc fd5f 	bl	80004c0 <__aeabi_dadd>
 8003a02:	0006      	movs	r6, r0
 8003a04:	000f      	movs	r7, r1
 8003a06:	e763      	b.n	80038d0 <__kernel_rem_pio2+0xf0>
 8003a08:	9b02      	ldr	r3, [sp, #8]
 8003a0a:	2b00      	cmp	r3, #0
 8003a0c:	d107      	bne.n	8003a1e <__kernel_rem_pio2+0x23e>
 8003a0e:	9b00      	ldr	r3, [sp, #0]
 8003a10:	aa12      	add	r2, sp, #72	@ 0x48
 8003a12:	3b01      	subs	r3, #1
 8003a14:	009b      	lsls	r3, r3, #2
 8003a16:	589b      	ldr	r3, [r3, r2]
 8003a18:	15db      	asrs	r3, r3, #23
 8003a1a:	9306      	str	r3, [sp, #24]
 8003a1c:	e79a      	b.n	8003954 <__kernel_rem_pio2+0x174>
 8003a1e:	2200      	movs	r2, #0
 8003a20:	4b3d      	ldr	r3, [pc, #244]	@ (8003b18 <__kernel_rem_pio2+0x338>)
 8003a22:	f7fc fd25 	bl	8000470 <__aeabi_dcmpge>
 8003a26:	2800      	cmp	r0, #0
 8003a28:	d13a      	bne.n	8003aa0 <__kernel_rem_pio2+0x2c0>
 8003a2a:	9006      	str	r0, [sp, #24]
 8003a2c:	2200      	movs	r2, #0
 8003a2e:	2300      	movs	r3, #0
 8003a30:	0030      	movs	r0, r6
 8003a32:	0039      	movs	r1, r7
 8003a34:	f7fc fcf8 	bl	8000428 <__aeabi_dcmpeq>
 8003a38:	2800      	cmp	r0, #0
 8003a3a:	d100      	bne.n	8003a3e <__kernel_rem_pio2+0x25e>
 8003a3c:	e0b5      	b.n	8003baa <__kernel_rem_pio2+0x3ca>
 8003a3e:	2200      	movs	r2, #0
 8003a40:	9b00      	ldr	r3, [sp, #0]
 8003a42:	3b01      	subs	r3, #1
 8003a44:	9908      	ldr	r1, [sp, #32]
 8003a46:	428b      	cmp	r3, r1
 8003a48:	da51      	bge.n	8003aee <__kernel_rem_pio2+0x30e>
 8003a4a:	2a00      	cmp	r2, #0
 8003a4c:	d100      	bne.n	8003a50 <__kernel_rem_pio2+0x270>
 8003a4e:	e096      	b.n	8003b7e <__kernel_rem_pio2+0x39e>
 8003a50:	9b00      	ldr	r3, [sp, #0]
 8003a52:	aa12      	add	r2, sp, #72	@ 0x48
 8003a54:	3b01      	subs	r3, #1
 8003a56:	9300      	str	r3, [sp, #0]
 8003a58:	9b02      	ldr	r3, [sp, #8]
 8003a5a:	3b18      	subs	r3, #24
 8003a5c:	9302      	str	r3, [sp, #8]
 8003a5e:	9b00      	ldr	r3, [sp, #0]
 8003a60:	009b      	lsls	r3, r3, #2
 8003a62:	589b      	ldr	r3, [r3, r2]
 8003a64:	2b00      	cmp	r3, #0
 8003a66:	d0f3      	beq.n	8003a50 <__kernel_rem_pio2+0x270>
 8003a68:	2000      	movs	r0, #0
 8003a6a:	9a02      	ldr	r2, [sp, #8]
 8003a6c:	4927      	ldr	r1, [pc, #156]	@ (8003b0c <__kernel_rem_pio2+0x32c>)
 8003a6e:	f000 fa0b 	bl	8003e88 <scalbn>
 8003a72:	0004      	movs	r4, r0
 8003a74:	000d      	movs	r5, r1
 8003a76:	9e00      	ldr	r6, [sp, #0]
 8003a78:	2e00      	cmp	r6, #0
 8003a7a:	db00      	blt.n	8003a7e <__kernel_rem_pio2+0x29e>
 8003a7c:	e0d2      	b.n	8003c24 <__kernel_rem_pio2+0x444>
 8003a7e:	4b27      	ldr	r3, [pc, #156]	@ (8003b1c <__kernel_rem_pio2+0x33c>)
 8003a80:	9c00      	ldr	r4, [sp, #0]
 8003a82:	930a      	str	r3, [sp, #40]	@ 0x28
 8003a84:	2c00      	cmp	r4, #0
 8003a86:	da00      	bge.n	8003a8a <__kernel_rem_pio2+0x2aa>
 8003a88:	e103      	b.n	8003c92 <__kernel_rem_pio2+0x4b2>
 8003a8a:	00e3      	lsls	r3, r4, #3
 8003a8c:	aa76      	add	r2, sp, #472	@ 0x1d8
 8003a8e:	189f      	adds	r7, r3, r2
 8003a90:	2300      	movs	r3, #0
 8003a92:	2200      	movs	r2, #0
 8003a94:	9202      	str	r2, [sp, #8]
 8003a96:	9303      	str	r3, [sp, #12]
 8003a98:	9b00      	ldr	r3, [sp, #0]
 8003a9a:	2500      	movs	r5, #0
 8003a9c:	1b1e      	subs	r6, r3, r4
 8003a9e:	e0ea      	b.n	8003c76 <__kernel_rem_pio2+0x496>
 8003aa0:	2302      	movs	r3, #2
 8003aa2:	9306      	str	r3, [sp, #24]
 8003aa4:	e759      	b.n	800395a <__kernel_rem_pio2+0x17a>
 8003aa6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003aa8:	681b      	ldr	r3, [r3, #0]
 8003aaa:	2c00      	cmp	r4, #0
 8003aac:	d10b      	bne.n	8003ac6 <__kernel_rem_pio2+0x2e6>
 8003aae:	2b00      	cmp	r3, #0
 8003ab0:	d003      	beq.n	8003aba <__kernel_rem_pio2+0x2da>
 8003ab2:	1aeb      	subs	r3, r5, r3
 8003ab4:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8003ab6:	6023      	str	r3, [r4, #0]
 8003ab8:	000b      	movs	r3, r1
 8003aba:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8003abc:	3201      	adds	r2, #1
 8003abe:	3404      	adds	r4, #4
 8003ac0:	940a      	str	r4, [sp, #40]	@ 0x28
 8003ac2:	001c      	movs	r4, r3
 8003ac4:	e752      	b.n	800396c <__kernel_rem_pio2+0x18c>
 8003ac6:	1ac3      	subs	r3, r0, r3
 8003ac8:	e7f4      	b.n	8003ab4 <__kernel_rem_pio2+0x2d4>
 8003aca:	9b00      	ldr	r3, [sp, #0]
 8003acc:	aa12      	add	r2, sp, #72	@ 0x48
 8003ace:	3b01      	subs	r3, #1
 8003ad0:	009b      	lsls	r3, r3, #2
 8003ad2:	589a      	ldr	r2, [r3, r2]
 8003ad4:	0252      	lsls	r2, r2, #9
 8003ad6:	0a52      	lsrs	r2, r2, #9
 8003ad8:	a912      	add	r1, sp, #72	@ 0x48
 8003ada:	505a      	str	r2, [r3, r1]
 8003adc:	e753      	b.n	8003986 <__kernel_rem_pio2+0x1a6>
 8003ade:	9b00      	ldr	r3, [sp, #0]
 8003ae0:	aa12      	add	r2, sp, #72	@ 0x48
 8003ae2:	3b01      	subs	r3, #1
 8003ae4:	009b      	lsls	r3, r3, #2
 8003ae6:	589a      	ldr	r2, [r3, r2]
 8003ae8:	0292      	lsls	r2, r2, #10
 8003aea:	0a92      	lsrs	r2, r2, #10
 8003aec:	e7f4      	b.n	8003ad8 <__kernel_rem_pio2+0x2f8>
 8003aee:	0099      	lsls	r1, r3, #2
 8003af0:	a812      	add	r0, sp, #72	@ 0x48
 8003af2:	5809      	ldr	r1, [r1, r0]
 8003af4:	3b01      	subs	r3, #1
 8003af6:	430a      	orrs	r2, r1
 8003af8:	e7a4      	b.n	8003a44 <__kernel_rem_pio2+0x264>
 8003afa:	46c0      	nop			@ (mov r8, r8)
 8003afc:	fffffd84 	.word	0xfffffd84
 8003b00:	080042d8 	.word	0x080042d8
 8003b04:	40200000 	.word	0x40200000
 8003b08:	00ffffff 	.word	0x00ffffff
 8003b0c:	3ff00000 	.word	0x3ff00000
 8003b10:	3e700000 	.word	0x3e700000
 8003b14:	41700000 	.word	0x41700000
 8003b18:	3fe00000 	.word	0x3fe00000
 8003b1c:	08004298 	.word	0x08004298
 8003b20:	3301      	adds	r3, #1
 8003b22:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8003b24:	009a      	lsls	r2, r3, #2
 8003b26:	4252      	negs	r2, r2
 8003b28:	588a      	ldr	r2, [r1, r2]
 8003b2a:	2a00      	cmp	r2, #0
 8003b2c:	d0f8      	beq.n	8003b20 <__kernel_rem_pio2+0x340>
 8003b2e:	9a00      	ldr	r2, [sp, #0]
 8003b30:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8003b32:	1c55      	adds	r5, r2, #1
 8003b34:	1852      	adds	r2, r2, r1
 8003b36:	00d2      	lsls	r2, r2, #3
 8003b38:	a926      	add	r1, sp, #152	@ 0x98
 8003b3a:	188c      	adds	r4, r1, r2
 8003b3c:	9a00      	ldr	r2, [sp, #0]
 8003b3e:	18d3      	adds	r3, r2, r3
 8003b40:	9306      	str	r3, [sp, #24]
 8003b42:	9b06      	ldr	r3, [sp, #24]
 8003b44:	42ab      	cmp	r3, r5
 8003b46:	da00      	bge.n	8003b4a <__kernel_rem_pio2+0x36a>
 8003b48:	e6b7      	b.n	80038ba <__kernel_rem_pio2+0xda>
 8003b4a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8003b4c:	00ab      	lsls	r3, r5, #2
 8003b4e:	58d0      	ldr	r0, [r2, r3]
 8003b50:	f7fe f8ca 	bl	8001ce8 <__aeabi_i2d>
 8003b54:	2200      	movs	r2, #0
 8003b56:	2300      	movs	r3, #0
 8003b58:	0027      	movs	r7, r4
 8003b5a:	2600      	movs	r6, #0
 8003b5c:	6020      	str	r0, [r4, #0]
 8003b5e:	6061      	str	r1, [r4, #4]
 8003b60:	9200      	str	r2, [sp, #0]
 8003b62:	9301      	str	r3, [sp, #4]
 8003b64:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8003b66:	429e      	cmp	r6, r3
 8003b68:	dd0b      	ble.n	8003b82 <__kernel_rem_pio2+0x3a2>
 8003b6a:	00eb      	lsls	r3, r5, #3
 8003b6c:	aa76      	add	r2, sp, #472	@ 0x1d8
 8003b6e:	18d3      	adds	r3, r2, r3
 8003b70:	3501      	adds	r5, #1
 8003b72:	9900      	ldr	r1, [sp, #0]
 8003b74:	9a01      	ldr	r2, [sp, #4]
 8003b76:	3408      	adds	r4, #8
 8003b78:	6019      	str	r1, [r3, #0]
 8003b7a:	605a      	str	r2, [r3, #4]
 8003b7c:	e7e1      	b.n	8003b42 <__kernel_rem_pio2+0x362>
 8003b7e:	2301      	movs	r3, #1
 8003b80:	e7cf      	b.n	8003b22 <__kernel_rem_pio2+0x342>
 8003b82:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8003b84:	00f1      	lsls	r1, r6, #3
 8003b86:	1859      	adds	r1, r3, r1
 8003b88:	6808      	ldr	r0, [r1, #0]
 8003b8a:	6849      	ldr	r1, [r1, #4]
 8003b8c:	683a      	ldr	r2, [r7, #0]
 8003b8e:	687b      	ldr	r3, [r7, #4]
 8003b90:	f7fd f97e 	bl	8000e90 <__aeabi_dmul>
 8003b94:	0002      	movs	r2, r0
 8003b96:	000b      	movs	r3, r1
 8003b98:	9800      	ldr	r0, [sp, #0]
 8003b9a:	9901      	ldr	r1, [sp, #4]
 8003b9c:	f7fc fc90 	bl	80004c0 <__aeabi_dadd>
 8003ba0:	3601      	adds	r6, #1
 8003ba2:	9000      	str	r0, [sp, #0]
 8003ba4:	9101      	str	r1, [sp, #4]
 8003ba6:	3f08      	subs	r7, #8
 8003ba8:	e7dc      	b.n	8003b64 <__kernel_rem_pio2+0x384>
 8003baa:	9b02      	ldr	r3, [sp, #8]
 8003bac:	0030      	movs	r0, r6
 8003bae:	425a      	negs	r2, r3
 8003bb0:	0039      	movs	r1, r7
 8003bb2:	f000 f969 	bl	8003e88 <scalbn>
 8003bb6:	2200      	movs	r2, #0
 8003bb8:	4bb1      	ldr	r3, [pc, #708]	@ (8003e80 <__kernel_rem_pio2+0x6a0>)
 8003bba:	0006      	movs	r6, r0
 8003bbc:	000f      	movs	r7, r1
 8003bbe:	f7fc fc57 	bl	8000470 <__aeabi_dcmpge>
 8003bc2:	2800      	cmp	r0, #0
 8003bc4:	d025      	beq.n	8003c12 <__kernel_rem_pio2+0x432>
 8003bc6:	2200      	movs	r2, #0
 8003bc8:	4bae      	ldr	r3, [pc, #696]	@ (8003e84 <__kernel_rem_pio2+0x6a4>)
 8003bca:	0030      	movs	r0, r6
 8003bcc:	0039      	movs	r1, r7
 8003bce:	f7fd f95f 	bl	8000e90 <__aeabi_dmul>
 8003bd2:	f7fe f84d 	bl	8001c70 <__aeabi_d2iz>
 8003bd6:	9b00      	ldr	r3, [sp, #0]
 8003bd8:	0004      	movs	r4, r0
 8003bda:	009d      	lsls	r5, r3, #2
 8003bdc:	f7fe f884 	bl	8001ce8 <__aeabi_i2d>
 8003be0:	2200      	movs	r2, #0
 8003be2:	4ba7      	ldr	r3, [pc, #668]	@ (8003e80 <__kernel_rem_pio2+0x6a0>)
 8003be4:	f7fd f954 	bl	8000e90 <__aeabi_dmul>
 8003be8:	0002      	movs	r2, r0
 8003bea:	000b      	movs	r3, r1
 8003bec:	0030      	movs	r0, r6
 8003bee:	0039      	movs	r1, r7
 8003bf0:	f7fd fc34 	bl	800145c <__aeabi_dsub>
 8003bf4:	f7fe f83c 	bl	8001c70 <__aeabi_d2iz>
 8003bf8:	ab12      	add	r3, sp, #72	@ 0x48
 8003bfa:	5158      	str	r0, [r3, r5]
 8003bfc:	9b00      	ldr	r3, [sp, #0]
 8003bfe:	aa12      	add	r2, sp, #72	@ 0x48
 8003c00:	3301      	adds	r3, #1
 8003c02:	9300      	str	r3, [sp, #0]
 8003c04:	9b02      	ldr	r3, [sp, #8]
 8003c06:	3318      	adds	r3, #24
 8003c08:	9302      	str	r3, [sp, #8]
 8003c0a:	9b00      	ldr	r3, [sp, #0]
 8003c0c:	009b      	lsls	r3, r3, #2
 8003c0e:	509c      	str	r4, [r3, r2]
 8003c10:	e72a      	b.n	8003a68 <__kernel_rem_pio2+0x288>
 8003c12:	9b00      	ldr	r3, [sp, #0]
 8003c14:	0030      	movs	r0, r6
 8003c16:	0039      	movs	r1, r7
 8003c18:	009c      	lsls	r4, r3, #2
 8003c1a:	f7fe f829 	bl	8001c70 <__aeabi_d2iz>
 8003c1e:	ab12      	add	r3, sp, #72	@ 0x48
 8003c20:	5118      	str	r0, [r3, r4]
 8003c22:	e721      	b.n	8003a68 <__kernel_rem_pio2+0x288>
 8003c24:	00f3      	lsls	r3, r6, #3
 8003c26:	aa76      	add	r2, sp, #472	@ 0x1d8
 8003c28:	18d7      	adds	r7, r2, r3
 8003c2a:	00b3      	lsls	r3, r6, #2
 8003c2c:	aa12      	add	r2, sp, #72	@ 0x48
 8003c2e:	5898      	ldr	r0, [r3, r2]
 8003c30:	f7fe f85a 	bl	8001ce8 <__aeabi_i2d>
 8003c34:	0022      	movs	r2, r4
 8003c36:	002b      	movs	r3, r5
 8003c38:	f7fd f92a 	bl	8000e90 <__aeabi_dmul>
 8003c3c:	2200      	movs	r2, #0
 8003c3e:	6038      	str	r0, [r7, #0]
 8003c40:	6079      	str	r1, [r7, #4]
 8003c42:	4b90      	ldr	r3, [pc, #576]	@ (8003e84 <__kernel_rem_pio2+0x6a4>)
 8003c44:	0020      	movs	r0, r4
 8003c46:	0029      	movs	r1, r5
 8003c48:	f7fd f922 	bl	8000e90 <__aeabi_dmul>
 8003c4c:	3e01      	subs	r6, #1
 8003c4e:	0004      	movs	r4, r0
 8003c50:	000d      	movs	r5, r1
 8003c52:	e711      	b.n	8003a78 <__kernel_rem_pio2+0x298>
 8003c54:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003c56:	00e9      	lsls	r1, r5, #3
 8003c58:	18c9      	adds	r1, r1, r3
 8003c5a:	6808      	ldr	r0, [r1, #0]
 8003c5c:	6849      	ldr	r1, [r1, #4]
 8003c5e:	cf0c      	ldmia	r7!, {r2, r3}
 8003c60:	f7fd f916 	bl	8000e90 <__aeabi_dmul>
 8003c64:	0002      	movs	r2, r0
 8003c66:	000b      	movs	r3, r1
 8003c68:	9802      	ldr	r0, [sp, #8]
 8003c6a:	9903      	ldr	r1, [sp, #12]
 8003c6c:	f7fc fc28 	bl	80004c0 <__aeabi_dadd>
 8003c70:	9002      	str	r0, [sp, #8]
 8003c72:	9103      	str	r1, [sp, #12]
 8003c74:	3501      	adds	r5, #1
 8003c76:	9b08      	ldr	r3, [sp, #32]
 8003c78:	429d      	cmp	r5, r3
 8003c7a:	dc01      	bgt.n	8003c80 <__kernel_rem_pio2+0x4a0>
 8003c7c:	42b5      	cmp	r5, r6
 8003c7e:	dde9      	ble.n	8003c54 <__kernel_rem_pio2+0x474>
 8003c80:	00f6      	lsls	r6, r6, #3
 8003c82:	ab4e      	add	r3, sp, #312	@ 0x138
 8003c84:	199b      	adds	r3, r3, r6
 8003c86:	9902      	ldr	r1, [sp, #8]
 8003c88:	9a03      	ldr	r2, [sp, #12]
 8003c8a:	3c01      	subs	r4, #1
 8003c8c:	6019      	str	r1, [r3, #0]
 8003c8e:	605a      	str	r2, [r3, #4]
 8003c90:	e6f8      	b.n	8003a84 <__kernel_rem_pio2+0x2a4>
 8003c92:	9ba4      	ldr	r3, [sp, #656]	@ 0x290
 8003c94:	2b02      	cmp	r3, #2
 8003c96:	dc0b      	bgt.n	8003cb0 <__kernel_rem_pio2+0x4d0>
 8003c98:	2b00      	cmp	r3, #0
 8003c9a:	dd00      	ble.n	8003c9e <__kernel_rem_pio2+0x4be>
 8003c9c:	e084      	b.n	8003da8 <__kernel_rem_pio2+0x5c8>
 8003c9e:	d052      	beq.n	8003d46 <__kernel_rem_pio2+0x566>
 8003ca0:	2007      	movs	r0, #7
 8003ca2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8003ca4:	4003      	ands	r3, r0
 8003ca6:	0018      	movs	r0, r3
 8003ca8:	239f      	movs	r3, #159	@ 0x9f
 8003caa:	009b      	lsls	r3, r3, #2
 8003cac:	449d      	add	sp, r3
 8003cae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003cb0:	9ba4      	ldr	r3, [sp, #656]	@ 0x290
 8003cb2:	2b03      	cmp	r3, #3
 8003cb4:	d1f4      	bne.n	8003ca0 <__kernel_rem_pio2+0x4c0>
 8003cb6:	9b00      	ldr	r3, [sp, #0]
 8003cb8:	aa4e      	add	r2, sp, #312	@ 0x138
 8003cba:	00db      	lsls	r3, r3, #3
 8003cbc:	18d4      	adds	r4, r2, r3
 8003cbe:	0025      	movs	r5, r4
 8003cc0:	9b00      	ldr	r3, [sp, #0]
 8003cc2:	9302      	str	r3, [sp, #8]
 8003cc4:	9b02      	ldr	r3, [sp, #8]
 8003cc6:	3d08      	subs	r5, #8
 8003cc8:	2b00      	cmp	r3, #0
 8003cca:	dd00      	ble.n	8003cce <__kernel_rem_pio2+0x4ee>
 8003ccc:	e07a      	b.n	8003dc4 <__kernel_rem_pio2+0x5e4>
 8003cce:	9d00      	ldr	r5, [sp, #0]
 8003cd0:	3c08      	subs	r4, #8
 8003cd2:	2d01      	cmp	r5, #1
 8003cd4:	dd00      	ble.n	8003cd8 <__kernel_rem_pio2+0x4f8>
 8003cd6:	e095      	b.n	8003e04 <__kernel_rem_pio2+0x624>
 8003cd8:	2000      	movs	r0, #0
 8003cda:	2100      	movs	r1, #0
 8003cdc:	9b00      	ldr	r3, [sp, #0]
 8003cde:	2b01      	cmp	r3, #1
 8003ce0:	dd00      	ble.n	8003ce4 <__kernel_rem_pio2+0x504>
 8003ce2:	e0ad      	b.n	8003e40 <__kernel_rem_pio2+0x660>
 8003ce4:	9b50      	ldr	r3, [sp, #320]	@ 0x140
 8003ce6:	9c51      	ldr	r4, [sp, #324]	@ 0x144
 8003ce8:	9d4e      	ldr	r5, [sp, #312]	@ 0x138
 8003cea:	9e4f      	ldr	r6, [sp, #316]	@ 0x13c
 8003cec:	9300      	str	r3, [sp, #0]
 8003cee:	9401      	str	r4, [sp, #4]
 8003cf0:	9b06      	ldr	r3, [sp, #24]
 8003cf2:	2b00      	cmp	r3, #0
 8003cf4:	d000      	beq.n	8003cf8 <__kernel_rem_pio2+0x518>
 8003cf6:	e0af      	b.n	8003e58 <__kernel_rem_pio2+0x678>
 8003cf8:	9b05      	ldr	r3, [sp, #20]
 8003cfa:	601d      	str	r5, [r3, #0]
 8003cfc:	605e      	str	r6, [r3, #4]
 8003cfe:	9c00      	ldr	r4, [sp, #0]
 8003d00:	9d01      	ldr	r5, [sp, #4]
 8003d02:	6118      	str	r0, [r3, #16]
 8003d04:	6159      	str	r1, [r3, #20]
 8003d06:	609c      	str	r4, [r3, #8]
 8003d08:	60dd      	str	r5, [r3, #12]
 8003d0a:	e7c9      	b.n	8003ca0 <__kernel_rem_pio2+0x4c0>
 8003d0c:	9b00      	ldr	r3, [sp, #0]
 8003d0e:	aa4e      	add	r2, sp, #312	@ 0x138
 8003d10:	00db      	lsls	r3, r3, #3
 8003d12:	18d3      	adds	r3, r2, r3
 8003d14:	0020      	movs	r0, r4
 8003d16:	681a      	ldr	r2, [r3, #0]
 8003d18:	685b      	ldr	r3, [r3, #4]
 8003d1a:	0029      	movs	r1, r5
 8003d1c:	f7fc fbd0 	bl	80004c0 <__aeabi_dadd>
 8003d20:	0004      	movs	r4, r0
 8003d22:	000d      	movs	r5, r1
 8003d24:	9b00      	ldr	r3, [sp, #0]
 8003d26:	3b01      	subs	r3, #1
 8003d28:	9300      	str	r3, [sp, #0]
 8003d2a:	9b00      	ldr	r3, [sp, #0]
 8003d2c:	2b00      	cmp	r3, #0
 8003d2e:	daed      	bge.n	8003d0c <__kernel_rem_pio2+0x52c>
 8003d30:	9b06      	ldr	r3, [sp, #24]
 8003d32:	2b00      	cmp	r3, #0
 8003d34:	d003      	beq.n	8003d3e <__kernel_rem_pio2+0x55e>
 8003d36:	2180      	movs	r1, #128	@ 0x80
 8003d38:	0609      	lsls	r1, r1, #24
 8003d3a:	186b      	adds	r3, r5, r1
 8003d3c:	001d      	movs	r5, r3
 8003d3e:	9b05      	ldr	r3, [sp, #20]
 8003d40:	601c      	str	r4, [r3, #0]
 8003d42:	605d      	str	r5, [r3, #4]
 8003d44:	e7ac      	b.n	8003ca0 <__kernel_rem_pio2+0x4c0>
 8003d46:	2400      	movs	r4, #0
 8003d48:	2500      	movs	r5, #0
 8003d4a:	e7ee      	b.n	8003d2a <__kernel_rem_pio2+0x54a>
 8003d4c:	00e3      	lsls	r3, r4, #3
 8003d4e:	aa4e      	add	r2, sp, #312	@ 0x138
 8003d50:	18d3      	adds	r3, r2, r3
 8003d52:	681a      	ldr	r2, [r3, #0]
 8003d54:	685b      	ldr	r3, [r3, #4]
 8003d56:	f7fc fbb3 	bl	80004c0 <__aeabi_dadd>
 8003d5a:	3c01      	subs	r4, #1
 8003d5c:	2c00      	cmp	r4, #0
 8003d5e:	daf5      	bge.n	8003d4c <__kernel_rem_pio2+0x56c>
 8003d60:	9c06      	ldr	r4, [sp, #24]
 8003d62:	0002      	movs	r2, r0
 8003d64:	000b      	movs	r3, r1
 8003d66:	2c00      	cmp	r4, #0
 8003d68:	d002      	beq.n	8003d70 <__kernel_rem_pio2+0x590>
 8003d6a:	2480      	movs	r4, #128	@ 0x80
 8003d6c:	0624      	lsls	r4, r4, #24
 8003d6e:	190b      	adds	r3, r1, r4
 8003d70:	9c05      	ldr	r4, [sp, #20]
 8003d72:	2501      	movs	r5, #1
 8003d74:	6022      	str	r2, [r4, #0]
 8003d76:	6063      	str	r3, [r4, #4]
 8003d78:	0002      	movs	r2, r0
 8003d7a:	000b      	movs	r3, r1
 8003d7c:	984e      	ldr	r0, [sp, #312]	@ 0x138
 8003d7e:	994f      	ldr	r1, [sp, #316]	@ 0x13c
 8003d80:	f7fd fb6c 	bl	800145c <__aeabi_dsub>
 8003d84:	0006      	movs	r6, r0
 8003d86:	000f      	movs	r7, r1
 8003d88:	ac4e      	add	r4, sp, #312	@ 0x138
 8003d8a:	9b00      	ldr	r3, [sp, #0]
 8003d8c:	3408      	adds	r4, #8
 8003d8e:	42ab      	cmp	r3, r5
 8003d90:	da0e      	bge.n	8003db0 <__kernel_rem_pio2+0x5d0>
 8003d92:	9b06      	ldr	r3, [sp, #24]
 8003d94:	2b00      	cmp	r3, #0
 8003d96:	d003      	beq.n	8003da0 <__kernel_rem_pio2+0x5c0>
 8003d98:	2180      	movs	r1, #128	@ 0x80
 8003d9a:	0609      	lsls	r1, r1, #24
 8003d9c:	187b      	adds	r3, r7, r1
 8003d9e:	001f      	movs	r7, r3
 8003da0:	9b05      	ldr	r3, [sp, #20]
 8003da2:	609e      	str	r6, [r3, #8]
 8003da4:	60df      	str	r7, [r3, #12]
 8003da6:	e77b      	b.n	8003ca0 <__kernel_rem_pio2+0x4c0>
 8003da8:	2000      	movs	r0, #0
 8003daa:	2100      	movs	r1, #0
 8003dac:	9c00      	ldr	r4, [sp, #0]
 8003dae:	e7d5      	b.n	8003d5c <__kernel_rem_pio2+0x57c>
 8003db0:	0030      	movs	r0, r6
 8003db2:	6822      	ldr	r2, [r4, #0]
 8003db4:	6863      	ldr	r3, [r4, #4]
 8003db6:	0039      	movs	r1, r7
 8003db8:	f7fc fb82 	bl	80004c0 <__aeabi_dadd>
 8003dbc:	3501      	adds	r5, #1
 8003dbe:	0006      	movs	r6, r0
 8003dc0:	000f      	movs	r7, r1
 8003dc2:	e7e2      	b.n	8003d8a <__kernel_rem_pio2+0x5aa>
 8003dc4:	9b02      	ldr	r3, [sp, #8]
 8003dc6:	3b01      	subs	r3, #1
 8003dc8:	9302      	str	r3, [sp, #8]
 8003dca:	682a      	ldr	r2, [r5, #0]
 8003dcc:	686b      	ldr	r3, [r5, #4]
 8003dce:	9208      	str	r2, [sp, #32]
 8003dd0:	9309      	str	r3, [sp, #36]	@ 0x24
 8003dd2:	9808      	ldr	r0, [sp, #32]
 8003dd4:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8003dd6:	68aa      	ldr	r2, [r5, #8]
 8003dd8:	68eb      	ldr	r3, [r5, #12]
 8003dda:	920a      	str	r2, [sp, #40]	@ 0x28
 8003ddc:	930b      	str	r3, [sp, #44]	@ 0x2c
 8003dde:	f7fc fb6f 	bl	80004c0 <__aeabi_dadd>
 8003de2:	0002      	movs	r2, r0
 8003de4:	000b      	movs	r3, r1
 8003de6:	0006      	movs	r6, r0
 8003de8:	000f      	movs	r7, r1
 8003dea:	9808      	ldr	r0, [sp, #32]
 8003dec:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8003dee:	f7fd fb35 	bl	800145c <__aeabi_dsub>
 8003df2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8003df4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003df6:	f7fc fb63 	bl	80004c0 <__aeabi_dadd>
 8003dfa:	602e      	str	r6, [r5, #0]
 8003dfc:	606f      	str	r7, [r5, #4]
 8003dfe:	60a8      	str	r0, [r5, #8]
 8003e00:	60e9      	str	r1, [r5, #12]
 8003e02:	e75f      	b.n	8003cc4 <__kernel_rem_pio2+0x4e4>
 8003e04:	6822      	ldr	r2, [r4, #0]
 8003e06:	6863      	ldr	r3, [r4, #4]
 8003e08:	9202      	str	r2, [sp, #8]
 8003e0a:	9303      	str	r3, [sp, #12]
 8003e0c:	9802      	ldr	r0, [sp, #8]
 8003e0e:	9903      	ldr	r1, [sp, #12]
 8003e10:	68a2      	ldr	r2, [r4, #8]
 8003e12:	68e3      	ldr	r3, [r4, #12]
 8003e14:	9208      	str	r2, [sp, #32]
 8003e16:	9309      	str	r3, [sp, #36]	@ 0x24
 8003e18:	f7fc fb52 	bl	80004c0 <__aeabi_dadd>
 8003e1c:	0002      	movs	r2, r0
 8003e1e:	000b      	movs	r3, r1
 8003e20:	0006      	movs	r6, r0
 8003e22:	000f      	movs	r7, r1
 8003e24:	9802      	ldr	r0, [sp, #8]
 8003e26:	9903      	ldr	r1, [sp, #12]
 8003e28:	f7fd fb18 	bl	800145c <__aeabi_dsub>
 8003e2c:	9a08      	ldr	r2, [sp, #32]
 8003e2e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003e30:	f7fc fb46 	bl	80004c0 <__aeabi_dadd>
 8003e34:	3d01      	subs	r5, #1
 8003e36:	60a0      	str	r0, [r4, #8]
 8003e38:	60e1      	str	r1, [r4, #12]
 8003e3a:	6026      	str	r6, [r4, #0]
 8003e3c:	6067      	str	r7, [r4, #4]
 8003e3e:	e747      	b.n	8003cd0 <__kernel_rem_pio2+0x4f0>
 8003e40:	9b00      	ldr	r3, [sp, #0]
 8003e42:	aa4e      	add	r2, sp, #312	@ 0x138
 8003e44:	00db      	lsls	r3, r3, #3
 8003e46:	18d3      	adds	r3, r2, r3
 8003e48:	681a      	ldr	r2, [r3, #0]
 8003e4a:	685b      	ldr	r3, [r3, #4]
 8003e4c:	f7fc fb38 	bl	80004c0 <__aeabi_dadd>
 8003e50:	9b00      	ldr	r3, [sp, #0]
 8003e52:	3b01      	subs	r3, #1
 8003e54:	9300      	str	r3, [sp, #0]
 8003e56:	e741      	b.n	8003cdc <__kernel_rem_pio2+0x4fc>
 8003e58:	9b05      	ldr	r3, [sp, #20]
 8003e5a:	9a05      	ldr	r2, [sp, #20]
 8003e5c:	601d      	str	r5, [r3, #0]
 8003e5e:	2380      	movs	r3, #128	@ 0x80
 8003e60:	061b      	lsls	r3, r3, #24
 8003e62:	18f4      	adds	r4, r6, r3
 8003e64:	6054      	str	r4, [r2, #4]
 8003e66:	9a00      	ldr	r2, [sp, #0]
 8003e68:	9c05      	ldr	r4, [sp, #20]
 8003e6a:	60a2      	str	r2, [r4, #8]
 8003e6c:	001a      	movs	r2, r3
 8003e6e:	9c01      	ldr	r4, [sp, #4]
 8003e70:	18e3      	adds	r3, r4, r3
 8003e72:	9c05      	ldr	r4, [sp, #20]
 8003e74:	60e3      	str	r3, [r4, #12]
 8003e76:	188b      	adds	r3, r1, r2
 8003e78:	6120      	str	r0, [r4, #16]
 8003e7a:	6163      	str	r3, [r4, #20]
 8003e7c:	e710      	b.n	8003ca0 <__kernel_rem_pio2+0x4c0>
 8003e7e:	46c0      	nop			@ (mov r8, r8)
 8003e80:	41700000 	.word	0x41700000
 8003e84:	3e700000 	.word	0x3e700000

08003e88 <scalbn>:
 8003e88:	004b      	lsls	r3, r1, #1
 8003e8a:	b570      	push	{r4, r5, r6, lr}
 8003e8c:	0d5b      	lsrs	r3, r3, #21
 8003e8e:	0014      	movs	r4, r2
 8003e90:	000d      	movs	r5, r1
 8003e92:	2b00      	cmp	r3, #0
 8003e94:	d10f      	bne.n	8003eb6 <scalbn+0x2e>
 8003e96:	004b      	lsls	r3, r1, #1
 8003e98:	085b      	lsrs	r3, r3, #1
 8003e9a:	4303      	orrs	r3, r0
 8003e9c:	d012      	beq.n	8003ec4 <scalbn+0x3c>
 8003e9e:	4b23      	ldr	r3, [pc, #140]	@ (8003f2c <scalbn+0xa4>)
 8003ea0:	2200      	movs	r2, #0
 8003ea2:	f7fc fff5 	bl	8000e90 <__aeabi_dmul>
 8003ea6:	4b22      	ldr	r3, [pc, #136]	@ (8003f30 <scalbn+0xa8>)
 8003ea8:	429c      	cmp	r4, r3
 8003eaa:	da0c      	bge.n	8003ec6 <scalbn+0x3e>
 8003eac:	4a21      	ldr	r2, [pc, #132]	@ (8003f34 <scalbn+0xac>)
 8003eae:	4b22      	ldr	r3, [pc, #136]	@ (8003f38 <scalbn+0xb0>)
 8003eb0:	f7fc ffee 	bl	8000e90 <__aeabi_dmul>
 8003eb4:	e006      	b.n	8003ec4 <scalbn+0x3c>
 8003eb6:	4a21      	ldr	r2, [pc, #132]	@ (8003f3c <scalbn+0xb4>)
 8003eb8:	4293      	cmp	r3, r2
 8003eba:	d108      	bne.n	8003ece <scalbn+0x46>
 8003ebc:	0002      	movs	r2, r0
 8003ebe:	000b      	movs	r3, r1
 8003ec0:	f7fc fafe 	bl	80004c0 <__aeabi_dadd>
 8003ec4:	bd70      	pop	{r4, r5, r6, pc}
 8003ec6:	000d      	movs	r5, r1
 8003ec8:	004b      	lsls	r3, r1, #1
 8003eca:	0d5b      	lsrs	r3, r3, #21
 8003ecc:	3b36      	subs	r3, #54	@ 0x36
 8003ece:	4a1c      	ldr	r2, [pc, #112]	@ (8003f40 <scalbn+0xb8>)
 8003ed0:	4294      	cmp	r4, r2
 8003ed2:	dd0a      	ble.n	8003eea <scalbn+0x62>
 8003ed4:	4c1b      	ldr	r4, [pc, #108]	@ (8003f44 <scalbn+0xbc>)
 8003ed6:	4d1c      	ldr	r5, [pc, #112]	@ (8003f48 <scalbn+0xc0>)
 8003ed8:	2900      	cmp	r1, #0
 8003eda:	da01      	bge.n	8003ee0 <scalbn+0x58>
 8003edc:	4c19      	ldr	r4, [pc, #100]	@ (8003f44 <scalbn+0xbc>)
 8003ede:	4d1b      	ldr	r5, [pc, #108]	@ (8003f4c <scalbn+0xc4>)
 8003ee0:	4a18      	ldr	r2, [pc, #96]	@ (8003f44 <scalbn+0xbc>)
 8003ee2:	4b19      	ldr	r3, [pc, #100]	@ (8003f48 <scalbn+0xc0>)
 8003ee4:	0020      	movs	r0, r4
 8003ee6:	0029      	movs	r1, r5
 8003ee8:	e7e2      	b.n	8003eb0 <scalbn+0x28>
 8003eea:	18e2      	adds	r2, r4, r3
 8003eec:	4b18      	ldr	r3, [pc, #96]	@ (8003f50 <scalbn+0xc8>)
 8003eee:	429a      	cmp	r2, r3
 8003ef0:	dcf0      	bgt.n	8003ed4 <scalbn+0x4c>
 8003ef2:	2a00      	cmp	r2, #0
 8003ef4:	dd05      	ble.n	8003f02 <scalbn+0x7a>
 8003ef6:	4b17      	ldr	r3, [pc, #92]	@ (8003f54 <scalbn+0xcc>)
 8003ef8:	0512      	lsls	r2, r2, #20
 8003efa:	402b      	ands	r3, r5
 8003efc:	4313      	orrs	r3, r2
 8003efe:	0019      	movs	r1, r3
 8003f00:	e7e0      	b.n	8003ec4 <scalbn+0x3c>
 8003f02:	0013      	movs	r3, r2
 8003f04:	3335      	adds	r3, #53	@ 0x35
 8003f06:	da08      	bge.n	8003f1a <scalbn+0x92>
 8003f08:	4c0a      	ldr	r4, [pc, #40]	@ (8003f34 <scalbn+0xac>)
 8003f0a:	4d0b      	ldr	r5, [pc, #44]	@ (8003f38 <scalbn+0xb0>)
 8003f0c:	2900      	cmp	r1, #0
 8003f0e:	da01      	bge.n	8003f14 <scalbn+0x8c>
 8003f10:	4c08      	ldr	r4, [pc, #32]	@ (8003f34 <scalbn+0xac>)
 8003f12:	4d11      	ldr	r5, [pc, #68]	@ (8003f58 <scalbn+0xd0>)
 8003f14:	4a07      	ldr	r2, [pc, #28]	@ (8003f34 <scalbn+0xac>)
 8003f16:	4b08      	ldr	r3, [pc, #32]	@ (8003f38 <scalbn+0xb0>)
 8003f18:	e7e4      	b.n	8003ee4 <scalbn+0x5c>
 8003f1a:	4b0e      	ldr	r3, [pc, #56]	@ (8003f54 <scalbn+0xcc>)
 8003f1c:	3236      	adds	r2, #54	@ 0x36
 8003f1e:	401d      	ands	r5, r3
 8003f20:	0512      	lsls	r2, r2, #20
 8003f22:	432a      	orrs	r2, r5
 8003f24:	0011      	movs	r1, r2
 8003f26:	4b0d      	ldr	r3, [pc, #52]	@ (8003f5c <scalbn+0xd4>)
 8003f28:	2200      	movs	r2, #0
 8003f2a:	e7c1      	b.n	8003eb0 <scalbn+0x28>
 8003f2c:	43500000 	.word	0x43500000
 8003f30:	ffff3cb0 	.word	0xffff3cb0
 8003f34:	c2f8f359 	.word	0xc2f8f359
 8003f38:	01a56e1f 	.word	0x01a56e1f
 8003f3c:	000007ff 	.word	0x000007ff
 8003f40:	0000c350 	.word	0x0000c350
 8003f44:	8800759c 	.word	0x8800759c
 8003f48:	7e37e43c 	.word	0x7e37e43c
 8003f4c:	fe37e43c 	.word	0xfe37e43c
 8003f50:	000007fe 	.word	0x000007fe
 8003f54:	800fffff 	.word	0x800fffff
 8003f58:	81a56e1f 	.word	0x81a56e1f
 8003f5c:	3c900000 	.word	0x3c900000

08003f60 <floor>:
 8003f60:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003f62:	004b      	lsls	r3, r1, #1
 8003f64:	4a36      	ldr	r2, [pc, #216]	@ (8004040 <floor+0xe0>)
 8003f66:	0d5b      	lsrs	r3, r3, #21
 8003f68:	189e      	adds	r6, r3, r2
 8003f6a:	000c      	movs	r4, r1
 8003f6c:	0005      	movs	r5, r0
 8003f6e:	9001      	str	r0, [sp, #4]
 8003f70:	2e13      	cmp	r6, #19
 8003f72:	dc2f      	bgt.n	8003fd4 <floor+0x74>
 8003f74:	2e00      	cmp	r6, #0
 8003f76:	da14      	bge.n	8003fa2 <floor+0x42>
 8003f78:	4a32      	ldr	r2, [pc, #200]	@ (8004044 <floor+0xe4>)
 8003f7a:	4b33      	ldr	r3, [pc, #204]	@ (8004048 <floor+0xe8>)
 8003f7c:	f7fc faa0 	bl	80004c0 <__aeabi_dadd>
 8003f80:	2200      	movs	r2, #0
 8003f82:	2300      	movs	r3, #0
 8003f84:	f7fc fa6a 	bl	800045c <__aeabi_dcmpgt>
 8003f88:	2800      	cmp	r0, #0
 8003f8a:	d007      	beq.n	8003f9c <floor+0x3c>
 8003f8c:	2c00      	cmp	r4, #0
 8003f8e:	da50      	bge.n	8004032 <floor+0xd2>
 8003f90:	0064      	lsls	r4, r4, #1
 8003f92:	0864      	lsrs	r4, r4, #1
 8003f94:	4325      	orrs	r5, r4
 8003f96:	d14f      	bne.n	8004038 <floor+0xd8>
 8003f98:	2480      	movs	r4, #128	@ 0x80
 8003f9a:	0624      	lsls	r4, r4, #24
 8003f9c:	0021      	movs	r1, r4
 8003f9e:	0028      	movs	r0, r5
 8003fa0:	e022      	b.n	8003fe8 <floor+0x88>
 8003fa2:	4f2a      	ldr	r7, [pc, #168]	@ (800404c <floor+0xec>)
 8003fa4:	4137      	asrs	r7, r6
 8003fa6:	003b      	movs	r3, r7
 8003fa8:	400b      	ands	r3, r1
 8003faa:	4303      	orrs	r3, r0
 8003fac:	d01c      	beq.n	8003fe8 <floor+0x88>
 8003fae:	4a25      	ldr	r2, [pc, #148]	@ (8004044 <floor+0xe4>)
 8003fb0:	4b25      	ldr	r3, [pc, #148]	@ (8004048 <floor+0xe8>)
 8003fb2:	f7fc fa85 	bl	80004c0 <__aeabi_dadd>
 8003fb6:	2200      	movs	r2, #0
 8003fb8:	2300      	movs	r3, #0
 8003fba:	f7fc fa4f 	bl	800045c <__aeabi_dcmpgt>
 8003fbe:	2800      	cmp	r0, #0
 8003fc0:	d0ec      	beq.n	8003f9c <floor+0x3c>
 8003fc2:	2c00      	cmp	r4, #0
 8003fc4:	da03      	bge.n	8003fce <floor+0x6e>
 8003fc6:	2380      	movs	r3, #128	@ 0x80
 8003fc8:	035b      	lsls	r3, r3, #13
 8003fca:	4133      	asrs	r3, r6
 8003fcc:	18e4      	adds	r4, r4, r3
 8003fce:	2500      	movs	r5, #0
 8003fd0:	43bc      	bics	r4, r7
 8003fd2:	e7e3      	b.n	8003f9c <floor+0x3c>
 8003fd4:	2e33      	cmp	r6, #51	@ 0x33
 8003fd6:	dd09      	ble.n	8003fec <floor+0x8c>
 8003fd8:	2380      	movs	r3, #128	@ 0x80
 8003fda:	00db      	lsls	r3, r3, #3
 8003fdc:	429e      	cmp	r6, r3
 8003fde:	d103      	bne.n	8003fe8 <floor+0x88>
 8003fe0:	0002      	movs	r2, r0
 8003fe2:	000b      	movs	r3, r1
 8003fe4:	f7fc fa6c 	bl	80004c0 <__aeabi_dadd>
 8003fe8:	b003      	add	sp, #12
 8003fea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003fec:	2701      	movs	r7, #1
 8003fee:	4a18      	ldr	r2, [pc, #96]	@ (8004050 <floor+0xf0>)
 8003ff0:	427f      	negs	r7, r7
 8003ff2:	189b      	adds	r3, r3, r2
 8003ff4:	40df      	lsrs	r7, r3
 8003ff6:	4238      	tst	r0, r7
 8003ff8:	d0f6      	beq.n	8003fe8 <floor+0x88>
 8003ffa:	4a12      	ldr	r2, [pc, #72]	@ (8004044 <floor+0xe4>)
 8003ffc:	4b12      	ldr	r3, [pc, #72]	@ (8004048 <floor+0xe8>)
 8003ffe:	f7fc fa5f 	bl	80004c0 <__aeabi_dadd>
 8004002:	2200      	movs	r2, #0
 8004004:	2300      	movs	r3, #0
 8004006:	f7fc fa29 	bl	800045c <__aeabi_dcmpgt>
 800400a:	2800      	cmp	r0, #0
 800400c:	d0c6      	beq.n	8003f9c <floor+0x3c>
 800400e:	2c00      	cmp	r4, #0
 8004010:	da02      	bge.n	8004018 <floor+0xb8>
 8004012:	2e14      	cmp	r6, #20
 8004014:	d102      	bne.n	800401c <floor+0xbc>
 8004016:	3401      	adds	r4, #1
 8004018:	43bd      	bics	r5, r7
 800401a:	e7bf      	b.n	8003f9c <floor+0x3c>
 800401c:	2234      	movs	r2, #52	@ 0x34
 800401e:	2301      	movs	r3, #1
 8004020:	1b92      	subs	r2, r2, r6
 8004022:	4093      	lsls	r3, r2
 8004024:	18ed      	adds	r5, r5, r3
 8004026:	9b01      	ldr	r3, [sp, #4]
 8004028:	429d      	cmp	r5, r3
 800402a:	419b      	sbcs	r3, r3
 800402c:	425b      	negs	r3, r3
 800402e:	18e4      	adds	r4, r4, r3
 8004030:	e7f2      	b.n	8004018 <floor+0xb8>
 8004032:	2500      	movs	r5, #0
 8004034:	002c      	movs	r4, r5
 8004036:	e7b1      	b.n	8003f9c <floor+0x3c>
 8004038:	2500      	movs	r5, #0
 800403a:	4c06      	ldr	r4, [pc, #24]	@ (8004054 <floor+0xf4>)
 800403c:	e7ae      	b.n	8003f9c <floor+0x3c>
 800403e:	46c0      	nop			@ (mov r8, r8)
 8004040:	fffffc01 	.word	0xfffffc01
 8004044:	8800759c 	.word	0x8800759c
 8004048:	7e37e43c 	.word	0x7e37e43c
 800404c:	000fffff 	.word	0x000fffff
 8004050:	fffffbed 	.word	0xfffffbed
 8004054:	bff00000 	.word	0xbff00000

08004058 <_init>:
 8004058:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800405a:	46c0      	nop			@ (mov r8, r8)
 800405c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800405e:	bc08      	pop	{r3}
 8004060:	469e      	mov	lr, r3
 8004062:	4770      	bx	lr

08004064 <_fini>:
 8004064:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004066:	46c0      	nop			@ (mov r8, r8)
 8004068:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800406a:	bc08      	pop	{r3}
 800406c:	469e      	mov	lr, r3
 800406e:	4770      	bx	lr
