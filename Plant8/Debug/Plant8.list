
Plant8.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004000  080000c0  080000c0  000010c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000230  080040c0  080040c0  000050c0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080042f0  080042f0  000052f8  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  080042f0  080042f0  000052f8  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  080042f0  080042f8  000052f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080042f0  080042f0  000052f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080042f4  080042f4  000052f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  000052f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000002ec  20000000  080042f8  00006000  2**3
                  ALLOC
 10 ._user_heap_stack 00000604  200002ec  080042f8  000062ec  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  000052f8  2**0
                  CONTENTS, READONLY
 12 .debug_info   000023a2  00000000  00000000  00005320  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000c96  00000000  00000000  000076c2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000270  00000000  00000000  00008358  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000001d0  00000000  00000000  000085c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00018f74  00000000  00000000  00008798  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00003fe1  00000000  00000000  0002170c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00091606  00000000  00000000  000256ed  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000b6cf3  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b0c  00000000  00000000  000b6d38  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000062  00000000  00000000  000b7844  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	@ (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	@ (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	@ (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000000 	.word	0x20000000
 80000e0:	00000000 	.word	0x00000000
 80000e4:	080040a8 	.word	0x080040a8

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	@ (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	@ (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	@ (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			@ (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000004 	.word	0x20000004
 8000104:	080040a8 	.word	0x080040a8

08000108 <__udivsi3>:
 8000108:	2200      	movs	r2, #0
 800010a:	0843      	lsrs	r3, r0, #1
 800010c:	428b      	cmp	r3, r1
 800010e:	d374      	bcc.n	80001fa <__udivsi3+0xf2>
 8000110:	0903      	lsrs	r3, r0, #4
 8000112:	428b      	cmp	r3, r1
 8000114:	d35f      	bcc.n	80001d6 <__udivsi3+0xce>
 8000116:	0a03      	lsrs	r3, r0, #8
 8000118:	428b      	cmp	r3, r1
 800011a:	d344      	bcc.n	80001a6 <__udivsi3+0x9e>
 800011c:	0b03      	lsrs	r3, r0, #12
 800011e:	428b      	cmp	r3, r1
 8000120:	d328      	bcc.n	8000174 <__udivsi3+0x6c>
 8000122:	0c03      	lsrs	r3, r0, #16
 8000124:	428b      	cmp	r3, r1
 8000126:	d30d      	bcc.n	8000144 <__udivsi3+0x3c>
 8000128:	22ff      	movs	r2, #255	@ 0xff
 800012a:	0209      	lsls	r1, r1, #8
 800012c:	ba12      	rev	r2, r2
 800012e:	0c03      	lsrs	r3, r0, #16
 8000130:	428b      	cmp	r3, r1
 8000132:	d302      	bcc.n	800013a <__udivsi3+0x32>
 8000134:	1212      	asrs	r2, r2, #8
 8000136:	0209      	lsls	r1, r1, #8
 8000138:	d065      	beq.n	8000206 <__udivsi3+0xfe>
 800013a:	0b03      	lsrs	r3, r0, #12
 800013c:	428b      	cmp	r3, r1
 800013e:	d319      	bcc.n	8000174 <__udivsi3+0x6c>
 8000140:	e000      	b.n	8000144 <__udivsi3+0x3c>
 8000142:	0a09      	lsrs	r1, r1, #8
 8000144:	0bc3      	lsrs	r3, r0, #15
 8000146:	428b      	cmp	r3, r1
 8000148:	d301      	bcc.n	800014e <__udivsi3+0x46>
 800014a:	03cb      	lsls	r3, r1, #15
 800014c:	1ac0      	subs	r0, r0, r3
 800014e:	4152      	adcs	r2, r2
 8000150:	0b83      	lsrs	r3, r0, #14
 8000152:	428b      	cmp	r3, r1
 8000154:	d301      	bcc.n	800015a <__udivsi3+0x52>
 8000156:	038b      	lsls	r3, r1, #14
 8000158:	1ac0      	subs	r0, r0, r3
 800015a:	4152      	adcs	r2, r2
 800015c:	0b43      	lsrs	r3, r0, #13
 800015e:	428b      	cmp	r3, r1
 8000160:	d301      	bcc.n	8000166 <__udivsi3+0x5e>
 8000162:	034b      	lsls	r3, r1, #13
 8000164:	1ac0      	subs	r0, r0, r3
 8000166:	4152      	adcs	r2, r2
 8000168:	0b03      	lsrs	r3, r0, #12
 800016a:	428b      	cmp	r3, r1
 800016c:	d301      	bcc.n	8000172 <__udivsi3+0x6a>
 800016e:	030b      	lsls	r3, r1, #12
 8000170:	1ac0      	subs	r0, r0, r3
 8000172:	4152      	adcs	r2, r2
 8000174:	0ac3      	lsrs	r3, r0, #11
 8000176:	428b      	cmp	r3, r1
 8000178:	d301      	bcc.n	800017e <__udivsi3+0x76>
 800017a:	02cb      	lsls	r3, r1, #11
 800017c:	1ac0      	subs	r0, r0, r3
 800017e:	4152      	adcs	r2, r2
 8000180:	0a83      	lsrs	r3, r0, #10
 8000182:	428b      	cmp	r3, r1
 8000184:	d301      	bcc.n	800018a <__udivsi3+0x82>
 8000186:	028b      	lsls	r3, r1, #10
 8000188:	1ac0      	subs	r0, r0, r3
 800018a:	4152      	adcs	r2, r2
 800018c:	0a43      	lsrs	r3, r0, #9
 800018e:	428b      	cmp	r3, r1
 8000190:	d301      	bcc.n	8000196 <__udivsi3+0x8e>
 8000192:	024b      	lsls	r3, r1, #9
 8000194:	1ac0      	subs	r0, r0, r3
 8000196:	4152      	adcs	r2, r2
 8000198:	0a03      	lsrs	r3, r0, #8
 800019a:	428b      	cmp	r3, r1
 800019c:	d301      	bcc.n	80001a2 <__udivsi3+0x9a>
 800019e:	020b      	lsls	r3, r1, #8
 80001a0:	1ac0      	subs	r0, r0, r3
 80001a2:	4152      	adcs	r2, r2
 80001a4:	d2cd      	bcs.n	8000142 <__udivsi3+0x3a>
 80001a6:	09c3      	lsrs	r3, r0, #7
 80001a8:	428b      	cmp	r3, r1
 80001aa:	d301      	bcc.n	80001b0 <__udivsi3+0xa8>
 80001ac:	01cb      	lsls	r3, r1, #7
 80001ae:	1ac0      	subs	r0, r0, r3
 80001b0:	4152      	adcs	r2, r2
 80001b2:	0983      	lsrs	r3, r0, #6
 80001b4:	428b      	cmp	r3, r1
 80001b6:	d301      	bcc.n	80001bc <__udivsi3+0xb4>
 80001b8:	018b      	lsls	r3, r1, #6
 80001ba:	1ac0      	subs	r0, r0, r3
 80001bc:	4152      	adcs	r2, r2
 80001be:	0943      	lsrs	r3, r0, #5
 80001c0:	428b      	cmp	r3, r1
 80001c2:	d301      	bcc.n	80001c8 <__udivsi3+0xc0>
 80001c4:	014b      	lsls	r3, r1, #5
 80001c6:	1ac0      	subs	r0, r0, r3
 80001c8:	4152      	adcs	r2, r2
 80001ca:	0903      	lsrs	r3, r0, #4
 80001cc:	428b      	cmp	r3, r1
 80001ce:	d301      	bcc.n	80001d4 <__udivsi3+0xcc>
 80001d0:	010b      	lsls	r3, r1, #4
 80001d2:	1ac0      	subs	r0, r0, r3
 80001d4:	4152      	adcs	r2, r2
 80001d6:	08c3      	lsrs	r3, r0, #3
 80001d8:	428b      	cmp	r3, r1
 80001da:	d301      	bcc.n	80001e0 <__udivsi3+0xd8>
 80001dc:	00cb      	lsls	r3, r1, #3
 80001de:	1ac0      	subs	r0, r0, r3
 80001e0:	4152      	adcs	r2, r2
 80001e2:	0883      	lsrs	r3, r0, #2
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d301      	bcc.n	80001ec <__udivsi3+0xe4>
 80001e8:	008b      	lsls	r3, r1, #2
 80001ea:	1ac0      	subs	r0, r0, r3
 80001ec:	4152      	adcs	r2, r2
 80001ee:	0843      	lsrs	r3, r0, #1
 80001f0:	428b      	cmp	r3, r1
 80001f2:	d301      	bcc.n	80001f8 <__udivsi3+0xf0>
 80001f4:	004b      	lsls	r3, r1, #1
 80001f6:	1ac0      	subs	r0, r0, r3
 80001f8:	4152      	adcs	r2, r2
 80001fa:	1a41      	subs	r1, r0, r1
 80001fc:	d200      	bcs.n	8000200 <__udivsi3+0xf8>
 80001fe:	4601      	mov	r1, r0
 8000200:	4152      	adcs	r2, r2
 8000202:	4610      	mov	r0, r2
 8000204:	4770      	bx	lr
 8000206:	e7ff      	b.n	8000208 <__udivsi3+0x100>
 8000208:	b501      	push	{r0, lr}
 800020a:	2000      	movs	r0, #0
 800020c:	f000 f8f0 	bl	80003f0 <__aeabi_idiv0>
 8000210:	bd02      	pop	{r1, pc}
 8000212:	46c0      	nop			@ (mov r8, r8)

08000214 <__aeabi_uidivmod>:
 8000214:	2900      	cmp	r1, #0
 8000216:	d0f7      	beq.n	8000208 <__udivsi3+0x100>
 8000218:	e776      	b.n	8000108 <__udivsi3>
 800021a:	4770      	bx	lr

0800021c <__divsi3>:
 800021c:	4603      	mov	r3, r0
 800021e:	430b      	orrs	r3, r1
 8000220:	d47f      	bmi.n	8000322 <__divsi3+0x106>
 8000222:	2200      	movs	r2, #0
 8000224:	0843      	lsrs	r3, r0, #1
 8000226:	428b      	cmp	r3, r1
 8000228:	d374      	bcc.n	8000314 <__divsi3+0xf8>
 800022a:	0903      	lsrs	r3, r0, #4
 800022c:	428b      	cmp	r3, r1
 800022e:	d35f      	bcc.n	80002f0 <__divsi3+0xd4>
 8000230:	0a03      	lsrs	r3, r0, #8
 8000232:	428b      	cmp	r3, r1
 8000234:	d344      	bcc.n	80002c0 <__divsi3+0xa4>
 8000236:	0b03      	lsrs	r3, r0, #12
 8000238:	428b      	cmp	r3, r1
 800023a:	d328      	bcc.n	800028e <__divsi3+0x72>
 800023c:	0c03      	lsrs	r3, r0, #16
 800023e:	428b      	cmp	r3, r1
 8000240:	d30d      	bcc.n	800025e <__divsi3+0x42>
 8000242:	22ff      	movs	r2, #255	@ 0xff
 8000244:	0209      	lsls	r1, r1, #8
 8000246:	ba12      	rev	r2, r2
 8000248:	0c03      	lsrs	r3, r0, #16
 800024a:	428b      	cmp	r3, r1
 800024c:	d302      	bcc.n	8000254 <__divsi3+0x38>
 800024e:	1212      	asrs	r2, r2, #8
 8000250:	0209      	lsls	r1, r1, #8
 8000252:	d065      	beq.n	8000320 <__divsi3+0x104>
 8000254:	0b03      	lsrs	r3, r0, #12
 8000256:	428b      	cmp	r3, r1
 8000258:	d319      	bcc.n	800028e <__divsi3+0x72>
 800025a:	e000      	b.n	800025e <__divsi3+0x42>
 800025c:	0a09      	lsrs	r1, r1, #8
 800025e:	0bc3      	lsrs	r3, r0, #15
 8000260:	428b      	cmp	r3, r1
 8000262:	d301      	bcc.n	8000268 <__divsi3+0x4c>
 8000264:	03cb      	lsls	r3, r1, #15
 8000266:	1ac0      	subs	r0, r0, r3
 8000268:	4152      	adcs	r2, r2
 800026a:	0b83      	lsrs	r3, r0, #14
 800026c:	428b      	cmp	r3, r1
 800026e:	d301      	bcc.n	8000274 <__divsi3+0x58>
 8000270:	038b      	lsls	r3, r1, #14
 8000272:	1ac0      	subs	r0, r0, r3
 8000274:	4152      	adcs	r2, r2
 8000276:	0b43      	lsrs	r3, r0, #13
 8000278:	428b      	cmp	r3, r1
 800027a:	d301      	bcc.n	8000280 <__divsi3+0x64>
 800027c:	034b      	lsls	r3, r1, #13
 800027e:	1ac0      	subs	r0, r0, r3
 8000280:	4152      	adcs	r2, r2
 8000282:	0b03      	lsrs	r3, r0, #12
 8000284:	428b      	cmp	r3, r1
 8000286:	d301      	bcc.n	800028c <__divsi3+0x70>
 8000288:	030b      	lsls	r3, r1, #12
 800028a:	1ac0      	subs	r0, r0, r3
 800028c:	4152      	adcs	r2, r2
 800028e:	0ac3      	lsrs	r3, r0, #11
 8000290:	428b      	cmp	r3, r1
 8000292:	d301      	bcc.n	8000298 <__divsi3+0x7c>
 8000294:	02cb      	lsls	r3, r1, #11
 8000296:	1ac0      	subs	r0, r0, r3
 8000298:	4152      	adcs	r2, r2
 800029a:	0a83      	lsrs	r3, r0, #10
 800029c:	428b      	cmp	r3, r1
 800029e:	d301      	bcc.n	80002a4 <__divsi3+0x88>
 80002a0:	028b      	lsls	r3, r1, #10
 80002a2:	1ac0      	subs	r0, r0, r3
 80002a4:	4152      	adcs	r2, r2
 80002a6:	0a43      	lsrs	r3, r0, #9
 80002a8:	428b      	cmp	r3, r1
 80002aa:	d301      	bcc.n	80002b0 <__divsi3+0x94>
 80002ac:	024b      	lsls	r3, r1, #9
 80002ae:	1ac0      	subs	r0, r0, r3
 80002b0:	4152      	adcs	r2, r2
 80002b2:	0a03      	lsrs	r3, r0, #8
 80002b4:	428b      	cmp	r3, r1
 80002b6:	d301      	bcc.n	80002bc <__divsi3+0xa0>
 80002b8:	020b      	lsls	r3, r1, #8
 80002ba:	1ac0      	subs	r0, r0, r3
 80002bc:	4152      	adcs	r2, r2
 80002be:	d2cd      	bcs.n	800025c <__divsi3+0x40>
 80002c0:	09c3      	lsrs	r3, r0, #7
 80002c2:	428b      	cmp	r3, r1
 80002c4:	d301      	bcc.n	80002ca <__divsi3+0xae>
 80002c6:	01cb      	lsls	r3, r1, #7
 80002c8:	1ac0      	subs	r0, r0, r3
 80002ca:	4152      	adcs	r2, r2
 80002cc:	0983      	lsrs	r3, r0, #6
 80002ce:	428b      	cmp	r3, r1
 80002d0:	d301      	bcc.n	80002d6 <__divsi3+0xba>
 80002d2:	018b      	lsls	r3, r1, #6
 80002d4:	1ac0      	subs	r0, r0, r3
 80002d6:	4152      	adcs	r2, r2
 80002d8:	0943      	lsrs	r3, r0, #5
 80002da:	428b      	cmp	r3, r1
 80002dc:	d301      	bcc.n	80002e2 <__divsi3+0xc6>
 80002de:	014b      	lsls	r3, r1, #5
 80002e0:	1ac0      	subs	r0, r0, r3
 80002e2:	4152      	adcs	r2, r2
 80002e4:	0903      	lsrs	r3, r0, #4
 80002e6:	428b      	cmp	r3, r1
 80002e8:	d301      	bcc.n	80002ee <__divsi3+0xd2>
 80002ea:	010b      	lsls	r3, r1, #4
 80002ec:	1ac0      	subs	r0, r0, r3
 80002ee:	4152      	adcs	r2, r2
 80002f0:	08c3      	lsrs	r3, r0, #3
 80002f2:	428b      	cmp	r3, r1
 80002f4:	d301      	bcc.n	80002fa <__divsi3+0xde>
 80002f6:	00cb      	lsls	r3, r1, #3
 80002f8:	1ac0      	subs	r0, r0, r3
 80002fa:	4152      	adcs	r2, r2
 80002fc:	0883      	lsrs	r3, r0, #2
 80002fe:	428b      	cmp	r3, r1
 8000300:	d301      	bcc.n	8000306 <__divsi3+0xea>
 8000302:	008b      	lsls	r3, r1, #2
 8000304:	1ac0      	subs	r0, r0, r3
 8000306:	4152      	adcs	r2, r2
 8000308:	0843      	lsrs	r3, r0, #1
 800030a:	428b      	cmp	r3, r1
 800030c:	d301      	bcc.n	8000312 <__divsi3+0xf6>
 800030e:	004b      	lsls	r3, r1, #1
 8000310:	1ac0      	subs	r0, r0, r3
 8000312:	4152      	adcs	r2, r2
 8000314:	1a41      	subs	r1, r0, r1
 8000316:	d200      	bcs.n	800031a <__divsi3+0xfe>
 8000318:	4601      	mov	r1, r0
 800031a:	4152      	adcs	r2, r2
 800031c:	4610      	mov	r0, r2
 800031e:	4770      	bx	lr
 8000320:	e05d      	b.n	80003de <__divsi3+0x1c2>
 8000322:	0fca      	lsrs	r2, r1, #31
 8000324:	d000      	beq.n	8000328 <__divsi3+0x10c>
 8000326:	4249      	negs	r1, r1
 8000328:	1003      	asrs	r3, r0, #32
 800032a:	d300      	bcc.n	800032e <__divsi3+0x112>
 800032c:	4240      	negs	r0, r0
 800032e:	4053      	eors	r3, r2
 8000330:	2200      	movs	r2, #0
 8000332:	469c      	mov	ip, r3
 8000334:	0903      	lsrs	r3, r0, #4
 8000336:	428b      	cmp	r3, r1
 8000338:	d32d      	bcc.n	8000396 <__divsi3+0x17a>
 800033a:	0a03      	lsrs	r3, r0, #8
 800033c:	428b      	cmp	r3, r1
 800033e:	d312      	bcc.n	8000366 <__divsi3+0x14a>
 8000340:	22fc      	movs	r2, #252	@ 0xfc
 8000342:	0189      	lsls	r1, r1, #6
 8000344:	ba12      	rev	r2, r2
 8000346:	0a03      	lsrs	r3, r0, #8
 8000348:	428b      	cmp	r3, r1
 800034a:	d30c      	bcc.n	8000366 <__divsi3+0x14a>
 800034c:	0189      	lsls	r1, r1, #6
 800034e:	1192      	asrs	r2, r2, #6
 8000350:	428b      	cmp	r3, r1
 8000352:	d308      	bcc.n	8000366 <__divsi3+0x14a>
 8000354:	0189      	lsls	r1, r1, #6
 8000356:	1192      	asrs	r2, r2, #6
 8000358:	428b      	cmp	r3, r1
 800035a:	d304      	bcc.n	8000366 <__divsi3+0x14a>
 800035c:	0189      	lsls	r1, r1, #6
 800035e:	d03a      	beq.n	80003d6 <__divsi3+0x1ba>
 8000360:	1192      	asrs	r2, r2, #6
 8000362:	e000      	b.n	8000366 <__divsi3+0x14a>
 8000364:	0989      	lsrs	r1, r1, #6
 8000366:	09c3      	lsrs	r3, r0, #7
 8000368:	428b      	cmp	r3, r1
 800036a:	d301      	bcc.n	8000370 <__divsi3+0x154>
 800036c:	01cb      	lsls	r3, r1, #7
 800036e:	1ac0      	subs	r0, r0, r3
 8000370:	4152      	adcs	r2, r2
 8000372:	0983      	lsrs	r3, r0, #6
 8000374:	428b      	cmp	r3, r1
 8000376:	d301      	bcc.n	800037c <__divsi3+0x160>
 8000378:	018b      	lsls	r3, r1, #6
 800037a:	1ac0      	subs	r0, r0, r3
 800037c:	4152      	adcs	r2, r2
 800037e:	0943      	lsrs	r3, r0, #5
 8000380:	428b      	cmp	r3, r1
 8000382:	d301      	bcc.n	8000388 <__divsi3+0x16c>
 8000384:	014b      	lsls	r3, r1, #5
 8000386:	1ac0      	subs	r0, r0, r3
 8000388:	4152      	adcs	r2, r2
 800038a:	0903      	lsrs	r3, r0, #4
 800038c:	428b      	cmp	r3, r1
 800038e:	d301      	bcc.n	8000394 <__divsi3+0x178>
 8000390:	010b      	lsls	r3, r1, #4
 8000392:	1ac0      	subs	r0, r0, r3
 8000394:	4152      	adcs	r2, r2
 8000396:	08c3      	lsrs	r3, r0, #3
 8000398:	428b      	cmp	r3, r1
 800039a:	d301      	bcc.n	80003a0 <__divsi3+0x184>
 800039c:	00cb      	lsls	r3, r1, #3
 800039e:	1ac0      	subs	r0, r0, r3
 80003a0:	4152      	adcs	r2, r2
 80003a2:	0883      	lsrs	r3, r0, #2
 80003a4:	428b      	cmp	r3, r1
 80003a6:	d301      	bcc.n	80003ac <__divsi3+0x190>
 80003a8:	008b      	lsls	r3, r1, #2
 80003aa:	1ac0      	subs	r0, r0, r3
 80003ac:	4152      	adcs	r2, r2
 80003ae:	d2d9      	bcs.n	8000364 <__divsi3+0x148>
 80003b0:	0843      	lsrs	r3, r0, #1
 80003b2:	428b      	cmp	r3, r1
 80003b4:	d301      	bcc.n	80003ba <__divsi3+0x19e>
 80003b6:	004b      	lsls	r3, r1, #1
 80003b8:	1ac0      	subs	r0, r0, r3
 80003ba:	4152      	adcs	r2, r2
 80003bc:	1a41      	subs	r1, r0, r1
 80003be:	d200      	bcs.n	80003c2 <__divsi3+0x1a6>
 80003c0:	4601      	mov	r1, r0
 80003c2:	4663      	mov	r3, ip
 80003c4:	4152      	adcs	r2, r2
 80003c6:	105b      	asrs	r3, r3, #1
 80003c8:	4610      	mov	r0, r2
 80003ca:	d301      	bcc.n	80003d0 <__divsi3+0x1b4>
 80003cc:	4240      	negs	r0, r0
 80003ce:	2b00      	cmp	r3, #0
 80003d0:	d500      	bpl.n	80003d4 <__divsi3+0x1b8>
 80003d2:	4249      	negs	r1, r1
 80003d4:	4770      	bx	lr
 80003d6:	4663      	mov	r3, ip
 80003d8:	105b      	asrs	r3, r3, #1
 80003da:	d300      	bcc.n	80003de <__divsi3+0x1c2>
 80003dc:	4240      	negs	r0, r0
 80003de:	b501      	push	{r0, lr}
 80003e0:	2000      	movs	r0, #0
 80003e2:	f000 f805 	bl	80003f0 <__aeabi_idiv0>
 80003e6:	bd02      	pop	{r1, pc}

080003e8 <__aeabi_idivmod>:
 80003e8:	2900      	cmp	r1, #0
 80003ea:	d0f8      	beq.n	80003de <__divsi3+0x1c2>
 80003ec:	e716      	b.n	800021c <__divsi3>
 80003ee:	4770      	bx	lr

080003f0 <__aeabi_idiv0>:
 80003f0:	4770      	bx	lr
 80003f2:	46c0      	nop			@ (mov r8, r8)

080003f4 <__aeabi_cdrcmple>:
 80003f4:	4684      	mov	ip, r0
 80003f6:	0010      	movs	r0, r2
 80003f8:	4662      	mov	r2, ip
 80003fa:	468c      	mov	ip, r1
 80003fc:	0019      	movs	r1, r3
 80003fe:	4663      	mov	r3, ip
 8000400:	e000      	b.n	8000404 <__aeabi_cdcmpeq>
 8000402:	46c0      	nop			@ (mov r8, r8)

08000404 <__aeabi_cdcmpeq>:
 8000404:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8000406:	f000 fcad 	bl	8000d64 <__ledf2>
 800040a:	2800      	cmp	r0, #0
 800040c:	d401      	bmi.n	8000412 <__aeabi_cdcmpeq+0xe>
 800040e:	2100      	movs	r1, #0
 8000410:	42c8      	cmn	r0, r1
 8000412:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

08000414 <__aeabi_dcmpeq>:
 8000414:	b510      	push	{r4, lr}
 8000416:	f000 fbf1 	bl	8000bfc <__eqdf2>
 800041a:	4240      	negs	r0, r0
 800041c:	3001      	adds	r0, #1
 800041e:	bd10      	pop	{r4, pc}

08000420 <__aeabi_dcmplt>:
 8000420:	b510      	push	{r4, lr}
 8000422:	f000 fc9f 	bl	8000d64 <__ledf2>
 8000426:	2800      	cmp	r0, #0
 8000428:	db01      	blt.n	800042e <__aeabi_dcmplt+0xe>
 800042a:	2000      	movs	r0, #0
 800042c:	bd10      	pop	{r4, pc}
 800042e:	2001      	movs	r0, #1
 8000430:	bd10      	pop	{r4, pc}
 8000432:	46c0      	nop			@ (mov r8, r8)

08000434 <__aeabi_dcmple>:
 8000434:	b510      	push	{r4, lr}
 8000436:	f000 fc95 	bl	8000d64 <__ledf2>
 800043a:	2800      	cmp	r0, #0
 800043c:	dd01      	ble.n	8000442 <__aeabi_dcmple+0xe>
 800043e:	2000      	movs	r0, #0
 8000440:	bd10      	pop	{r4, pc}
 8000442:	2001      	movs	r0, #1
 8000444:	bd10      	pop	{r4, pc}
 8000446:	46c0      	nop			@ (mov r8, r8)

08000448 <__aeabi_dcmpgt>:
 8000448:	b510      	push	{r4, lr}
 800044a:	f000 fc1b 	bl	8000c84 <__gedf2>
 800044e:	2800      	cmp	r0, #0
 8000450:	dc01      	bgt.n	8000456 <__aeabi_dcmpgt+0xe>
 8000452:	2000      	movs	r0, #0
 8000454:	bd10      	pop	{r4, pc}
 8000456:	2001      	movs	r0, #1
 8000458:	bd10      	pop	{r4, pc}
 800045a:	46c0      	nop			@ (mov r8, r8)

0800045c <__aeabi_dcmpge>:
 800045c:	b510      	push	{r4, lr}
 800045e:	f000 fc11 	bl	8000c84 <__gedf2>
 8000462:	2800      	cmp	r0, #0
 8000464:	da01      	bge.n	800046a <__aeabi_dcmpge+0xe>
 8000466:	2000      	movs	r0, #0
 8000468:	bd10      	pop	{r4, pc}
 800046a:	2001      	movs	r0, #1
 800046c:	bd10      	pop	{r4, pc}
 800046e:	46c0      	nop			@ (mov r8, r8)

08000470 <__aeabi_dadd>:
 8000470:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000472:	464f      	mov	r7, r9
 8000474:	4646      	mov	r6, r8
 8000476:	46d6      	mov	lr, sl
 8000478:	b5c0      	push	{r6, r7, lr}
 800047a:	b082      	sub	sp, #8
 800047c:	9000      	str	r0, [sp, #0]
 800047e:	9101      	str	r1, [sp, #4]
 8000480:	030e      	lsls	r6, r1, #12
 8000482:	004c      	lsls	r4, r1, #1
 8000484:	0fcd      	lsrs	r5, r1, #31
 8000486:	0a71      	lsrs	r1, r6, #9
 8000488:	9e00      	ldr	r6, [sp, #0]
 800048a:	005f      	lsls	r7, r3, #1
 800048c:	0f76      	lsrs	r6, r6, #29
 800048e:	430e      	orrs	r6, r1
 8000490:	9900      	ldr	r1, [sp, #0]
 8000492:	9200      	str	r2, [sp, #0]
 8000494:	9301      	str	r3, [sp, #4]
 8000496:	00c9      	lsls	r1, r1, #3
 8000498:	4689      	mov	r9, r1
 800049a:	0319      	lsls	r1, r3, #12
 800049c:	0d7b      	lsrs	r3, r7, #21
 800049e:	4698      	mov	r8, r3
 80004a0:	9b01      	ldr	r3, [sp, #4]
 80004a2:	0a49      	lsrs	r1, r1, #9
 80004a4:	0fdb      	lsrs	r3, r3, #31
 80004a6:	469c      	mov	ip, r3
 80004a8:	9b00      	ldr	r3, [sp, #0]
 80004aa:	9a00      	ldr	r2, [sp, #0]
 80004ac:	0f5b      	lsrs	r3, r3, #29
 80004ae:	430b      	orrs	r3, r1
 80004b0:	4641      	mov	r1, r8
 80004b2:	0d64      	lsrs	r4, r4, #21
 80004b4:	00d2      	lsls	r2, r2, #3
 80004b6:	1a61      	subs	r1, r4, r1
 80004b8:	4565      	cmp	r5, ip
 80004ba:	d100      	bne.n	80004be <__aeabi_dadd+0x4e>
 80004bc:	e0a6      	b.n	800060c <__aeabi_dadd+0x19c>
 80004be:	2900      	cmp	r1, #0
 80004c0:	dd72      	ble.n	80005a8 <__aeabi_dadd+0x138>
 80004c2:	4647      	mov	r7, r8
 80004c4:	2f00      	cmp	r7, #0
 80004c6:	d100      	bne.n	80004ca <__aeabi_dadd+0x5a>
 80004c8:	e0dd      	b.n	8000686 <__aeabi_dadd+0x216>
 80004ca:	4fcc      	ldr	r7, [pc, #816]	@ (80007fc <__aeabi_dadd+0x38c>)
 80004cc:	42bc      	cmp	r4, r7
 80004ce:	d100      	bne.n	80004d2 <__aeabi_dadd+0x62>
 80004d0:	e19a      	b.n	8000808 <__aeabi_dadd+0x398>
 80004d2:	2701      	movs	r7, #1
 80004d4:	2938      	cmp	r1, #56	@ 0x38
 80004d6:	dc17      	bgt.n	8000508 <__aeabi_dadd+0x98>
 80004d8:	2780      	movs	r7, #128	@ 0x80
 80004da:	043f      	lsls	r7, r7, #16
 80004dc:	433b      	orrs	r3, r7
 80004de:	291f      	cmp	r1, #31
 80004e0:	dd00      	ble.n	80004e4 <__aeabi_dadd+0x74>
 80004e2:	e1dd      	b.n	80008a0 <__aeabi_dadd+0x430>
 80004e4:	2720      	movs	r7, #32
 80004e6:	1a78      	subs	r0, r7, r1
 80004e8:	001f      	movs	r7, r3
 80004ea:	4087      	lsls	r7, r0
 80004ec:	46ba      	mov	sl, r7
 80004ee:	0017      	movs	r7, r2
 80004f0:	40cf      	lsrs	r7, r1
 80004f2:	4684      	mov	ip, r0
 80004f4:	0038      	movs	r0, r7
 80004f6:	4657      	mov	r7, sl
 80004f8:	4307      	orrs	r7, r0
 80004fa:	4660      	mov	r0, ip
 80004fc:	4082      	lsls	r2, r0
 80004fe:	40cb      	lsrs	r3, r1
 8000500:	1e50      	subs	r0, r2, #1
 8000502:	4182      	sbcs	r2, r0
 8000504:	1af6      	subs	r6, r6, r3
 8000506:	4317      	orrs	r7, r2
 8000508:	464b      	mov	r3, r9
 800050a:	1bdf      	subs	r7, r3, r7
 800050c:	45b9      	cmp	r9, r7
 800050e:	4180      	sbcs	r0, r0
 8000510:	4240      	negs	r0, r0
 8000512:	1a36      	subs	r6, r6, r0
 8000514:	0233      	lsls	r3, r6, #8
 8000516:	d400      	bmi.n	800051a <__aeabi_dadd+0xaa>
 8000518:	e0ff      	b.n	800071a <__aeabi_dadd+0x2aa>
 800051a:	0276      	lsls	r6, r6, #9
 800051c:	0a76      	lsrs	r6, r6, #9
 800051e:	2e00      	cmp	r6, #0
 8000520:	d100      	bne.n	8000524 <__aeabi_dadd+0xb4>
 8000522:	e13c      	b.n	800079e <__aeabi_dadd+0x32e>
 8000524:	0030      	movs	r0, r6
 8000526:	f001 fcd3 	bl	8001ed0 <__clzsi2>
 800052a:	0003      	movs	r3, r0
 800052c:	3b08      	subs	r3, #8
 800052e:	2120      	movs	r1, #32
 8000530:	0038      	movs	r0, r7
 8000532:	1aca      	subs	r2, r1, r3
 8000534:	40d0      	lsrs	r0, r2
 8000536:	409e      	lsls	r6, r3
 8000538:	0002      	movs	r2, r0
 800053a:	409f      	lsls	r7, r3
 800053c:	4332      	orrs	r2, r6
 800053e:	429c      	cmp	r4, r3
 8000540:	dd00      	ble.n	8000544 <__aeabi_dadd+0xd4>
 8000542:	e1a6      	b.n	8000892 <__aeabi_dadd+0x422>
 8000544:	1b18      	subs	r0, r3, r4
 8000546:	3001      	adds	r0, #1
 8000548:	1a09      	subs	r1, r1, r0
 800054a:	003e      	movs	r6, r7
 800054c:	408f      	lsls	r7, r1
 800054e:	40c6      	lsrs	r6, r0
 8000550:	1e7b      	subs	r3, r7, #1
 8000552:	419f      	sbcs	r7, r3
 8000554:	0013      	movs	r3, r2
 8000556:	408b      	lsls	r3, r1
 8000558:	4337      	orrs	r7, r6
 800055a:	431f      	orrs	r7, r3
 800055c:	40c2      	lsrs	r2, r0
 800055e:	003b      	movs	r3, r7
 8000560:	0016      	movs	r6, r2
 8000562:	2400      	movs	r4, #0
 8000564:	4313      	orrs	r3, r2
 8000566:	d100      	bne.n	800056a <__aeabi_dadd+0xfa>
 8000568:	e1df      	b.n	800092a <__aeabi_dadd+0x4ba>
 800056a:	077b      	lsls	r3, r7, #29
 800056c:	d100      	bne.n	8000570 <__aeabi_dadd+0x100>
 800056e:	e332      	b.n	8000bd6 <__aeabi_dadd+0x766>
 8000570:	230f      	movs	r3, #15
 8000572:	003a      	movs	r2, r7
 8000574:	403b      	ands	r3, r7
 8000576:	2b04      	cmp	r3, #4
 8000578:	d004      	beq.n	8000584 <__aeabi_dadd+0x114>
 800057a:	1d3a      	adds	r2, r7, #4
 800057c:	42ba      	cmp	r2, r7
 800057e:	41bf      	sbcs	r7, r7
 8000580:	427f      	negs	r7, r7
 8000582:	19f6      	adds	r6, r6, r7
 8000584:	0233      	lsls	r3, r6, #8
 8000586:	d400      	bmi.n	800058a <__aeabi_dadd+0x11a>
 8000588:	e323      	b.n	8000bd2 <__aeabi_dadd+0x762>
 800058a:	4b9c      	ldr	r3, [pc, #624]	@ (80007fc <__aeabi_dadd+0x38c>)
 800058c:	3401      	adds	r4, #1
 800058e:	429c      	cmp	r4, r3
 8000590:	d100      	bne.n	8000594 <__aeabi_dadd+0x124>
 8000592:	e0b4      	b.n	80006fe <__aeabi_dadd+0x28e>
 8000594:	4b9a      	ldr	r3, [pc, #616]	@ (8000800 <__aeabi_dadd+0x390>)
 8000596:	0564      	lsls	r4, r4, #21
 8000598:	401e      	ands	r6, r3
 800059a:	0d64      	lsrs	r4, r4, #21
 800059c:	0777      	lsls	r7, r6, #29
 800059e:	08d2      	lsrs	r2, r2, #3
 80005a0:	0276      	lsls	r6, r6, #9
 80005a2:	4317      	orrs	r7, r2
 80005a4:	0b36      	lsrs	r6, r6, #12
 80005a6:	e0ac      	b.n	8000702 <__aeabi_dadd+0x292>
 80005a8:	2900      	cmp	r1, #0
 80005aa:	d100      	bne.n	80005ae <__aeabi_dadd+0x13e>
 80005ac:	e07e      	b.n	80006ac <__aeabi_dadd+0x23c>
 80005ae:	4641      	mov	r1, r8
 80005b0:	1b09      	subs	r1, r1, r4
 80005b2:	2c00      	cmp	r4, #0
 80005b4:	d000      	beq.n	80005b8 <__aeabi_dadd+0x148>
 80005b6:	e160      	b.n	800087a <__aeabi_dadd+0x40a>
 80005b8:	0034      	movs	r4, r6
 80005ba:	4648      	mov	r0, r9
 80005bc:	4304      	orrs	r4, r0
 80005be:	d100      	bne.n	80005c2 <__aeabi_dadd+0x152>
 80005c0:	e1c9      	b.n	8000956 <__aeabi_dadd+0x4e6>
 80005c2:	1e4c      	subs	r4, r1, #1
 80005c4:	2901      	cmp	r1, #1
 80005c6:	d100      	bne.n	80005ca <__aeabi_dadd+0x15a>
 80005c8:	e22e      	b.n	8000a28 <__aeabi_dadd+0x5b8>
 80005ca:	4d8c      	ldr	r5, [pc, #560]	@ (80007fc <__aeabi_dadd+0x38c>)
 80005cc:	42a9      	cmp	r1, r5
 80005ce:	d100      	bne.n	80005d2 <__aeabi_dadd+0x162>
 80005d0:	e224      	b.n	8000a1c <__aeabi_dadd+0x5ac>
 80005d2:	2701      	movs	r7, #1
 80005d4:	2c38      	cmp	r4, #56	@ 0x38
 80005d6:	dc11      	bgt.n	80005fc <__aeabi_dadd+0x18c>
 80005d8:	0021      	movs	r1, r4
 80005da:	291f      	cmp	r1, #31
 80005dc:	dd00      	ble.n	80005e0 <__aeabi_dadd+0x170>
 80005de:	e20b      	b.n	80009f8 <__aeabi_dadd+0x588>
 80005e0:	2420      	movs	r4, #32
 80005e2:	0037      	movs	r7, r6
 80005e4:	4648      	mov	r0, r9
 80005e6:	1a64      	subs	r4, r4, r1
 80005e8:	40a7      	lsls	r7, r4
 80005ea:	40c8      	lsrs	r0, r1
 80005ec:	4307      	orrs	r7, r0
 80005ee:	4648      	mov	r0, r9
 80005f0:	40a0      	lsls	r0, r4
 80005f2:	40ce      	lsrs	r6, r1
 80005f4:	1e44      	subs	r4, r0, #1
 80005f6:	41a0      	sbcs	r0, r4
 80005f8:	1b9b      	subs	r3, r3, r6
 80005fa:	4307      	orrs	r7, r0
 80005fc:	1bd7      	subs	r7, r2, r7
 80005fe:	42ba      	cmp	r2, r7
 8000600:	4192      	sbcs	r2, r2
 8000602:	4252      	negs	r2, r2
 8000604:	4665      	mov	r5, ip
 8000606:	4644      	mov	r4, r8
 8000608:	1a9e      	subs	r6, r3, r2
 800060a:	e783      	b.n	8000514 <__aeabi_dadd+0xa4>
 800060c:	2900      	cmp	r1, #0
 800060e:	dc00      	bgt.n	8000612 <__aeabi_dadd+0x1a2>
 8000610:	e09c      	b.n	800074c <__aeabi_dadd+0x2dc>
 8000612:	4647      	mov	r7, r8
 8000614:	2f00      	cmp	r7, #0
 8000616:	d167      	bne.n	80006e8 <__aeabi_dadd+0x278>
 8000618:	001f      	movs	r7, r3
 800061a:	4317      	orrs	r7, r2
 800061c:	d100      	bne.n	8000620 <__aeabi_dadd+0x1b0>
 800061e:	e0e4      	b.n	80007ea <__aeabi_dadd+0x37a>
 8000620:	1e48      	subs	r0, r1, #1
 8000622:	2901      	cmp	r1, #1
 8000624:	d100      	bne.n	8000628 <__aeabi_dadd+0x1b8>
 8000626:	e19b      	b.n	8000960 <__aeabi_dadd+0x4f0>
 8000628:	4f74      	ldr	r7, [pc, #464]	@ (80007fc <__aeabi_dadd+0x38c>)
 800062a:	42b9      	cmp	r1, r7
 800062c:	d100      	bne.n	8000630 <__aeabi_dadd+0x1c0>
 800062e:	e0eb      	b.n	8000808 <__aeabi_dadd+0x398>
 8000630:	2701      	movs	r7, #1
 8000632:	0001      	movs	r1, r0
 8000634:	2838      	cmp	r0, #56	@ 0x38
 8000636:	dc11      	bgt.n	800065c <__aeabi_dadd+0x1ec>
 8000638:	291f      	cmp	r1, #31
 800063a:	dd00      	ble.n	800063e <__aeabi_dadd+0x1ce>
 800063c:	e1c7      	b.n	80009ce <__aeabi_dadd+0x55e>
 800063e:	2720      	movs	r7, #32
 8000640:	1a78      	subs	r0, r7, r1
 8000642:	001f      	movs	r7, r3
 8000644:	4684      	mov	ip, r0
 8000646:	4087      	lsls	r7, r0
 8000648:	0010      	movs	r0, r2
 800064a:	40c8      	lsrs	r0, r1
 800064c:	4307      	orrs	r7, r0
 800064e:	4660      	mov	r0, ip
 8000650:	4082      	lsls	r2, r0
 8000652:	40cb      	lsrs	r3, r1
 8000654:	1e50      	subs	r0, r2, #1
 8000656:	4182      	sbcs	r2, r0
 8000658:	18f6      	adds	r6, r6, r3
 800065a:	4317      	orrs	r7, r2
 800065c:	444f      	add	r7, r9
 800065e:	454f      	cmp	r7, r9
 8000660:	4180      	sbcs	r0, r0
 8000662:	4240      	negs	r0, r0
 8000664:	1836      	adds	r6, r6, r0
 8000666:	0233      	lsls	r3, r6, #8
 8000668:	d557      	bpl.n	800071a <__aeabi_dadd+0x2aa>
 800066a:	4b64      	ldr	r3, [pc, #400]	@ (80007fc <__aeabi_dadd+0x38c>)
 800066c:	3401      	adds	r4, #1
 800066e:	429c      	cmp	r4, r3
 8000670:	d045      	beq.n	80006fe <__aeabi_dadd+0x28e>
 8000672:	2101      	movs	r1, #1
 8000674:	4b62      	ldr	r3, [pc, #392]	@ (8000800 <__aeabi_dadd+0x390>)
 8000676:	087a      	lsrs	r2, r7, #1
 8000678:	401e      	ands	r6, r3
 800067a:	4039      	ands	r1, r7
 800067c:	430a      	orrs	r2, r1
 800067e:	07f7      	lsls	r7, r6, #31
 8000680:	4317      	orrs	r7, r2
 8000682:	0876      	lsrs	r6, r6, #1
 8000684:	e771      	b.n	800056a <__aeabi_dadd+0xfa>
 8000686:	001f      	movs	r7, r3
 8000688:	4317      	orrs	r7, r2
 800068a:	d100      	bne.n	800068e <__aeabi_dadd+0x21e>
 800068c:	e0ad      	b.n	80007ea <__aeabi_dadd+0x37a>
 800068e:	1e4f      	subs	r7, r1, #1
 8000690:	46bc      	mov	ip, r7
 8000692:	2901      	cmp	r1, #1
 8000694:	d100      	bne.n	8000698 <__aeabi_dadd+0x228>
 8000696:	e182      	b.n	800099e <__aeabi_dadd+0x52e>
 8000698:	4f58      	ldr	r7, [pc, #352]	@ (80007fc <__aeabi_dadd+0x38c>)
 800069a:	42b9      	cmp	r1, r7
 800069c:	d100      	bne.n	80006a0 <__aeabi_dadd+0x230>
 800069e:	e190      	b.n	80009c2 <__aeabi_dadd+0x552>
 80006a0:	4661      	mov	r1, ip
 80006a2:	2701      	movs	r7, #1
 80006a4:	2938      	cmp	r1, #56	@ 0x38
 80006a6:	dd00      	ble.n	80006aa <__aeabi_dadd+0x23a>
 80006a8:	e72e      	b.n	8000508 <__aeabi_dadd+0x98>
 80006aa:	e718      	b.n	80004de <__aeabi_dadd+0x6e>
 80006ac:	4f55      	ldr	r7, [pc, #340]	@ (8000804 <__aeabi_dadd+0x394>)
 80006ae:	1c61      	adds	r1, r4, #1
 80006b0:	4239      	tst	r1, r7
 80006b2:	d000      	beq.n	80006b6 <__aeabi_dadd+0x246>
 80006b4:	e0d0      	b.n	8000858 <__aeabi_dadd+0x3e8>
 80006b6:	0031      	movs	r1, r6
 80006b8:	4648      	mov	r0, r9
 80006ba:	001f      	movs	r7, r3
 80006bc:	4301      	orrs	r1, r0
 80006be:	4317      	orrs	r7, r2
 80006c0:	2c00      	cmp	r4, #0
 80006c2:	d000      	beq.n	80006c6 <__aeabi_dadd+0x256>
 80006c4:	e13d      	b.n	8000942 <__aeabi_dadd+0x4d2>
 80006c6:	2900      	cmp	r1, #0
 80006c8:	d100      	bne.n	80006cc <__aeabi_dadd+0x25c>
 80006ca:	e1bc      	b.n	8000a46 <__aeabi_dadd+0x5d6>
 80006cc:	2f00      	cmp	r7, #0
 80006ce:	d000      	beq.n	80006d2 <__aeabi_dadd+0x262>
 80006d0:	e1bf      	b.n	8000a52 <__aeabi_dadd+0x5e2>
 80006d2:	464b      	mov	r3, r9
 80006d4:	2100      	movs	r1, #0
 80006d6:	08d8      	lsrs	r0, r3, #3
 80006d8:	0777      	lsls	r7, r6, #29
 80006da:	4307      	orrs	r7, r0
 80006dc:	08f0      	lsrs	r0, r6, #3
 80006de:	0306      	lsls	r6, r0, #12
 80006e0:	054c      	lsls	r4, r1, #21
 80006e2:	0b36      	lsrs	r6, r6, #12
 80006e4:	0d64      	lsrs	r4, r4, #21
 80006e6:	e00c      	b.n	8000702 <__aeabi_dadd+0x292>
 80006e8:	4f44      	ldr	r7, [pc, #272]	@ (80007fc <__aeabi_dadd+0x38c>)
 80006ea:	42bc      	cmp	r4, r7
 80006ec:	d100      	bne.n	80006f0 <__aeabi_dadd+0x280>
 80006ee:	e08b      	b.n	8000808 <__aeabi_dadd+0x398>
 80006f0:	2701      	movs	r7, #1
 80006f2:	2938      	cmp	r1, #56	@ 0x38
 80006f4:	dcb2      	bgt.n	800065c <__aeabi_dadd+0x1ec>
 80006f6:	2780      	movs	r7, #128	@ 0x80
 80006f8:	043f      	lsls	r7, r7, #16
 80006fa:	433b      	orrs	r3, r7
 80006fc:	e79c      	b.n	8000638 <__aeabi_dadd+0x1c8>
 80006fe:	2600      	movs	r6, #0
 8000700:	2700      	movs	r7, #0
 8000702:	0524      	lsls	r4, r4, #20
 8000704:	4334      	orrs	r4, r6
 8000706:	07ed      	lsls	r5, r5, #31
 8000708:	432c      	orrs	r4, r5
 800070a:	0038      	movs	r0, r7
 800070c:	0021      	movs	r1, r4
 800070e:	b002      	add	sp, #8
 8000710:	bce0      	pop	{r5, r6, r7}
 8000712:	46ba      	mov	sl, r7
 8000714:	46b1      	mov	r9, r6
 8000716:	46a8      	mov	r8, r5
 8000718:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800071a:	077b      	lsls	r3, r7, #29
 800071c:	d004      	beq.n	8000728 <__aeabi_dadd+0x2b8>
 800071e:	230f      	movs	r3, #15
 8000720:	403b      	ands	r3, r7
 8000722:	2b04      	cmp	r3, #4
 8000724:	d000      	beq.n	8000728 <__aeabi_dadd+0x2b8>
 8000726:	e728      	b.n	800057a <__aeabi_dadd+0x10a>
 8000728:	08f8      	lsrs	r0, r7, #3
 800072a:	4b34      	ldr	r3, [pc, #208]	@ (80007fc <__aeabi_dadd+0x38c>)
 800072c:	0777      	lsls	r7, r6, #29
 800072e:	4307      	orrs	r7, r0
 8000730:	08f0      	lsrs	r0, r6, #3
 8000732:	429c      	cmp	r4, r3
 8000734:	d000      	beq.n	8000738 <__aeabi_dadd+0x2c8>
 8000736:	e24a      	b.n	8000bce <__aeabi_dadd+0x75e>
 8000738:	003b      	movs	r3, r7
 800073a:	4303      	orrs	r3, r0
 800073c:	d059      	beq.n	80007f2 <__aeabi_dadd+0x382>
 800073e:	2680      	movs	r6, #128	@ 0x80
 8000740:	0336      	lsls	r6, r6, #12
 8000742:	4306      	orrs	r6, r0
 8000744:	0336      	lsls	r6, r6, #12
 8000746:	4c2d      	ldr	r4, [pc, #180]	@ (80007fc <__aeabi_dadd+0x38c>)
 8000748:	0b36      	lsrs	r6, r6, #12
 800074a:	e7da      	b.n	8000702 <__aeabi_dadd+0x292>
 800074c:	2900      	cmp	r1, #0
 800074e:	d061      	beq.n	8000814 <__aeabi_dadd+0x3a4>
 8000750:	4641      	mov	r1, r8
 8000752:	1b09      	subs	r1, r1, r4
 8000754:	2c00      	cmp	r4, #0
 8000756:	d100      	bne.n	800075a <__aeabi_dadd+0x2ea>
 8000758:	e0b9      	b.n	80008ce <__aeabi_dadd+0x45e>
 800075a:	4c28      	ldr	r4, [pc, #160]	@ (80007fc <__aeabi_dadd+0x38c>)
 800075c:	45a0      	cmp	r8, r4
 800075e:	d100      	bne.n	8000762 <__aeabi_dadd+0x2f2>
 8000760:	e1a5      	b.n	8000aae <__aeabi_dadd+0x63e>
 8000762:	2701      	movs	r7, #1
 8000764:	2938      	cmp	r1, #56	@ 0x38
 8000766:	dc13      	bgt.n	8000790 <__aeabi_dadd+0x320>
 8000768:	2480      	movs	r4, #128	@ 0x80
 800076a:	0424      	lsls	r4, r4, #16
 800076c:	4326      	orrs	r6, r4
 800076e:	291f      	cmp	r1, #31
 8000770:	dd00      	ble.n	8000774 <__aeabi_dadd+0x304>
 8000772:	e1c8      	b.n	8000b06 <__aeabi_dadd+0x696>
 8000774:	2420      	movs	r4, #32
 8000776:	0037      	movs	r7, r6
 8000778:	4648      	mov	r0, r9
 800077a:	1a64      	subs	r4, r4, r1
 800077c:	40a7      	lsls	r7, r4
 800077e:	40c8      	lsrs	r0, r1
 8000780:	4307      	orrs	r7, r0
 8000782:	4648      	mov	r0, r9
 8000784:	40a0      	lsls	r0, r4
 8000786:	40ce      	lsrs	r6, r1
 8000788:	1e44      	subs	r4, r0, #1
 800078a:	41a0      	sbcs	r0, r4
 800078c:	199b      	adds	r3, r3, r6
 800078e:	4307      	orrs	r7, r0
 8000790:	18bf      	adds	r7, r7, r2
 8000792:	4297      	cmp	r7, r2
 8000794:	4192      	sbcs	r2, r2
 8000796:	4252      	negs	r2, r2
 8000798:	4644      	mov	r4, r8
 800079a:	18d6      	adds	r6, r2, r3
 800079c:	e763      	b.n	8000666 <__aeabi_dadd+0x1f6>
 800079e:	0038      	movs	r0, r7
 80007a0:	f001 fb96 	bl	8001ed0 <__clzsi2>
 80007a4:	0003      	movs	r3, r0
 80007a6:	3318      	adds	r3, #24
 80007a8:	2b1f      	cmp	r3, #31
 80007aa:	dc00      	bgt.n	80007ae <__aeabi_dadd+0x33e>
 80007ac:	e6bf      	b.n	800052e <__aeabi_dadd+0xbe>
 80007ae:	003a      	movs	r2, r7
 80007b0:	3808      	subs	r0, #8
 80007b2:	4082      	lsls	r2, r0
 80007b4:	429c      	cmp	r4, r3
 80007b6:	dd00      	ble.n	80007ba <__aeabi_dadd+0x34a>
 80007b8:	e083      	b.n	80008c2 <__aeabi_dadd+0x452>
 80007ba:	1b1b      	subs	r3, r3, r4
 80007bc:	1c58      	adds	r0, r3, #1
 80007be:	281f      	cmp	r0, #31
 80007c0:	dc00      	bgt.n	80007c4 <__aeabi_dadd+0x354>
 80007c2:	e1b4      	b.n	8000b2e <__aeabi_dadd+0x6be>
 80007c4:	0017      	movs	r7, r2
 80007c6:	3b1f      	subs	r3, #31
 80007c8:	40df      	lsrs	r7, r3
 80007ca:	2820      	cmp	r0, #32
 80007cc:	d005      	beq.n	80007da <__aeabi_dadd+0x36a>
 80007ce:	2340      	movs	r3, #64	@ 0x40
 80007d0:	1a1b      	subs	r3, r3, r0
 80007d2:	409a      	lsls	r2, r3
 80007d4:	1e53      	subs	r3, r2, #1
 80007d6:	419a      	sbcs	r2, r3
 80007d8:	4317      	orrs	r7, r2
 80007da:	2400      	movs	r4, #0
 80007dc:	2f00      	cmp	r7, #0
 80007de:	d00a      	beq.n	80007f6 <__aeabi_dadd+0x386>
 80007e0:	077b      	lsls	r3, r7, #29
 80007e2:	d000      	beq.n	80007e6 <__aeabi_dadd+0x376>
 80007e4:	e6c4      	b.n	8000570 <__aeabi_dadd+0x100>
 80007e6:	0026      	movs	r6, r4
 80007e8:	e79e      	b.n	8000728 <__aeabi_dadd+0x2b8>
 80007ea:	464b      	mov	r3, r9
 80007ec:	000c      	movs	r4, r1
 80007ee:	08d8      	lsrs	r0, r3, #3
 80007f0:	e79b      	b.n	800072a <__aeabi_dadd+0x2ba>
 80007f2:	2700      	movs	r7, #0
 80007f4:	4c01      	ldr	r4, [pc, #4]	@ (80007fc <__aeabi_dadd+0x38c>)
 80007f6:	2600      	movs	r6, #0
 80007f8:	e783      	b.n	8000702 <__aeabi_dadd+0x292>
 80007fa:	46c0      	nop			@ (mov r8, r8)
 80007fc:	000007ff 	.word	0x000007ff
 8000800:	ff7fffff 	.word	0xff7fffff
 8000804:	000007fe 	.word	0x000007fe
 8000808:	464b      	mov	r3, r9
 800080a:	0777      	lsls	r7, r6, #29
 800080c:	08d8      	lsrs	r0, r3, #3
 800080e:	4307      	orrs	r7, r0
 8000810:	08f0      	lsrs	r0, r6, #3
 8000812:	e791      	b.n	8000738 <__aeabi_dadd+0x2c8>
 8000814:	4fcd      	ldr	r7, [pc, #820]	@ (8000b4c <__aeabi_dadd+0x6dc>)
 8000816:	1c61      	adds	r1, r4, #1
 8000818:	4239      	tst	r1, r7
 800081a:	d16b      	bne.n	80008f4 <__aeabi_dadd+0x484>
 800081c:	0031      	movs	r1, r6
 800081e:	4648      	mov	r0, r9
 8000820:	4301      	orrs	r1, r0
 8000822:	2c00      	cmp	r4, #0
 8000824:	d000      	beq.n	8000828 <__aeabi_dadd+0x3b8>
 8000826:	e14b      	b.n	8000ac0 <__aeabi_dadd+0x650>
 8000828:	001f      	movs	r7, r3
 800082a:	4317      	orrs	r7, r2
 800082c:	2900      	cmp	r1, #0
 800082e:	d100      	bne.n	8000832 <__aeabi_dadd+0x3c2>
 8000830:	e181      	b.n	8000b36 <__aeabi_dadd+0x6c6>
 8000832:	2f00      	cmp	r7, #0
 8000834:	d100      	bne.n	8000838 <__aeabi_dadd+0x3c8>
 8000836:	e74c      	b.n	80006d2 <__aeabi_dadd+0x262>
 8000838:	444a      	add	r2, r9
 800083a:	454a      	cmp	r2, r9
 800083c:	4180      	sbcs	r0, r0
 800083e:	18f6      	adds	r6, r6, r3
 8000840:	4240      	negs	r0, r0
 8000842:	1836      	adds	r6, r6, r0
 8000844:	0233      	lsls	r3, r6, #8
 8000846:	d500      	bpl.n	800084a <__aeabi_dadd+0x3da>
 8000848:	e1b0      	b.n	8000bac <__aeabi_dadd+0x73c>
 800084a:	0017      	movs	r7, r2
 800084c:	4691      	mov	r9, r2
 800084e:	4337      	orrs	r7, r6
 8000850:	d000      	beq.n	8000854 <__aeabi_dadd+0x3e4>
 8000852:	e73e      	b.n	80006d2 <__aeabi_dadd+0x262>
 8000854:	2600      	movs	r6, #0
 8000856:	e754      	b.n	8000702 <__aeabi_dadd+0x292>
 8000858:	4649      	mov	r1, r9
 800085a:	1a89      	subs	r1, r1, r2
 800085c:	4688      	mov	r8, r1
 800085e:	45c1      	cmp	r9, r8
 8000860:	41bf      	sbcs	r7, r7
 8000862:	1af1      	subs	r1, r6, r3
 8000864:	427f      	negs	r7, r7
 8000866:	1bc9      	subs	r1, r1, r7
 8000868:	020f      	lsls	r7, r1, #8
 800086a:	d461      	bmi.n	8000930 <__aeabi_dadd+0x4c0>
 800086c:	4647      	mov	r7, r8
 800086e:	430f      	orrs	r7, r1
 8000870:	d100      	bne.n	8000874 <__aeabi_dadd+0x404>
 8000872:	e0bd      	b.n	80009f0 <__aeabi_dadd+0x580>
 8000874:	000e      	movs	r6, r1
 8000876:	4647      	mov	r7, r8
 8000878:	e651      	b.n	800051e <__aeabi_dadd+0xae>
 800087a:	4cb5      	ldr	r4, [pc, #724]	@ (8000b50 <__aeabi_dadd+0x6e0>)
 800087c:	45a0      	cmp	r8, r4
 800087e:	d100      	bne.n	8000882 <__aeabi_dadd+0x412>
 8000880:	e100      	b.n	8000a84 <__aeabi_dadd+0x614>
 8000882:	2701      	movs	r7, #1
 8000884:	2938      	cmp	r1, #56	@ 0x38
 8000886:	dd00      	ble.n	800088a <__aeabi_dadd+0x41a>
 8000888:	e6b8      	b.n	80005fc <__aeabi_dadd+0x18c>
 800088a:	2480      	movs	r4, #128	@ 0x80
 800088c:	0424      	lsls	r4, r4, #16
 800088e:	4326      	orrs	r6, r4
 8000890:	e6a3      	b.n	80005da <__aeabi_dadd+0x16a>
 8000892:	4eb0      	ldr	r6, [pc, #704]	@ (8000b54 <__aeabi_dadd+0x6e4>)
 8000894:	1ae4      	subs	r4, r4, r3
 8000896:	4016      	ands	r6, r2
 8000898:	077b      	lsls	r3, r7, #29
 800089a:	d000      	beq.n	800089e <__aeabi_dadd+0x42e>
 800089c:	e73f      	b.n	800071e <__aeabi_dadd+0x2ae>
 800089e:	e743      	b.n	8000728 <__aeabi_dadd+0x2b8>
 80008a0:	000f      	movs	r7, r1
 80008a2:	0018      	movs	r0, r3
 80008a4:	3f20      	subs	r7, #32
 80008a6:	40f8      	lsrs	r0, r7
 80008a8:	4684      	mov	ip, r0
 80008aa:	2920      	cmp	r1, #32
 80008ac:	d003      	beq.n	80008b6 <__aeabi_dadd+0x446>
 80008ae:	2740      	movs	r7, #64	@ 0x40
 80008b0:	1a79      	subs	r1, r7, r1
 80008b2:	408b      	lsls	r3, r1
 80008b4:	431a      	orrs	r2, r3
 80008b6:	1e53      	subs	r3, r2, #1
 80008b8:	419a      	sbcs	r2, r3
 80008ba:	4663      	mov	r3, ip
 80008bc:	0017      	movs	r7, r2
 80008be:	431f      	orrs	r7, r3
 80008c0:	e622      	b.n	8000508 <__aeabi_dadd+0x98>
 80008c2:	48a4      	ldr	r0, [pc, #656]	@ (8000b54 <__aeabi_dadd+0x6e4>)
 80008c4:	1ae1      	subs	r1, r4, r3
 80008c6:	4010      	ands	r0, r2
 80008c8:	0747      	lsls	r7, r0, #29
 80008ca:	08c0      	lsrs	r0, r0, #3
 80008cc:	e707      	b.n	80006de <__aeabi_dadd+0x26e>
 80008ce:	0034      	movs	r4, r6
 80008d0:	4648      	mov	r0, r9
 80008d2:	4304      	orrs	r4, r0
 80008d4:	d100      	bne.n	80008d8 <__aeabi_dadd+0x468>
 80008d6:	e0fa      	b.n	8000ace <__aeabi_dadd+0x65e>
 80008d8:	1e4c      	subs	r4, r1, #1
 80008da:	2901      	cmp	r1, #1
 80008dc:	d100      	bne.n	80008e0 <__aeabi_dadd+0x470>
 80008de:	e0d7      	b.n	8000a90 <__aeabi_dadd+0x620>
 80008e0:	4f9b      	ldr	r7, [pc, #620]	@ (8000b50 <__aeabi_dadd+0x6e0>)
 80008e2:	42b9      	cmp	r1, r7
 80008e4:	d100      	bne.n	80008e8 <__aeabi_dadd+0x478>
 80008e6:	e0e2      	b.n	8000aae <__aeabi_dadd+0x63e>
 80008e8:	2701      	movs	r7, #1
 80008ea:	2c38      	cmp	r4, #56	@ 0x38
 80008ec:	dd00      	ble.n	80008f0 <__aeabi_dadd+0x480>
 80008ee:	e74f      	b.n	8000790 <__aeabi_dadd+0x320>
 80008f0:	0021      	movs	r1, r4
 80008f2:	e73c      	b.n	800076e <__aeabi_dadd+0x2fe>
 80008f4:	4c96      	ldr	r4, [pc, #600]	@ (8000b50 <__aeabi_dadd+0x6e0>)
 80008f6:	42a1      	cmp	r1, r4
 80008f8:	d100      	bne.n	80008fc <__aeabi_dadd+0x48c>
 80008fa:	e0dd      	b.n	8000ab8 <__aeabi_dadd+0x648>
 80008fc:	444a      	add	r2, r9
 80008fe:	454a      	cmp	r2, r9
 8000900:	4180      	sbcs	r0, r0
 8000902:	18f3      	adds	r3, r6, r3
 8000904:	4240      	negs	r0, r0
 8000906:	1818      	adds	r0, r3, r0
 8000908:	07c7      	lsls	r7, r0, #31
 800090a:	0852      	lsrs	r2, r2, #1
 800090c:	4317      	orrs	r7, r2
 800090e:	0846      	lsrs	r6, r0, #1
 8000910:	0752      	lsls	r2, r2, #29
 8000912:	d005      	beq.n	8000920 <__aeabi_dadd+0x4b0>
 8000914:	220f      	movs	r2, #15
 8000916:	000c      	movs	r4, r1
 8000918:	403a      	ands	r2, r7
 800091a:	2a04      	cmp	r2, #4
 800091c:	d000      	beq.n	8000920 <__aeabi_dadd+0x4b0>
 800091e:	e62c      	b.n	800057a <__aeabi_dadd+0x10a>
 8000920:	0776      	lsls	r6, r6, #29
 8000922:	08ff      	lsrs	r7, r7, #3
 8000924:	4337      	orrs	r7, r6
 8000926:	0900      	lsrs	r0, r0, #4
 8000928:	e6d9      	b.n	80006de <__aeabi_dadd+0x26e>
 800092a:	2700      	movs	r7, #0
 800092c:	2600      	movs	r6, #0
 800092e:	e6e8      	b.n	8000702 <__aeabi_dadd+0x292>
 8000930:	4649      	mov	r1, r9
 8000932:	1a57      	subs	r7, r2, r1
 8000934:	42ba      	cmp	r2, r7
 8000936:	4192      	sbcs	r2, r2
 8000938:	1b9e      	subs	r6, r3, r6
 800093a:	4252      	negs	r2, r2
 800093c:	4665      	mov	r5, ip
 800093e:	1ab6      	subs	r6, r6, r2
 8000940:	e5ed      	b.n	800051e <__aeabi_dadd+0xae>
 8000942:	2900      	cmp	r1, #0
 8000944:	d000      	beq.n	8000948 <__aeabi_dadd+0x4d8>
 8000946:	e0c6      	b.n	8000ad6 <__aeabi_dadd+0x666>
 8000948:	2f00      	cmp	r7, #0
 800094a:	d167      	bne.n	8000a1c <__aeabi_dadd+0x5ac>
 800094c:	2680      	movs	r6, #128	@ 0x80
 800094e:	2500      	movs	r5, #0
 8000950:	4c7f      	ldr	r4, [pc, #508]	@ (8000b50 <__aeabi_dadd+0x6e0>)
 8000952:	0336      	lsls	r6, r6, #12
 8000954:	e6d5      	b.n	8000702 <__aeabi_dadd+0x292>
 8000956:	4665      	mov	r5, ip
 8000958:	000c      	movs	r4, r1
 800095a:	001e      	movs	r6, r3
 800095c:	08d0      	lsrs	r0, r2, #3
 800095e:	e6e4      	b.n	800072a <__aeabi_dadd+0x2ba>
 8000960:	444a      	add	r2, r9
 8000962:	454a      	cmp	r2, r9
 8000964:	4180      	sbcs	r0, r0
 8000966:	18f3      	adds	r3, r6, r3
 8000968:	4240      	negs	r0, r0
 800096a:	1818      	adds	r0, r3, r0
 800096c:	0011      	movs	r1, r2
 800096e:	0203      	lsls	r3, r0, #8
 8000970:	d400      	bmi.n	8000974 <__aeabi_dadd+0x504>
 8000972:	e096      	b.n	8000aa2 <__aeabi_dadd+0x632>
 8000974:	4b77      	ldr	r3, [pc, #476]	@ (8000b54 <__aeabi_dadd+0x6e4>)
 8000976:	0849      	lsrs	r1, r1, #1
 8000978:	4018      	ands	r0, r3
 800097a:	07c3      	lsls	r3, r0, #31
 800097c:	430b      	orrs	r3, r1
 800097e:	0844      	lsrs	r4, r0, #1
 8000980:	0749      	lsls	r1, r1, #29
 8000982:	d100      	bne.n	8000986 <__aeabi_dadd+0x516>
 8000984:	e129      	b.n	8000bda <__aeabi_dadd+0x76a>
 8000986:	220f      	movs	r2, #15
 8000988:	401a      	ands	r2, r3
 800098a:	2a04      	cmp	r2, #4
 800098c:	d100      	bne.n	8000990 <__aeabi_dadd+0x520>
 800098e:	e0ea      	b.n	8000b66 <__aeabi_dadd+0x6f6>
 8000990:	1d1f      	adds	r7, r3, #4
 8000992:	429f      	cmp	r7, r3
 8000994:	41b6      	sbcs	r6, r6
 8000996:	4276      	negs	r6, r6
 8000998:	1936      	adds	r6, r6, r4
 800099a:	2402      	movs	r4, #2
 800099c:	e6c4      	b.n	8000728 <__aeabi_dadd+0x2b8>
 800099e:	4649      	mov	r1, r9
 80009a0:	1a8f      	subs	r7, r1, r2
 80009a2:	45b9      	cmp	r9, r7
 80009a4:	4180      	sbcs	r0, r0
 80009a6:	1af6      	subs	r6, r6, r3
 80009a8:	4240      	negs	r0, r0
 80009aa:	1a36      	subs	r6, r6, r0
 80009ac:	0233      	lsls	r3, r6, #8
 80009ae:	d406      	bmi.n	80009be <__aeabi_dadd+0x54e>
 80009b0:	0773      	lsls	r3, r6, #29
 80009b2:	08ff      	lsrs	r7, r7, #3
 80009b4:	2101      	movs	r1, #1
 80009b6:	431f      	orrs	r7, r3
 80009b8:	08f0      	lsrs	r0, r6, #3
 80009ba:	e690      	b.n	80006de <__aeabi_dadd+0x26e>
 80009bc:	4665      	mov	r5, ip
 80009be:	2401      	movs	r4, #1
 80009c0:	e5ab      	b.n	800051a <__aeabi_dadd+0xaa>
 80009c2:	464b      	mov	r3, r9
 80009c4:	0777      	lsls	r7, r6, #29
 80009c6:	08d8      	lsrs	r0, r3, #3
 80009c8:	4307      	orrs	r7, r0
 80009ca:	08f0      	lsrs	r0, r6, #3
 80009cc:	e6b4      	b.n	8000738 <__aeabi_dadd+0x2c8>
 80009ce:	000f      	movs	r7, r1
 80009d0:	0018      	movs	r0, r3
 80009d2:	3f20      	subs	r7, #32
 80009d4:	40f8      	lsrs	r0, r7
 80009d6:	4684      	mov	ip, r0
 80009d8:	2920      	cmp	r1, #32
 80009da:	d003      	beq.n	80009e4 <__aeabi_dadd+0x574>
 80009dc:	2740      	movs	r7, #64	@ 0x40
 80009de:	1a79      	subs	r1, r7, r1
 80009e0:	408b      	lsls	r3, r1
 80009e2:	431a      	orrs	r2, r3
 80009e4:	1e53      	subs	r3, r2, #1
 80009e6:	419a      	sbcs	r2, r3
 80009e8:	4663      	mov	r3, ip
 80009ea:	0017      	movs	r7, r2
 80009ec:	431f      	orrs	r7, r3
 80009ee:	e635      	b.n	800065c <__aeabi_dadd+0x1ec>
 80009f0:	2500      	movs	r5, #0
 80009f2:	2400      	movs	r4, #0
 80009f4:	2600      	movs	r6, #0
 80009f6:	e684      	b.n	8000702 <__aeabi_dadd+0x292>
 80009f8:	000c      	movs	r4, r1
 80009fa:	0035      	movs	r5, r6
 80009fc:	3c20      	subs	r4, #32
 80009fe:	40e5      	lsrs	r5, r4
 8000a00:	2920      	cmp	r1, #32
 8000a02:	d005      	beq.n	8000a10 <__aeabi_dadd+0x5a0>
 8000a04:	2440      	movs	r4, #64	@ 0x40
 8000a06:	1a61      	subs	r1, r4, r1
 8000a08:	408e      	lsls	r6, r1
 8000a0a:	4649      	mov	r1, r9
 8000a0c:	4331      	orrs	r1, r6
 8000a0e:	4689      	mov	r9, r1
 8000a10:	4648      	mov	r0, r9
 8000a12:	1e41      	subs	r1, r0, #1
 8000a14:	4188      	sbcs	r0, r1
 8000a16:	0007      	movs	r7, r0
 8000a18:	432f      	orrs	r7, r5
 8000a1a:	e5ef      	b.n	80005fc <__aeabi_dadd+0x18c>
 8000a1c:	08d2      	lsrs	r2, r2, #3
 8000a1e:	075f      	lsls	r7, r3, #29
 8000a20:	4665      	mov	r5, ip
 8000a22:	4317      	orrs	r7, r2
 8000a24:	08d8      	lsrs	r0, r3, #3
 8000a26:	e687      	b.n	8000738 <__aeabi_dadd+0x2c8>
 8000a28:	1a17      	subs	r7, r2, r0
 8000a2a:	42ba      	cmp	r2, r7
 8000a2c:	4192      	sbcs	r2, r2
 8000a2e:	1b9e      	subs	r6, r3, r6
 8000a30:	4252      	negs	r2, r2
 8000a32:	1ab6      	subs	r6, r6, r2
 8000a34:	0233      	lsls	r3, r6, #8
 8000a36:	d4c1      	bmi.n	80009bc <__aeabi_dadd+0x54c>
 8000a38:	0773      	lsls	r3, r6, #29
 8000a3a:	08ff      	lsrs	r7, r7, #3
 8000a3c:	4665      	mov	r5, ip
 8000a3e:	2101      	movs	r1, #1
 8000a40:	431f      	orrs	r7, r3
 8000a42:	08f0      	lsrs	r0, r6, #3
 8000a44:	e64b      	b.n	80006de <__aeabi_dadd+0x26e>
 8000a46:	2f00      	cmp	r7, #0
 8000a48:	d07b      	beq.n	8000b42 <__aeabi_dadd+0x6d2>
 8000a4a:	4665      	mov	r5, ip
 8000a4c:	001e      	movs	r6, r3
 8000a4e:	4691      	mov	r9, r2
 8000a50:	e63f      	b.n	80006d2 <__aeabi_dadd+0x262>
 8000a52:	1a81      	subs	r1, r0, r2
 8000a54:	4688      	mov	r8, r1
 8000a56:	45c1      	cmp	r9, r8
 8000a58:	41a4      	sbcs	r4, r4
 8000a5a:	1af1      	subs	r1, r6, r3
 8000a5c:	4264      	negs	r4, r4
 8000a5e:	1b09      	subs	r1, r1, r4
 8000a60:	2480      	movs	r4, #128	@ 0x80
 8000a62:	0424      	lsls	r4, r4, #16
 8000a64:	4221      	tst	r1, r4
 8000a66:	d077      	beq.n	8000b58 <__aeabi_dadd+0x6e8>
 8000a68:	1a10      	subs	r0, r2, r0
 8000a6a:	4282      	cmp	r2, r0
 8000a6c:	4192      	sbcs	r2, r2
 8000a6e:	0007      	movs	r7, r0
 8000a70:	1b9e      	subs	r6, r3, r6
 8000a72:	4252      	negs	r2, r2
 8000a74:	1ab6      	subs	r6, r6, r2
 8000a76:	4337      	orrs	r7, r6
 8000a78:	d000      	beq.n	8000a7c <__aeabi_dadd+0x60c>
 8000a7a:	e0a0      	b.n	8000bbe <__aeabi_dadd+0x74e>
 8000a7c:	4665      	mov	r5, ip
 8000a7e:	2400      	movs	r4, #0
 8000a80:	2600      	movs	r6, #0
 8000a82:	e63e      	b.n	8000702 <__aeabi_dadd+0x292>
 8000a84:	075f      	lsls	r7, r3, #29
 8000a86:	08d2      	lsrs	r2, r2, #3
 8000a88:	4665      	mov	r5, ip
 8000a8a:	4317      	orrs	r7, r2
 8000a8c:	08d8      	lsrs	r0, r3, #3
 8000a8e:	e653      	b.n	8000738 <__aeabi_dadd+0x2c8>
 8000a90:	1881      	adds	r1, r0, r2
 8000a92:	4291      	cmp	r1, r2
 8000a94:	4192      	sbcs	r2, r2
 8000a96:	18f0      	adds	r0, r6, r3
 8000a98:	4252      	negs	r2, r2
 8000a9a:	1880      	adds	r0, r0, r2
 8000a9c:	0203      	lsls	r3, r0, #8
 8000a9e:	d500      	bpl.n	8000aa2 <__aeabi_dadd+0x632>
 8000aa0:	e768      	b.n	8000974 <__aeabi_dadd+0x504>
 8000aa2:	0747      	lsls	r7, r0, #29
 8000aa4:	08c9      	lsrs	r1, r1, #3
 8000aa6:	430f      	orrs	r7, r1
 8000aa8:	08c0      	lsrs	r0, r0, #3
 8000aaa:	2101      	movs	r1, #1
 8000aac:	e617      	b.n	80006de <__aeabi_dadd+0x26e>
 8000aae:	08d2      	lsrs	r2, r2, #3
 8000ab0:	075f      	lsls	r7, r3, #29
 8000ab2:	4317      	orrs	r7, r2
 8000ab4:	08d8      	lsrs	r0, r3, #3
 8000ab6:	e63f      	b.n	8000738 <__aeabi_dadd+0x2c8>
 8000ab8:	000c      	movs	r4, r1
 8000aba:	2600      	movs	r6, #0
 8000abc:	2700      	movs	r7, #0
 8000abe:	e620      	b.n	8000702 <__aeabi_dadd+0x292>
 8000ac0:	2900      	cmp	r1, #0
 8000ac2:	d156      	bne.n	8000b72 <__aeabi_dadd+0x702>
 8000ac4:	075f      	lsls	r7, r3, #29
 8000ac6:	08d2      	lsrs	r2, r2, #3
 8000ac8:	4317      	orrs	r7, r2
 8000aca:	08d8      	lsrs	r0, r3, #3
 8000acc:	e634      	b.n	8000738 <__aeabi_dadd+0x2c8>
 8000ace:	000c      	movs	r4, r1
 8000ad0:	001e      	movs	r6, r3
 8000ad2:	08d0      	lsrs	r0, r2, #3
 8000ad4:	e629      	b.n	800072a <__aeabi_dadd+0x2ba>
 8000ad6:	08c1      	lsrs	r1, r0, #3
 8000ad8:	0770      	lsls	r0, r6, #29
 8000ada:	4301      	orrs	r1, r0
 8000adc:	08f0      	lsrs	r0, r6, #3
 8000ade:	2f00      	cmp	r7, #0
 8000ae0:	d062      	beq.n	8000ba8 <__aeabi_dadd+0x738>
 8000ae2:	2480      	movs	r4, #128	@ 0x80
 8000ae4:	0324      	lsls	r4, r4, #12
 8000ae6:	4220      	tst	r0, r4
 8000ae8:	d007      	beq.n	8000afa <__aeabi_dadd+0x68a>
 8000aea:	08de      	lsrs	r6, r3, #3
 8000aec:	4226      	tst	r6, r4
 8000aee:	d104      	bne.n	8000afa <__aeabi_dadd+0x68a>
 8000af0:	4665      	mov	r5, ip
 8000af2:	0030      	movs	r0, r6
 8000af4:	08d1      	lsrs	r1, r2, #3
 8000af6:	075b      	lsls	r3, r3, #29
 8000af8:	4319      	orrs	r1, r3
 8000afa:	0f4f      	lsrs	r7, r1, #29
 8000afc:	00c9      	lsls	r1, r1, #3
 8000afe:	08c9      	lsrs	r1, r1, #3
 8000b00:	077f      	lsls	r7, r7, #29
 8000b02:	430f      	orrs	r7, r1
 8000b04:	e618      	b.n	8000738 <__aeabi_dadd+0x2c8>
 8000b06:	000c      	movs	r4, r1
 8000b08:	0030      	movs	r0, r6
 8000b0a:	3c20      	subs	r4, #32
 8000b0c:	40e0      	lsrs	r0, r4
 8000b0e:	4684      	mov	ip, r0
 8000b10:	2920      	cmp	r1, #32
 8000b12:	d005      	beq.n	8000b20 <__aeabi_dadd+0x6b0>
 8000b14:	2440      	movs	r4, #64	@ 0x40
 8000b16:	1a61      	subs	r1, r4, r1
 8000b18:	408e      	lsls	r6, r1
 8000b1a:	4649      	mov	r1, r9
 8000b1c:	4331      	orrs	r1, r6
 8000b1e:	4689      	mov	r9, r1
 8000b20:	4648      	mov	r0, r9
 8000b22:	1e41      	subs	r1, r0, #1
 8000b24:	4188      	sbcs	r0, r1
 8000b26:	4661      	mov	r1, ip
 8000b28:	0007      	movs	r7, r0
 8000b2a:	430f      	orrs	r7, r1
 8000b2c:	e630      	b.n	8000790 <__aeabi_dadd+0x320>
 8000b2e:	2120      	movs	r1, #32
 8000b30:	2700      	movs	r7, #0
 8000b32:	1a09      	subs	r1, r1, r0
 8000b34:	e50e      	b.n	8000554 <__aeabi_dadd+0xe4>
 8000b36:	001e      	movs	r6, r3
 8000b38:	2f00      	cmp	r7, #0
 8000b3a:	d000      	beq.n	8000b3e <__aeabi_dadd+0x6ce>
 8000b3c:	e522      	b.n	8000584 <__aeabi_dadd+0x114>
 8000b3e:	2400      	movs	r4, #0
 8000b40:	e758      	b.n	80009f4 <__aeabi_dadd+0x584>
 8000b42:	2500      	movs	r5, #0
 8000b44:	2400      	movs	r4, #0
 8000b46:	2600      	movs	r6, #0
 8000b48:	e5db      	b.n	8000702 <__aeabi_dadd+0x292>
 8000b4a:	46c0      	nop			@ (mov r8, r8)
 8000b4c:	000007fe 	.word	0x000007fe
 8000b50:	000007ff 	.word	0x000007ff
 8000b54:	ff7fffff 	.word	0xff7fffff
 8000b58:	4647      	mov	r7, r8
 8000b5a:	430f      	orrs	r7, r1
 8000b5c:	d100      	bne.n	8000b60 <__aeabi_dadd+0x6f0>
 8000b5e:	e747      	b.n	80009f0 <__aeabi_dadd+0x580>
 8000b60:	000e      	movs	r6, r1
 8000b62:	46c1      	mov	r9, r8
 8000b64:	e5b5      	b.n	80006d2 <__aeabi_dadd+0x262>
 8000b66:	08df      	lsrs	r7, r3, #3
 8000b68:	0764      	lsls	r4, r4, #29
 8000b6a:	2102      	movs	r1, #2
 8000b6c:	4327      	orrs	r7, r4
 8000b6e:	0900      	lsrs	r0, r0, #4
 8000b70:	e5b5      	b.n	80006de <__aeabi_dadd+0x26e>
 8000b72:	0019      	movs	r1, r3
 8000b74:	08c0      	lsrs	r0, r0, #3
 8000b76:	0777      	lsls	r7, r6, #29
 8000b78:	4307      	orrs	r7, r0
 8000b7a:	4311      	orrs	r1, r2
 8000b7c:	08f0      	lsrs	r0, r6, #3
 8000b7e:	2900      	cmp	r1, #0
 8000b80:	d100      	bne.n	8000b84 <__aeabi_dadd+0x714>
 8000b82:	e5d9      	b.n	8000738 <__aeabi_dadd+0x2c8>
 8000b84:	2180      	movs	r1, #128	@ 0x80
 8000b86:	0309      	lsls	r1, r1, #12
 8000b88:	4208      	tst	r0, r1
 8000b8a:	d007      	beq.n	8000b9c <__aeabi_dadd+0x72c>
 8000b8c:	08dc      	lsrs	r4, r3, #3
 8000b8e:	420c      	tst	r4, r1
 8000b90:	d104      	bne.n	8000b9c <__aeabi_dadd+0x72c>
 8000b92:	08d2      	lsrs	r2, r2, #3
 8000b94:	075b      	lsls	r3, r3, #29
 8000b96:	431a      	orrs	r2, r3
 8000b98:	0017      	movs	r7, r2
 8000b9a:	0020      	movs	r0, r4
 8000b9c:	0f7b      	lsrs	r3, r7, #29
 8000b9e:	00ff      	lsls	r7, r7, #3
 8000ba0:	08ff      	lsrs	r7, r7, #3
 8000ba2:	075b      	lsls	r3, r3, #29
 8000ba4:	431f      	orrs	r7, r3
 8000ba6:	e5c7      	b.n	8000738 <__aeabi_dadd+0x2c8>
 8000ba8:	000f      	movs	r7, r1
 8000baa:	e5c5      	b.n	8000738 <__aeabi_dadd+0x2c8>
 8000bac:	4b12      	ldr	r3, [pc, #72]	@ (8000bf8 <__aeabi_dadd+0x788>)
 8000bae:	08d2      	lsrs	r2, r2, #3
 8000bb0:	4033      	ands	r3, r6
 8000bb2:	075f      	lsls	r7, r3, #29
 8000bb4:	025b      	lsls	r3, r3, #9
 8000bb6:	2401      	movs	r4, #1
 8000bb8:	4317      	orrs	r7, r2
 8000bba:	0b1e      	lsrs	r6, r3, #12
 8000bbc:	e5a1      	b.n	8000702 <__aeabi_dadd+0x292>
 8000bbe:	4226      	tst	r6, r4
 8000bc0:	d012      	beq.n	8000be8 <__aeabi_dadd+0x778>
 8000bc2:	4b0d      	ldr	r3, [pc, #52]	@ (8000bf8 <__aeabi_dadd+0x788>)
 8000bc4:	4665      	mov	r5, ip
 8000bc6:	0002      	movs	r2, r0
 8000bc8:	2401      	movs	r4, #1
 8000bca:	401e      	ands	r6, r3
 8000bcc:	e4e6      	b.n	800059c <__aeabi_dadd+0x12c>
 8000bce:	0021      	movs	r1, r4
 8000bd0:	e585      	b.n	80006de <__aeabi_dadd+0x26e>
 8000bd2:	0017      	movs	r7, r2
 8000bd4:	e5a8      	b.n	8000728 <__aeabi_dadd+0x2b8>
 8000bd6:	003a      	movs	r2, r7
 8000bd8:	e4d4      	b.n	8000584 <__aeabi_dadd+0x114>
 8000bda:	08db      	lsrs	r3, r3, #3
 8000bdc:	0764      	lsls	r4, r4, #29
 8000bde:	431c      	orrs	r4, r3
 8000be0:	0027      	movs	r7, r4
 8000be2:	2102      	movs	r1, #2
 8000be4:	0900      	lsrs	r0, r0, #4
 8000be6:	e57a      	b.n	80006de <__aeabi_dadd+0x26e>
 8000be8:	08c0      	lsrs	r0, r0, #3
 8000bea:	0777      	lsls	r7, r6, #29
 8000bec:	4307      	orrs	r7, r0
 8000bee:	4665      	mov	r5, ip
 8000bf0:	2100      	movs	r1, #0
 8000bf2:	08f0      	lsrs	r0, r6, #3
 8000bf4:	e573      	b.n	80006de <__aeabi_dadd+0x26e>
 8000bf6:	46c0      	nop			@ (mov r8, r8)
 8000bf8:	ff7fffff 	.word	0xff7fffff

08000bfc <__eqdf2>:
 8000bfc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000bfe:	4657      	mov	r7, sl
 8000c00:	46de      	mov	lr, fp
 8000c02:	464e      	mov	r6, r9
 8000c04:	4645      	mov	r5, r8
 8000c06:	b5e0      	push	{r5, r6, r7, lr}
 8000c08:	000d      	movs	r5, r1
 8000c0a:	0004      	movs	r4, r0
 8000c0c:	0fe8      	lsrs	r0, r5, #31
 8000c0e:	4683      	mov	fp, r0
 8000c10:	0309      	lsls	r1, r1, #12
 8000c12:	0fd8      	lsrs	r0, r3, #31
 8000c14:	0b09      	lsrs	r1, r1, #12
 8000c16:	4682      	mov	sl, r0
 8000c18:	4819      	ldr	r0, [pc, #100]	@ (8000c80 <__eqdf2+0x84>)
 8000c1a:	468c      	mov	ip, r1
 8000c1c:	031f      	lsls	r7, r3, #12
 8000c1e:	0069      	lsls	r1, r5, #1
 8000c20:	005e      	lsls	r6, r3, #1
 8000c22:	0d49      	lsrs	r1, r1, #21
 8000c24:	0b3f      	lsrs	r7, r7, #12
 8000c26:	0d76      	lsrs	r6, r6, #21
 8000c28:	4281      	cmp	r1, r0
 8000c2a:	d018      	beq.n	8000c5e <__eqdf2+0x62>
 8000c2c:	4286      	cmp	r6, r0
 8000c2e:	d00f      	beq.n	8000c50 <__eqdf2+0x54>
 8000c30:	2001      	movs	r0, #1
 8000c32:	42b1      	cmp	r1, r6
 8000c34:	d10d      	bne.n	8000c52 <__eqdf2+0x56>
 8000c36:	45bc      	cmp	ip, r7
 8000c38:	d10b      	bne.n	8000c52 <__eqdf2+0x56>
 8000c3a:	4294      	cmp	r4, r2
 8000c3c:	d109      	bne.n	8000c52 <__eqdf2+0x56>
 8000c3e:	45d3      	cmp	fp, sl
 8000c40:	d01c      	beq.n	8000c7c <__eqdf2+0x80>
 8000c42:	2900      	cmp	r1, #0
 8000c44:	d105      	bne.n	8000c52 <__eqdf2+0x56>
 8000c46:	4660      	mov	r0, ip
 8000c48:	4320      	orrs	r0, r4
 8000c4a:	1e43      	subs	r3, r0, #1
 8000c4c:	4198      	sbcs	r0, r3
 8000c4e:	e000      	b.n	8000c52 <__eqdf2+0x56>
 8000c50:	2001      	movs	r0, #1
 8000c52:	bcf0      	pop	{r4, r5, r6, r7}
 8000c54:	46bb      	mov	fp, r7
 8000c56:	46b2      	mov	sl, r6
 8000c58:	46a9      	mov	r9, r5
 8000c5a:	46a0      	mov	r8, r4
 8000c5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000c5e:	2001      	movs	r0, #1
 8000c60:	428e      	cmp	r6, r1
 8000c62:	d1f6      	bne.n	8000c52 <__eqdf2+0x56>
 8000c64:	4661      	mov	r1, ip
 8000c66:	4339      	orrs	r1, r7
 8000c68:	000f      	movs	r7, r1
 8000c6a:	4317      	orrs	r7, r2
 8000c6c:	4327      	orrs	r7, r4
 8000c6e:	d1f0      	bne.n	8000c52 <__eqdf2+0x56>
 8000c70:	465b      	mov	r3, fp
 8000c72:	4652      	mov	r2, sl
 8000c74:	1a98      	subs	r0, r3, r2
 8000c76:	1e43      	subs	r3, r0, #1
 8000c78:	4198      	sbcs	r0, r3
 8000c7a:	e7ea      	b.n	8000c52 <__eqdf2+0x56>
 8000c7c:	2000      	movs	r0, #0
 8000c7e:	e7e8      	b.n	8000c52 <__eqdf2+0x56>
 8000c80:	000007ff 	.word	0x000007ff

08000c84 <__gedf2>:
 8000c84:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000c86:	4657      	mov	r7, sl
 8000c88:	464e      	mov	r6, r9
 8000c8a:	4645      	mov	r5, r8
 8000c8c:	46de      	mov	lr, fp
 8000c8e:	b5e0      	push	{r5, r6, r7, lr}
 8000c90:	000d      	movs	r5, r1
 8000c92:	030e      	lsls	r6, r1, #12
 8000c94:	0049      	lsls	r1, r1, #1
 8000c96:	0d49      	lsrs	r1, r1, #21
 8000c98:	468a      	mov	sl, r1
 8000c9a:	0fdf      	lsrs	r7, r3, #31
 8000c9c:	0fe9      	lsrs	r1, r5, #31
 8000c9e:	46bc      	mov	ip, r7
 8000ca0:	b083      	sub	sp, #12
 8000ca2:	4f2f      	ldr	r7, [pc, #188]	@ (8000d60 <__gedf2+0xdc>)
 8000ca4:	0004      	movs	r4, r0
 8000ca6:	4680      	mov	r8, r0
 8000ca8:	9101      	str	r1, [sp, #4]
 8000caa:	0058      	lsls	r0, r3, #1
 8000cac:	0319      	lsls	r1, r3, #12
 8000cae:	4691      	mov	r9, r2
 8000cb0:	0b36      	lsrs	r6, r6, #12
 8000cb2:	0b09      	lsrs	r1, r1, #12
 8000cb4:	0d40      	lsrs	r0, r0, #21
 8000cb6:	45ba      	cmp	sl, r7
 8000cb8:	d01d      	beq.n	8000cf6 <__gedf2+0x72>
 8000cba:	42b8      	cmp	r0, r7
 8000cbc:	d00d      	beq.n	8000cda <__gedf2+0x56>
 8000cbe:	4657      	mov	r7, sl
 8000cc0:	2f00      	cmp	r7, #0
 8000cc2:	d12a      	bne.n	8000d1a <__gedf2+0x96>
 8000cc4:	4334      	orrs	r4, r6
 8000cc6:	2800      	cmp	r0, #0
 8000cc8:	d124      	bne.n	8000d14 <__gedf2+0x90>
 8000cca:	430a      	orrs	r2, r1
 8000ccc:	d036      	beq.n	8000d3c <__gedf2+0xb8>
 8000cce:	2c00      	cmp	r4, #0
 8000cd0:	d141      	bne.n	8000d56 <__gedf2+0xd2>
 8000cd2:	4663      	mov	r3, ip
 8000cd4:	0058      	lsls	r0, r3, #1
 8000cd6:	3801      	subs	r0, #1
 8000cd8:	e015      	b.n	8000d06 <__gedf2+0x82>
 8000cda:	4311      	orrs	r1, r2
 8000cdc:	d138      	bne.n	8000d50 <__gedf2+0xcc>
 8000cde:	4653      	mov	r3, sl
 8000ce0:	2b00      	cmp	r3, #0
 8000ce2:	d101      	bne.n	8000ce8 <__gedf2+0x64>
 8000ce4:	4326      	orrs	r6, r4
 8000ce6:	d0f4      	beq.n	8000cd2 <__gedf2+0x4e>
 8000ce8:	9b01      	ldr	r3, [sp, #4]
 8000cea:	4563      	cmp	r3, ip
 8000cec:	d107      	bne.n	8000cfe <__gedf2+0x7a>
 8000cee:	9b01      	ldr	r3, [sp, #4]
 8000cf0:	0058      	lsls	r0, r3, #1
 8000cf2:	3801      	subs	r0, #1
 8000cf4:	e007      	b.n	8000d06 <__gedf2+0x82>
 8000cf6:	4326      	orrs	r6, r4
 8000cf8:	d12a      	bne.n	8000d50 <__gedf2+0xcc>
 8000cfa:	4550      	cmp	r0, sl
 8000cfc:	d021      	beq.n	8000d42 <__gedf2+0xbe>
 8000cfe:	2001      	movs	r0, #1
 8000d00:	9b01      	ldr	r3, [sp, #4]
 8000d02:	425f      	negs	r7, r3
 8000d04:	4338      	orrs	r0, r7
 8000d06:	b003      	add	sp, #12
 8000d08:	bcf0      	pop	{r4, r5, r6, r7}
 8000d0a:	46bb      	mov	fp, r7
 8000d0c:	46b2      	mov	sl, r6
 8000d0e:	46a9      	mov	r9, r5
 8000d10:	46a0      	mov	r8, r4
 8000d12:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000d14:	2c00      	cmp	r4, #0
 8000d16:	d0dc      	beq.n	8000cd2 <__gedf2+0x4e>
 8000d18:	e7e6      	b.n	8000ce8 <__gedf2+0x64>
 8000d1a:	2800      	cmp	r0, #0
 8000d1c:	d0ef      	beq.n	8000cfe <__gedf2+0x7a>
 8000d1e:	9b01      	ldr	r3, [sp, #4]
 8000d20:	4563      	cmp	r3, ip
 8000d22:	d1ec      	bne.n	8000cfe <__gedf2+0x7a>
 8000d24:	4582      	cmp	sl, r0
 8000d26:	dcea      	bgt.n	8000cfe <__gedf2+0x7a>
 8000d28:	dbe1      	blt.n	8000cee <__gedf2+0x6a>
 8000d2a:	428e      	cmp	r6, r1
 8000d2c:	d8e7      	bhi.n	8000cfe <__gedf2+0x7a>
 8000d2e:	d1de      	bne.n	8000cee <__gedf2+0x6a>
 8000d30:	45c8      	cmp	r8, r9
 8000d32:	d8e4      	bhi.n	8000cfe <__gedf2+0x7a>
 8000d34:	2000      	movs	r0, #0
 8000d36:	45c8      	cmp	r8, r9
 8000d38:	d2e5      	bcs.n	8000d06 <__gedf2+0x82>
 8000d3a:	e7d8      	b.n	8000cee <__gedf2+0x6a>
 8000d3c:	2c00      	cmp	r4, #0
 8000d3e:	d0e2      	beq.n	8000d06 <__gedf2+0x82>
 8000d40:	e7dd      	b.n	8000cfe <__gedf2+0x7a>
 8000d42:	4311      	orrs	r1, r2
 8000d44:	d104      	bne.n	8000d50 <__gedf2+0xcc>
 8000d46:	9b01      	ldr	r3, [sp, #4]
 8000d48:	4563      	cmp	r3, ip
 8000d4a:	d1d8      	bne.n	8000cfe <__gedf2+0x7a>
 8000d4c:	2000      	movs	r0, #0
 8000d4e:	e7da      	b.n	8000d06 <__gedf2+0x82>
 8000d50:	2002      	movs	r0, #2
 8000d52:	4240      	negs	r0, r0
 8000d54:	e7d7      	b.n	8000d06 <__gedf2+0x82>
 8000d56:	9b01      	ldr	r3, [sp, #4]
 8000d58:	4563      	cmp	r3, ip
 8000d5a:	d0e6      	beq.n	8000d2a <__gedf2+0xa6>
 8000d5c:	e7cf      	b.n	8000cfe <__gedf2+0x7a>
 8000d5e:	46c0      	nop			@ (mov r8, r8)
 8000d60:	000007ff 	.word	0x000007ff

08000d64 <__ledf2>:
 8000d64:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000d66:	4657      	mov	r7, sl
 8000d68:	464e      	mov	r6, r9
 8000d6a:	4645      	mov	r5, r8
 8000d6c:	46de      	mov	lr, fp
 8000d6e:	b5e0      	push	{r5, r6, r7, lr}
 8000d70:	000d      	movs	r5, r1
 8000d72:	030e      	lsls	r6, r1, #12
 8000d74:	0049      	lsls	r1, r1, #1
 8000d76:	0d49      	lsrs	r1, r1, #21
 8000d78:	468a      	mov	sl, r1
 8000d7a:	0fdf      	lsrs	r7, r3, #31
 8000d7c:	0fe9      	lsrs	r1, r5, #31
 8000d7e:	46bc      	mov	ip, r7
 8000d80:	b083      	sub	sp, #12
 8000d82:	4f2e      	ldr	r7, [pc, #184]	@ (8000e3c <__ledf2+0xd8>)
 8000d84:	0004      	movs	r4, r0
 8000d86:	4680      	mov	r8, r0
 8000d88:	9101      	str	r1, [sp, #4]
 8000d8a:	0058      	lsls	r0, r3, #1
 8000d8c:	0319      	lsls	r1, r3, #12
 8000d8e:	4691      	mov	r9, r2
 8000d90:	0b36      	lsrs	r6, r6, #12
 8000d92:	0b09      	lsrs	r1, r1, #12
 8000d94:	0d40      	lsrs	r0, r0, #21
 8000d96:	45ba      	cmp	sl, r7
 8000d98:	d01e      	beq.n	8000dd8 <__ledf2+0x74>
 8000d9a:	42b8      	cmp	r0, r7
 8000d9c:	d00d      	beq.n	8000dba <__ledf2+0x56>
 8000d9e:	4657      	mov	r7, sl
 8000da0:	2f00      	cmp	r7, #0
 8000da2:	d127      	bne.n	8000df4 <__ledf2+0x90>
 8000da4:	4334      	orrs	r4, r6
 8000da6:	2800      	cmp	r0, #0
 8000da8:	d133      	bne.n	8000e12 <__ledf2+0xae>
 8000daa:	430a      	orrs	r2, r1
 8000dac:	d034      	beq.n	8000e18 <__ledf2+0xb4>
 8000dae:	2c00      	cmp	r4, #0
 8000db0:	d140      	bne.n	8000e34 <__ledf2+0xd0>
 8000db2:	4663      	mov	r3, ip
 8000db4:	0058      	lsls	r0, r3, #1
 8000db6:	3801      	subs	r0, #1
 8000db8:	e015      	b.n	8000de6 <__ledf2+0x82>
 8000dba:	4311      	orrs	r1, r2
 8000dbc:	d112      	bne.n	8000de4 <__ledf2+0x80>
 8000dbe:	4653      	mov	r3, sl
 8000dc0:	2b00      	cmp	r3, #0
 8000dc2:	d101      	bne.n	8000dc8 <__ledf2+0x64>
 8000dc4:	4326      	orrs	r6, r4
 8000dc6:	d0f4      	beq.n	8000db2 <__ledf2+0x4e>
 8000dc8:	9b01      	ldr	r3, [sp, #4]
 8000dca:	4563      	cmp	r3, ip
 8000dcc:	d01d      	beq.n	8000e0a <__ledf2+0xa6>
 8000dce:	2001      	movs	r0, #1
 8000dd0:	9b01      	ldr	r3, [sp, #4]
 8000dd2:	425f      	negs	r7, r3
 8000dd4:	4338      	orrs	r0, r7
 8000dd6:	e006      	b.n	8000de6 <__ledf2+0x82>
 8000dd8:	4326      	orrs	r6, r4
 8000dda:	d103      	bne.n	8000de4 <__ledf2+0x80>
 8000ddc:	4550      	cmp	r0, sl
 8000dde:	d1f6      	bne.n	8000dce <__ledf2+0x6a>
 8000de0:	4311      	orrs	r1, r2
 8000de2:	d01c      	beq.n	8000e1e <__ledf2+0xba>
 8000de4:	2002      	movs	r0, #2
 8000de6:	b003      	add	sp, #12
 8000de8:	bcf0      	pop	{r4, r5, r6, r7}
 8000dea:	46bb      	mov	fp, r7
 8000dec:	46b2      	mov	sl, r6
 8000dee:	46a9      	mov	r9, r5
 8000df0:	46a0      	mov	r8, r4
 8000df2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000df4:	2800      	cmp	r0, #0
 8000df6:	d0ea      	beq.n	8000dce <__ledf2+0x6a>
 8000df8:	9b01      	ldr	r3, [sp, #4]
 8000dfa:	4563      	cmp	r3, ip
 8000dfc:	d1e7      	bne.n	8000dce <__ledf2+0x6a>
 8000dfe:	4582      	cmp	sl, r0
 8000e00:	dce5      	bgt.n	8000dce <__ledf2+0x6a>
 8000e02:	db02      	blt.n	8000e0a <__ledf2+0xa6>
 8000e04:	428e      	cmp	r6, r1
 8000e06:	d8e2      	bhi.n	8000dce <__ledf2+0x6a>
 8000e08:	d00e      	beq.n	8000e28 <__ledf2+0xc4>
 8000e0a:	9b01      	ldr	r3, [sp, #4]
 8000e0c:	0058      	lsls	r0, r3, #1
 8000e0e:	3801      	subs	r0, #1
 8000e10:	e7e9      	b.n	8000de6 <__ledf2+0x82>
 8000e12:	2c00      	cmp	r4, #0
 8000e14:	d0cd      	beq.n	8000db2 <__ledf2+0x4e>
 8000e16:	e7d7      	b.n	8000dc8 <__ledf2+0x64>
 8000e18:	2c00      	cmp	r4, #0
 8000e1a:	d0e4      	beq.n	8000de6 <__ledf2+0x82>
 8000e1c:	e7d7      	b.n	8000dce <__ledf2+0x6a>
 8000e1e:	9b01      	ldr	r3, [sp, #4]
 8000e20:	2000      	movs	r0, #0
 8000e22:	4563      	cmp	r3, ip
 8000e24:	d0df      	beq.n	8000de6 <__ledf2+0x82>
 8000e26:	e7d2      	b.n	8000dce <__ledf2+0x6a>
 8000e28:	45c8      	cmp	r8, r9
 8000e2a:	d8d0      	bhi.n	8000dce <__ledf2+0x6a>
 8000e2c:	2000      	movs	r0, #0
 8000e2e:	45c8      	cmp	r8, r9
 8000e30:	d2d9      	bcs.n	8000de6 <__ledf2+0x82>
 8000e32:	e7ea      	b.n	8000e0a <__ledf2+0xa6>
 8000e34:	9b01      	ldr	r3, [sp, #4]
 8000e36:	4563      	cmp	r3, ip
 8000e38:	d0e4      	beq.n	8000e04 <__ledf2+0xa0>
 8000e3a:	e7c8      	b.n	8000dce <__ledf2+0x6a>
 8000e3c:	000007ff 	.word	0x000007ff

08000e40 <__aeabi_dmul>:
 8000e40:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000e42:	4657      	mov	r7, sl
 8000e44:	464e      	mov	r6, r9
 8000e46:	46de      	mov	lr, fp
 8000e48:	4645      	mov	r5, r8
 8000e4a:	b5e0      	push	{r5, r6, r7, lr}
 8000e4c:	001f      	movs	r7, r3
 8000e4e:	030b      	lsls	r3, r1, #12
 8000e50:	0b1b      	lsrs	r3, r3, #12
 8000e52:	0016      	movs	r6, r2
 8000e54:	469a      	mov	sl, r3
 8000e56:	0fca      	lsrs	r2, r1, #31
 8000e58:	004b      	lsls	r3, r1, #1
 8000e5a:	0004      	movs	r4, r0
 8000e5c:	4691      	mov	r9, r2
 8000e5e:	b085      	sub	sp, #20
 8000e60:	0d5b      	lsrs	r3, r3, #21
 8000e62:	d100      	bne.n	8000e66 <__aeabi_dmul+0x26>
 8000e64:	e1cf      	b.n	8001206 <__aeabi_dmul+0x3c6>
 8000e66:	4acd      	ldr	r2, [pc, #820]	@ (800119c <__aeabi_dmul+0x35c>)
 8000e68:	4293      	cmp	r3, r2
 8000e6a:	d055      	beq.n	8000f18 <__aeabi_dmul+0xd8>
 8000e6c:	4651      	mov	r1, sl
 8000e6e:	0f42      	lsrs	r2, r0, #29
 8000e70:	00c9      	lsls	r1, r1, #3
 8000e72:	430a      	orrs	r2, r1
 8000e74:	2180      	movs	r1, #128	@ 0x80
 8000e76:	0409      	lsls	r1, r1, #16
 8000e78:	4311      	orrs	r1, r2
 8000e7a:	00c2      	lsls	r2, r0, #3
 8000e7c:	4690      	mov	r8, r2
 8000e7e:	4ac8      	ldr	r2, [pc, #800]	@ (80011a0 <__aeabi_dmul+0x360>)
 8000e80:	468a      	mov	sl, r1
 8000e82:	4693      	mov	fp, r2
 8000e84:	449b      	add	fp, r3
 8000e86:	2300      	movs	r3, #0
 8000e88:	2500      	movs	r5, #0
 8000e8a:	9302      	str	r3, [sp, #8]
 8000e8c:	033c      	lsls	r4, r7, #12
 8000e8e:	007b      	lsls	r3, r7, #1
 8000e90:	0ffa      	lsrs	r2, r7, #31
 8000e92:	9601      	str	r6, [sp, #4]
 8000e94:	0b24      	lsrs	r4, r4, #12
 8000e96:	0d5b      	lsrs	r3, r3, #21
 8000e98:	9200      	str	r2, [sp, #0]
 8000e9a:	d100      	bne.n	8000e9e <__aeabi_dmul+0x5e>
 8000e9c:	e188      	b.n	80011b0 <__aeabi_dmul+0x370>
 8000e9e:	4abf      	ldr	r2, [pc, #764]	@ (800119c <__aeabi_dmul+0x35c>)
 8000ea0:	4293      	cmp	r3, r2
 8000ea2:	d100      	bne.n	8000ea6 <__aeabi_dmul+0x66>
 8000ea4:	e092      	b.n	8000fcc <__aeabi_dmul+0x18c>
 8000ea6:	4abe      	ldr	r2, [pc, #760]	@ (80011a0 <__aeabi_dmul+0x360>)
 8000ea8:	4694      	mov	ip, r2
 8000eaa:	4463      	add	r3, ip
 8000eac:	449b      	add	fp, r3
 8000eae:	2d0a      	cmp	r5, #10
 8000eb0:	dc42      	bgt.n	8000f38 <__aeabi_dmul+0xf8>
 8000eb2:	00e4      	lsls	r4, r4, #3
 8000eb4:	0f73      	lsrs	r3, r6, #29
 8000eb6:	4323      	orrs	r3, r4
 8000eb8:	2480      	movs	r4, #128	@ 0x80
 8000eba:	4649      	mov	r1, r9
 8000ebc:	0424      	lsls	r4, r4, #16
 8000ebe:	431c      	orrs	r4, r3
 8000ec0:	00f3      	lsls	r3, r6, #3
 8000ec2:	9301      	str	r3, [sp, #4]
 8000ec4:	9b00      	ldr	r3, [sp, #0]
 8000ec6:	2000      	movs	r0, #0
 8000ec8:	4059      	eors	r1, r3
 8000eca:	b2cb      	uxtb	r3, r1
 8000ecc:	9303      	str	r3, [sp, #12]
 8000ece:	2d02      	cmp	r5, #2
 8000ed0:	dc00      	bgt.n	8000ed4 <__aeabi_dmul+0x94>
 8000ed2:	e094      	b.n	8000ffe <__aeabi_dmul+0x1be>
 8000ed4:	2301      	movs	r3, #1
 8000ed6:	40ab      	lsls	r3, r5
 8000ed8:	001d      	movs	r5, r3
 8000eda:	23a6      	movs	r3, #166	@ 0xa6
 8000edc:	002a      	movs	r2, r5
 8000ede:	00db      	lsls	r3, r3, #3
 8000ee0:	401a      	ands	r2, r3
 8000ee2:	421d      	tst	r5, r3
 8000ee4:	d000      	beq.n	8000ee8 <__aeabi_dmul+0xa8>
 8000ee6:	e229      	b.n	800133c <__aeabi_dmul+0x4fc>
 8000ee8:	2390      	movs	r3, #144	@ 0x90
 8000eea:	009b      	lsls	r3, r3, #2
 8000eec:	421d      	tst	r5, r3
 8000eee:	d100      	bne.n	8000ef2 <__aeabi_dmul+0xb2>
 8000ef0:	e24d      	b.n	800138e <__aeabi_dmul+0x54e>
 8000ef2:	2300      	movs	r3, #0
 8000ef4:	2480      	movs	r4, #128	@ 0x80
 8000ef6:	4699      	mov	r9, r3
 8000ef8:	0324      	lsls	r4, r4, #12
 8000efa:	4ba8      	ldr	r3, [pc, #672]	@ (800119c <__aeabi_dmul+0x35c>)
 8000efc:	0010      	movs	r0, r2
 8000efe:	464a      	mov	r2, r9
 8000f00:	051b      	lsls	r3, r3, #20
 8000f02:	4323      	orrs	r3, r4
 8000f04:	07d2      	lsls	r2, r2, #31
 8000f06:	4313      	orrs	r3, r2
 8000f08:	0019      	movs	r1, r3
 8000f0a:	b005      	add	sp, #20
 8000f0c:	bcf0      	pop	{r4, r5, r6, r7}
 8000f0e:	46bb      	mov	fp, r7
 8000f10:	46b2      	mov	sl, r6
 8000f12:	46a9      	mov	r9, r5
 8000f14:	46a0      	mov	r8, r4
 8000f16:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000f18:	4652      	mov	r2, sl
 8000f1a:	4302      	orrs	r2, r0
 8000f1c:	4690      	mov	r8, r2
 8000f1e:	d000      	beq.n	8000f22 <__aeabi_dmul+0xe2>
 8000f20:	e1ac      	b.n	800127c <__aeabi_dmul+0x43c>
 8000f22:	469b      	mov	fp, r3
 8000f24:	2302      	movs	r3, #2
 8000f26:	4692      	mov	sl, r2
 8000f28:	2508      	movs	r5, #8
 8000f2a:	9302      	str	r3, [sp, #8]
 8000f2c:	e7ae      	b.n	8000e8c <__aeabi_dmul+0x4c>
 8000f2e:	9b00      	ldr	r3, [sp, #0]
 8000f30:	46a2      	mov	sl, r4
 8000f32:	4699      	mov	r9, r3
 8000f34:	9b01      	ldr	r3, [sp, #4]
 8000f36:	4698      	mov	r8, r3
 8000f38:	9b02      	ldr	r3, [sp, #8]
 8000f3a:	2b02      	cmp	r3, #2
 8000f3c:	d100      	bne.n	8000f40 <__aeabi_dmul+0x100>
 8000f3e:	e1ca      	b.n	80012d6 <__aeabi_dmul+0x496>
 8000f40:	2b03      	cmp	r3, #3
 8000f42:	d100      	bne.n	8000f46 <__aeabi_dmul+0x106>
 8000f44:	e192      	b.n	800126c <__aeabi_dmul+0x42c>
 8000f46:	2b01      	cmp	r3, #1
 8000f48:	d110      	bne.n	8000f6c <__aeabi_dmul+0x12c>
 8000f4a:	2300      	movs	r3, #0
 8000f4c:	2400      	movs	r4, #0
 8000f4e:	2200      	movs	r2, #0
 8000f50:	e7d4      	b.n	8000efc <__aeabi_dmul+0xbc>
 8000f52:	2201      	movs	r2, #1
 8000f54:	087b      	lsrs	r3, r7, #1
 8000f56:	403a      	ands	r2, r7
 8000f58:	4313      	orrs	r3, r2
 8000f5a:	4652      	mov	r2, sl
 8000f5c:	07d2      	lsls	r2, r2, #31
 8000f5e:	4313      	orrs	r3, r2
 8000f60:	4698      	mov	r8, r3
 8000f62:	4653      	mov	r3, sl
 8000f64:	085b      	lsrs	r3, r3, #1
 8000f66:	469a      	mov	sl, r3
 8000f68:	9b03      	ldr	r3, [sp, #12]
 8000f6a:	4699      	mov	r9, r3
 8000f6c:	465b      	mov	r3, fp
 8000f6e:	1c58      	adds	r0, r3, #1
 8000f70:	2380      	movs	r3, #128	@ 0x80
 8000f72:	00db      	lsls	r3, r3, #3
 8000f74:	445b      	add	r3, fp
 8000f76:	2b00      	cmp	r3, #0
 8000f78:	dc00      	bgt.n	8000f7c <__aeabi_dmul+0x13c>
 8000f7a:	e1b1      	b.n	80012e0 <__aeabi_dmul+0x4a0>
 8000f7c:	4642      	mov	r2, r8
 8000f7e:	0752      	lsls	r2, r2, #29
 8000f80:	d00b      	beq.n	8000f9a <__aeabi_dmul+0x15a>
 8000f82:	220f      	movs	r2, #15
 8000f84:	4641      	mov	r1, r8
 8000f86:	400a      	ands	r2, r1
 8000f88:	2a04      	cmp	r2, #4
 8000f8a:	d006      	beq.n	8000f9a <__aeabi_dmul+0x15a>
 8000f8c:	4642      	mov	r2, r8
 8000f8e:	1d11      	adds	r1, r2, #4
 8000f90:	4541      	cmp	r1, r8
 8000f92:	4192      	sbcs	r2, r2
 8000f94:	4688      	mov	r8, r1
 8000f96:	4252      	negs	r2, r2
 8000f98:	4492      	add	sl, r2
 8000f9a:	4652      	mov	r2, sl
 8000f9c:	01d2      	lsls	r2, r2, #7
 8000f9e:	d506      	bpl.n	8000fae <__aeabi_dmul+0x16e>
 8000fa0:	4652      	mov	r2, sl
 8000fa2:	4b80      	ldr	r3, [pc, #512]	@ (80011a4 <__aeabi_dmul+0x364>)
 8000fa4:	401a      	ands	r2, r3
 8000fa6:	2380      	movs	r3, #128	@ 0x80
 8000fa8:	4692      	mov	sl, r2
 8000faa:	00db      	lsls	r3, r3, #3
 8000fac:	18c3      	adds	r3, r0, r3
 8000fae:	4a7e      	ldr	r2, [pc, #504]	@ (80011a8 <__aeabi_dmul+0x368>)
 8000fb0:	4293      	cmp	r3, r2
 8000fb2:	dd00      	ble.n	8000fb6 <__aeabi_dmul+0x176>
 8000fb4:	e18f      	b.n	80012d6 <__aeabi_dmul+0x496>
 8000fb6:	4642      	mov	r2, r8
 8000fb8:	08d1      	lsrs	r1, r2, #3
 8000fba:	4652      	mov	r2, sl
 8000fbc:	0752      	lsls	r2, r2, #29
 8000fbe:	430a      	orrs	r2, r1
 8000fc0:	4651      	mov	r1, sl
 8000fc2:	055b      	lsls	r3, r3, #21
 8000fc4:	024c      	lsls	r4, r1, #9
 8000fc6:	0b24      	lsrs	r4, r4, #12
 8000fc8:	0d5b      	lsrs	r3, r3, #21
 8000fca:	e797      	b.n	8000efc <__aeabi_dmul+0xbc>
 8000fcc:	4b73      	ldr	r3, [pc, #460]	@ (800119c <__aeabi_dmul+0x35c>)
 8000fce:	4326      	orrs	r6, r4
 8000fd0:	469c      	mov	ip, r3
 8000fd2:	44e3      	add	fp, ip
 8000fd4:	2e00      	cmp	r6, #0
 8000fd6:	d100      	bne.n	8000fda <__aeabi_dmul+0x19a>
 8000fd8:	e16f      	b.n	80012ba <__aeabi_dmul+0x47a>
 8000fda:	2303      	movs	r3, #3
 8000fdc:	4649      	mov	r1, r9
 8000fde:	431d      	orrs	r5, r3
 8000fe0:	9b00      	ldr	r3, [sp, #0]
 8000fe2:	4059      	eors	r1, r3
 8000fe4:	b2cb      	uxtb	r3, r1
 8000fe6:	9303      	str	r3, [sp, #12]
 8000fe8:	2d0a      	cmp	r5, #10
 8000fea:	dd00      	ble.n	8000fee <__aeabi_dmul+0x1ae>
 8000fec:	e133      	b.n	8001256 <__aeabi_dmul+0x416>
 8000fee:	2301      	movs	r3, #1
 8000ff0:	40ab      	lsls	r3, r5
 8000ff2:	001d      	movs	r5, r3
 8000ff4:	2303      	movs	r3, #3
 8000ff6:	9302      	str	r3, [sp, #8]
 8000ff8:	2288      	movs	r2, #136	@ 0x88
 8000ffa:	422a      	tst	r2, r5
 8000ffc:	d197      	bne.n	8000f2e <__aeabi_dmul+0xee>
 8000ffe:	4642      	mov	r2, r8
 8001000:	4643      	mov	r3, r8
 8001002:	0412      	lsls	r2, r2, #16
 8001004:	0c12      	lsrs	r2, r2, #16
 8001006:	0016      	movs	r6, r2
 8001008:	9801      	ldr	r0, [sp, #4]
 800100a:	0c1d      	lsrs	r5, r3, #16
 800100c:	0c03      	lsrs	r3, r0, #16
 800100e:	0400      	lsls	r0, r0, #16
 8001010:	0c00      	lsrs	r0, r0, #16
 8001012:	4346      	muls	r6, r0
 8001014:	46b4      	mov	ip, r6
 8001016:	001e      	movs	r6, r3
 8001018:	436e      	muls	r6, r5
 800101a:	9600      	str	r6, [sp, #0]
 800101c:	0016      	movs	r6, r2
 800101e:	0007      	movs	r7, r0
 8001020:	435e      	muls	r6, r3
 8001022:	4661      	mov	r1, ip
 8001024:	46b0      	mov	r8, r6
 8001026:	436f      	muls	r7, r5
 8001028:	0c0e      	lsrs	r6, r1, #16
 800102a:	44b8      	add	r8, r7
 800102c:	4446      	add	r6, r8
 800102e:	42b7      	cmp	r7, r6
 8001030:	d905      	bls.n	800103e <__aeabi_dmul+0x1fe>
 8001032:	2180      	movs	r1, #128	@ 0x80
 8001034:	0249      	lsls	r1, r1, #9
 8001036:	4688      	mov	r8, r1
 8001038:	9f00      	ldr	r7, [sp, #0]
 800103a:	4447      	add	r7, r8
 800103c:	9700      	str	r7, [sp, #0]
 800103e:	4661      	mov	r1, ip
 8001040:	0409      	lsls	r1, r1, #16
 8001042:	0c09      	lsrs	r1, r1, #16
 8001044:	0c37      	lsrs	r7, r6, #16
 8001046:	0436      	lsls	r6, r6, #16
 8001048:	468c      	mov	ip, r1
 800104a:	0031      	movs	r1, r6
 800104c:	4461      	add	r1, ip
 800104e:	9101      	str	r1, [sp, #4]
 8001050:	0011      	movs	r1, r2
 8001052:	0c26      	lsrs	r6, r4, #16
 8001054:	0424      	lsls	r4, r4, #16
 8001056:	0c24      	lsrs	r4, r4, #16
 8001058:	4361      	muls	r1, r4
 800105a:	468c      	mov	ip, r1
 800105c:	0021      	movs	r1, r4
 800105e:	4369      	muls	r1, r5
 8001060:	4689      	mov	r9, r1
 8001062:	4661      	mov	r1, ip
 8001064:	0c09      	lsrs	r1, r1, #16
 8001066:	4688      	mov	r8, r1
 8001068:	4372      	muls	r2, r6
 800106a:	444a      	add	r2, r9
 800106c:	4442      	add	r2, r8
 800106e:	4375      	muls	r5, r6
 8001070:	4591      	cmp	r9, r2
 8001072:	d903      	bls.n	800107c <__aeabi_dmul+0x23c>
 8001074:	2180      	movs	r1, #128	@ 0x80
 8001076:	0249      	lsls	r1, r1, #9
 8001078:	4688      	mov	r8, r1
 800107a:	4445      	add	r5, r8
 800107c:	0c11      	lsrs	r1, r2, #16
 800107e:	4688      	mov	r8, r1
 8001080:	4661      	mov	r1, ip
 8001082:	0409      	lsls	r1, r1, #16
 8001084:	0c09      	lsrs	r1, r1, #16
 8001086:	468c      	mov	ip, r1
 8001088:	0412      	lsls	r2, r2, #16
 800108a:	4462      	add	r2, ip
 800108c:	18b9      	adds	r1, r7, r2
 800108e:	9102      	str	r1, [sp, #8]
 8001090:	4651      	mov	r1, sl
 8001092:	0c09      	lsrs	r1, r1, #16
 8001094:	468c      	mov	ip, r1
 8001096:	4651      	mov	r1, sl
 8001098:	040f      	lsls	r7, r1, #16
 800109a:	0c3f      	lsrs	r7, r7, #16
 800109c:	0039      	movs	r1, r7
 800109e:	4341      	muls	r1, r0
 80010a0:	4445      	add	r5, r8
 80010a2:	4688      	mov	r8, r1
 80010a4:	4661      	mov	r1, ip
 80010a6:	4341      	muls	r1, r0
 80010a8:	468a      	mov	sl, r1
 80010aa:	4641      	mov	r1, r8
 80010ac:	4660      	mov	r0, ip
 80010ae:	0c09      	lsrs	r1, r1, #16
 80010b0:	4689      	mov	r9, r1
 80010b2:	4358      	muls	r0, r3
 80010b4:	437b      	muls	r3, r7
 80010b6:	4453      	add	r3, sl
 80010b8:	444b      	add	r3, r9
 80010ba:	459a      	cmp	sl, r3
 80010bc:	d903      	bls.n	80010c6 <__aeabi_dmul+0x286>
 80010be:	2180      	movs	r1, #128	@ 0x80
 80010c0:	0249      	lsls	r1, r1, #9
 80010c2:	4689      	mov	r9, r1
 80010c4:	4448      	add	r0, r9
 80010c6:	0c19      	lsrs	r1, r3, #16
 80010c8:	4689      	mov	r9, r1
 80010ca:	4641      	mov	r1, r8
 80010cc:	0409      	lsls	r1, r1, #16
 80010ce:	0c09      	lsrs	r1, r1, #16
 80010d0:	4688      	mov	r8, r1
 80010d2:	0039      	movs	r1, r7
 80010d4:	4361      	muls	r1, r4
 80010d6:	041b      	lsls	r3, r3, #16
 80010d8:	4443      	add	r3, r8
 80010da:	4688      	mov	r8, r1
 80010dc:	4661      	mov	r1, ip
 80010de:	434c      	muls	r4, r1
 80010e0:	4371      	muls	r1, r6
 80010e2:	468c      	mov	ip, r1
 80010e4:	4641      	mov	r1, r8
 80010e6:	4377      	muls	r7, r6
 80010e8:	0c0e      	lsrs	r6, r1, #16
 80010ea:	193f      	adds	r7, r7, r4
 80010ec:	19f6      	adds	r6, r6, r7
 80010ee:	4448      	add	r0, r9
 80010f0:	42b4      	cmp	r4, r6
 80010f2:	d903      	bls.n	80010fc <__aeabi_dmul+0x2bc>
 80010f4:	2180      	movs	r1, #128	@ 0x80
 80010f6:	0249      	lsls	r1, r1, #9
 80010f8:	4689      	mov	r9, r1
 80010fa:	44cc      	add	ip, r9
 80010fc:	9902      	ldr	r1, [sp, #8]
 80010fe:	9f00      	ldr	r7, [sp, #0]
 8001100:	4689      	mov	r9, r1
 8001102:	0431      	lsls	r1, r6, #16
 8001104:	444f      	add	r7, r9
 8001106:	4689      	mov	r9, r1
 8001108:	4641      	mov	r1, r8
 800110a:	4297      	cmp	r7, r2
 800110c:	4192      	sbcs	r2, r2
 800110e:	040c      	lsls	r4, r1, #16
 8001110:	0c24      	lsrs	r4, r4, #16
 8001112:	444c      	add	r4, r9
 8001114:	18ff      	adds	r7, r7, r3
 8001116:	4252      	negs	r2, r2
 8001118:	1964      	adds	r4, r4, r5
 800111a:	18a1      	adds	r1, r4, r2
 800111c:	429f      	cmp	r7, r3
 800111e:	419b      	sbcs	r3, r3
 8001120:	4688      	mov	r8, r1
 8001122:	4682      	mov	sl, r0
 8001124:	425b      	negs	r3, r3
 8001126:	4699      	mov	r9, r3
 8001128:	4590      	cmp	r8, r2
 800112a:	4192      	sbcs	r2, r2
 800112c:	42ac      	cmp	r4, r5
 800112e:	41a4      	sbcs	r4, r4
 8001130:	44c2      	add	sl, r8
 8001132:	44d1      	add	r9, sl
 8001134:	4252      	negs	r2, r2
 8001136:	4264      	negs	r4, r4
 8001138:	4314      	orrs	r4, r2
 800113a:	4599      	cmp	r9, r3
 800113c:	419b      	sbcs	r3, r3
 800113e:	4582      	cmp	sl, r0
 8001140:	4192      	sbcs	r2, r2
 8001142:	425b      	negs	r3, r3
 8001144:	4252      	negs	r2, r2
 8001146:	4313      	orrs	r3, r2
 8001148:	464a      	mov	r2, r9
 800114a:	0c36      	lsrs	r6, r6, #16
 800114c:	19a4      	adds	r4, r4, r6
 800114e:	18e3      	adds	r3, r4, r3
 8001150:	4463      	add	r3, ip
 8001152:	025b      	lsls	r3, r3, #9
 8001154:	0dd2      	lsrs	r2, r2, #23
 8001156:	431a      	orrs	r2, r3
 8001158:	9901      	ldr	r1, [sp, #4]
 800115a:	4692      	mov	sl, r2
 800115c:	027a      	lsls	r2, r7, #9
 800115e:	430a      	orrs	r2, r1
 8001160:	1e50      	subs	r0, r2, #1
 8001162:	4182      	sbcs	r2, r0
 8001164:	0dff      	lsrs	r7, r7, #23
 8001166:	4317      	orrs	r7, r2
 8001168:	464a      	mov	r2, r9
 800116a:	0252      	lsls	r2, r2, #9
 800116c:	4317      	orrs	r7, r2
 800116e:	46b8      	mov	r8, r7
 8001170:	01db      	lsls	r3, r3, #7
 8001172:	d500      	bpl.n	8001176 <__aeabi_dmul+0x336>
 8001174:	e6ed      	b.n	8000f52 <__aeabi_dmul+0x112>
 8001176:	4b0d      	ldr	r3, [pc, #52]	@ (80011ac <__aeabi_dmul+0x36c>)
 8001178:	9a03      	ldr	r2, [sp, #12]
 800117a:	445b      	add	r3, fp
 800117c:	4691      	mov	r9, r2
 800117e:	2b00      	cmp	r3, #0
 8001180:	dc00      	bgt.n	8001184 <__aeabi_dmul+0x344>
 8001182:	e0ac      	b.n	80012de <__aeabi_dmul+0x49e>
 8001184:	003a      	movs	r2, r7
 8001186:	0752      	lsls	r2, r2, #29
 8001188:	d100      	bne.n	800118c <__aeabi_dmul+0x34c>
 800118a:	e710      	b.n	8000fae <__aeabi_dmul+0x16e>
 800118c:	220f      	movs	r2, #15
 800118e:	4658      	mov	r0, fp
 8001190:	403a      	ands	r2, r7
 8001192:	2a04      	cmp	r2, #4
 8001194:	d000      	beq.n	8001198 <__aeabi_dmul+0x358>
 8001196:	e6f9      	b.n	8000f8c <__aeabi_dmul+0x14c>
 8001198:	e709      	b.n	8000fae <__aeabi_dmul+0x16e>
 800119a:	46c0      	nop			@ (mov r8, r8)
 800119c:	000007ff 	.word	0x000007ff
 80011a0:	fffffc01 	.word	0xfffffc01
 80011a4:	feffffff 	.word	0xfeffffff
 80011a8:	000007fe 	.word	0x000007fe
 80011ac:	000003ff 	.word	0x000003ff
 80011b0:	0022      	movs	r2, r4
 80011b2:	4332      	orrs	r2, r6
 80011b4:	d06f      	beq.n	8001296 <__aeabi_dmul+0x456>
 80011b6:	2c00      	cmp	r4, #0
 80011b8:	d100      	bne.n	80011bc <__aeabi_dmul+0x37c>
 80011ba:	e0c2      	b.n	8001342 <__aeabi_dmul+0x502>
 80011bc:	0020      	movs	r0, r4
 80011be:	f000 fe87 	bl	8001ed0 <__clzsi2>
 80011c2:	0002      	movs	r2, r0
 80011c4:	0003      	movs	r3, r0
 80011c6:	3a0b      	subs	r2, #11
 80011c8:	201d      	movs	r0, #29
 80011ca:	1a82      	subs	r2, r0, r2
 80011cc:	0030      	movs	r0, r6
 80011ce:	0019      	movs	r1, r3
 80011d0:	40d0      	lsrs	r0, r2
 80011d2:	3908      	subs	r1, #8
 80011d4:	408c      	lsls	r4, r1
 80011d6:	0002      	movs	r2, r0
 80011d8:	4322      	orrs	r2, r4
 80011da:	0034      	movs	r4, r6
 80011dc:	408c      	lsls	r4, r1
 80011de:	4659      	mov	r1, fp
 80011e0:	1acb      	subs	r3, r1, r3
 80011e2:	4986      	ldr	r1, [pc, #536]	@ (80013fc <__aeabi_dmul+0x5bc>)
 80011e4:	468b      	mov	fp, r1
 80011e6:	449b      	add	fp, r3
 80011e8:	2d0a      	cmp	r5, #10
 80011ea:	dd00      	ble.n	80011ee <__aeabi_dmul+0x3ae>
 80011ec:	e6a4      	b.n	8000f38 <__aeabi_dmul+0xf8>
 80011ee:	4649      	mov	r1, r9
 80011f0:	9b00      	ldr	r3, [sp, #0]
 80011f2:	9401      	str	r4, [sp, #4]
 80011f4:	4059      	eors	r1, r3
 80011f6:	b2cb      	uxtb	r3, r1
 80011f8:	0014      	movs	r4, r2
 80011fa:	2000      	movs	r0, #0
 80011fc:	9303      	str	r3, [sp, #12]
 80011fe:	2d02      	cmp	r5, #2
 8001200:	dd00      	ble.n	8001204 <__aeabi_dmul+0x3c4>
 8001202:	e667      	b.n	8000ed4 <__aeabi_dmul+0x94>
 8001204:	e6fb      	b.n	8000ffe <__aeabi_dmul+0x1be>
 8001206:	4653      	mov	r3, sl
 8001208:	4303      	orrs	r3, r0
 800120a:	4698      	mov	r8, r3
 800120c:	d03c      	beq.n	8001288 <__aeabi_dmul+0x448>
 800120e:	4653      	mov	r3, sl
 8001210:	2b00      	cmp	r3, #0
 8001212:	d100      	bne.n	8001216 <__aeabi_dmul+0x3d6>
 8001214:	e0a3      	b.n	800135e <__aeabi_dmul+0x51e>
 8001216:	4650      	mov	r0, sl
 8001218:	f000 fe5a 	bl	8001ed0 <__clzsi2>
 800121c:	230b      	movs	r3, #11
 800121e:	425b      	negs	r3, r3
 8001220:	469c      	mov	ip, r3
 8001222:	0002      	movs	r2, r0
 8001224:	4484      	add	ip, r0
 8001226:	0011      	movs	r1, r2
 8001228:	4650      	mov	r0, sl
 800122a:	3908      	subs	r1, #8
 800122c:	4088      	lsls	r0, r1
 800122e:	231d      	movs	r3, #29
 8001230:	4680      	mov	r8, r0
 8001232:	4660      	mov	r0, ip
 8001234:	1a1b      	subs	r3, r3, r0
 8001236:	0020      	movs	r0, r4
 8001238:	40d8      	lsrs	r0, r3
 800123a:	0003      	movs	r3, r0
 800123c:	4640      	mov	r0, r8
 800123e:	4303      	orrs	r3, r0
 8001240:	469a      	mov	sl, r3
 8001242:	0023      	movs	r3, r4
 8001244:	408b      	lsls	r3, r1
 8001246:	4698      	mov	r8, r3
 8001248:	4b6c      	ldr	r3, [pc, #432]	@ (80013fc <__aeabi_dmul+0x5bc>)
 800124a:	2500      	movs	r5, #0
 800124c:	1a9b      	subs	r3, r3, r2
 800124e:	469b      	mov	fp, r3
 8001250:	2300      	movs	r3, #0
 8001252:	9302      	str	r3, [sp, #8]
 8001254:	e61a      	b.n	8000e8c <__aeabi_dmul+0x4c>
 8001256:	2d0f      	cmp	r5, #15
 8001258:	d000      	beq.n	800125c <__aeabi_dmul+0x41c>
 800125a:	e0c9      	b.n	80013f0 <__aeabi_dmul+0x5b0>
 800125c:	2380      	movs	r3, #128	@ 0x80
 800125e:	4652      	mov	r2, sl
 8001260:	031b      	lsls	r3, r3, #12
 8001262:	421a      	tst	r2, r3
 8001264:	d002      	beq.n	800126c <__aeabi_dmul+0x42c>
 8001266:	421c      	tst	r4, r3
 8001268:	d100      	bne.n	800126c <__aeabi_dmul+0x42c>
 800126a:	e092      	b.n	8001392 <__aeabi_dmul+0x552>
 800126c:	2480      	movs	r4, #128	@ 0x80
 800126e:	4653      	mov	r3, sl
 8001270:	0324      	lsls	r4, r4, #12
 8001272:	431c      	orrs	r4, r3
 8001274:	0324      	lsls	r4, r4, #12
 8001276:	4642      	mov	r2, r8
 8001278:	0b24      	lsrs	r4, r4, #12
 800127a:	e63e      	b.n	8000efa <__aeabi_dmul+0xba>
 800127c:	469b      	mov	fp, r3
 800127e:	2303      	movs	r3, #3
 8001280:	4680      	mov	r8, r0
 8001282:	250c      	movs	r5, #12
 8001284:	9302      	str	r3, [sp, #8]
 8001286:	e601      	b.n	8000e8c <__aeabi_dmul+0x4c>
 8001288:	2300      	movs	r3, #0
 800128a:	469a      	mov	sl, r3
 800128c:	469b      	mov	fp, r3
 800128e:	3301      	adds	r3, #1
 8001290:	2504      	movs	r5, #4
 8001292:	9302      	str	r3, [sp, #8]
 8001294:	e5fa      	b.n	8000e8c <__aeabi_dmul+0x4c>
 8001296:	2101      	movs	r1, #1
 8001298:	430d      	orrs	r5, r1
 800129a:	2d0a      	cmp	r5, #10
 800129c:	dd00      	ble.n	80012a0 <__aeabi_dmul+0x460>
 800129e:	e64b      	b.n	8000f38 <__aeabi_dmul+0xf8>
 80012a0:	4649      	mov	r1, r9
 80012a2:	9800      	ldr	r0, [sp, #0]
 80012a4:	4041      	eors	r1, r0
 80012a6:	b2c9      	uxtb	r1, r1
 80012a8:	9103      	str	r1, [sp, #12]
 80012aa:	2d02      	cmp	r5, #2
 80012ac:	dc00      	bgt.n	80012b0 <__aeabi_dmul+0x470>
 80012ae:	e096      	b.n	80013de <__aeabi_dmul+0x59e>
 80012b0:	2300      	movs	r3, #0
 80012b2:	2400      	movs	r4, #0
 80012b4:	2001      	movs	r0, #1
 80012b6:	9301      	str	r3, [sp, #4]
 80012b8:	e60c      	b.n	8000ed4 <__aeabi_dmul+0x94>
 80012ba:	4649      	mov	r1, r9
 80012bc:	2302      	movs	r3, #2
 80012be:	9a00      	ldr	r2, [sp, #0]
 80012c0:	432b      	orrs	r3, r5
 80012c2:	4051      	eors	r1, r2
 80012c4:	b2ca      	uxtb	r2, r1
 80012c6:	9203      	str	r2, [sp, #12]
 80012c8:	2b0a      	cmp	r3, #10
 80012ca:	dd00      	ble.n	80012ce <__aeabi_dmul+0x48e>
 80012cc:	e634      	b.n	8000f38 <__aeabi_dmul+0xf8>
 80012ce:	2d00      	cmp	r5, #0
 80012d0:	d157      	bne.n	8001382 <__aeabi_dmul+0x542>
 80012d2:	9b03      	ldr	r3, [sp, #12]
 80012d4:	4699      	mov	r9, r3
 80012d6:	2400      	movs	r4, #0
 80012d8:	2200      	movs	r2, #0
 80012da:	4b49      	ldr	r3, [pc, #292]	@ (8001400 <__aeabi_dmul+0x5c0>)
 80012dc:	e60e      	b.n	8000efc <__aeabi_dmul+0xbc>
 80012de:	4658      	mov	r0, fp
 80012e0:	2101      	movs	r1, #1
 80012e2:	1ac9      	subs	r1, r1, r3
 80012e4:	2938      	cmp	r1, #56	@ 0x38
 80012e6:	dd00      	ble.n	80012ea <__aeabi_dmul+0x4aa>
 80012e8:	e62f      	b.n	8000f4a <__aeabi_dmul+0x10a>
 80012ea:	291f      	cmp	r1, #31
 80012ec:	dd56      	ble.n	800139c <__aeabi_dmul+0x55c>
 80012ee:	221f      	movs	r2, #31
 80012f0:	4654      	mov	r4, sl
 80012f2:	4252      	negs	r2, r2
 80012f4:	1ad3      	subs	r3, r2, r3
 80012f6:	40dc      	lsrs	r4, r3
 80012f8:	2920      	cmp	r1, #32
 80012fa:	d007      	beq.n	800130c <__aeabi_dmul+0x4cc>
 80012fc:	4b41      	ldr	r3, [pc, #260]	@ (8001404 <__aeabi_dmul+0x5c4>)
 80012fe:	4642      	mov	r2, r8
 8001300:	469c      	mov	ip, r3
 8001302:	4653      	mov	r3, sl
 8001304:	4460      	add	r0, ip
 8001306:	4083      	lsls	r3, r0
 8001308:	431a      	orrs	r2, r3
 800130a:	4690      	mov	r8, r2
 800130c:	4642      	mov	r2, r8
 800130e:	2107      	movs	r1, #7
 8001310:	1e53      	subs	r3, r2, #1
 8001312:	419a      	sbcs	r2, r3
 8001314:	000b      	movs	r3, r1
 8001316:	4322      	orrs	r2, r4
 8001318:	4013      	ands	r3, r2
 800131a:	2400      	movs	r4, #0
 800131c:	4211      	tst	r1, r2
 800131e:	d009      	beq.n	8001334 <__aeabi_dmul+0x4f4>
 8001320:	230f      	movs	r3, #15
 8001322:	4013      	ands	r3, r2
 8001324:	2b04      	cmp	r3, #4
 8001326:	d05d      	beq.n	80013e4 <__aeabi_dmul+0x5a4>
 8001328:	1d11      	adds	r1, r2, #4
 800132a:	4291      	cmp	r1, r2
 800132c:	419b      	sbcs	r3, r3
 800132e:	000a      	movs	r2, r1
 8001330:	425b      	negs	r3, r3
 8001332:	075b      	lsls	r3, r3, #29
 8001334:	08d2      	lsrs	r2, r2, #3
 8001336:	431a      	orrs	r2, r3
 8001338:	2300      	movs	r3, #0
 800133a:	e5df      	b.n	8000efc <__aeabi_dmul+0xbc>
 800133c:	9b03      	ldr	r3, [sp, #12]
 800133e:	4699      	mov	r9, r3
 8001340:	e5fa      	b.n	8000f38 <__aeabi_dmul+0xf8>
 8001342:	9801      	ldr	r0, [sp, #4]
 8001344:	f000 fdc4 	bl	8001ed0 <__clzsi2>
 8001348:	0002      	movs	r2, r0
 800134a:	0003      	movs	r3, r0
 800134c:	3215      	adds	r2, #21
 800134e:	3320      	adds	r3, #32
 8001350:	2a1c      	cmp	r2, #28
 8001352:	dc00      	bgt.n	8001356 <__aeabi_dmul+0x516>
 8001354:	e738      	b.n	80011c8 <__aeabi_dmul+0x388>
 8001356:	9a01      	ldr	r2, [sp, #4]
 8001358:	3808      	subs	r0, #8
 800135a:	4082      	lsls	r2, r0
 800135c:	e73f      	b.n	80011de <__aeabi_dmul+0x39e>
 800135e:	f000 fdb7 	bl	8001ed0 <__clzsi2>
 8001362:	2315      	movs	r3, #21
 8001364:	469c      	mov	ip, r3
 8001366:	4484      	add	ip, r0
 8001368:	0002      	movs	r2, r0
 800136a:	4663      	mov	r3, ip
 800136c:	3220      	adds	r2, #32
 800136e:	2b1c      	cmp	r3, #28
 8001370:	dc00      	bgt.n	8001374 <__aeabi_dmul+0x534>
 8001372:	e758      	b.n	8001226 <__aeabi_dmul+0x3e6>
 8001374:	2300      	movs	r3, #0
 8001376:	4698      	mov	r8, r3
 8001378:	0023      	movs	r3, r4
 800137a:	3808      	subs	r0, #8
 800137c:	4083      	lsls	r3, r0
 800137e:	469a      	mov	sl, r3
 8001380:	e762      	b.n	8001248 <__aeabi_dmul+0x408>
 8001382:	001d      	movs	r5, r3
 8001384:	2300      	movs	r3, #0
 8001386:	2400      	movs	r4, #0
 8001388:	2002      	movs	r0, #2
 800138a:	9301      	str	r3, [sp, #4]
 800138c:	e5a2      	b.n	8000ed4 <__aeabi_dmul+0x94>
 800138e:	9002      	str	r0, [sp, #8]
 8001390:	e632      	b.n	8000ff8 <__aeabi_dmul+0x1b8>
 8001392:	431c      	orrs	r4, r3
 8001394:	9b00      	ldr	r3, [sp, #0]
 8001396:	9a01      	ldr	r2, [sp, #4]
 8001398:	4699      	mov	r9, r3
 800139a:	e5ae      	b.n	8000efa <__aeabi_dmul+0xba>
 800139c:	4b1a      	ldr	r3, [pc, #104]	@ (8001408 <__aeabi_dmul+0x5c8>)
 800139e:	4652      	mov	r2, sl
 80013a0:	18c3      	adds	r3, r0, r3
 80013a2:	4640      	mov	r0, r8
 80013a4:	409a      	lsls	r2, r3
 80013a6:	40c8      	lsrs	r0, r1
 80013a8:	4302      	orrs	r2, r0
 80013aa:	4640      	mov	r0, r8
 80013ac:	4098      	lsls	r0, r3
 80013ae:	0003      	movs	r3, r0
 80013b0:	1e58      	subs	r0, r3, #1
 80013b2:	4183      	sbcs	r3, r0
 80013b4:	4654      	mov	r4, sl
 80013b6:	431a      	orrs	r2, r3
 80013b8:	40cc      	lsrs	r4, r1
 80013ba:	0753      	lsls	r3, r2, #29
 80013bc:	d009      	beq.n	80013d2 <__aeabi_dmul+0x592>
 80013be:	230f      	movs	r3, #15
 80013c0:	4013      	ands	r3, r2
 80013c2:	2b04      	cmp	r3, #4
 80013c4:	d005      	beq.n	80013d2 <__aeabi_dmul+0x592>
 80013c6:	1d13      	adds	r3, r2, #4
 80013c8:	4293      	cmp	r3, r2
 80013ca:	4192      	sbcs	r2, r2
 80013cc:	4252      	negs	r2, r2
 80013ce:	18a4      	adds	r4, r4, r2
 80013d0:	001a      	movs	r2, r3
 80013d2:	0223      	lsls	r3, r4, #8
 80013d4:	d508      	bpl.n	80013e8 <__aeabi_dmul+0x5a8>
 80013d6:	2301      	movs	r3, #1
 80013d8:	2400      	movs	r4, #0
 80013da:	2200      	movs	r2, #0
 80013dc:	e58e      	b.n	8000efc <__aeabi_dmul+0xbc>
 80013de:	4689      	mov	r9, r1
 80013e0:	2400      	movs	r4, #0
 80013e2:	e58b      	b.n	8000efc <__aeabi_dmul+0xbc>
 80013e4:	2300      	movs	r3, #0
 80013e6:	e7a5      	b.n	8001334 <__aeabi_dmul+0x4f4>
 80013e8:	0763      	lsls	r3, r4, #29
 80013ea:	0264      	lsls	r4, r4, #9
 80013ec:	0b24      	lsrs	r4, r4, #12
 80013ee:	e7a1      	b.n	8001334 <__aeabi_dmul+0x4f4>
 80013f0:	9b00      	ldr	r3, [sp, #0]
 80013f2:	46a2      	mov	sl, r4
 80013f4:	4699      	mov	r9, r3
 80013f6:	9b01      	ldr	r3, [sp, #4]
 80013f8:	4698      	mov	r8, r3
 80013fa:	e737      	b.n	800126c <__aeabi_dmul+0x42c>
 80013fc:	fffffc0d 	.word	0xfffffc0d
 8001400:	000007ff 	.word	0x000007ff
 8001404:	0000043e 	.word	0x0000043e
 8001408:	0000041e 	.word	0x0000041e

0800140c <__aeabi_dsub>:
 800140c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800140e:	4657      	mov	r7, sl
 8001410:	464e      	mov	r6, r9
 8001412:	4645      	mov	r5, r8
 8001414:	46de      	mov	lr, fp
 8001416:	b5e0      	push	{r5, r6, r7, lr}
 8001418:	b083      	sub	sp, #12
 800141a:	9000      	str	r0, [sp, #0]
 800141c:	9101      	str	r1, [sp, #4]
 800141e:	030c      	lsls	r4, r1, #12
 8001420:	004d      	lsls	r5, r1, #1
 8001422:	0fce      	lsrs	r6, r1, #31
 8001424:	0a61      	lsrs	r1, r4, #9
 8001426:	9c00      	ldr	r4, [sp, #0]
 8001428:	005f      	lsls	r7, r3, #1
 800142a:	0f64      	lsrs	r4, r4, #29
 800142c:	430c      	orrs	r4, r1
 800142e:	9900      	ldr	r1, [sp, #0]
 8001430:	9200      	str	r2, [sp, #0]
 8001432:	9301      	str	r3, [sp, #4]
 8001434:	00c8      	lsls	r0, r1, #3
 8001436:	0319      	lsls	r1, r3, #12
 8001438:	0d7b      	lsrs	r3, r7, #21
 800143a:	4699      	mov	r9, r3
 800143c:	9b01      	ldr	r3, [sp, #4]
 800143e:	4fcc      	ldr	r7, [pc, #816]	@ (8001770 <__aeabi_dsub+0x364>)
 8001440:	0fdb      	lsrs	r3, r3, #31
 8001442:	469c      	mov	ip, r3
 8001444:	0a4b      	lsrs	r3, r1, #9
 8001446:	9900      	ldr	r1, [sp, #0]
 8001448:	4680      	mov	r8, r0
 800144a:	0f49      	lsrs	r1, r1, #29
 800144c:	4319      	orrs	r1, r3
 800144e:	9b00      	ldr	r3, [sp, #0]
 8001450:	468b      	mov	fp, r1
 8001452:	00da      	lsls	r2, r3, #3
 8001454:	4692      	mov	sl, r2
 8001456:	0d6d      	lsrs	r5, r5, #21
 8001458:	45b9      	cmp	r9, r7
 800145a:	d100      	bne.n	800145e <__aeabi_dsub+0x52>
 800145c:	e0bf      	b.n	80015de <__aeabi_dsub+0x1d2>
 800145e:	2301      	movs	r3, #1
 8001460:	4661      	mov	r1, ip
 8001462:	4059      	eors	r1, r3
 8001464:	464b      	mov	r3, r9
 8001466:	468c      	mov	ip, r1
 8001468:	1aeb      	subs	r3, r5, r3
 800146a:	428e      	cmp	r6, r1
 800146c:	d075      	beq.n	800155a <__aeabi_dsub+0x14e>
 800146e:	2b00      	cmp	r3, #0
 8001470:	dc00      	bgt.n	8001474 <__aeabi_dsub+0x68>
 8001472:	e2a3      	b.n	80019bc <__aeabi_dsub+0x5b0>
 8001474:	4649      	mov	r1, r9
 8001476:	2900      	cmp	r1, #0
 8001478:	d100      	bne.n	800147c <__aeabi_dsub+0x70>
 800147a:	e0ce      	b.n	800161a <__aeabi_dsub+0x20e>
 800147c:	42bd      	cmp	r5, r7
 800147e:	d100      	bne.n	8001482 <__aeabi_dsub+0x76>
 8001480:	e200      	b.n	8001884 <__aeabi_dsub+0x478>
 8001482:	2701      	movs	r7, #1
 8001484:	2b38      	cmp	r3, #56	@ 0x38
 8001486:	dc19      	bgt.n	80014bc <__aeabi_dsub+0xb0>
 8001488:	2780      	movs	r7, #128	@ 0x80
 800148a:	4659      	mov	r1, fp
 800148c:	043f      	lsls	r7, r7, #16
 800148e:	4339      	orrs	r1, r7
 8001490:	468b      	mov	fp, r1
 8001492:	2b1f      	cmp	r3, #31
 8001494:	dd00      	ble.n	8001498 <__aeabi_dsub+0x8c>
 8001496:	e1fa      	b.n	800188e <__aeabi_dsub+0x482>
 8001498:	2720      	movs	r7, #32
 800149a:	1af9      	subs	r1, r7, r3
 800149c:	468c      	mov	ip, r1
 800149e:	4659      	mov	r1, fp
 80014a0:	4667      	mov	r7, ip
 80014a2:	40b9      	lsls	r1, r7
 80014a4:	000f      	movs	r7, r1
 80014a6:	0011      	movs	r1, r2
 80014a8:	40d9      	lsrs	r1, r3
 80014aa:	430f      	orrs	r7, r1
 80014ac:	4661      	mov	r1, ip
 80014ae:	408a      	lsls	r2, r1
 80014b0:	1e51      	subs	r1, r2, #1
 80014b2:	418a      	sbcs	r2, r1
 80014b4:	4659      	mov	r1, fp
 80014b6:	40d9      	lsrs	r1, r3
 80014b8:	4317      	orrs	r7, r2
 80014ba:	1a64      	subs	r4, r4, r1
 80014bc:	1bc7      	subs	r7, r0, r7
 80014be:	42b8      	cmp	r0, r7
 80014c0:	4180      	sbcs	r0, r0
 80014c2:	4240      	negs	r0, r0
 80014c4:	1a24      	subs	r4, r4, r0
 80014c6:	0223      	lsls	r3, r4, #8
 80014c8:	d400      	bmi.n	80014cc <__aeabi_dsub+0xc0>
 80014ca:	e140      	b.n	800174e <__aeabi_dsub+0x342>
 80014cc:	0264      	lsls	r4, r4, #9
 80014ce:	0a64      	lsrs	r4, r4, #9
 80014d0:	2c00      	cmp	r4, #0
 80014d2:	d100      	bne.n	80014d6 <__aeabi_dsub+0xca>
 80014d4:	e154      	b.n	8001780 <__aeabi_dsub+0x374>
 80014d6:	0020      	movs	r0, r4
 80014d8:	f000 fcfa 	bl	8001ed0 <__clzsi2>
 80014dc:	0003      	movs	r3, r0
 80014de:	3b08      	subs	r3, #8
 80014e0:	2120      	movs	r1, #32
 80014e2:	0038      	movs	r0, r7
 80014e4:	1aca      	subs	r2, r1, r3
 80014e6:	40d0      	lsrs	r0, r2
 80014e8:	409c      	lsls	r4, r3
 80014ea:	0002      	movs	r2, r0
 80014ec:	409f      	lsls	r7, r3
 80014ee:	4322      	orrs	r2, r4
 80014f0:	429d      	cmp	r5, r3
 80014f2:	dd00      	ble.n	80014f6 <__aeabi_dsub+0xea>
 80014f4:	e1a6      	b.n	8001844 <__aeabi_dsub+0x438>
 80014f6:	1b58      	subs	r0, r3, r5
 80014f8:	3001      	adds	r0, #1
 80014fa:	1a09      	subs	r1, r1, r0
 80014fc:	003c      	movs	r4, r7
 80014fe:	408f      	lsls	r7, r1
 8001500:	40c4      	lsrs	r4, r0
 8001502:	1e7b      	subs	r3, r7, #1
 8001504:	419f      	sbcs	r7, r3
 8001506:	0013      	movs	r3, r2
 8001508:	408b      	lsls	r3, r1
 800150a:	4327      	orrs	r7, r4
 800150c:	431f      	orrs	r7, r3
 800150e:	40c2      	lsrs	r2, r0
 8001510:	003b      	movs	r3, r7
 8001512:	0014      	movs	r4, r2
 8001514:	2500      	movs	r5, #0
 8001516:	4313      	orrs	r3, r2
 8001518:	d100      	bne.n	800151c <__aeabi_dsub+0x110>
 800151a:	e1f7      	b.n	800190c <__aeabi_dsub+0x500>
 800151c:	077b      	lsls	r3, r7, #29
 800151e:	d100      	bne.n	8001522 <__aeabi_dsub+0x116>
 8001520:	e377      	b.n	8001c12 <__aeabi_dsub+0x806>
 8001522:	230f      	movs	r3, #15
 8001524:	0038      	movs	r0, r7
 8001526:	403b      	ands	r3, r7
 8001528:	2b04      	cmp	r3, #4
 800152a:	d004      	beq.n	8001536 <__aeabi_dsub+0x12a>
 800152c:	1d38      	adds	r0, r7, #4
 800152e:	42b8      	cmp	r0, r7
 8001530:	41bf      	sbcs	r7, r7
 8001532:	427f      	negs	r7, r7
 8001534:	19e4      	adds	r4, r4, r7
 8001536:	0223      	lsls	r3, r4, #8
 8001538:	d400      	bmi.n	800153c <__aeabi_dsub+0x130>
 800153a:	e368      	b.n	8001c0e <__aeabi_dsub+0x802>
 800153c:	4b8c      	ldr	r3, [pc, #560]	@ (8001770 <__aeabi_dsub+0x364>)
 800153e:	3501      	adds	r5, #1
 8001540:	429d      	cmp	r5, r3
 8001542:	d100      	bne.n	8001546 <__aeabi_dsub+0x13a>
 8001544:	e0f4      	b.n	8001730 <__aeabi_dsub+0x324>
 8001546:	4b8b      	ldr	r3, [pc, #556]	@ (8001774 <__aeabi_dsub+0x368>)
 8001548:	056d      	lsls	r5, r5, #21
 800154a:	401c      	ands	r4, r3
 800154c:	0d6d      	lsrs	r5, r5, #21
 800154e:	0767      	lsls	r7, r4, #29
 8001550:	08c0      	lsrs	r0, r0, #3
 8001552:	0264      	lsls	r4, r4, #9
 8001554:	4307      	orrs	r7, r0
 8001556:	0b24      	lsrs	r4, r4, #12
 8001558:	e0ec      	b.n	8001734 <__aeabi_dsub+0x328>
 800155a:	2b00      	cmp	r3, #0
 800155c:	dc00      	bgt.n	8001560 <__aeabi_dsub+0x154>
 800155e:	e329      	b.n	8001bb4 <__aeabi_dsub+0x7a8>
 8001560:	4649      	mov	r1, r9
 8001562:	2900      	cmp	r1, #0
 8001564:	d000      	beq.n	8001568 <__aeabi_dsub+0x15c>
 8001566:	e0d6      	b.n	8001716 <__aeabi_dsub+0x30a>
 8001568:	4659      	mov	r1, fp
 800156a:	4311      	orrs	r1, r2
 800156c:	d100      	bne.n	8001570 <__aeabi_dsub+0x164>
 800156e:	e12e      	b.n	80017ce <__aeabi_dsub+0x3c2>
 8001570:	1e59      	subs	r1, r3, #1
 8001572:	2b01      	cmp	r3, #1
 8001574:	d100      	bne.n	8001578 <__aeabi_dsub+0x16c>
 8001576:	e1e6      	b.n	8001946 <__aeabi_dsub+0x53a>
 8001578:	42bb      	cmp	r3, r7
 800157a:	d100      	bne.n	800157e <__aeabi_dsub+0x172>
 800157c:	e182      	b.n	8001884 <__aeabi_dsub+0x478>
 800157e:	2701      	movs	r7, #1
 8001580:	000b      	movs	r3, r1
 8001582:	2938      	cmp	r1, #56	@ 0x38
 8001584:	dc14      	bgt.n	80015b0 <__aeabi_dsub+0x1a4>
 8001586:	2b1f      	cmp	r3, #31
 8001588:	dd00      	ble.n	800158c <__aeabi_dsub+0x180>
 800158a:	e23c      	b.n	8001a06 <__aeabi_dsub+0x5fa>
 800158c:	2720      	movs	r7, #32
 800158e:	1af9      	subs	r1, r7, r3
 8001590:	468c      	mov	ip, r1
 8001592:	4659      	mov	r1, fp
 8001594:	4667      	mov	r7, ip
 8001596:	40b9      	lsls	r1, r7
 8001598:	000f      	movs	r7, r1
 800159a:	0011      	movs	r1, r2
 800159c:	40d9      	lsrs	r1, r3
 800159e:	430f      	orrs	r7, r1
 80015a0:	4661      	mov	r1, ip
 80015a2:	408a      	lsls	r2, r1
 80015a4:	1e51      	subs	r1, r2, #1
 80015a6:	418a      	sbcs	r2, r1
 80015a8:	4659      	mov	r1, fp
 80015aa:	40d9      	lsrs	r1, r3
 80015ac:	4317      	orrs	r7, r2
 80015ae:	1864      	adds	r4, r4, r1
 80015b0:	183f      	adds	r7, r7, r0
 80015b2:	4287      	cmp	r7, r0
 80015b4:	4180      	sbcs	r0, r0
 80015b6:	4240      	negs	r0, r0
 80015b8:	1824      	adds	r4, r4, r0
 80015ba:	0223      	lsls	r3, r4, #8
 80015bc:	d400      	bmi.n	80015c0 <__aeabi_dsub+0x1b4>
 80015be:	e0c6      	b.n	800174e <__aeabi_dsub+0x342>
 80015c0:	4b6b      	ldr	r3, [pc, #428]	@ (8001770 <__aeabi_dsub+0x364>)
 80015c2:	3501      	adds	r5, #1
 80015c4:	429d      	cmp	r5, r3
 80015c6:	d100      	bne.n	80015ca <__aeabi_dsub+0x1be>
 80015c8:	e0b2      	b.n	8001730 <__aeabi_dsub+0x324>
 80015ca:	2101      	movs	r1, #1
 80015cc:	4b69      	ldr	r3, [pc, #420]	@ (8001774 <__aeabi_dsub+0x368>)
 80015ce:	087a      	lsrs	r2, r7, #1
 80015d0:	401c      	ands	r4, r3
 80015d2:	4039      	ands	r1, r7
 80015d4:	430a      	orrs	r2, r1
 80015d6:	07e7      	lsls	r7, r4, #31
 80015d8:	4317      	orrs	r7, r2
 80015da:	0864      	lsrs	r4, r4, #1
 80015dc:	e79e      	b.n	800151c <__aeabi_dsub+0x110>
 80015de:	4b66      	ldr	r3, [pc, #408]	@ (8001778 <__aeabi_dsub+0x36c>)
 80015e0:	4311      	orrs	r1, r2
 80015e2:	468a      	mov	sl, r1
 80015e4:	18eb      	adds	r3, r5, r3
 80015e6:	2900      	cmp	r1, #0
 80015e8:	d028      	beq.n	800163c <__aeabi_dsub+0x230>
 80015ea:	4566      	cmp	r6, ip
 80015ec:	d02c      	beq.n	8001648 <__aeabi_dsub+0x23c>
 80015ee:	2b00      	cmp	r3, #0
 80015f0:	d05b      	beq.n	80016aa <__aeabi_dsub+0x29e>
 80015f2:	2d00      	cmp	r5, #0
 80015f4:	d100      	bne.n	80015f8 <__aeabi_dsub+0x1ec>
 80015f6:	e12c      	b.n	8001852 <__aeabi_dsub+0x446>
 80015f8:	465b      	mov	r3, fp
 80015fa:	4666      	mov	r6, ip
 80015fc:	075f      	lsls	r7, r3, #29
 80015fe:	08d2      	lsrs	r2, r2, #3
 8001600:	4317      	orrs	r7, r2
 8001602:	08dd      	lsrs	r5, r3, #3
 8001604:	003b      	movs	r3, r7
 8001606:	432b      	orrs	r3, r5
 8001608:	d100      	bne.n	800160c <__aeabi_dsub+0x200>
 800160a:	e0e2      	b.n	80017d2 <__aeabi_dsub+0x3c6>
 800160c:	2480      	movs	r4, #128	@ 0x80
 800160e:	0324      	lsls	r4, r4, #12
 8001610:	432c      	orrs	r4, r5
 8001612:	0324      	lsls	r4, r4, #12
 8001614:	4d56      	ldr	r5, [pc, #344]	@ (8001770 <__aeabi_dsub+0x364>)
 8001616:	0b24      	lsrs	r4, r4, #12
 8001618:	e08c      	b.n	8001734 <__aeabi_dsub+0x328>
 800161a:	4659      	mov	r1, fp
 800161c:	4311      	orrs	r1, r2
 800161e:	d100      	bne.n	8001622 <__aeabi_dsub+0x216>
 8001620:	e0d5      	b.n	80017ce <__aeabi_dsub+0x3c2>
 8001622:	1e59      	subs	r1, r3, #1
 8001624:	2b01      	cmp	r3, #1
 8001626:	d100      	bne.n	800162a <__aeabi_dsub+0x21e>
 8001628:	e1b9      	b.n	800199e <__aeabi_dsub+0x592>
 800162a:	42bb      	cmp	r3, r7
 800162c:	d100      	bne.n	8001630 <__aeabi_dsub+0x224>
 800162e:	e1b1      	b.n	8001994 <__aeabi_dsub+0x588>
 8001630:	2701      	movs	r7, #1
 8001632:	000b      	movs	r3, r1
 8001634:	2938      	cmp	r1, #56	@ 0x38
 8001636:	dd00      	ble.n	800163a <__aeabi_dsub+0x22e>
 8001638:	e740      	b.n	80014bc <__aeabi_dsub+0xb0>
 800163a:	e72a      	b.n	8001492 <__aeabi_dsub+0x86>
 800163c:	4661      	mov	r1, ip
 800163e:	2701      	movs	r7, #1
 8001640:	4079      	eors	r1, r7
 8001642:	468c      	mov	ip, r1
 8001644:	4566      	cmp	r6, ip
 8001646:	d1d2      	bne.n	80015ee <__aeabi_dsub+0x1e2>
 8001648:	2b00      	cmp	r3, #0
 800164a:	d100      	bne.n	800164e <__aeabi_dsub+0x242>
 800164c:	e0c5      	b.n	80017da <__aeabi_dsub+0x3ce>
 800164e:	2d00      	cmp	r5, #0
 8001650:	d000      	beq.n	8001654 <__aeabi_dsub+0x248>
 8001652:	e155      	b.n	8001900 <__aeabi_dsub+0x4f4>
 8001654:	464b      	mov	r3, r9
 8001656:	0025      	movs	r5, r4
 8001658:	4305      	orrs	r5, r0
 800165a:	d100      	bne.n	800165e <__aeabi_dsub+0x252>
 800165c:	e212      	b.n	8001a84 <__aeabi_dsub+0x678>
 800165e:	1e59      	subs	r1, r3, #1
 8001660:	468c      	mov	ip, r1
 8001662:	2b01      	cmp	r3, #1
 8001664:	d100      	bne.n	8001668 <__aeabi_dsub+0x25c>
 8001666:	e249      	b.n	8001afc <__aeabi_dsub+0x6f0>
 8001668:	4d41      	ldr	r5, [pc, #260]	@ (8001770 <__aeabi_dsub+0x364>)
 800166a:	42ab      	cmp	r3, r5
 800166c:	d100      	bne.n	8001670 <__aeabi_dsub+0x264>
 800166e:	e28f      	b.n	8001b90 <__aeabi_dsub+0x784>
 8001670:	2701      	movs	r7, #1
 8001672:	2938      	cmp	r1, #56	@ 0x38
 8001674:	dc11      	bgt.n	800169a <__aeabi_dsub+0x28e>
 8001676:	4663      	mov	r3, ip
 8001678:	2b1f      	cmp	r3, #31
 800167a:	dd00      	ble.n	800167e <__aeabi_dsub+0x272>
 800167c:	e25b      	b.n	8001b36 <__aeabi_dsub+0x72a>
 800167e:	4661      	mov	r1, ip
 8001680:	2320      	movs	r3, #32
 8001682:	0027      	movs	r7, r4
 8001684:	1a5b      	subs	r3, r3, r1
 8001686:	0005      	movs	r5, r0
 8001688:	4098      	lsls	r0, r3
 800168a:	409f      	lsls	r7, r3
 800168c:	40cd      	lsrs	r5, r1
 800168e:	1e43      	subs	r3, r0, #1
 8001690:	4198      	sbcs	r0, r3
 8001692:	40cc      	lsrs	r4, r1
 8001694:	432f      	orrs	r7, r5
 8001696:	4307      	orrs	r7, r0
 8001698:	44a3      	add	fp, r4
 800169a:	18bf      	adds	r7, r7, r2
 800169c:	4297      	cmp	r7, r2
 800169e:	4192      	sbcs	r2, r2
 80016a0:	4252      	negs	r2, r2
 80016a2:	445a      	add	r2, fp
 80016a4:	0014      	movs	r4, r2
 80016a6:	464d      	mov	r5, r9
 80016a8:	e787      	b.n	80015ba <__aeabi_dsub+0x1ae>
 80016aa:	4f34      	ldr	r7, [pc, #208]	@ (800177c <__aeabi_dsub+0x370>)
 80016ac:	1c6b      	adds	r3, r5, #1
 80016ae:	423b      	tst	r3, r7
 80016b0:	d000      	beq.n	80016b4 <__aeabi_dsub+0x2a8>
 80016b2:	e0b6      	b.n	8001822 <__aeabi_dsub+0x416>
 80016b4:	4659      	mov	r1, fp
 80016b6:	0023      	movs	r3, r4
 80016b8:	4311      	orrs	r1, r2
 80016ba:	000f      	movs	r7, r1
 80016bc:	4303      	orrs	r3, r0
 80016be:	2d00      	cmp	r5, #0
 80016c0:	d000      	beq.n	80016c4 <__aeabi_dsub+0x2b8>
 80016c2:	e126      	b.n	8001912 <__aeabi_dsub+0x506>
 80016c4:	2b00      	cmp	r3, #0
 80016c6:	d100      	bne.n	80016ca <__aeabi_dsub+0x2be>
 80016c8:	e1c0      	b.n	8001a4c <__aeabi_dsub+0x640>
 80016ca:	2900      	cmp	r1, #0
 80016cc:	d100      	bne.n	80016d0 <__aeabi_dsub+0x2c4>
 80016ce:	e0a1      	b.n	8001814 <__aeabi_dsub+0x408>
 80016d0:	1a83      	subs	r3, r0, r2
 80016d2:	4698      	mov	r8, r3
 80016d4:	465b      	mov	r3, fp
 80016d6:	4540      	cmp	r0, r8
 80016d8:	41ad      	sbcs	r5, r5
 80016da:	1ae3      	subs	r3, r4, r3
 80016dc:	426d      	negs	r5, r5
 80016de:	1b5b      	subs	r3, r3, r5
 80016e0:	2580      	movs	r5, #128	@ 0x80
 80016e2:	042d      	lsls	r5, r5, #16
 80016e4:	422b      	tst	r3, r5
 80016e6:	d100      	bne.n	80016ea <__aeabi_dsub+0x2de>
 80016e8:	e14b      	b.n	8001982 <__aeabi_dsub+0x576>
 80016ea:	465b      	mov	r3, fp
 80016ec:	1a10      	subs	r0, r2, r0
 80016ee:	4282      	cmp	r2, r0
 80016f0:	4192      	sbcs	r2, r2
 80016f2:	1b1c      	subs	r4, r3, r4
 80016f4:	0007      	movs	r7, r0
 80016f6:	2601      	movs	r6, #1
 80016f8:	4663      	mov	r3, ip
 80016fa:	4252      	negs	r2, r2
 80016fc:	1aa4      	subs	r4, r4, r2
 80016fe:	4327      	orrs	r7, r4
 8001700:	401e      	ands	r6, r3
 8001702:	2f00      	cmp	r7, #0
 8001704:	d100      	bne.n	8001708 <__aeabi_dsub+0x2fc>
 8001706:	e142      	b.n	800198e <__aeabi_dsub+0x582>
 8001708:	422c      	tst	r4, r5
 800170a:	d100      	bne.n	800170e <__aeabi_dsub+0x302>
 800170c:	e26d      	b.n	8001bea <__aeabi_dsub+0x7de>
 800170e:	4b19      	ldr	r3, [pc, #100]	@ (8001774 <__aeabi_dsub+0x368>)
 8001710:	2501      	movs	r5, #1
 8001712:	401c      	ands	r4, r3
 8001714:	e71b      	b.n	800154e <__aeabi_dsub+0x142>
 8001716:	42bd      	cmp	r5, r7
 8001718:	d100      	bne.n	800171c <__aeabi_dsub+0x310>
 800171a:	e13b      	b.n	8001994 <__aeabi_dsub+0x588>
 800171c:	2701      	movs	r7, #1
 800171e:	2b38      	cmp	r3, #56	@ 0x38
 8001720:	dd00      	ble.n	8001724 <__aeabi_dsub+0x318>
 8001722:	e745      	b.n	80015b0 <__aeabi_dsub+0x1a4>
 8001724:	2780      	movs	r7, #128	@ 0x80
 8001726:	4659      	mov	r1, fp
 8001728:	043f      	lsls	r7, r7, #16
 800172a:	4339      	orrs	r1, r7
 800172c:	468b      	mov	fp, r1
 800172e:	e72a      	b.n	8001586 <__aeabi_dsub+0x17a>
 8001730:	2400      	movs	r4, #0
 8001732:	2700      	movs	r7, #0
 8001734:	052d      	lsls	r5, r5, #20
 8001736:	4325      	orrs	r5, r4
 8001738:	07f6      	lsls	r6, r6, #31
 800173a:	4335      	orrs	r5, r6
 800173c:	0038      	movs	r0, r7
 800173e:	0029      	movs	r1, r5
 8001740:	b003      	add	sp, #12
 8001742:	bcf0      	pop	{r4, r5, r6, r7}
 8001744:	46bb      	mov	fp, r7
 8001746:	46b2      	mov	sl, r6
 8001748:	46a9      	mov	r9, r5
 800174a:	46a0      	mov	r8, r4
 800174c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800174e:	077b      	lsls	r3, r7, #29
 8001750:	d004      	beq.n	800175c <__aeabi_dsub+0x350>
 8001752:	230f      	movs	r3, #15
 8001754:	403b      	ands	r3, r7
 8001756:	2b04      	cmp	r3, #4
 8001758:	d000      	beq.n	800175c <__aeabi_dsub+0x350>
 800175a:	e6e7      	b.n	800152c <__aeabi_dsub+0x120>
 800175c:	002b      	movs	r3, r5
 800175e:	08f8      	lsrs	r0, r7, #3
 8001760:	4a03      	ldr	r2, [pc, #12]	@ (8001770 <__aeabi_dsub+0x364>)
 8001762:	0767      	lsls	r7, r4, #29
 8001764:	4307      	orrs	r7, r0
 8001766:	08e5      	lsrs	r5, r4, #3
 8001768:	4293      	cmp	r3, r2
 800176a:	d100      	bne.n	800176e <__aeabi_dsub+0x362>
 800176c:	e74a      	b.n	8001604 <__aeabi_dsub+0x1f8>
 800176e:	e0a5      	b.n	80018bc <__aeabi_dsub+0x4b0>
 8001770:	000007ff 	.word	0x000007ff
 8001774:	ff7fffff 	.word	0xff7fffff
 8001778:	fffff801 	.word	0xfffff801
 800177c:	000007fe 	.word	0x000007fe
 8001780:	0038      	movs	r0, r7
 8001782:	f000 fba5 	bl	8001ed0 <__clzsi2>
 8001786:	0003      	movs	r3, r0
 8001788:	3318      	adds	r3, #24
 800178a:	2b1f      	cmp	r3, #31
 800178c:	dc00      	bgt.n	8001790 <__aeabi_dsub+0x384>
 800178e:	e6a7      	b.n	80014e0 <__aeabi_dsub+0xd4>
 8001790:	003a      	movs	r2, r7
 8001792:	3808      	subs	r0, #8
 8001794:	4082      	lsls	r2, r0
 8001796:	429d      	cmp	r5, r3
 8001798:	dd00      	ble.n	800179c <__aeabi_dsub+0x390>
 800179a:	e08a      	b.n	80018b2 <__aeabi_dsub+0x4a6>
 800179c:	1b5b      	subs	r3, r3, r5
 800179e:	1c58      	adds	r0, r3, #1
 80017a0:	281f      	cmp	r0, #31
 80017a2:	dc00      	bgt.n	80017a6 <__aeabi_dsub+0x39a>
 80017a4:	e1d8      	b.n	8001b58 <__aeabi_dsub+0x74c>
 80017a6:	0017      	movs	r7, r2
 80017a8:	3b1f      	subs	r3, #31
 80017aa:	40df      	lsrs	r7, r3
 80017ac:	2820      	cmp	r0, #32
 80017ae:	d005      	beq.n	80017bc <__aeabi_dsub+0x3b0>
 80017b0:	2340      	movs	r3, #64	@ 0x40
 80017b2:	1a1b      	subs	r3, r3, r0
 80017b4:	409a      	lsls	r2, r3
 80017b6:	1e53      	subs	r3, r2, #1
 80017b8:	419a      	sbcs	r2, r3
 80017ba:	4317      	orrs	r7, r2
 80017bc:	2500      	movs	r5, #0
 80017be:	2f00      	cmp	r7, #0
 80017c0:	d100      	bne.n	80017c4 <__aeabi_dsub+0x3b8>
 80017c2:	e0e5      	b.n	8001990 <__aeabi_dsub+0x584>
 80017c4:	077b      	lsls	r3, r7, #29
 80017c6:	d000      	beq.n	80017ca <__aeabi_dsub+0x3be>
 80017c8:	e6ab      	b.n	8001522 <__aeabi_dsub+0x116>
 80017ca:	002c      	movs	r4, r5
 80017cc:	e7c6      	b.n	800175c <__aeabi_dsub+0x350>
 80017ce:	08c0      	lsrs	r0, r0, #3
 80017d0:	e7c6      	b.n	8001760 <__aeabi_dsub+0x354>
 80017d2:	2700      	movs	r7, #0
 80017d4:	2400      	movs	r4, #0
 80017d6:	4dd1      	ldr	r5, [pc, #836]	@ (8001b1c <__aeabi_dsub+0x710>)
 80017d8:	e7ac      	b.n	8001734 <__aeabi_dsub+0x328>
 80017da:	4fd1      	ldr	r7, [pc, #836]	@ (8001b20 <__aeabi_dsub+0x714>)
 80017dc:	1c6b      	adds	r3, r5, #1
 80017de:	423b      	tst	r3, r7
 80017e0:	d171      	bne.n	80018c6 <__aeabi_dsub+0x4ba>
 80017e2:	0023      	movs	r3, r4
 80017e4:	4303      	orrs	r3, r0
 80017e6:	2d00      	cmp	r5, #0
 80017e8:	d000      	beq.n	80017ec <__aeabi_dsub+0x3e0>
 80017ea:	e14e      	b.n	8001a8a <__aeabi_dsub+0x67e>
 80017ec:	4657      	mov	r7, sl
 80017ee:	2b00      	cmp	r3, #0
 80017f0:	d100      	bne.n	80017f4 <__aeabi_dsub+0x3e8>
 80017f2:	e1b5      	b.n	8001b60 <__aeabi_dsub+0x754>
 80017f4:	2f00      	cmp	r7, #0
 80017f6:	d00d      	beq.n	8001814 <__aeabi_dsub+0x408>
 80017f8:	1883      	adds	r3, r0, r2
 80017fa:	4283      	cmp	r3, r0
 80017fc:	4180      	sbcs	r0, r0
 80017fe:	445c      	add	r4, fp
 8001800:	4240      	negs	r0, r0
 8001802:	1824      	adds	r4, r4, r0
 8001804:	0222      	lsls	r2, r4, #8
 8001806:	d500      	bpl.n	800180a <__aeabi_dsub+0x3fe>
 8001808:	e1c8      	b.n	8001b9c <__aeabi_dsub+0x790>
 800180a:	001f      	movs	r7, r3
 800180c:	4698      	mov	r8, r3
 800180e:	4327      	orrs	r7, r4
 8001810:	d100      	bne.n	8001814 <__aeabi_dsub+0x408>
 8001812:	e0bc      	b.n	800198e <__aeabi_dsub+0x582>
 8001814:	4643      	mov	r3, r8
 8001816:	0767      	lsls	r7, r4, #29
 8001818:	08db      	lsrs	r3, r3, #3
 800181a:	431f      	orrs	r7, r3
 800181c:	08e5      	lsrs	r5, r4, #3
 800181e:	2300      	movs	r3, #0
 8001820:	e04c      	b.n	80018bc <__aeabi_dsub+0x4b0>
 8001822:	1a83      	subs	r3, r0, r2
 8001824:	4698      	mov	r8, r3
 8001826:	465b      	mov	r3, fp
 8001828:	4540      	cmp	r0, r8
 800182a:	41bf      	sbcs	r7, r7
 800182c:	1ae3      	subs	r3, r4, r3
 800182e:	427f      	negs	r7, r7
 8001830:	1bdb      	subs	r3, r3, r7
 8001832:	021f      	lsls	r7, r3, #8
 8001834:	d47c      	bmi.n	8001930 <__aeabi_dsub+0x524>
 8001836:	4647      	mov	r7, r8
 8001838:	431f      	orrs	r7, r3
 800183a:	d100      	bne.n	800183e <__aeabi_dsub+0x432>
 800183c:	e0a6      	b.n	800198c <__aeabi_dsub+0x580>
 800183e:	001c      	movs	r4, r3
 8001840:	4647      	mov	r7, r8
 8001842:	e645      	b.n	80014d0 <__aeabi_dsub+0xc4>
 8001844:	4cb7      	ldr	r4, [pc, #732]	@ (8001b24 <__aeabi_dsub+0x718>)
 8001846:	1aed      	subs	r5, r5, r3
 8001848:	4014      	ands	r4, r2
 800184a:	077b      	lsls	r3, r7, #29
 800184c:	d000      	beq.n	8001850 <__aeabi_dsub+0x444>
 800184e:	e780      	b.n	8001752 <__aeabi_dsub+0x346>
 8001850:	e784      	b.n	800175c <__aeabi_dsub+0x350>
 8001852:	464b      	mov	r3, r9
 8001854:	0025      	movs	r5, r4
 8001856:	4305      	orrs	r5, r0
 8001858:	d066      	beq.n	8001928 <__aeabi_dsub+0x51c>
 800185a:	1e5f      	subs	r7, r3, #1
 800185c:	2b01      	cmp	r3, #1
 800185e:	d100      	bne.n	8001862 <__aeabi_dsub+0x456>
 8001860:	e0fc      	b.n	8001a5c <__aeabi_dsub+0x650>
 8001862:	4dae      	ldr	r5, [pc, #696]	@ (8001b1c <__aeabi_dsub+0x710>)
 8001864:	42ab      	cmp	r3, r5
 8001866:	d100      	bne.n	800186a <__aeabi_dsub+0x45e>
 8001868:	e15e      	b.n	8001b28 <__aeabi_dsub+0x71c>
 800186a:	4666      	mov	r6, ip
 800186c:	2f38      	cmp	r7, #56	@ 0x38
 800186e:	dc00      	bgt.n	8001872 <__aeabi_dsub+0x466>
 8001870:	e0b4      	b.n	80019dc <__aeabi_dsub+0x5d0>
 8001872:	2001      	movs	r0, #1
 8001874:	1a17      	subs	r7, r2, r0
 8001876:	42ba      	cmp	r2, r7
 8001878:	4192      	sbcs	r2, r2
 800187a:	465b      	mov	r3, fp
 800187c:	4252      	negs	r2, r2
 800187e:	464d      	mov	r5, r9
 8001880:	1a9c      	subs	r4, r3, r2
 8001882:	e620      	b.n	80014c6 <__aeabi_dsub+0xba>
 8001884:	0767      	lsls	r7, r4, #29
 8001886:	08c0      	lsrs	r0, r0, #3
 8001888:	4307      	orrs	r7, r0
 800188a:	08e5      	lsrs	r5, r4, #3
 800188c:	e6ba      	b.n	8001604 <__aeabi_dsub+0x1f8>
 800188e:	001f      	movs	r7, r3
 8001890:	4659      	mov	r1, fp
 8001892:	3f20      	subs	r7, #32
 8001894:	40f9      	lsrs	r1, r7
 8001896:	000f      	movs	r7, r1
 8001898:	2b20      	cmp	r3, #32
 800189a:	d005      	beq.n	80018a8 <__aeabi_dsub+0x49c>
 800189c:	2140      	movs	r1, #64	@ 0x40
 800189e:	1acb      	subs	r3, r1, r3
 80018a0:	4659      	mov	r1, fp
 80018a2:	4099      	lsls	r1, r3
 80018a4:	430a      	orrs	r2, r1
 80018a6:	4692      	mov	sl, r2
 80018a8:	4653      	mov	r3, sl
 80018aa:	1e5a      	subs	r2, r3, #1
 80018ac:	4193      	sbcs	r3, r2
 80018ae:	431f      	orrs	r7, r3
 80018b0:	e604      	b.n	80014bc <__aeabi_dsub+0xb0>
 80018b2:	1aeb      	subs	r3, r5, r3
 80018b4:	4d9b      	ldr	r5, [pc, #620]	@ (8001b24 <__aeabi_dsub+0x718>)
 80018b6:	4015      	ands	r5, r2
 80018b8:	076f      	lsls	r7, r5, #29
 80018ba:	08ed      	lsrs	r5, r5, #3
 80018bc:	032c      	lsls	r4, r5, #12
 80018be:	055d      	lsls	r5, r3, #21
 80018c0:	0b24      	lsrs	r4, r4, #12
 80018c2:	0d6d      	lsrs	r5, r5, #21
 80018c4:	e736      	b.n	8001734 <__aeabi_dsub+0x328>
 80018c6:	4d95      	ldr	r5, [pc, #596]	@ (8001b1c <__aeabi_dsub+0x710>)
 80018c8:	42ab      	cmp	r3, r5
 80018ca:	d100      	bne.n	80018ce <__aeabi_dsub+0x4c2>
 80018cc:	e0d6      	b.n	8001a7c <__aeabi_dsub+0x670>
 80018ce:	1882      	adds	r2, r0, r2
 80018d0:	0021      	movs	r1, r4
 80018d2:	4282      	cmp	r2, r0
 80018d4:	4180      	sbcs	r0, r0
 80018d6:	4459      	add	r1, fp
 80018d8:	4240      	negs	r0, r0
 80018da:	1808      	adds	r0, r1, r0
 80018dc:	07c7      	lsls	r7, r0, #31
 80018de:	0852      	lsrs	r2, r2, #1
 80018e0:	4317      	orrs	r7, r2
 80018e2:	0844      	lsrs	r4, r0, #1
 80018e4:	0752      	lsls	r2, r2, #29
 80018e6:	d400      	bmi.n	80018ea <__aeabi_dsub+0x4de>
 80018e8:	e185      	b.n	8001bf6 <__aeabi_dsub+0x7ea>
 80018ea:	220f      	movs	r2, #15
 80018ec:	001d      	movs	r5, r3
 80018ee:	403a      	ands	r2, r7
 80018f0:	2a04      	cmp	r2, #4
 80018f2:	d000      	beq.n	80018f6 <__aeabi_dsub+0x4ea>
 80018f4:	e61a      	b.n	800152c <__aeabi_dsub+0x120>
 80018f6:	08ff      	lsrs	r7, r7, #3
 80018f8:	0764      	lsls	r4, r4, #29
 80018fa:	4327      	orrs	r7, r4
 80018fc:	0905      	lsrs	r5, r0, #4
 80018fe:	e7dd      	b.n	80018bc <__aeabi_dsub+0x4b0>
 8001900:	465b      	mov	r3, fp
 8001902:	08d2      	lsrs	r2, r2, #3
 8001904:	075f      	lsls	r7, r3, #29
 8001906:	4317      	orrs	r7, r2
 8001908:	08dd      	lsrs	r5, r3, #3
 800190a:	e67b      	b.n	8001604 <__aeabi_dsub+0x1f8>
 800190c:	2700      	movs	r7, #0
 800190e:	2400      	movs	r4, #0
 8001910:	e710      	b.n	8001734 <__aeabi_dsub+0x328>
 8001912:	2b00      	cmp	r3, #0
 8001914:	d000      	beq.n	8001918 <__aeabi_dsub+0x50c>
 8001916:	e0d6      	b.n	8001ac6 <__aeabi_dsub+0x6ba>
 8001918:	2900      	cmp	r1, #0
 800191a:	d000      	beq.n	800191e <__aeabi_dsub+0x512>
 800191c:	e12f      	b.n	8001b7e <__aeabi_dsub+0x772>
 800191e:	2480      	movs	r4, #128	@ 0x80
 8001920:	2600      	movs	r6, #0
 8001922:	4d7e      	ldr	r5, [pc, #504]	@ (8001b1c <__aeabi_dsub+0x710>)
 8001924:	0324      	lsls	r4, r4, #12
 8001926:	e705      	b.n	8001734 <__aeabi_dsub+0x328>
 8001928:	4666      	mov	r6, ip
 800192a:	465c      	mov	r4, fp
 800192c:	08d0      	lsrs	r0, r2, #3
 800192e:	e717      	b.n	8001760 <__aeabi_dsub+0x354>
 8001930:	465b      	mov	r3, fp
 8001932:	1a17      	subs	r7, r2, r0
 8001934:	42ba      	cmp	r2, r7
 8001936:	4192      	sbcs	r2, r2
 8001938:	1b1c      	subs	r4, r3, r4
 800193a:	2601      	movs	r6, #1
 800193c:	4663      	mov	r3, ip
 800193e:	4252      	negs	r2, r2
 8001940:	1aa4      	subs	r4, r4, r2
 8001942:	401e      	ands	r6, r3
 8001944:	e5c4      	b.n	80014d0 <__aeabi_dsub+0xc4>
 8001946:	1883      	adds	r3, r0, r2
 8001948:	4283      	cmp	r3, r0
 800194a:	4180      	sbcs	r0, r0
 800194c:	445c      	add	r4, fp
 800194e:	4240      	negs	r0, r0
 8001950:	1825      	adds	r5, r4, r0
 8001952:	022a      	lsls	r2, r5, #8
 8001954:	d400      	bmi.n	8001958 <__aeabi_dsub+0x54c>
 8001956:	e0da      	b.n	8001b0e <__aeabi_dsub+0x702>
 8001958:	4a72      	ldr	r2, [pc, #456]	@ (8001b24 <__aeabi_dsub+0x718>)
 800195a:	085b      	lsrs	r3, r3, #1
 800195c:	4015      	ands	r5, r2
 800195e:	07ea      	lsls	r2, r5, #31
 8001960:	431a      	orrs	r2, r3
 8001962:	0869      	lsrs	r1, r5, #1
 8001964:	075b      	lsls	r3, r3, #29
 8001966:	d400      	bmi.n	800196a <__aeabi_dsub+0x55e>
 8001968:	e14a      	b.n	8001c00 <__aeabi_dsub+0x7f4>
 800196a:	230f      	movs	r3, #15
 800196c:	4013      	ands	r3, r2
 800196e:	2b04      	cmp	r3, #4
 8001970:	d100      	bne.n	8001974 <__aeabi_dsub+0x568>
 8001972:	e0fc      	b.n	8001b6e <__aeabi_dsub+0x762>
 8001974:	1d17      	adds	r7, r2, #4
 8001976:	4297      	cmp	r7, r2
 8001978:	41a4      	sbcs	r4, r4
 800197a:	4264      	negs	r4, r4
 800197c:	2502      	movs	r5, #2
 800197e:	1864      	adds	r4, r4, r1
 8001980:	e6ec      	b.n	800175c <__aeabi_dsub+0x350>
 8001982:	4647      	mov	r7, r8
 8001984:	001c      	movs	r4, r3
 8001986:	431f      	orrs	r7, r3
 8001988:	d000      	beq.n	800198c <__aeabi_dsub+0x580>
 800198a:	e743      	b.n	8001814 <__aeabi_dsub+0x408>
 800198c:	2600      	movs	r6, #0
 800198e:	2500      	movs	r5, #0
 8001990:	2400      	movs	r4, #0
 8001992:	e6cf      	b.n	8001734 <__aeabi_dsub+0x328>
 8001994:	08c0      	lsrs	r0, r0, #3
 8001996:	0767      	lsls	r7, r4, #29
 8001998:	4307      	orrs	r7, r0
 800199a:	08e5      	lsrs	r5, r4, #3
 800199c:	e632      	b.n	8001604 <__aeabi_dsub+0x1f8>
 800199e:	1a87      	subs	r7, r0, r2
 80019a0:	465b      	mov	r3, fp
 80019a2:	42b8      	cmp	r0, r7
 80019a4:	4180      	sbcs	r0, r0
 80019a6:	1ae4      	subs	r4, r4, r3
 80019a8:	4240      	negs	r0, r0
 80019aa:	1a24      	subs	r4, r4, r0
 80019ac:	0223      	lsls	r3, r4, #8
 80019ae:	d428      	bmi.n	8001a02 <__aeabi_dsub+0x5f6>
 80019b0:	0763      	lsls	r3, r4, #29
 80019b2:	08ff      	lsrs	r7, r7, #3
 80019b4:	431f      	orrs	r7, r3
 80019b6:	08e5      	lsrs	r5, r4, #3
 80019b8:	2301      	movs	r3, #1
 80019ba:	e77f      	b.n	80018bc <__aeabi_dsub+0x4b0>
 80019bc:	2b00      	cmp	r3, #0
 80019be:	d100      	bne.n	80019c2 <__aeabi_dsub+0x5b6>
 80019c0:	e673      	b.n	80016aa <__aeabi_dsub+0x29e>
 80019c2:	464b      	mov	r3, r9
 80019c4:	1b5f      	subs	r7, r3, r5
 80019c6:	003b      	movs	r3, r7
 80019c8:	2d00      	cmp	r5, #0
 80019ca:	d100      	bne.n	80019ce <__aeabi_dsub+0x5c2>
 80019cc:	e742      	b.n	8001854 <__aeabi_dsub+0x448>
 80019ce:	2f38      	cmp	r7, #56	@ 0x38
 80019d0:	dd00      	ble.n	80019d4 <__aeabi_dsub+0x5c8>
 80019d2:	e0ec      	b.n	8001bae <__aeabi_dsub+0x7a2>
 80019d4:	2380      	movs	r3, #128	@ 0x80
 80019d6:	000e      	movs	r6, r1
 80019d8:	041b      	lsls	r3, r3, #16
 80019da:	431c      	orrs	r4, r3
 80019dc:	2f1f      	cmp	r7, #31
 80019de:	dc25      	bgt.n	8001a2c <__aeabi_dsub+0x620>
 80019e0:	2520      	movs	r5, #32
 80019e2:	0023      	movs	r3, r4
 80019e4:	1bed      	subs	r5, r5, r7
 80019e6:	0001      	movs	r1, r0
 80019e8:	40a8      	lsls	r0, r5
 80019ea:	40ab      	lsls	r3, r5
 80019ec:	40f9      	lsrs	r1, r7
 80019ee:	1e45      	subs	r5, r0, #1
 80019f0:	41a8      	sbcs	r0, r5
 80019f2:	430b      	orrs	r3, r1
 80019f4:	40fc      	lsrs	r4, r7
 80019f6:	4318      	orrs	r0, r3
 80019f8:	465b      	mov	r3, fp
 80019fa:	1b1b      	subs	r3, r3, r4
 80019fc:	469b      	mov	fp, r3
 80019fe:	e739      	b.n	8001874 <__aeabi_dsub+0x468>
 8001a00:	4666      	mov	r6, ip
 8001a02:	2501      	movs	r5, #1
 8001a04:	e562      	b.n	80014cc <__aeabi_dsub+0xc0>
 8001a06:	001f      	movs	r7, r3
 8001a08:	4659      	mov	r1, fp
 8001a0a:	3f20      	subs	r7, #32
 8001a0c:	40f9      	lsrs	r1, r7
 8001a0e:	468c      	mov	ip, r1
 8001a10:	2b20      	cmp	r3, #32
 8001a12:	d005      	beq.n	8001a20 <__aeabi_dsub+0x614>
 8001a14:	2740      	movs	r7, #64	@ 0x40
 8001a16:	4659      	mov	r1, fp
 8001a18:	1afb      	subs	r3, r7, r3
 8001a1a:	4099      	lsls	r1, r3
 8001a1c:	430a      	orrs	r2, r1
 8001a1e:	4692      	mov	sl, r2
 8001a20:	4657      	mov	r7, sl
 8001a22:	1e7b      	subs	r3, r7, #1
 8001a24:	419f      	sbcs	r7, r3
 8001a26:	4663      	mov	r3, ip
 8001a28:	431f      	orrs	r7, r3
 8001a2a:	e5c1      	b.n	80015b0 <__aeabi_dsub+0x1a4>
 8001a2c:	003b      	movs	r3, r7
 8001a2e:	0025      	movs	r5, r4
 8001a30:	3b20      	subs	r3, #32
 8001a32:	40dd      	lsrs	r5, r3
 8001a34:	2f20      	cmp	r7, #32
 8001a36:	d004      	beq.n	8001a42 <__aeabi_dsub+0x636>
 8001a38:	2340      	movs	r3, #64	@ 0x40
 8001a3a:	1bdb      	subs	r3, r3, r7
 8001a3c:	409c      	lsls	r4, r3
 8001a3e:	4320      	orrs	r0, r4
 8001a40:	4680      	mov	r8, r0
 8001a42:	4640      	mov	r0, r8
 8001a44:	1e43      	subs	r3, r0, #1
 8001a46:	4198      	sbcs	r0, r3
 8001a48:	4328      	orrs	r0, r5
 8001a4a:	e713      	b.n	8001874 <__aeabi_dsub+0x468>
 8001a4c:	2900      	cmp	r1, #0
 8001a4e:	d09d      	beq.n	800198c <__aeabi_dsub+0x580>
 8001a50:	2601      	movs	r6, #1
 8001a52:	4663      	mov	r3, ip
 8001a54:	465c      	mov	r4, fp
 8001a56:	4690      	mov	r8, r2
 8001a58:	401e      	ands	r6, r3
 8001a5a:	e6db      	b.n	8001814 <__aeabi_dsub+0x408>
 8001a5c:	1a17      	subs	r7, r2, r0
 8001a5e:	465b      	mov	r3, fp
 8001a60:	42ba      	cmp	r2, r7
 8001a62:	4192      	sbcs	r2, r2
 8001a64:	1b1c      	subs	r4, r3, r4
 8001a66:	4252      	negs	r2, r2
 8001a68:	1aa4      	subs	r4, r4, r2
 8001a6a:	0223      	lsls	r3, r4, #8
 8001a6c:	d4c8      	bmi.n	8001a00 <__aeabi_dsub+0x5f4>
 8001a6e:	0763      	lsls	r3, r4, #29
 8001a70:	08ff      	lsrs	r7, r7, #3
 8001a72:	431f      	orrs	r7, r3
 8001a74:	4666      	mov	r6, ip
 8001a76:	2301      	movs	r3, #1
 8001a78:	08e5      	lsrs	r5, r4, #3
 8001a7a:	e71f      	b.n	80018bc <__aeabi_dsub+0x4b0>
 8001a7c:	001d      	movs	r5, r3
 8001a7e:	2400      	movs	r4, #0
 8001a80:	2700      	movs	r7, #0
 8001a82:	e657      	b.n	8001734 <__aeabi_dsub+0x328>
 8001a84:	465c      	mov	r4, fp
 8001a86:	08d0      	lsrs	r0, r2, #3
 8001a88:	e66a      	b.n	8001760 <__aeabi_dsub+0x354>
 8001a8a:	2b00      	cmp	r3, #0
 8001a8c:	d100      	bne.n	8001a90 <__aeabi_dsub+0x684>
 8001a8e:	e737      	b.n	8001900 <__aeabi_dsub+0x4f4>
 8001a90:	4653      	mov	r3, sl
 8001a92:	08c0      	lsrs	r0, r0, #3
 8001a94:	0767      	lsls	r7, r4, #29
 8001a96:	4307      	orrs	r7, r0
 8001a98:	08e5      	lsrs	r5, r4, #3
 8001a9a:	2b00      	cmp	r3, #0
 8001a9c:	d100      	bne.n	8001aa0 <__aeabi_dsub+0x694>
 8001a9e:	e5b1      	b.n	8001604 <__aeabi_dsub+0x1f8>
 8001aa0:	2380      	movs	r3, #128	@ 0x80
 8001aa2:	031b      	lsls	r3, r3, #12
 8001aa4:	421d      	tst	r5, r3
 8001aa6:	d008      	beq.n	8001aba <__aeabi_dsub+0x6ae>
 8001aa8:	4659      	mov	r1, fp
 8001aaa:	08c8      	lsrs	r0, r1, #3
 8001aac:	4218      	tst	r0, r3
 8001aae:	d104      	bne.n	8001aba <__aeabi_dsub+0x6ae>
 8001ab0:	08d2      	lsrs	r2, r2, #3
 8001ab2:	0749      	lsls	r1, r1, #29
 8001ab4:	430a      	orrs	r2, r1
 8001ab6:	0017      	movs	r7, r2
 8001ab8:	0005      	movs	r5, r0
 8001aba:	0f7b      	lsrs	r3, r7, #29
 8001abc:	00ff      	lsls	r7, r7, #3
 8001abe:	08ff      	lsrs	r7, r7, #3
 8001ac0:	075b      	lsls	r3, r3, #29
 8001ac2:	431f      	orrs	r7, r3
 8001ac4:	e59e      	b.n	8001604 <__aeabi_dsub+0x1f8>
 8001ac6:	08c0      	lsrs	r0, r0, #3
 8001ac8:	0763      	lsls	r3, r4, #29
 8001aca:	4318      	orrs	r0, r3
 8001acc:	08e5      	lsrs	r5, r4, #3
 8001ace:	2900      	cmp	r1, #0
 8001ad0:	d053      	beq.n	8001b7a <__aeabi_dsub+0x76e>
 8001ad2:	2380      	movs	r3, #128	@ 0x80
 8001ad4:	031b      	lsls	r3, r3, #12
 8001ad6:	421d      	tst	r5, r3
 8001ad8:	d00a      	beq.n	8001af0 <__aeabi_dsub+0x6e4>
 8001ada:	4659      	mov	r1, fp
 8001adc:	08cc      	lsrs	r4, r1, #3
 8001ade:	421c      	tst	r4, r3
 8001ae0:	d106      	bne.n	8001af0 <__aeabi_dsub+0x6e4>
 8001ae2:	2601      	movs	r6, #1
 8001ae4:	4663      	mov	r3, ip
 8001ae6:	0025      	movs	r5, r4
 8001ae8:	08d0      	lsrs	r0, r2, #3
 8001aea:	0749      	lsls	r1, r1, #29
 8001aec:	4308      	orrs	r0, r1
 8001aee:	401e      	ands	r6, r3
 8001af0:	0f47      	lsrs	r7, r0, #29
 8001af2:	00c0      	lsls	r0, r0, #3
 8001af4:	08c0      	lsrs	r0, r0, #3
 8001af6:	077f      	lsls	r7, r7, #29
 8001af8:	4307      	orrs	r7, r0
 8001afa:	e583      	b.n	8001604 <__aeabi_dsub+0x1f8>
 8001afc:	1883      	adds	r3, r0, r2
 8001afe:	4293      	cmp	r3, r2
 8001b00:	4192      	sbcs	r2, r2
 8001b02:	445c      	add	r4, fp
 8001b04:	4252      	negs	r2, r2
 8001b06:	18a5      	adds	r5, r4, r2
 8001b08:	022a      	lsls	r2, r5, #8
 8001b0a:	d500      	bpl.n	8001b0e <__aeabi_dsub+0x702>
 8001b0c:	e724      	b.n	8001958 <__aeabi_dsub+0x54c>
 8001b0e:	076f      	lsls	r7, r5, #29
 8001b10:	08db      	lsrs	r3, r3, #3
 8001b12:	431f      	orrs	r7, r3
 8001b14:	08ed      	lsrs	r5, r5, #3
 8001b16:	2301      	movs	r3, #1
 8001b18:	e6d0      	b.n	80018bc <__aeabi_dsub+0x4b0>
 8001b1a:	46c0      	nop			@ (mov r8, r8)
 8001b1c:	000007ff 	.word	0x000007ff
 8001b20:	000007fe 	.word	0x000007fe
 8001b24:	ff7fffff 	.word	0xff7fffff
 8001b28:	465b      	mov	r3, fp
 8001b2a:	08d2      	lsrs	r2, r2, #3
 8001b2c:	075f      	lsls	r7, r3, #29
 8001b2e:	4666      	mov	r6, ip
 8001b30:	4317      	orrs	r7, r2
 8001b32:	08dd      	lsrs	r5, r3, #3
 8001b34:	e566      	b.n	8001604 <__aeabi_dsub+0x1f8>
 8001b36:	0025      	movs	r5, r4
 8001b38:	3b20      	subs	r3, #32
 8001b3a:	40dd      	lsrs	r5, r3
 8001b3c:	4663      	mov	r3, ip
 8001b3e:	2b20      	cmp	r3, #32
 8001b40:	d005      	beq.n	8001b4e <__aeabi_dsub+0x742>
 8001b42:	2340      	movs	r3, #64	@ 0x40
 8001b44:	4661      	mov	r1, ip
 8001b46:	1a5b      	subs	r3, r3, r1
 8001b48:	409c      	lsls	r4, r3
 8001b4a:	4320      	orrs	r0, r4
 8001b4c:	4680      	mov	r8, r0
 8001b4e:	4647      	mov	r7, r8
 8001b50:	1e7b      	subs	r3, r7, #1
 8001b52:	419f      	sbcs	r7, r3
 8001b54:	432f      	orrs	r7, r5
 8001b56:	e5a0      	b.n	800169a <__aeabi_dsub+0x28e>
 8001b58:	2120      	movs	r1, #32
 8001b5a:	2700      	movs	r7, #0
 8001b5c:	1a09      	subs	r1, r1, r0
 8001b5e:	e4d2      	b.n	8001506 <__aeabi_dsub+0xfa>
 8001b60:	2f00      	cmp	r7, #0
 8001b62:	d100      	bne.n	8001b66 <__aeabi_dsub+0x75a>
 8001b64:	e713      	b.n	800198e <__aeabi_dsub+0x582>
 8001b66:	465c      	mov	r4, fp
 8001b68:	0017      	movs	r7, r2
 8001b6a:	2500      	movs	r5, #0
 8001b6c:	e5f6      	b.n	800175c <__aeabi_dsub+0x350>
 8001b6e:	08d7      	lsrs	r7, r2, #3
 8001b70:	0749      	lsls	r1, r1, #29
 8001b72:	2302      	movs	r3, #2
 8001b74:	430f      	orrs	r7, r1
 8001b76:	092d      	lsrs	r5, r5, #4
 8001b78:	e6a0      	b.n	80018bc <__aeabi_dsub+0x4b0>
 8001b7a:	0007      	movs	r7, r0
 8001b7c:	e542      	b.n	8001604 <__aeabi_dsub+0x1f8>
 8001b7e:	465b      	mov	r3, fp
 8001b80:	2601      	movs	r6, #1
 8001b82:	075f      	lsls	r7, r3, #29
 8001b84:	08dd      	lsrs	r5, r3, #3
 8001b86:	4663      	mov	r3, ip
 8001b88:	08d2      	lsrs	r2, r2, #3
 8001b8a:	4317      	orrs	r7, r2
 8001b8c:	401e      	ands	r6, r3
 8001b8e:	e539      	b.n	8001604 <__aeabi_dsub+0x1f8>
 8001b90:	465b      	mov	r3, fp
 8001b92:	08d2      	lsrs	r2, r2, #3
 8001b94:	075f      	lsls	r7, r3, #29
 8001b96:	4317      	orrs	r7, r2
 8001b98:	08dd      	lsrs	r5, r3, #3
 8001b9a:	e533      	b.n	8001604 <__aeabi_dsub+0x1f8>
 8001b9c:	4a1e      	ldr	r2, [pc, #120]	@ (8001c18 <__aeabi_dsub+0x80c>)
 8001b9e:	08db      	lsrs	r3, r3, #3
 8001ba0:	4022      	ands	r2, r4
 8001ba2:	0757      	lsls	r7, r2, #29
 8001ba4:	0252      	lsls	r2, r2, #9
 8001ba6:	2501      	movs	r5, #1
 8001ba8:	431f      	orrs	r7, r3
 8001baa:	0b14      	lsrs	r4, r2, #12
 8001bac:	e5c2      	b.n	8001734 <__aeabi_dsub+0x328>
 8001bae:	000e      	movs	r6, r1
 8001bb0:	2001      	movs	r0, #1
 8001bb2:	e65f      	b.n	8001874 <__aeabi_dsub+0x468>
 8001bb4:	2b00      	cmp	r3, #0
 8001bb6:	d00d      	beq.n	8001bd4 <__aeabi_dsub+0x7c8>
 8001bb8:	464b      	mov	r3, r9
 8001bba:	1b5b      	subs	r3, r3, r5
 8001bbc:	469c      	mov	ip, r3
 8001bbe:	2d00      	cmp	r5, #0
 8001bc0:	d100      	bne.n	8001bc4 <__aeabi_dsub+0x7b8>
 8001bc2:	e548      	b.n	8001656 <__aeabi_dsub+0x24a>
 8001bc4:	2701      	movs	r7, #1
 8001bc6:	2b38      	cmp	r3, #56	@ 0x38
 8001bc8:	dd00      	ble.n	8001bcc <__aeabi_dsub+0x7c0>
 8001bca:	e566      	b.n	800169a <__aeabi_dsub+0x28e>
 8001bcc:	2380      	movs	r3, #128	@ 0x80
 8001bce:	041b      	lsls	r3, r3, #16
 8001bd0:	431c      	orrs	r4, r3
 8001bd2:	e550      	b.n	8001676 <__aeabi_dsub+0x26a>
 8001bd4:	1c6b      	adds	r3, r5, #1
 8001bd6:	4d11      	ldr	r5, [pc, #68]	@ (8001c1c <__aeabi_dsub+0x810>)
 8001bd8:	422b      	tst	r3, r5
 8001bda:	d000      	beq.n	8001bde <__aeabi_dsub+0x7d2>
 8001bdc:	e673      	b.n	80018c6 <__aeabi_dsub+0x4ba>
 8001bde:	4659      	mov	r1, fp
 8001be0:	0023      	movs	r3, r4
 8001be2:	4311      	orrs	r1, r2
 8001be4:	468a      	mov	sl, r1
 8001be6:	4303      	orrs	r3, r0
 8001be8:	e600      	b.n	80017ec <__aeabi_dsub+0x3e0>
 8001bea:	0767      	lsls	r7, r4, #29
 8001bec:	08c0      	lsrs	r0, r0, #3
 8001bee:	2300      	movs	r3, #0
 8001bf0:	4307      	orrs	r7, r0
 8001bf2:	08e5      	lsrs	r5, r4, #3
 8001bf4:	e662      	b.n	80018bc <__aeabi_dsub+0x4b0>
 8001bf6:	0764      	lsls	r4, r4, #29
 8001bf8:	08ff      	lsrs	r7, r7, #3
 8001bfa:	4327      	orrs	r7, r4
 8001bfc:	0905      	lsrs	r5, r0, #4
 8001bfe:	e65d      	b.n	80018bc <__aeabi_dsub+0x4b0>
 8001c00:	08d2      	lsrs	r2, r2, #3
 8001c02:	0749      	lsls	r1, r1, #29
 8001c04:	4311      	orrs	r1, r2
 8001c06:	000f      	movs	r7, r1
 8001c08:	2302      	movs	r3, #2
 8001c0a:	092d      	lsrs	r5, r5, #4
 8001c0c:	e656      	b.n	80018bc <__aeabi_dsub+0x4b0>
 8001c0e:	0007      	movs	r7, r0
 8001c10:	e5a4      	b.n	800175c <__aeabi_dsub+0x350>
 8001c12:	0038      	movs	r0, r7
 8001c14:	e48f      	b.n	8001536 <__aeabi_dsub+0x12a>
 8001c16:	46c0      	nop			@ (mov r8, r8)
 8001c18:	ff7fffff 	.word	0xff7fffff
 8001c1c:	000007fe 	.word	0x000007fe

08001c20 <__aeabi_d2iz>:
 8001c20:	000b      	movs	r3, r1
 8001c22:	0002      	movs	r2, r0
 8001c24:	b570      	push	{r4, r5, r6, lr}
 8001c26:	4d16      	ldr	r5, [pc, #88]	@ (8001c80 <__aeabi_d2iz+0x60>)
 8001c28:	030c      	lsls	r4, r1, #12
 8001c2a:	b082      	sub	sp, #8
 8001c2c:	0049      	lsls	r1, r1, #1
 8001c2e:	2000      	movs	r0, #0
 8001c30:	9200      	str	r2, [sp, #0]
 8001c32:	9301      	str	r3, [sp, #4]
 8001c34:	0b24      	lsrs	r4, r4, #12
 8001c36:	0d49      	lsrs	r1, r1, #21
 8001c38:	0fde      	lsrs	r6, r3, #31
 8001c3a:	42a9      	cmp	r1, r5
 8001c3c:	dd04      	ble.n	8001c48 <__aeabi_d2iz+0x28>
 8001c3e:	4811      	ldr	r0, [pc, #68]	@ (8001c84 <__aeabi_d2iz+0x64>)
 8001c40:	4281      	cmp	r1, r0
 8001c42:	dd03      	ble.n	8001c4c <__aeabi_d2iz+0x2c>
 8001c44:	4b10      	ldr	r3, [pc, #64]	@ (8001c88 <__aeabi_d2iz+0x68>)
 8001c46:	18f0      	adds	r0, r6, r3
 8001c48:	b002      	add	sp, #8
 8001c4a:	bd70      	pop	{r4, r5, r6, pc}
 8001c4c:	2080      	movs	r0, #128	@ 0x80
 8001c4e:	0340      	lsls	r0, r0, #13
 8001c50:	4320      	orrs	r0, r4
 8001c52:	4c0e      	ldr	r4, [pc, #56]	@ (8001c8c <__aeabi_d2iz+0x6c>)
 8001c54:	1a64      	subs	r4, r4, r1
 8001c56:	2c1f      	cmp	r4, #31
 8001c58:	dd08      	ble.n	8001c6c <__aeabi_d2iz+0x4c>
 8001c5a:	4b0d      	ldr	r3, [pc, #52]	@ (8001c90 <__aeabi_d2iz+0x70>)
 8001c5c:	1a5b      	subs	r3, r3, r1
 8001c5e:	40d8      	lsrs	r0, r3
 8001c60:	0003      	movs	r3, r0
 8001c62:	4258      	negs	r0, r3
 8001c64:	2e00      	cmp	r6, #0
 8001c66:	d1ef      	bne.n	8001c48 <__aeabi_d2iz+0x28>
 8001c68:	0018      	movs	r0, r3
 8001c6a:	e7ed      	b.n	8001c48 <__aeabi_d2iz+0x28>
 8001c6c:	4b09      	ldr	r3, [pc, #36]	@ (8001c94 <__aeabi_d2iz+0x74>)
 8001c6e:	9a00      	ldr	r2, [sp, #0]
 8001c70:	469c      	mov	ip, r3
 8001c72:	0003      	movs	r3, r0
 8001c74:	4461      	add	r1, ip
 8001c76:	408b      	lsls	r3, r1
 8001c78:	40e2      	lsrs	r2, r4
 8001c7a:	4313      	orrs	r3, r2
 8001c7c:	e7f1      	b.n	8001c62 <__aeabi_d2iz+0x42>
 8001c7e:	46c0      	nop			@ (mov r8, r8)
 8001c80:	000003fe 	.word	0x000003fe
 8001c84:	0000041d 	.word	0x0000041d
 8001c88:	7fffffff 	.word	0x7fffffff
 8001c8c:	00000433 	.word	0x00000433
 8001c90:	00000413 	.word	0x00000413
 8001c94:	fffffbed 	.word	0xfffffbed

08001c98 <__aeabi_i2d>:
 8001c98:	b570      	push	{r4, r5, r6, lr}
 8001c9a:	2800      	cmp	r0, #0
 8001c9c:	d016      	beq.n	8001ccc <__aeabi_i2d+0x34>
 8001c9e:	17c3      	asrs	r3, r0, #31
 8001ca0:	18c5      	adds	r5, r0, r3
 8001ca2:	405d      	eors	r5, r3
 8001ca4:	0fc4      	lsrs	r4, r0, #31
 8001ca6:	0028      	movs	r0, r5
 8001ca8:	f000 f912 	bl	8001ed0 <__clzsi2>
 8001cac:	4b10      	ldr	r3, [pc, #64]	@ (8001cf0 <__aeabi_i2d+0x58>)
 8001cae:	1a1b      	subs	r3, r3, r0
 8001cb0:	055b      	lsls	r3, r3, #21
 8001cb2:	0d5b      	lsrs	r3, r3, #21
 8001cb4:	280a      	cmp	r0, #10
 8001cb6:	dc14      	bgt.n	8001ce2 <__aeabi_i2d+0x4a>
 8001cb8:	0002      	movs	r2, r0
 8001cba:	002e      	movs	r6, r5
 8001cbc:	3215      	adds	r2, #21
 8001cbe:	4096      	lsls	r6, r2
 8001cc0:	220b      	movs	r2, #11
 8001cc2:	1a12      	subs	r2, r2, r0
 8001cc4:	40d5      	lsrs	r5, r2
 8001cc6:	032d      	lsls	r5, r5, #12
 8001cc8:	0b2d      	lsrs	r5, r5, #12
 8001cca:	e003      	b.n	8001cd4 <__aeabi_i2d+0x3c>
 8001ccc:	2400      	movs	r4, #0
 8001cce:	2300      	movs	r3, #0
 8001cd0:	2500      	movs	r5, #0
 8001cd2:	2600      	movs	r6, #0
 8001cd4:	051b      	lsls	r3, r3, #20
 8001cd6:	432b      	orrs	r3, r5
 8001cd8:	07e4      	lsls	r4, r4, #31
 8001cda:	4323      	orrs	r3, r4
 8001cdc:	0030      	movs	r0, r6
 8001cde:	0019      	movs	r1, r3
 8001ce0:	bd70      	pop	{r4, r5, r6, pc}
 8001ce2:	380b      	subs	r0, #11
 8001ce4:	4085      	lsls	r5, r0
 8001ce6:	032d      	lsls	r5, r5, #12
 8001ce8:	2600      	movs	r6, #0
 8001cea:	0b2d      	lsrs	r5, r5, #12
 8001cec:	e7f2      	b.n	8001cd4 <__aeabi_i2d+0x3c>
 8001cee:	46c0      	nop			@ (mov r8, r8)
 8001cf0:	0000041e 	.word	0x0000041e

08001cf4 <__aeabi_ui2d>:
 8001cf4:	b510      	push	{r4, lr}
 8001cf6:	1e04      	subs	r4, r0, #0
 8001cf8:	d010      	beq.n	8001d1c <__aeabi_ui2d+0x28>
 8001cfa:	f000 f8e9 	bl	8001ed0 <__clzsi2>
 8001cfe:	4b0e      	ldr	r3, [pc, #56]	@ (8001d38 <__aeabi_ui2d+0x44>)
 8001d00:	1a1b      	subs	r3, r3, r0
 8001d02:	055b      	lsls	r3, r3, #21
 8001d04:	0d5b      	lsrs	r3, r3, #21
 8001d06:	280a      	cmp	r0, #10
 8001d08:	dc0f      	bgt.n	8001d2a <__aeabi_ui2d+0x36>
 8001d0a:	220b      	movs	r2, #11
 8001d0c:	0021      	movs	r1, r4
 8001d0e:	1a12      	subs	r2, r2, r0
 8001d10:	40d1      	lsrs	r1, r2
 8001d12:	3015      	adds	r0, #21
 8001d14:	030a      	lsls	r2, r1, #12
 8001d16:	4084      	lsls	r4, r0
 8001d18:	0b12      	lsrs	r2, r2, #12
 8001d1a:	e001      	b.n	8001d20 <__aeabi_ui2d+0x2c>
 8001d1c:	2300      	movs	r3, #0
 8001d1e:	2200      	movs	r2, #0
 8001d20:	051b      	lsls	r3, r3, #20
 8001d22:	4313      	orrs	r3, r2
 8001d24:	0020      	movs	r0, r4
 8001d26:	0019      	movs	r1, r3
 8001d28:	bd10      	pop	{r4, pc}
 8001d2a:	0022      	movs	r2, r4
 8001d2c:	380b      	subs	r0, #11
 8001d2e:	4082      	lsls	r2, r0
 8001d30:	0312      	lsls	r2, r2, #12
 8001d32:	2400      	movs	r4, #0
 8001d34:	0b12      	lsrs	r2, r2, #12
 8001d36:	e7f3      	b.n	8001d20 <__aeabi_ui2d+0x2c>
 8001d38:	0000041e 	.word	0x0000041e

08001d3c <__aeabi_f2d>:
 8001d3c:	b570      	push	{r4, r5, r6, lr}
 8001d3e:	0242      	lsls	r2, r0, #9
 8001d40:	0043      	lsls	r3, r0, #1
 8001d42:	0fc4      	lsrs	r4, r0, #31
 8001d44:	20fe      	movs	r0, #254	@ 0xfe
 8001d46:	0e1b      	lsrs	r3, r3, #24
 8001d48:	1c59      	adds	r1, r3, #1
 8001d4a:	0a55      	lsrs	r5, r2, #9
 8001d4c:	4208      	tst	r0, r1
 8001d4e:	d00c      	beq.n	8001d6a <__aeabi_f2d+0x2e>
 8001d50:	21e0      	movs	r1, #224	@ 0xe0
 8001d52:	0089      	lsls	r1, r1, #2
 8001d54:	468c      	mov	ip, r1
 8001d56:	076d      	lsls	r5, r5, #29
 8001d58:	0b12      	lsrs	r2, r2, #12
 8001d5a:	4463      	add	r3, ip
 8001d5c:	051b      	lsls	r3, r3, #20
 8001d5e:	4313      	orrs	r3, r2
 8001d60:	07e4      	lsls	r4, r4, #31
 8001d62:	4323      	orrs	r3, r4
 8001d64:	0028      	movs	r0, r5
 8001d66:	0019      	movs	r1, r3
 8001d68:	bd70      	pop	{r4, r5, r6, pc}
 8001d6a:	2b00      	cmp	r3, #0
 8001d6c:	d114      	bne.n	8001d98 <__aeabi_f2d+0x5c>
 8001d6e:	2d00      	cmp	r5, #0
 8001d70:	d01b      	beq.n	8001daa <__aeabi_f2d+0x6e>
 8001d72:	0028      	movs	r0, r5
 8001d74:	f000 f8ac 	bl	8001ed0 <__clzsi2>
 8001d78:	280a      	cmp	r0, #10
 8001d7a:	dc1c      	bgt.n	8001db6 <__aeabi_f2d+0x7a>
 8001d7c:	230b      	movs	r3, #11
 8001d7e:	002a      	movs	r2, r5
 8001d80:	1a1b      	subs	r3, r3, r0
 8001d82:	40da      	lsrs	r2, r3
 8001d84:	0003      	movs	r3, r0
 8001d86:	3315      	adds	r3, #21
 8001d88:	409d      	lsls	r5, r3
 8001d8a:	4b0e      	ldr	r3, [pc, #56]	@ (8001dc4 <__aeabi_f2d+0x88>)
 8001d8c:	0312      	lsls	r2, r2, #12
 8001d8e:	1a1b      	subs	r3, r3, r0
 8001d90:	055b      	lsls	r3, r3, #21
 8001d92:	0b12      	lsrs	r2, r2, #12
 8001d94:	0d5b      	lsrs	r3, r3, #21
 8001d96:	e7e1      	b.n	8001d5c <__aeabi_f2d+0x20>
 8001d98:	2d00      	cmp	r5, #0
 8001d9a:	d009      	beq.n	8001db0 <__aeabi_f2d+0x74>
 8001d9c:	0b13      	lsrs	r3, r2, #12
 8001d9e:	2280      	movs	r2, #128	@ 0x80
 8001da0:	0312      	lsls	r2, r2, #12
 8001da2:	431a      	orrs	r2, r3
 8001da4:	076d      	lsls	r5, r5, #29
 8001da6:	4b08      	ldr	r3, [pc, #32]	@ (8001dc8 <__aeabi_f2d+0x8c>)
 8001da8:	e7d8      	b.n	8001d5c <__aeabi_f2d+0x20>
 8001daa:	2300      	movs	r3, #0
 8001dac:	2200      	movs	r2, #0
 8001dae:	e7d5      	b.n	8001d5c <__aeabi_f2d+0x20>
 8001db0:	2200      	movs	r2, #0
 8001db2:	4b05      	ldr	r3, [pc, #20]	@ (8001dc8 <__aeabi_f2d+0x8c>)
 8001db4:	e7d2      	b.n	8001d5c <__aeabi_f2d+0x20>
 8001db6:	0003      	movs	r3, r0
 8001db8:	002a      	movs	r2, r5
 8001dba:	3b0b      	subs	r3, #11
 8001dbc:	409a      	lsls	r2, r3
 8001dbe:	2500      	movs	r5, #0
 8001dc0:	e7e3      	b.n	8001d8a <__aeabi_f2d+0x4e>
 8001dc2:	46c0      	nop			@ (mov r8, r8)
 8001dc4:	00000389 	.word	0x00000389
 8001dc8:	000007ff 	.word	0x000007ff

08001dcc <__aeabi_d2f>:
 8001dcc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001dce:	004b      	lsls	r3, r1, #1
 8001dd0:	030f      	lsls	r7, r1, #12
 8001dd2:	0d5b      	lsrs	r3, r3, #21
 8001dd4:	4c3a      	ldr	r4, [pc, #232]	@ (8001ec0 <__aeabi_d2f+0xf4>)
 8001dd6:	0f45      	lsrs	r5, r0, #29
 8001dd8:	b083      	sub	sp, #12
 8001dda:	0a7f      	lsrs	r7, r7, #9
 8001ddc:	1c5e      	adds	r6, r3, #1
 8001dde:	432f      	orrs	r7, r5
 8001de0:	9000      	str	r0, [sp, #0]
 8001de2:	9101      	str	r1, [sp, #4]
 8001de4:	0fca      	lsrs	r2, r1, #31
 8001de6:	00c5      	lsls	r5, r0, #3
 8001de8:	4226      	tst	r6, r4
 8001dea:	d00b      	beq.n	8001e04 <__aeabi_d2f+0x38>
 8001dec:	4935      	ldr	r1, [pc, #212]	@ (8001ec4 <__aeabi_d2f+0xf8>)
 8001dee:	185c      	adds	r4, r3, r1
 8001df0:	2cfe      	cmp	r4, #254	@ 0xfe
 8001df2:	dd13      	ble.n	8001e1c <__aeabi_d2f+0x50>
 8001df4:	20ff      	movs	r0, #255	@ 0xff
 8001df6:	2300      	movs	r3, #0
 8001df8:	05c0      	lsls	r0, r0, #23
 8001dfa:	4318      	orrs	r0, r3
 8001dfc:	07d2      	lsls	r2, r2, #31
 8001dfe:	4310      	orrs	r0, r2
 8001e00:	b003      	add	sp, #12
 8001e02:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001e04:	433d      	orrs	r5, r7
 8001e06:	2b00      	cmp	r3, #0
 8001e08:	d101      	bne.n	8001e0e <__aeabi_d2f+0x42>
 8001e0a:	2000      	movs	r0, #0
 8001e0c:	e7f4      	b.n	8001df8 <__aeabi_d2f+0x2c>
 8001e0e:	2d00      	cmp	r5, #0
 8001e10:	d0f0      	beq.n	8001df4 <__aeabi_d2f+0x28>
 8001e12:	2380      	movs	r3, #128	@ 0x80
 8001e14:	03db      	lsls	r3, r3, #15
 8001e16:	20ff      	movs	r0, #255	@ 0xff
 8001e18:	433b      	orrs	r3, r7
 8001e1a:	e7ed      	b.n	8001df8 <__aeabi_d2f+0x2c>
 8001e1c:	2c00      	cmp	r4, #0
 8001e1e:	dd0c      	ble.n	8001e3a <__aeabi_d2f+0x6e>
 8001e20:	9b00      	ldr	r3, [sp, #0]
 8001e22:	00ff      	lsls	r7, r7, #3
 8001e24:	019b      	lsls	r3, r3, #6
 8001e26:	1e58      	subs	r0, r3, #1
 8001e28:	4183      	sbcs	r3, r0
 8001e2a:	0f69      	lsrs	r1, r5, #29
 8001e2c:	433b      	orrs	r3, r7
 8001e2e:	430b      	orrs	r3, r1
 8001e30:	0759      	lsls	r1, r3, #29
 8001e32:	d127      	bne.n	8001e84 <__aeabi_d2f+0xb8>
 8001e34:	08db      	lsrs	r3, r3, #3
 8001e36:	b2e0      	uxtb	r0, r4
 8001e38:	e7de      	b.n	8001df8 <__aeabi_d2f+0x2c>
 8001e3a:	0021      	movs	r1, r4
 8001e3c:	3117      	adds	r1, #23
 8001e3e:	db31      	blt.n	8001ea4 <__aeabi_d2f+0xd8>
 8001e40:	2180      	movs	r1, #128	@ 0x80
 8001e42:	201e      	movs	r0, #30
 8001e44:	0409      	lsls	r1, r1, #16
 8001e46:	4339      	orrs	r1, r7
 8001e48:	1b00      	subs	r0, r0, r4
 8001e4a:	281f      	cmp	r0, #31
 8001e4c:	dd2d      	ble.n	8001eaa <__aeabi_d2f+0xde>
 8001e4e:	2602      	movs	r6, #2
 8001e50:	4276      	negs	r6, r6
 8001e52:	1b34      	subs	r4, r6, r4
 8001e54:	000e      	movs	r6, r1
 8001e56:	40e6      	lsrs	r6, r4
 8001e58:	0034      	movs	r4, r6
 8001e5a:	2820      	cmp	r0, #32
 8001e5c:	d004      	beq.n	8001e68 <__aeabi_d2f+0x9c>
 8001e5e:	481a      	ldr	r0, [pc, #104]	@ (8001ec8 <__aeabi_d2f+0xfc>)
 8001e60:	4684      	mov	ip, r0
 8001e62:	4463      	add	r3, ip
 8001e64:	4099      	lsls	r1, r3
 8001e66:	430d      	orrs	r5, r1
 8001e68:	002b      	movs	r3, r5
 8001e6a:	1e59      	subs	r1, r3, #1
 8001e6c:	418b      	sbcs	r3, r1
 8001e6e:	4323      	orrs	r3, r4
 8001e70:	0759      	lsls	r1, r3, #29
 8001e72:	d003      	beq.n	8001e7c <__aeabi_d2f+0xb0>
 8001e74:	210f      	movs	r1, #15
 8001e76:	4019      	ands	r1, r3
 8001e78:	2904      	cmp	r1, #4
 8001e7a:	d10b      	bne.n	8001e94 <__aeabi_d2f+0xc8>
 8001e7c:	019b      	lsls	r3, r3, #6
 8001e7e:	2000      	movs	r0, #0
 8001e80:	0a5b      	lsrs	r3, r3, #9
 8001e82:	e7b9      	b.n	8001df8 <__aeabi_d2f+0x2c>
 8001e84:	210f      	movs	r1, #15
 8001e86:	4019      	ands	r1, r3
 8001e88:	2904      	cmp	r1, #4
 8001e8a:	d104      	bne.n	8001e96 <__aeabi_d2f+0xca>
 8001e8c:	019b      	lsls	r3, r3, #6
 8001e8e:	0a5b      	lsrs	r3, r3, #9
 8001e90:	b2e0      	uxtb	r0, r4
 8001e92:	e7b1      	b.n	8001df8 <__aeabi_d2f+0x2c>
 8001e94:	2400      	movs	r4, #0
 8001e96:	3304      	adds	r3, #4
 8001e98:	0159      	lsls	r1, r3, #5
 8001e9a:	d5f7      	bpl.n	8001e8c <__aeabi_d2f+0xc0>
 8001e9c:	3401      	adds	r4, #1
 8001e9e:	2300      	movs	r3, #0
 8001ea0:	b2e0      	uxtb	r0, r4
 8001ea2:	e7a9      	b.n	8001df8 <__aeabi_d2f+0x2c>
 8001ea4:	2000      	movs	r0, #0
 8001ea6:	2300      	movs	r3, #0
 8001ea8:	e7a6      	b.n	8001df8 <__aeabi_d2f+0x2c>
 8001eaa:	4c08      	ldr	r4, [pc, #32]	@ (8001ecc <__aeabi_d2f+0x100>)
 8001eac:	191c      	adds	r4, r3, r4
 8001eae:	002b      	movs	r3, r5
 8001eb0:	40a5      	lsls	r5, r4
 8001eb2:	40c3      	lsrs	r3, r0
 8001eb4:	40a1      	lsls	r1, r4
 8001eb6:	1e68      	subs	r0, r5, #1
 8001eb8:	4185      	sbcs	r5, r0
 8001eba:	4329      	orrs	r1, r5
 8001ebc:	430b      	orrs	r3, r1
 8001ebe:	e7d7      	b.n	8001e70 <__aeabi_d2f+0xa4>
 8001ec0:	000007fe 	.word	0x000007fe
 8001ec4:	fffffc80 	.word	0xfffffc80
 8001ec8:	fffffca2 	.word	0xfffffca2
 8001ecc:	fffffc82 	.word	0xfffffc82

08001ed0 <__clzsi2>:
 8001ed0:	211c      	movs	r1, #28
 8001ed2:	2301      	movs	r3, #1
 8001ed4:	041b      	lsls	r3, r3, #16
 8001ed6:	4298      	cmp	r0, r3
 8001ed8:	d301      	bcc.n	8001ede <__clzsi2+0xe>
 8001eda:	0c00      	lsrs	r0, r0, #16
 8001edc:	3910      	subs	r1, #16
 8001ede:	0a1b      	lsrs	r3, r3, #8
 8001ee0:	4298      	cmp	r0, r3
 8001ee2:	d301      	bcc.n	8001ee8 <__clzsi2+0x18>
 8001ee4:	0a00      	lsrs	r0, r0, #8
 8001ee6:	3908      	subs	r1, #8
 8001ee8:	091b      	lsrs	r3, r3, #4
 8001eea:	4298      	cmp	r0, r3
 8001eec:	d301      	bcc.n	8001ef2 <__clzsi2+0x22>
 8001eee:	0900      	lsrs	r0, r0, #4
 8001ef0:	3904      	subs	r1, #4
 8001ef2:	a202      	add	r2, pc, #8	@ (adr r2, 8001efc <__clzsi2+0x2c>)
 8001ef4:	5c10      	ldrb	r0, [r2, r0]
 8001ef6:	1840      	adds	r0, r0, r1
 8001ef8:	4770      	bx	lr
 8001efa:	46c0      	nop			@ (mov r8, r8)
 8001efc:	02020304 	.word	0x02020304
 8001f00:	01010101 	.word	0x01010101
	...

08001f0c <Undamped_step>:
static RT_MODEL rtM_;
RT_MODEL *const rtM = &rtM_;

/* Model step function */
void Undamped_step(void)
{
 8001f0c:	b5b0      	push	{r4, r5, r7, lr}
 8001f0e:	b084      	sub	sp, #16
 8001f10:	af00      	add	r7, sp, #0
  real_T rtb_DiscreteTimeIntegrator;
  real_T rtb_uI;

  /* DiscreteIntegrator: '<S1>/Discrete-Time Integrator' */
  rtb_DiscreteTimeIntegrator = rtDW.DiscreteTimeIntegrator_DSTATE;
 8001f12:	4b31      	ldr	r3, [pc, #196]	@ (8001fd8 <Undamped_step+0xcc>)
 8001f14:	681a      	ldr	r2, [r3, #0]
 8001f16:	685b      	ldr	r3, [r3, #4]
 8001f18:	60ba      	str	r2, [r7, #8]
 8001f1a:	60fb      	str	r3, [r7, #12]

  /* Outport: '<Root>/theta' incorporates:
   *  DiscreteIntegrator: '<S1>/Discrete-Time Integrator1'
   */
  rtY.theta = rtDW.DiscreteTimeIntegrator1_DSTATE;
 8001f1c:	4b2e      	ldr	r3, [pc, #184]	@ (8001fd8 <Undamped_step+0xcc>)
 8001f1e:	689a      	ldr	r2, [r3, #8]
 8001f20:	68db      	ldr	r3, [r3, #12]
 8001f22:	492e      	ldr	r1, [pc, #184]	@ (8001fdc <Undamped_step+0xd0>)
 8001f24:	600a      	str	r2, [r1, #0]
 8001f26:	604b      	str	r3, [r1, #4]
   *  Gain: '<S1>/mgl'
   *  Inport: '<Root>/controlTorque'
   *  Sin: '<S1>/Sine Wave Function'
   *  Sum: '<S1>/Add'
   */
  rtb_uI = (rtU.controlTorque - 10.0 * sin(rtDW.DiscreteTimeIntegrator1_DSTATE))
 8001f28:	4b2d      	ldr	r3, [pc, #180]	@ (8001fe0 <Undamped_step+0xd4>)
 8001f2a:	681c      	ldr	r4, [r3, #0]
 8001f2c:	685d      	ldr	r5, [r3, #4]
 8001f2e:	4b2a      	ldr	r3, [pc, #168]	@ (8001fd8 <Undamped_step+0xcc>)
 8001f30:	689a      	ldr	r2, [r3, #8]
 8001f32:	68db      	ldr	r3, [r3, #12]
 8001f34:	0010      	movs	r0, r2
 8001f36:	0019      	movs	r1, r3
 8001f38:	f001 f8b6 	bl	80030a8 <sin>
 8001f3c:	2200      	movs	r2, #0
 8001f3e:	4b29      	ldr	r3, [pc, #164]	@ (8001fe4 <Undamped_step+0xd8>)
 8001f40:	f7fe ff7e 	bl	8000e40 <__aeabi_dmul>
 8001f44:	0002      	movs	r2, r0
 8001f46:	000b      	movs	r3, r1
 8001f48:	0020      	movs	r0, r4
 8001f4a:	0029      	movs	r1, r5
 8001f4c:	f7ff fa5e 	bl	800140c <__aeabi_dsub>
 8001f50:	0002      	movs	r2, r0
 8001f52:	000b      	movs	r3, r1
 8001f54:	0010      	movs	r0, r2
 8001f56:	0019      	movs	r1, r3
 8001f58:	4a23      	ldr	r2, [pc, #140]	@ (8001fe8 <Undamped_step+0xdc>)
 8001f5a:	4b24      	ldr	r3, [pc, #144]	@ (8001fec <Undamped_step+0xe0>)
 8001f5c:	f7fe ff70 	bl	8000e40 <__aeabi_dmul>
 8001f60:	0002      	movs	r2, r0
 8001f62:	000b      	movs	r3, r1
 8001f64:	603a      	str	r2, [r7, #0]
 8001f66:	607b      	str	r3, [r7, #4]
    * 0.1;

  /* Outport: '<Root>/thetaDoubleDot' */
  rtY.thetaDoubleDot = rtb_uI;
 8001f68:	491c      	ldr	r1, [pc, #112]	@ (8001fdc <Undamped_step+0xd0>)
 8001f6a:	683a      	ldr	r2, [r7, #0]
 8001f6c:	687b      	ldr	r3, [r7, #4]
 8001f6e:	610a      	str	r2, [r1, #16]
 8001f70:	614b      	str	r3, [r1, #20]

  /* Outport: '<Root>/thetaDot' incorporates:
   *  DiscreteIntegrator: '<S1>/Discrete-Time Integrator'
   */
  rtY.thetaDot = rtDW.DiscreteTimeIntegrator_DSTATE;
 8001f72:	4b19      	ldr	r3, [pc, #100]	@ (8001fd8 <Undamped_step+0xcc>)
 8001f74:	681a      	ldr	r2, [r3, #0]
 8001f76:	685b      	ldr	r3, [r3, #4]
 8001f78:	4918      	ldr	r1, [pc, #96]	@ (8001fdc <Undamped_step+0xd0>)
 8001f7a:	608a      	str	r2, [r1, #8]
 8001f7c:	60cb      	str	r3, [r1, #12]

  /* Update for DiscreteIntegrator: '<S1>/Discrete-Time Integrator' */
  rtDW.DiscreteTimeIntegrator_DSTATE += 0.001 * rtb_uI;
 8001f7e:	4b16      	ldr	r3, [pc, #88]	@ (8001fd8 <Undamped_step+0xcc>)
 8001f80:	681c      	ldr	r4, [r3, #0]
 8001f82:	685d      	ldr	r5, [r3, #4]
 8001f84:	4a1a      	ldr	r2, [pc, #104]	@ (8001ff0 <Undamped_step+0xe4>)
 8001f86:	4b1b      	ldr	r3, [pc, #108]	@ (8001ff4 <Undamped_step+0xe8>)
 8001f88:	6838      	ldr	r0, [r7, #0]
 8001f8a:	6879      	ldr	r1, [r7, #4]
 8001f8c:	f7fe ff58 	bl	8000e40 <__aeabi_dmul>
 8001f90:	0002      	movs	r2, r0
 8001f92:	000b      	movs	r3, r1
 8001f94:	0020      	movs	r0, r4
 8001f96:	0029      	movs	r1, r5
 8001f98:	f7fe fa6a 	bl	8000470 <__aeabi_dadd>
 8001f9c:	0002      	movs	r2, r0
 8001f9e:	000b      	movs	r3, r1
 8001fa0:	490d      	ldr	r1, [pc, #52]	@ (8001fd8 <Undamped_step+0xcc>)
 8001fa2:	600a      	str	r2, [r1, #0]
 8001fa4:	604b      	str	r3, [r1, #4]

  /* Update for DiscreteIntegrator: '<S1>/Discrete-Time Integrator1' */
  rtDW.DiscreteTimeIntegrator1_DSTATE += 0.001 * rtb_DiscreteTimeIntegrator;
 8001fa6:	4b0c      	ldr	r3, [pc, #48]	@ (8001fd8 <Undamped_step+0xcc>)
 8001fa8:	689c      	ldr	r4, [r3, #8]
 8001faa:	68dd      	ldr	r5, [r3, #12]
 8001fac:	4a10      	ldr	r2, [pc, #64]	@ (8001ff0 <Undamped_step+0xe4>)
 8001fae:	4b11      	ldr	r3, [pc, #68]	@ (8001ff4 <Undamped_step+0xe8>)
 8001fb0:	68b8      	ldr	r0, [r7, #8]
 8001fb2:	68f9      	ldr	r1, [r7, #12]
 8001fb4:	f7fe ff44 	bl	8000e40 <__aeabi_dmul>
 8001fb8:	0002      	movs	r2, r0
 8001fba:	000b      	movs	r3, r1
 8001fbc:	0020      	movs	r0, r4
 8001fbe:	0029      	movs	r1, r5
 8001fc0:	f7fe fa56 	bl	8000470 <__aeabi_dadd>
 8001fc4:	0002      	movs	r2, r0
 8001fc6:	000b      	movs	r3, r1
 8001fc8:	4903      	ldr	r1, [pc, #12]	@ (8001fd8 <Undamped_step+0xcc>)
 8001fca:	608a      	str	r2, [r1, #8]
 8001fcc:	60cb      	str	r3, [r1, #12]
}
 8001fce:	46c0      	nop			@ (mov r8, r8)
 8001fd0:	46bd      	mov	sp, r7
 8001fd2:	b004      	add	sp, #16
 8001fd4:	bdb0      	pop	{r4, r5, r7, pc}
 8001fd6:	46c0      	nop			@ (mov r8, r8)
 8001fd8:	20000020 	.word	0x20000020
 8001fdc:	20000038 	.word	0x20000038
 8001fe0:	20000030 	.word	0x20000030
 8001fe4:	40240000 	.word	0x40240000
 8001fe8:	9999999a 	.word	0x9999999a
 8001fec:	3fb99999 	.word	0x3fb99999
 8001ff0:	d2f1a9fc 	.word	0xd2f1a9fc
 8001ff4:	3f50624d 	.word	0x3f50624d

08001ff8 <Undamped_initialize>:

/* Model initialize function */
void Undamped_initialize(void)
{
 8001ff8:	b580      	push	{r7, lr}
 8001ffa:	af00      	add	r7, sp, #0
  /* (no initialization code required) */
}
 8001ffc:	46c0      	nop			@ (mov r8, r8)
 8001ffe:	46bd      	mov	sp, r7
 8002000:	bd80      	pop	{r7, pc}
	...

08002004 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8002004:	b580      	push	{r7, lr}
 8002006:	b082      	sub	sp, #8
 8002008:	af00      	add	r7, sp, #0
 800200a:	0002      	movs	r2, r0
 800200c:	1dfb      	adds	r3, r7, #7
 800200e:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 8002010:	1dfb      	adds	r3, r7, #7
 8002012:	781b      	ldrb	r3, [r3, #0]
 8002014:	2b7f      	cmp	r3, #127	@ 0x7f
 8002016:	d809      	bhi.n	800202c <__NVIC_EnableIRQ+0x28>
  {
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002018:	1dfb      	adds	r3, r7, #7
 800201a:	781b      	ldrb	r3, [r3, #0]
 800201c:	001a      	movs	r2, r3
 800201e:	231f      	movs	r3, #31
 8002020:	401a      	ands	r2, r3
 8002022:	4b04      	ldr	r3, [pc, #16]	@ (8002034 <__NVIC_EnableIRQ+0x30>)
 8002024:	2101      	movs	r1, #1
 8002026:	4091      	lsls	r1, r2
 8002028:	000a      	movs	r2, r1
 800202a:	601a      	str	r2, [r3, #0]
  }
}
 800202c:	46c0      	nop			@ (mov r8, r8)
 800202e:	46bd      	mov	sp, r7
 8002030:	b002      	add	sp, #8
 8002032:	bd80      	pop	{r7, pc}
 8002034:	e000e100 	.word	0xe000e100

08002038 <__NVIC_DisableIRQ>:
  \details Disables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
 8002038:	b580      	push	{r7, lr}
 800203a:	b082      	sub	sp, #8
 800203c:	af00      	add	r7, sp, #0
 800203e:	0002      	movs	r2, r0
 8002040:	1dfb      	adds	r3, r7, #7
 8002042:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 8002044:	1dfb      	adds	r3, r7, #7
 8002046:	781b      	ldrb	r3, [r3, #0]
 8002048:	2b7f      	cmp	r3, #127	@ 0x7f
 800204a:	d810      	bhi.n	800206e <__NVIC_DisableIRQ+0x36>
  {
    NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800204c:	1dfb      	adds	r3, r7, #7
 800204e:	781b      	ldrb	r3, [r3, #0]
 8002050:	001a      	movs	r2, r3
 8002052:	231f      	movs	r3, #31
 8002054:	4013      	ands	r3, r2
 8002056:	4908      	ldr	r1, [pc, #32]	@ (8002078 <__NVIC_DisableIRQ+0x40>)
 8002058:	2201      	movs	r2, #1
 800205a:	409a      	lsls	r2, r3
 800205c:	0013      	movs	r3, r2
 800205e:	2280      	movs	r2, #128	@ 0x80
 8002060:	508b      	str	r3, [r1, r2]
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8002062:	f3bf 8f4f 	dsb	sy
}
 8002066:	46c0      	nop			@ (mov r8, r8)
  __ASM volatile ("isb 0xF":::"memory");
 8002068:	f3bf 8f6f 	isb	sy
}
 800206c:	46c0      	nop			@ (mov r8, r8)
    __DSB();
    __ISB();
  }
}
 800206e:	46c0      	nop			@ (mov r8, r8)
 8002070:	46bd      	mov	sp, r7
 8002072:	b002      	add	sp, #8
 8002074:	bd80      	pop	{r7, pc}
 8002076:	46c0      	nop			@ (mov r8, r8)
 8002078:	e000e100 	.word	0xe000e100

0800207c <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 800207c:	b590      	push	{r4, r7, lr}
 800207e:	b083      	sub	sp, #12
 8002080:	af00      	add	r7, sp, #0
 8002082:	0002      	movs	r2, r0
 8002084:	6039      	str	r1, [r7, #0]
 8002086:	1dfb      	adds	r3, r7, #7
 8002088:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 800208a:	1dfb      	adds	r3, r7, #7
 800208c:	781b      	ldrb	r3, [r3, #0]
 800208e:	2b7f      	cmp	r3, #127	@ 0x7f
 8002090:	d828      	bhi.n	80020e4 <__NVIC_SetPriority+0x68>
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002092:	4a2f      	ldr	r2, [pc, #188]	@ (8002150 <__NVIC_SetPriority+0xd4>)
 8002094:	1dfb      	adds	r3, r7, #7
 8002096:	781b      	ldrb	r3, [r3, #0]
 8002098:	b25b      	sxtb	r3, r3
 800209a:	089b      	lsrs	r3, r3, #2
 800209c:	33c0      	adds	r3, #192	@ 0xc0
 800209e:	009b      	lsls	r3, r3, #2
 80020a0:	589b      	ldr	r3, [r3, r2]
 80020a2:	1dfa      	adds	r2, r7, #7
 80020a4:	7812      	ldrb	r2, [r2, #0]
 80020a6:	0011      	movs	r1, r2
 80020a8:	2203      	movs	r2, #3
 80020aa:	400a      	ands	r2, r1
 80020ac:	00d2      	lsls	r2, r2, #3
 80020ae:	21ff      	movs	r1, #255	@ 0xff
 80020b0:	4091      	lsls	r1, r2
 80020b2:	000a      	movs	r2, r1
 80020b4:	43d2      	mvns	r2, r2
 80020b6:	401a      	ands	r2, r3
 80020b8:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 80020ba:	683b      	ldr	r3, [r7, #0]
 80020bc:	019b      	lsls	r3, r3, #6
 80020be:	22ff      	movs	r2, #255	@ 0xff
 80020c0:	401a      	ands	r2, r3
 80020c2:	1dfb      	adds	r3, r7, #7
 80020c4:	781b      	ldrb	r3, [r3, #0]
 80020c6:	0018      	movs	r0, r3
 80020c8:	2303      	movs	r3, #3
 80020ca:	4003      	ands	r3, r0
 80020cc:	00db      	lsls	r3, r3, #3
 80020ce:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80020d0:	481f      	ldr	r0, [pc, #124]	@ (8002150 <__NVIC_SetPriority+0xd4>)
 80020d2:	1dfb      	adds	r3, r7, #7
 80020d4:	781b      	ldrb	r3, [r3, #0]
 80020d6:	b25b      	sxtb	r3, r3
 80020d8:	089b      	lsrs	r3, r3, #2
 80020da:	430a      	orrs	r2, r1
 80020dc:	33c0      	adds	r3, #192	@ 0xc0
 80020de:	009b      	lsls	r3, r3, #2
 80020e0:	501a      	str	r2, [r3, r0]
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
}
 80020e2:	e031      	b.n	8002148 <__NVIC_SetPriority+0xcc>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80020e4:	4a1b      	ldr	r2, [pc, #108]	@ (8002154 <__NVIC_SetPriority+0xd8>)
 80020e6:	1dfb      	adds	r3, r7, #7
 80020e8:	781b      	ldrb	r3, [r3, #0]
 80020ea:	0019      	movs	r1, r3
 80020ec:	230f      	movs	r3, #15
 80020ee:	400b      	ands	r3, r1
 80020f0:	3b08      	subs	r3, #8
 80020f2:	089b      	lsrs	r3, r3, #2
 80020f4:	3306      	adds	r3, #6
 80020f6:	009b      	lsls	r3, r3, #2
 80020f8:	18d3      	adds	r3, r2, r3
 80020fa:	3304      	adds	r3, #4
 80020fc:	681b      	ldr	r3, [r3, #0]
 80020fe:	1dfa      	adds	r2, r7, #7
 8002100:	7812      	ldrb	r2, [r2, #0]
 8002102:	0011      	movs	r1, r2
 8002104:	2203      	movs	r2, #3
 8002106:	400a      	ands	r2, r1
 8002108:	00d2      	lsls	r2, r2, #3
 800210a:	21ff      	movs	r1, #255	@ 0xff
 800210c:	4091      	lsls	r1, r2
 800210e:	000a      	movs	r2, r1
 8002110:	43d2      	mvns	r2, r2
 8002112:	401a      	ands	r2, r3
 8002114:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8002116:	683b      	ldr	r3, [r7, #0]
 8002118:	019b      	lsls	r3, r3, #6
 800211a:	22ff      	movs	r2, #255	@ 0xff
 800211c:	401a      	ands	r2, r3
 800211e:	1dfb      	adds	r3, r7, #7
 8002120:	781b      	ldrb	r3, [r3, #0]
 8002122:	0018      	movs	r0, r3
 8002124:	2303      	movs	r3, #3
 8002126:	4003      	ands	r3, r0
 8002128:	00db      	lsls	r3, r3, #3
 800212a:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 800212c:	4809      	ldr	r0, [pc, #36]	@ (8002154 <__NVIC_SetPriority+0xd8>)
 800212e:	1dfb      	adds	r3, r7, #7
 8002130:	781b      	ldrb	r3, [r3, #0]
 8002132:	001c      	movs	r4, r3
 8002134:	230f      	movs	r3, #15
 8002136:	4023      	ands	r3, r4
 8002138:	3b08      	subs	r3, #8
 800213a:	089b      	lsrs	r3, r3, #2
 800213c:	430a      	orrs	r2, r1
 800213e:	3306      	adds	r3, #6
 8002140:	009b      	lsls	r3, r3, #2
 8002142:	18c3      	adds	r3, r0, r3
 8002144:	3304      	adds	r3, #4
 8002146:	601a      	str	r2, [r3, #0]
}
 8002148:	46c0      	nop			@ (mov r8, r8)
 800214a:	46bd      	mov	sp, r7
 800214c:	b003      	add	sp, #12
 800214e:	bd90      	pop	{r4, r7, pc}
 8002150:	e000e100 	.word	0xe000e100
 8002154:	e000ed00 	.word	0xe000ed00

08002158 <Configure_CNI>:
           - configures the CNI
 * Param   None
 * Retval  None
 */
inline void Configure_CNI(void)
{
 8002158:	b580      	push	{r7, lr}
 800215a:	af00      	add	r7, sp, #0
	ConfigureGPIO_UART1();
 800215c:	f000 f87e 	bl	800225c <ConfigureGPIO_UART1>
	Configure_UART1();
 8002160:	f000 f8a4 	bl	80022ac <Configure_UART1>
}
 8002164:	46c0      	nop			@ (mov r8, r8)
 8002166:	46bd      	mov	sp, r7
 8002168:	bd80      	pop	{r7, pc}

0800216a <TransmitMessage_CNI>:

void TransmitMessage_CNI(const observation_t *obs)
{
 800216a:	b580      	push	{r7, lr}
 800216c:	b084      	sub	sp, #16
 800216e:	af00      	add	r7, sp, #0
 8002170:	6078      	str	r0, [r7, #4]
	char *p = (char *)obs;
 8002172:	687b      	ldr	r3, [r7, #4]
 8002174:	60fb      	str	r3, [r7, #12]

	// Transmit the observation message
	for(uint32_t i = 0; i < sizeof(observation_t); i++)
 8002176:	2300      	movs	r3, #0
 8002178:	60bb      	str	r3, [r7, #8]
 800217a:	e009      	b.n	8002190 <TransmitMessage_CNI+0x26>
	{
		TransmitByte_CNI(*(p++));
 800217c:	68fb      	ldr	r3, [r7, #12]
 800217e:	1c5a      	adds	r2, r3, #1
 8002180:	60fa      	str	r2, [r7, #12]
 8002182:	781b      	ldrb	r3, [r3, #0]
 8002184:	0018      	movs	r0, r3
 8002186:	f000 f8dd 	bl	8002344 <TransmitByte_CNI>
	for(uint32_t i = 0; i < sizeof(observation_t); i++)
 800218a:	68bb      	ldr	r3, [r7, #8]
 800218c:	3301      	adds	r3, #1
 800218e:	60bb      	str	r3, [r7, #8]
 8002190:	68bb      	ldr	r3, [r7, #8]
 8002192:	2b0f      	cmp	r3, #15
 8002194:	d9f2      	bls.n	800217c <TransmitMessage_CNI+0x12>
	}
}
 8002196:	46c0      	nop			@ (mov r8, r8)
 8002198:	46c0      	nop			@ (mov r8, r8)
 800219a:	46bd      	mov	sp, r7
 800219c:	b004      	add	sp, #16
 800219e:	bd80      	pop	{r7, pc}

080021a0 <IncomingMessageHandler_CNI>:

void IncomingMessageHandler_CNI(void)
{
 80021a0:	b580      	push	{r7, lr}
 80021a2:	b084      	sub	sp, #16
 80021a4:	af00      	add	r7, sp, #0
	observation_t obs = {};
 80021a6:	003b      	movs	r3, r7
 80021a8:	0018      	movs	r0, r3
 80021aa:	2310      	movs	r3, #16
 80021ac:	001a      	movs	r2, r3
 80021ae:	2100      	movs	r1, #0
 80021b0:	f000 ff4d 	bl	800304e <memset>

	// Receive an observation message
	if(ReceiveMessage_CNI(&obs))
 80021b4:	003b      	movs	r3, r7
 80021b6:	0018      	movs	r0, r3
 80021b8:	f000 f816 	bl	80021e8 <ReceiveMessage_CNI>
 80021bc:	1e03      	subs	r3, r0, #0
 80021be:	d00d      	beq.n	80021dc <IncomingMessageHandler_CNI+0x3c>
	{
		// -------------------------------------------------------------- START
		// REMOVE THIS CODE
		// --------------------------------------------------------------
		if(obs.id == 0)
 80021c0:	003b      	movs	r3, r7
 80021c2:	781b      	ldrb	r3, [r3, #0]
 80021c4:	2b00      	cmp	r3, #0
 80021c6:	d109      	bne.n	80021dc <IncomingMessageHandler_CNI+0x3c>
		{
			rtU.controlTorque = (real_T)obs.val1;
 80021c8:	003b      	movs	r3, r7
 80021ca:	685b      	ldr	r3, [r3, #4]
 80021cc:	1c18      	adds	r0, r3, #0
 80021ce:	f7ff fdb5 	bl	8001d3c <__aeabi_f2d>
 80021d2:	0002      	movs	r2, r0
 80021d4:	000b      	movs	r3, r1
 80021d6:	4903      	ldr	r1, [pc, #12]	@ (80021e4 <IncomingMessageHandler_CNI+0x44>)
 80021d8:	600a      	str	r2, [r1, #0]
 80021da:	604b      	str	r3, [r1, #4]
		}
		// --------------------------------------------------------------- STOP
	}
}
 80021dc:	46c0      	nop			@ (mov r8, r8)
 80021de:	46bd      	mov	sp, r7
 80021e0:	b004      	add	sp, #16
 80021e2:	bd80      	pop	{r7, pc}
 80021e4:	20000030 	.word	0x20000030

080021e8 <ReceiveMessage_CNI>:

uint8_t ReceiveMessage_CNI(observation_t *obs)
{
 80021e8:	b590      	push	{r4, r7, lr}
 80021ea:	b087      	sub	sp, #28
 80021ec:	af00      	add	r7, sp, #0
 80021ee:	6078      	str	r0, [r7, #4]
	// Data available?
	if(nUnreadBytes_CNI() > 0)
 80021f0:	f000 f8f2 	bl	80023d8 <nUnreadBytes_CNI>
 80021f4:	1e03      	subs	r3, r0, #0
 80021f6:	d02c      	beq.n	8002252 <ReceiveMessage_CNI+0x6a>
	{
		// Wait for approximately 40ms, making sure an entire message must have
		// arrived
		uint32_t clock_stop = Get_GlobalClock() + 4;
 80021f8:	f000 f9ba 	bl	8002570 <Get_GlobalClock>
 80021fc:	0003      	movs	r3, r0
 80021fe:	3304      	adds	r3, #4
 8002200:	60fb      	str	r3, [r7, #12]
		while(Get_GlobalClock() < clock_stop)
 8002202:	46c0      	nop			@ (mov r8, r8)
 8002204:	f000 f9b4 	bl	8002570 <Get_GlobalClock>
 8002208:	0002      	movs	r2, r0
 800220a:	68fb      	ldr	r3, [r7, #12]
 800220c:	4293      	cmp	r3, r2
 800220e:	d8f9      	bhi.n	8002204 <ReceiveMessage_CNI+0x1c>
		{;}

		// Received at least an entire message?
		if(nUnreadBytes_CNI() >= sizeof(observation_t))
 8002210:	f000 f8e2 	bl	80023d8 <nUnreadBytes_CNI>
 8002214:	0003      	movs	r3, r0
 8002216:	2b0f      	cmp	r3, #15
 8002218:	d915      	bls.n	8002246 <ReceiveMessage_CNI+0x5e>
		{
			char *p = (char *)obs;
 800221a:	687b      	ldr	r3, [r7, #4]
 800221c:	617b      	str	r3, [r7, #20]

			for(uint32_t i = 0; i < sizeof(observation_t); i++)
 800221e:	2300      	movs	r3, #0
 8002220:	613b      	str	r3, [r7, #16]
 8002222:	e009      	b.n	8002238 <ReceiveMessage_CNI+0x50>
			{
				*(p++) = ReceiveByte_CNI();
 8002224:	697c      	ldr	r4, [r7, #20]
 8002226:	1c63      	adds	r3, r4, #1
 8002228:	617b      	str	r3, [r7, #20]
 800222a:	f000 f865 	bl	80022f8 <ReceiveByte_CNI>
 800222e:	0003      	movs	r3, r0
 8002230:	7023      	strb	r3, [r4, #0]
			for(uint32_t i = 0; i < sizeof(observation_t); i++)
 8002232:	693b      	ldr	r3, [r7, #16]
 8002234:	3301      	adds	r3, #1
 8002236:	613b      	str	r3, [r7, #16]
 8002238:	693b      	ldr	r3, [r7, #16]
 800223a:	2b0f      	cmp	r3, #15
 800223c:	d9f2      	bls.n	8002224 <ReceiveMessage_CNI+0x3c>
			}

			return 1; // Successfully received a message
 800223e:	2301      	movs	r3, #1
 8002240:	e008      	b.n	8002254 <ReceiveMessage_CNI+0x6c>
		else // Invalid message length
		{
			// Flush the data
			while(nUnreadBytes_CNI() != 0)
			{
				(void)ReceiveByte_CNI();
 8002242:	f000 f859 	bl	80022f8 <ReceiveByte_CNI>
			while(nUnreadBytes_CNI() != 0)
 8002246:	f000 f8c7 	bl	80023d8 <nUnreadBytes_CNI>
 800224a:	1e03      	subs	r3, r0, #0
 800224c:	d1f9      	bne.n	8002242 <ReceiveMessage_CNI+0x5a>
			}

			return 0;
 800224e:	2300      	movs	r3, #0
 8002250:	e000      	b.n	8002254 <ReceiveMessage_CNI+0x6c>
		}
	}

	// No data available
	return 0;
 8002252:	2300      	movs	r3, #0
}
 8002254:	0018      	movs	r0, r3
 8002256:	46bd      	mov	sp, r7
 8002258:	b007      	add	sp, #28
 800225a:	bd90      	pop	{r4, r7, pc}

0800225c <ConfigureGPIO_UART1>:
           - Configures the UART pins on GPIO PA2 PA3
 * Param   None
 * Retval  None
 */
inline void ConfigureGPIO_UART1(void)
{
 800225c:	b580      	push	{r7, lr}
 800225e:	af00      	add	r7, sp, #0
    // Enable the peripheral clock of GPIOA
    RCC->AHBENR |= RCC_AHBENR_GPIOAEN;
 8002260:	4b0f      	ldr	r3, [pc, #60]	@ (80022a0 <ConfigureGPIO_UART1+0x44>)
 8002262:	695a      	ldr	r2, [r3, #20]
 8002264:	4b0e      	ldr	r3, [pc, #56]	@ (80022a0 <ConfigureGPIO_UART1+0x44>)
 8002266:	2180      	movs	r1, #128	@ 0x80
 8002268:	0289      	lsls	r1, r1, #10
 800226a:	430a      	orrs	r2, r1
 800226c:	615a      	str	r2, [r3, #20]

    // GPIO configuration for UART signals
    // 1. Select AF mode (10) on PA9 and PA10
    // 2. AF1 for UART signals
    GPIOA->MODER = (GPIOA->MODER & ~(GPIO_MODER_MODER9 | GPIO_MODER_MODER10))
 800226e:	2390      	movs	r3, #144	@ 0x90
 8002270:	05db      	lsls	r3, r3, #23
 8002272:	681b      	ldr	r3, [r3, #0]
 8002274:	4a0b      	ldr	r2, [pc, #44]	@ (80022a4 <ConfigureGPIO_UART1+0x48>)
 8002276:	401a      	ands	r2, r3
 8002278:	2390      	movs	r3, #144	@ 0x90
 800227a:	05db      	lsls	r3, r3, #23
            | (GPIO_MODER_MODER9_1 | GPIO_MODER_MODER10_1);
 800227c:	21a0      	movs	r1, #160	@ 0xa0
 800227e:	0389      	lsls	r1, r1, #14
 8002280:	430a      	orrs	r2, r1
    GPIOA->MODER = (GPIOA->MODER & ~(GPIO_MODER_MODER9 | GPIO_MODER_MODER10))
 8002282:	601a      	str	r2, [r3, #0]
    GPIOA->AFR[1] = (GPIOA->AFR[1] & ~(GPIO_AFRH_AFRH1 | GPIO_AFRH_AFRH2))
 8002284:	2390      	movs	r3, #144	@ 0x90
 8002286:	05db      	lsls	r3, r3, #23
 8002288:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800228a:	4a07      	ldr	r2, [pc, #28]	@ (80022a8 <ConfigureGPIO_UART1+0x4c>)
 800228c:	401a      	ands	r2, r3
 800228e:	2390      	movs	r3, #144	@ 0x90
 8002290:	05db      	lsls	r3, r3, #23
            | (1 << (1 * 4)) | (1 << (2 * 4));
 8002292:	2188      	movs	r1, #136	@ 0x88
 8002294:	0049      	lsls	r1, r1, #1
 8002296:	430a      	orrs	r2, r1
    GPIOA->AFR[1] = (GPIOA->AFR[1] & ~(GPIO_AFRH_AFRH1 | GPIO_AFRH_AFRH2))
 8002298:	625a      	str	r2, [r3, #36]	@ 0x24
}
 800229a:	46c0      	nop			@ (mov r8, r8)
 800229c:	46bd      	mov	sp, r7
 800229e:	bd80      	pop	{r7, pc}
 80022a0:	40021000 	.word	0x40021000
 80022a4:	ffc3ffff 	.word	0xffc3ffff
 80022a8:	fffff00f 	.word	0xfffff00f

080022ac <Configure_UART1>:
 *         - 9600,8,n,1
 * Param   None
 * Retval  None
 */
inline void Configure_UART1(void)
{
 80022ac:	b580      	push	{r7, lr}
 80022ae:	af00      	add	r7, sp, #0
    // Enable the peripheral clock UART
    RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 80022b0:	4b0e      	ldr	r3, [pc, #56]	@ (80022ec <Configure_UART1+0x40>)
 80022b2:	699a      	ldr	r2, [r3, #24]
 80022b4:	4b0d      	ldr	r3, [pc, #52]	@ (80022ec <Configure_UART1+0x40>)
 80022b6:	2180      	movs	r1, #128	@ 0x80
 80022b8:	01c9      	lsls	r1, r1, #7
 80022ba:	430a      	orrs	r2, r1
 80022bc:	619a      	str	r2, [r3, #24]
    // Configure UART
    // 1. Oversampling by 16, 9600 baud
    // 2. 8 data bit, 1 start bit, 1 stop bit, no parity,
    //     transmitter enable, receiver enable
//    USART1->BRR = 480000 / 96;
    USART1->BRR = 480000 / 96;
 80022be:	4b0c      	ldr	r3, [pc, #48]	@ (80022f0 <Configure_UART1+0x44>)
 80022c0:	4a0c      	ldr	r2, [pc, #48]	@ (80022f4 <Configure_UART1+0x48>)
 80022c2:	60da      	str	r2, [r3, #12]
    USART1->CR1 = USART_CR1_TE | USART_CR1_UE | USART_CR1_RXNEIE | USART_CR1_RE;
 80022c4:	4b0a      	ldr	r3, [pc, #40]	@ (80022f0 <Configure_UART1+0x44>)
 80022c6:	222d      	movs	r2, #45	@ 0x2d
 80022c8:	601a      	str	r2, [r3, #0]

    // 3. Polling idle frame Transmission
    while ((USART1->ISR & USART_ISR_TC) != USART_ISR_TC)
 80022ca:	46c0      	nop			@ (mov r8, r8)
 80022cc:	4b08      	ldr	r3, [pc, #32]	@ (80022f0 <Configure_UART1+0x44>)
 80022ce:	69db      	ldr	r3, [r3, #28]
 80022d0:	2240      	movs	r2, #64	@ 0x40
 80022d2:	4013      	ands	r3, r2
 80022d4:	2b40      	cmp	r3, #64	@ 0x40
 80022d6:	d1f9      	bne.n	80022cc <Configure_UART1+0x20>
    }

    // Configure IT
    // 4. Set priority for UART1_IRQn
    // 5. Enable UART1_IRQn
    NVIC_SetPriority(USART1_IRQn, 0);
 80022d8:	2100      	movs	r1, #0
 80022da:	201b      	movs	r0, #27
 80022dc:	f7ff fece 	bl	800207c <__NVIC_SetPriority>
    NVIC_EnableIRQ(USART1_IRQn);
 80022e0:	201b      	movs	r0, #27
 80022e2:	f7ff fe8f 	bl	8002004 <__NVIC_EnableIRQ>
}
 80022e6:	46c0      	nop			@ (mov r8, r8)
 80022e8:	46bd      	mov	sp, r7
 80022ea:	bd80      	pop	{r7, pc}
 80022ec:	40021000 	.word	0x40021000
 80022f0:	40013800 	.word	0x40013800
 80022f4:	00001388 	.word	0x00001388

080022f8 <ReceiveByte_CNI>:

char ReceiveByte_CNI(void)
{
 80022f8:	b580      	push	{r7, lr}
 80022fa:	b082      	sub	sp, #8
 80022fc:	af00      	add	r7, sp, #0
    uint32_t tmptail;

    // Wait for incoming data
    while (UART1_RxHead == UART1_RxTail){;}
 80022fe:	46c0      	nop			@ (mov r8, r8)
 8002300:	4b0d      	ldr	r3, [pc, #52]	@ (8002338 <ReceiveByte_CNI+0x40>)
 8002302:	781b      	ldrb	r3, [r3, #0]
 8002304:	b2da      	uxtb	r2, r3
 8002306:	4b0d      	ldr	r3, [pc, #52]	@ (800233c <ReceiveByte_CNI+0x44>)
 8002308:	781b      	ldrb	r3, [r3, #0]
 800230a:	b2db      	uxtb	r3, r3
 800230c:	429a      	cmp	r2, r3
 800230e:	d0f7      	beq.n	8002300 <ReceiveByte_CNI+0x8>

    // Calculate buffer index
    tmptail = (UART1_RxTail + 1) & UART1_RX_BUFFER_MASK;
 8002310:	4b0a      	ldr	r3, [pc, #40]	@ (800233c <ReceiveByte_CNI+0x44>)
 8002312:	781b      	ldrb	r3, [r3, #0]
 8002314:	b2db      	uxtb	r3, r3
 8002316:	3301      	adds	r3, #1
 8002318:	001a      	movs	r2, r3
 800231a:	23ff      	movs	r3, #255	@ 0xff
 800231c:	4013      	ands	r3, r2
 800231e:	607b      	str	r3, [r7, #4]

    // Store new index
    UART1_RxTail = tmptail;
 8002320:	687b      	ldr	r3, [r7, #4]
 8002322:	b2da      	uxtb	r2, r3
 8002324:	4b05      	ldr	r3, [pc, #20]	@ (800233c <ReceiveByte_CNI+0x44>)
 8002326:	701a      	strb	r2, [r3, #0]

    // Return data
    return UART1_RxBuf[tmptail];
 8002328:	4a05      	ldr	r2, [pc, #20]	@ (8002340 <ReceiveByte_CNI+0x48>)
 800232a:	687b      	ldr	r3, [r7, #4]
 800232c:	18d3      	adds	r3, r2, r3
 800232e:	781b      	ldrb	r3, [r3, #0]
}
 8002330:	0018      	movs	r0, r3
 8002332:	46bd      	mov	sp, r7
 8002334:	b002      	add	sp, #8
 8002336:	bd80      	pop	{r7, pc}
 8002338:	20000150 	.word	0x20000150
 800233c:	20000151 	.word	0x20000151
 8002340:	20000050 	.word	0x20000050

08002344 <TransmitByte_CNI>:

void TransmitByte_CNI(char data)
{
 8002344:	b580      	push	{r7, lr}
 8002346:	b084      	sub	sp, #16
 8002348:	af00      	add	r7, sp, #0
 800234a:	0002      	movs	r2, r0
 800234c:	1dfb      	adds	r3, r7, #7
 800234e:	701a      	strb	r2, [r3, #0]
    uint32_t tmphead;

    // Calculate buffer index
    tmphead = (UART1_TxHead + 1) & UART1_TX_BUFFER_MASK;
 8002350:	4b1d      	ldr	r3, [pc, #116]	@ (80023c8 <TransmitByte_CNI+0x84>)
 8002352:	781b      	ldrb	r3, [r3, #0]
 8002354:	b2db      	uxtb	r3, r3
 8002356:	3301      	adds	r3, #1
 8002358:	001a      	movs	r2, r3
 800235a:	23ff      	movs	r3, #255	@ 0xff
 800235c:	4013      	ands	r3, r2
 800235e:	60fb      	str	r3, [r7, #12]

    // Wait for free space in buffer
    while (tmphead == UART1_TxTail)
 8002360:	46c0      	nop			@ (mov r8, r8)
 8002362:	4b1a      	ldr	r3, [pc, #104]	@ (80023cc <TransmitByte_CNI+0x88>)
 8002364:	781b      	ldrb	r3, [r3, #0]
 8002366:	b2db      	uxtb	r3, r3
 8002368:	001a      	movs	r2, r3
 800236a:	68fb      	ldr	r3, [r7, #12]
 800236c:	4293      	cmp	r3, r2
 800236e:	d0f8      	beq.n	8002362 <TransmitByte_CNI+0x1e>
    {
        ;
    }

    // Store data in buffer
    UART1_TxBuf[tmphead] = data;
 8002370:	4a17      	ldr	r2, [pc, #92]	@ (80023d0 <TransmitByte_CNI+0x8c>)
 8002372:	68fb      	ldr	r3, [r7, #12]
 8002374:	18d3      	adds	r3, r2, r3
 8002376:	1dfa      	adds	r2, r7, #7
 8002378:	7812      	ldrb	r2, [r2, #0]
 800237a:	701a      	strb	r2, [r3, #0]

    // Store new index
    UART1_TxHead = tmphead;
 800237c:	68fb      	ldr	r3, [r7, #12]
 800237e:	b2da      	uxtb	r2, r3
 8002380:	4b11      	ldr	r3, [pc, #68]	@ (80023c8 <TransmitByte_CNI+0x84>)
 8002382:	701a      	strb	r2, [r3, #0]

    // Initiate a new transfer if this is not ongoing
    if((USART1->CR1 & USART_CR1_TCIE) == 0)
 8002384:	4b13      	ldr	r3, [pc, #76]	@ (80023d4 <TransmitByte_CNI+0x90>)
 8002386:	681b      	ldr	r3, [r3, #0]
 8002388:	2240      	movs	r2, #64	@ 0x40
 800238a:	4013      	ands	r3, r2
 800238c:	d117      	bne.n	80023be <TransmitByte_CNI+0x7a>
    {
        // Calculate buffer index
        uint32_t tmptail = (UART1_TxTail + 1) & UART1_TX_BUFFER_MASK;
 800238e:	4b0f      	ldr	r3, [pc, #60]	@ (80023cc <TransmitByte_CNI+0x88>)
 8002390:	781b      	ldrb	r3, [r3, #0]
 8002392:	b2db      	uxtb	r3, r3
 8002394:	3301      	adds	r3, #1
 8002396:	001a      	movs	r2, r3
 8002398:	23ff      	movs	r3, #255	@ 0xff
 800239a:	4013      	ands	r3, r2
 800239c:	60bb      	str	r3, [r7, #8]

        // Store new index
        UART1_TxTail = tmptail;
 800239e:	68bb      	ldr	r3, [r7, #8]
 80023a0:	b2da      	uxtb	r2, r3
 80023a2:	4b0a      	ldr	r3, [pc, #40]	@ (80023cc <TransmitByte_CNI+0x88>)
 80023a4:	701a      	strb	r2, [r3, #0]

        // Start transmission
        USART1->TDR = UART1_TxBuf[tmptail];
 80023a6:	4a0a      	ldr	r2, [pc, #40]	@ (80023d0 <TransmitByte_CNI+0x8c>)
 80023a8:	68bb      	ldr	r3, [r7, #8]
 80023aa:	18d3      	adds	r3, r2, r3
 80023ac:	781a      	ldrb	r2, [r3, #0]
 80023ae:	4b09      	ldr	r3, [pc, #36]	@ (80023d4 <TransmitByte_CNI+0x90>)
 80023b0:	851a      	strh	r2, [r3, #40]	@ 0x28

        // enable TC interrupt
        USART1->CR1 |= USART_CR1_TCIE;
 80023b2:	4b08      	ldr	r3, [pc, #32]	@ (80023d4 <TransmitByte_CNI+0x90>)
 80023b4:	681a      	ldr	r2, [r3, #0]
 80023b6:	4b07      	ldr	r3, [pc, #28]	@ (80023d4 <TransmitByte_CNI+0x90>)
 80023b8:	2140      	movs	r1, #64	@ 0x40
 80023ba:	430a      	orrs	r2, r1
 80023bc:	601a      	str	r2, [r3, #0]
    }
}
 80023be:	46c0      	nop			@ (mov r8, r8)
 80023c0:	46bd      	mov	sp, r7
 80023c2:	b004      	add	sp, #16
 80023c4:	bd80      	pop	{r7, pc}
 80023c6:	46c0      	nop			@ (mov r8, r8)
 80023c8:	20000254 	.word	0x20000254
 80023cc:	20000255 	.word	0x20000255
 80023d0:	20000154 	.word	0x20000154
 80023d4:	40013800 	.word	0x40013800

080023d8 <nUnreadBytes_CNI>:

/*
 * This function returns the number of unread bytes in the receive buffer
 */
unsigned char nUnreadBytes_CNI(void)
{
 80023d8:	b580      	push	{r7, lr}
 80023da:	af00      	add	r7, sp, #0
    if(UART1_RxHead == UART1_RxTail)
 80023dc:	4b12      	ldr	r3, [pc, #72]	@ (8002428 <nUnreadBytes_CNI+0x50>)
 80023de:	781b      	ldrb	r3, [r3, #0]
 80023e0:	b2da      	uxtb	r2, r3
 80023e2:	4b12      	ldr	r3, [pc, #72]	@ (800242c <nUnreadBytes_CNI+0x54>)
 80023e4:	781b      	ldrb	r3, [r3, #0]
 80023e6:	b2db      	uxtb	r3, r3
 80023e8:	429a      	cmp	r2, r3
 80023ea:	d101      	bne.n	80023f0 <nUnreadBytes_CNI+0x18>
        return 0;
 80023ec:	2300      	movs	r3, #0
 80023ee:	e018      	b.n	8002422 <nUnreadBytes_CNI+0x4a>
    else if(UART1_RxHead > UART1_RxTail)
 80023f0:	4b0d      	ldr	r3, [pc, #52]	@ (8002428 <nUnreadBytes_CNI+0x50>)
 80023f2:	781b      	ldrb	r3, [r3, #0]
 80023f4:	b2da      	uxtb	r2, r3
 80023f6:	4b0d      	ldr	r3, [pc, #52]	@ (800242c <nUnreadBytes_CNI+0x54>)
 80023f8:	781b      	ldrb	r3, [r3, #0]
 80023fa:	b2db      	uxtb	r3, r3
 80023fc:	429a      	cmp	r2, r3
 80023fe:	d908      	bls.n	8002412 <nUnreadBytes_CNI+0x3a>
        return (UART1_RxHead - UART1_RxTail);
 8002400:	4b09      	ldr	r3, [pc, #36]	@ (8002428 <nUnreadBytes_CNI+0x50>)
 8002402:	781b      	ldrb	r3, [r3, #0]
 8002404:	b2da      	uxtb	r2, r3
 8002406:	4b09      	ldr	r3, [pc, #36]	@ (800242c <nUnreadBytes_CNI+0x54>)
 8002408:	781b      	ldrb	r3, [r3, #0]
 800240a:	b2db      	uxtb	r3, r3
 800240c:	1ad3      	subs	r3, r2, r3
 800240e:	b2db      	uxtb	r3, r3
 8002410:	e007      	b.n	8002422 <nUnreadBytes_CNI+0x4a>
    else
        return (UART1_RX_BUFFER_SIZE - UART1_RxTail + UART1_RxHead);
 8002412:	4b05      	ldr	r3, [pc, #20]	@ (8002428 <nUnreadBytes_CNI+0x50>)
 8002414:	781b      	ldrb	r3, [r3, #0]
 8002416:	b2da      	uxtb	r2, r3
 8002418:	4b04      	ldr	r3, [pc, #16]	@ (800242c <nUnreadBytes_CNI+0x54>)
 800241a:	781b      	ldrb	r3, [r3, #0]
 800241c:	b2db      	uxtb	r3, r3
 800241e:	1ad3      	subs	r3, r2, r3
 8002420:	b2db      	uxtb	r3, r3
}
 8002422:	0018      	movs	r0, r3
 8002424:	46bd      	mov	sp, r7
 8002426:	bd80      	pop	{r7, pc}
 8002428:	20000150 	.word	0x20000150
 800242c:	20000151 	.word	0x20000151

08002430 <USART1_IRQHandler>:
 * Brief   This function handles UART interrupt request.
 * Param   None
 * Retval  None
 */
void USART1_IRQHandler(void)
{
 8002430:	b580      	push	{r7, lr}
 8002432:	b082      	sub	sp, #8
 8002434:	af00      	add	r7, sp, #0
    if ((USART1->ISR & USART_ISR_TC) == USART_ISR_TC)
 8002436:	4b30      	ldr	r3, [pc, #192]	@ (80024f8 <USART1_IRQHandler+0xc8>)
 8002438:	69db      	ldr	r3, [r3, #28]
 800243a:	2240      	movs	r2, #64	@ 0x40
 800243c:	4013      	ands	r3, r2
 800243e:	2b40      	cmp	r3, #64	@ 0x40
 8002440:	d127      	bne.n	8002492 <USART1_IRQHandler+0x62>
    {
        uint32_t tmptail;

        // Check if all data is transmitted
        if (UART1_TxHead != UART1_TxTail)
 8002442:	4b2e      	ldr	r3, [pc, #184]	@ (80024fc <USART1_IRQHandler+0xcc>)
 8002444:	781b      	ldrb	r3, [r3, #0]
 8002446:	b2da      	uxtb	r2, r3
 8002448:	4b2d      	ldr	r3, [pc, #180]	@ (8002500 <USART1_IRQHandler+0xd0>)
 800244a:	781b      	ldrb	r3, [r3, #0]
 800244c:	b2db      	uxtb	r3, r3
 800244e:	429a      	cmp	r2, r3
 8002450:	d012      	beq.n	8002478 <USART1_IRQHandler+0x48>
        {
            // Calculate buffer index
            tmptail = (UART1_TxTail + 1) & UART1_TX_BUFFER_MASK;
 8002452:	4b2b      	ldr	r3, [pc, #172]	@ (8002500 <USART1_IRQHandler+0xd0>)
 8002454:	781b      	ldrb	r3, [r3, #0]
 8002456:	b2db      	uxtb	r3, r3
 8002458:	3301      	adds	r3, #1
 800245a:	001a      	movs	r2, r3
 800245c:	23ff      	movs	r3, #255	@ 0xff
 800245e:	4013      	ands	r3, r2
 8002460:	603b      	str	r3, [r7, #0]

            // Store new index
            UART1_TxTail = tmptail;
 8002462:	683b      	ldr	r3, [r7, #0]
 8002464:	b2da      	uxtb	r2, r3
 8002466:	4b26      	ldr	r3, [pc, #152]	@ (8002500 <USART1_IRQHandler+0xd0>)
 8002468:	701a      	strb	r2, [r3, #0]

            // Start transmission
            USART1->TDR = UART1_TxBuf[tmptail];
 800246a:	4a26      	ldr	r2, [pc, #152]	@ (8002504 <USART1_IRQHandler+0xd4>)
 800246c:	683b      	ldr	r3, [r7, #0]
 800246e:	18d3      	adds	r3, r2, r3
 8002470:	781a      	ldrb	r2, [r3, #0]
 8002472:	4b21      	ldr	r3, [pc, #132]	@ (80024f8 <USART1_IRQHandler+0xc8>)
 8002474:	851a      	strh	r2, [r3, #40]	@ 0x28
    }
    else
    {
        NVIC_DisableIRQ(USART1_IRQn); // Disable UART_IRQn
    }
}
 8002476:	e03a      	b.n	80024ee <USART1_IRQHandler+0xbe>
            USART1->ICR |= USART_ICR_TCCF; // Clear TC flag
 8002478:	4b1f      	ldr	r3, [pc, #124]	@ (80024f8 <USART1_IRQHandler+0xc8>)
 800247a:	6a1a      	ldr	r2, [r3, #32]
 800247c:	4b1e      	ldr	r3, [pc, #120]	@ (80024f8 <USART1_IRQHandler+0xc8>)
 800247e:	2140      	movs	r1, #64	@ 0x40
 8002480:	430a      	orrs	r2, r1
 8002482:	621a      	str	r2, [r3, #32]
            USART1->CR1 &= ~USART_CR1_TCIE; // Disable TC interrupt
 8002484:	4b1c      	ldr	r3, [pc, #112]	@ (80024f8 <USART1_IRQHandler+0xc8>)
 8002486:	681a      	ldr	r2, [r3, #0]
 8002488:	4b1b      	ldr	r3, [pc, #108]	@ (80024f8 <USART1_IRQHandler+0xc8>)
 800248a:	2140      	movs	r1, #64	@ 0x40
 800248c:	438a      	bics	r2, r1
 800248e:	601a      	str	r2, [r3, #0]
}
 8002490:	e02d      	b.n	80024ee <USART1_IRQHandler+0xbe>
    else if ((USART1->ISR & USART_ISR_RXNE) == USART_ISR_RXNE)
 8002492:	4b19      	ldr	r3, [pc, #100]	@ (80024f8 <USART1_IRQHandler+0xc8>)
 8002494:	69db      	ldr	r3, [r3, #28]
 8002496:	2220      	movs	r2, #32
 8002498:	4013      	ands	r3, r2
 800249a:	2b20      	cmp	r3, #32
 800249c:	d117      	bne.n	80024ce <USART1_IRQHandler+0x9e>
        uint8_t data = (uint8_t)(USART1->RDR); // Receive data, clear flag
 800249e:	4b16      	ldr	r3, [pc, #88]	@ (80024f8 <USART1_IRQHandler+0xc8>)
 80024a0:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 80024a2:	b29a      	uxth	r2, r3
 80024a4:	1dfb      	adds	r3, r7, #7
 80024a6:	701a      	strb	r2, [r3, #0]
        uint8_t tmphead = (UART1_RxHead + 1) & UART1_RX_BUFFER_MASK;
 80024a8:	4b17      	ldr	r3, [pc, #92]	@ (8002508 <USART1_IRQHandler+0xd8>)
 80024aa:	781b      	ldrb	r3, [r3, #0]
 80024ac:	b2da      	uxtb	r2, r3
 80024ae:	1dbb      	adds	r3, r7, #6
 80024b0:	3201      	adds	r2, #1
 80024b2:	701a      	strb	r2, [r3, #0]
        UART1_RxHead = tmphead;
 80024b4:	4b14      	ldr	r3, [pc, #80]	@ (8002508 <USART1_IRQHandler+0xd8>)
 80024b6:	1dba      	adds	r2, r7, #6
 80024b8:	7812      	ldrb	r2, [r2, #0]
 80024ba:	701a      	strb	r2, [r3, #0]
        if (tmphead == UART1_RxTail)
 80024bc:	4b13      	ldr	r3, [pc, #76]	@ (800250c <USART1_IRQHandler+0xdc>)
 80024be:	781b      	ldrb	r3, [r3, #0]
        UART1_RxBuf[tmphead] = data;
 80024c0:	1dbb      	adds	r3, r7, #6
 80024c2:	781b      	ldrb	r3, [r3, #0]
 80024c4:	4a12      	ldr	r2, [pc, #72]	@ (8002510 <USART1_IRQHandler+0xe0>)
 80024c6:	1df9      	adds	r1, r7, #7
 80024c8:	7809      	ldrb	r1, [r1, #0]
 80024ca:	54d1      	strb	r1, [r2, r3]
}
 80024cc:	e00f      	b.n	80024ee <USART1_IRQHandler+0xbe>
    else if ((USART1->ISR & USART_ISR_ORE) == USART_ISR_ORE)
 80024ce:	4b0a      	ldr	r3, [pc, #40]	@ (80024f8 <USART1_IRQHandler+0xc8>)
 80024d0:	69db      	ldr	r3, [r3, #28]
 80024d2:	2208      	movs	r2, #8
 80024d4:	4013      	ands	r3, r2
 80024d6:	2b08      	cmp	r3, #8
 80024d8:	d106      	bne.n	80024e8 <USART1_IRQHandler+0xb8>
    	USART1->ICR |= USART_ICR_ORECF; // Clear ORE flag
 80024da:	4b07      	ldr	r3, [pc, #28]	@ (80024f8 <USART1_IRQHandler+0xc8>)
 80024dc:	6a1a      	ldr	r2, [r3, #32]
 80024de:	4b06      	ldr	r3, [pc, #24]	@ (80024f8 <USART1_IRQHandler+0xc8>)
 80024e0:	2108      	movs	r1, #8
 80024e2:	430a      	orrs	r2, r1
 80024e4:	621a      	str	r2, [r3, #32]
}
 80024e6:	e002      	b.n	80024ee <USART1_IRQHandler+0xbe>
        NVIC_DisableIRQ(USART1_IRQn); // Disable UART_IRQn
 80024e8:	201b      	movs	r0, #27
 80024ea:	f7ff fda5 	bl	8002038 <__NVIC_DisableIRQ>
}
 80024ee:	46c0      	nop			@ (mov r8, r8)
 80024f0:	46bd      	mov	sp, r7
 80024f2:	b002      	add	sp, #8
 80024f4:	bd80      	pop	{r7, pc}
 80024f6:	46c0      	nop			@ (mov r8, r8)
 80024f8:	40013800 	.word	0x40013800
 80024fc:	20000254 	.word	0x20000254
 8002500:	20000255 	.word	0x20000255
 8002504:	20000154 	.word	0x20000154
 8002508:	20000150 	.word	0x20000150
 800250c:	20000151 	.word	0x20000151
 8002510:	20000050 	.word	0x20000050

08002514 <Configure_FakeSensor>:
           -
 * Param   None
 * Retval  None
 */
void Configure_FakeSensor(void)
{
 8002514:	b580      	push	{r7, lr}
 8002516:	af00      	add	r7, sp, #0
	value = 0;
 8002518:	4b02      	ldr	r3, [pc, #8]	@ (8002524 <Configure_FakeSensor+0x10>)
 800251a:	2200      	movs	r2, #0
 800251c:	701a      	strb	r2, [r3, #0]
}
 800251e:	46c0      	nop			@ (mov r8, r8)
 8002520:	46bd      	mov	sp, r7
 8002522:	bd80      	pop	{r7, pc}
 8002524:	20000256 	.word	0x20000256

08002528 <Get_FakeSensorValue>:

char Get_FakeSensorValue(void)
{
 8002528:	b580      	push	{r7, lr}
 800252a:	af00      	add	r7, sp, #0
	return value;
 800252c:	4b02      	ldr	r3, [pc, #8]	@ (8002538 <Get_FakeSensorValue+0x10>)
 800252e:	781b      	ldrb	r3, [r3, #0]
 8002530:	b2db      	uxtb	r3, r3
}
 8002532:	0018      	movs	r0, r3
 8002534:	46bd      	mov	sp, r7
 8002536:	bd80      	pop	{r7, pc}
 8002538:	20000256 	.word	0x20000256

0800253c <Set_FakeSensorValue>:

void Set_FakeSensorValue(char v)
{
 800253c:	b580      	push	{r7, lr}
 800253e:	b082      	sub	sp, #8
 8002540:	af00      	add	r7, sp, #0
 8002542:	0002      	movs	r2, r0
 8002544:	1dfb      	adds	r3, r7, #7
 8002546:	701a      	strb	r2, [r3, #0]
	value = v;
 8002548:	4b03      	ldr	r3, [pc, #12]	@ (8002558 <Set_FakeSensorValue+0x1c>)
 800254a:	1dfa      	adds	r2, r7, #7
 800254c:	7812      	ldrb	r2, [r2, #0]
 800254e:	701a      	strb	r2, [r3, #0]
}
 8002550:	46c0      	nop			@ (mov r8, r8)
 8002552:	46bd      	mov	sp, r7
 8002554:	b002      	add	sp, #8
 8002556:	bd80      	pop	{r7, pc}
 8002558:	20000256 	.word	0x20000256

0800255c <Configure_GlobalClock>:
           -
 * Param   None
 * Retval  None
 */
void Configure_GlobalClock(void)
{
 800255c:	b580      	push	{r7, lr}
 800255e:	af00      	add	r7, sp, #0
	global_tick = 0;
 8002560:	4b02      	ldr	r3, [pc, #8]	@ (800256c <Configure_GlobalClock+0x10>)
 8002562:	2200      	movs	r2, #0
 8002564:	601a      	str	r2, [r3, #0]
}
 8002566:	46c0      	nop			@ (mov r8, r8)
 8002568:	46bd      	mov	sp, r7
 800256a:	bd80      	pop	{r7, pc}
 800256c:	20000258 	.word	0x20000258

08002570 <Get_GlobalClock>:

uint32_t Get_GlobalClock(void)
{
 8002570:	b580      	push	{r7, lr}
 8002572:	af00      	add	r7, sp, #0
	return global_tick;
 8002574:	4b02      	ldr	r3, [pc, #8]	@ (8002580 <Get_GlobalClock+0x10>)
 8002576:	681b      	ldr	r3, [r3, #0]
}
 8002578:	0018      	movs	r0, r3
 800257a:	46bd      	mov	sp, r7
 800257c:	bd80      	pop	{r7, pc}
 800257e:	46c0      	nop			@ (mov r8, r8)
 8002580:	20000258 	.word	0x20000258

08002584 <Inc_GlobalClock>:
		GPIOA->BSRR = GPIO_BSRR_BS_5;
	}
}

void Inc_GlobalClock(void)
{
 8002584:	b580      	push	{r7, lr}
 8002586:	af00      	add	r7, sp, #0
	global_tick++;
 8002588:	4b10      	ldr	r3, [pc, #64]	@ (80025cc <Inc_GlobalClock+0x48>)
 800258a:	681b      	ldr	r3, [r3, #0]
 800258c:	1c5a      	adds	r2, r3, #1
 800258e:	4b0f      	ldr	r3, [pc, #60]	@ (80025cc <Inc_GlobalClock+0x48>)
 8002590:	601a      	str	r2, [r3, #0]

	// For debugging purpose: show the synchronization of the global clocks
	// by toggling an LED
	if((global_tick % 20) == 0)
 8002592:	4b0e      	ldr	r3, [pc, #56]	@ (80025cc <Inc_GlobalClock+0x48>)
 8002594:	681b      	ldr	r3, [r3, #0]
 8002596:	2114      	movs	r1, #20
 8002598:	0018      	movs	r0, r3
 800259a:	f7fd fe3b 	bl	8000214 <__aeabi_uidivmod>
 800259e:	1e0b      	subs	r3, r1, #0
 80025a0:	d105      	bne.n	80025ae <Inc_GlobalClock+0x2a>
	{
		GPIOA->BSRR = GPIO_BSRR_BR_5;
 80025a2:	2390      	movs	r3, #144	@ 0x90
 80025a4:	05db      	lsls	r3, r3, #23
 80025a6:	2280      	movs	r2, #128	@ 0x80
 80025a8:	0392      	lsls	r2, r2, #14
 80025aa:	619a      	str	r2, [r3, #24]
	}
	else if((global_tick % 10) == 0)
	{
		GPIOA->BSRR = GPIO_BSRR_BS_5;
	}
}
 80025ac:	e00b      	b.n	80025c6 <Inc_GlobalClock+0x42>
	else if((global_tick % 10) == 0)
 80025ae:	4b07      	ldr	r3, [pc, #28]	@ (80025cc <Inc_GlobalClock+0x48>)
 80025b0:	681b      	ldr	r3, [r3, #0]
 80025b2:	210a      	movs	r1, #10
 80025b4:	0018      	movs	r0, r3
 80025b6:	f7fd fe2d 	bl	8000214 <__aeabi_uidivmod>
 80025ba:	1e0b      	subs	r3, r1, #0
 80025bc:	d103      	bne.n	80025c6 <Inc_GlobalClock+0x42>
		GPIOA->BSRR = GPIO_BSRR_BS_5;
 80025be:	2390      	movs	r3, #144	@ 0x90
 80025c0:	05db      	lsls	r3, r3, #23
 80025c2:	2220      	movs	r2, #32
 80025c4:	619a      	str	r2, [r3, #24]
}
 80025c6:	46c0      	nop			@ (mov r8, r8)
 80025c8:	46bd      	mov	sp, r7
 80025ca:	bd80      	pop	{r7, pc}
 80025cc:	20000258 	.word	0x20000258

080025d0 <__NVIC_EnableIRQ>:
{
 80025d0:	b580      	push	{r7, lr}
 80025d2:	b082      	sub	sp, #8
 80025d4:	af00      	add	r7, sp, #0
 80025d6:	0002      	movs	r2, r0
 80025d8:	1dfb      	adds	r3, r7, #7
 80025da:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 80025dc:	1dfb      	adds	r3, r7, #7
 80025de:	781b      	ldrb	r3, [r3, #0]
 80025e0:	2b7f      	cmp	r3, #127	@ 0x7f
 80025e2:	d809      	bhi.n	80025f8 <__NVIC_EnableIRQ+0x28>
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80025e4:	1dfb      	adds	r3, r7, #7
 80025e6:	781b      	ldrb	r3, [r3, #0]
 80025e8:	001a      	movs	r2, r3
 80025ea:	231f      	movs	r3, #31
 80025ec:	401a      	ands	r2, r3
 80025ee:	4b04      	ldr	r3, [pc, #16]	@ (8002600 <__NVIC_EnableIRQ+0x30>)
 80025f0:	2101      	movs	r1, #1
 80025f2:	4091      	lsls	r1, r2
 80025f4:	000a      	movs	r2, r1
 80025f6:	601a      	str	r2, [r3, #0]
}
 80025f8:	46c0      	nop			@ (mov r8, r8)
 80025fa:	46bd      	mov	sp, r7
 80025fc:	b002      	add	sp, #8
 80025fe:	bd80      	pop	{r7, pc}
 8002600:	e000e100 	.word	0xe000e100

08002604 <__NVIC_SetPriority>:
{
 8002604:	b590      	push	{r4, r7, lr}
 8002606:	b083      	sub	sp, #12
 8002608:	af00      	add	r7, sp, #0
 800260a:	0002      	movs	r2, r0
 800260c:	6039      	str	r1, [r7, #0]
 800260e:	1dfb      	adds	r3, r7, #7
 8002610:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 8002612:	1dfb      	adds	r3, r7, #7
 8002614:	781b      	ldrb	r3, [r3, #0]
 8002616:	2b7f      	cmp	r3, #127	@ 0x7f
 8002618:	d828      	bhi.n	800266c <__NVIC_SetPriority+0x68>
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 800261a:	4a2f      	ldr	r2, [pc, #188]	@ (80026d8 <__NVIC_SetPriority+0xd4>)
 800261c:	1dfb      	adds	r3, r7, #7
 800261e:	781b      	ldrb	r3, [r3, #0]
 8002620:	b25b      	sxtb	r3, r3
 8002622:	089b      	lsrs	r3, r3, #2
 8002624:	33c0      	adds	r3, #192	@ 0xc0
 8002626:	009b      	lsls	r3, r3, #2
 8002628:	589b      	ldr	r3, [r3, r2]
 800262a:	1dfa      	adds	r2, r7, #7
 800262c:	7812      	ldrb	r2, [r2, #0]
 800262e:	0011      	movs	r1, r2
 8002630:	2203      	movs	r2, #3
 8002632:	400a      	ands	r2, r1
 8002634:	00d2      	lsls	r2, r2, #3
 8002636:	21ff      	movs	r1, #255	@ 0xff
 8002638:	4091      	lsls	r1, r2
 800263a:	000a      	movs	r2, r1
 800263c:	43d2      	mvns	r2, r2
 800263e:	401a      	ands	r2, r3
 8002640:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8002642:	683b      	ldr	r3, [r7, #0]
 8002644:	019b      	lsls	r3, r3, #6
 8002646:	22ff      	movs	r2, #255	@ 0xff
 8002648:	401a      	ands	r2, r3
 800264a:	1dfb      	adds	r3, r7, #7
 800264c:	781b      	ldrb	r3, [r3, #0]
 800264e:	0018      	movs	r0, r3
 8002650:	2303      	movs	r3, #3
 8002652:	4003      	ands	r3, r0
 8002654:	00db      	lsls	r3, r3, #3
 8002656:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002658:	481f      	ldr	r0, [pc, #124]	@ (80026d8 <__NVIC_SetPriority+0xd4>)
 800265a:	1dfb      	adds	r3, r7, #7
 800265c:	781b      	ldrb	r3, [r3, #0]
 800265e:	b25b      	sxtb	r3, r3
 8002660:	089b      	lsrs	r3, r3, #2
 8002662:	430a      	orrs	r2, r1
 8002664:	33c0      	adds	r3, #192	@ 0xc0
 8002666:	009b      	lsls	r3, r3, #2
 8002668:	501a      	str	r2, [r3, r0]
}
 800266a:	e031      	b.n	80026d0 <__NVIC_SetPriority+0xcc>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 800266c:	4a1b      	ldr	r2, [pc, #108]	@ (80026dc <__NVIC_SetPriority+0xd8>)
 800266e:	1dfb      	adds	r3, r7, #7
 8002670:	781b      	ldrb	r3, [r3, #0]
 8002672:	0019      	movs	r1, r3
 8002674:	230f      	movs	r3, #15
 8002676:	400b      	ands	r3, r1
 8002678:	3b08      	subs	r3, #8
 800267a:	089b      	lsrs	r3, r3, #2
 800267c:	3306      	adds	r3, #6
 800267e:	009b      	lsls	r3, r3, #2
 8002680:	18d3      	adds	r3, r2, r3
 8002682:	3304      	adds	r3, #4
 8002684:	681b      	ldr	r3, [r3, #0]
 8002686:	1dfa      	adds	r2, r7, #7
 8002688:	7812      	ldrb	r2, [r2, #0]
 800268a:	0011      	movs	r1, r2
 800268c:	2203      	movs	r2, #3
 800268e:	400a      	ands	r2, r1
 8002690:	00d2      	lsls	r2, r2, #3
 8002692:	21ff      	movs	r1, #255	@ 0xff
 8002694:	4091      	lsls	r1, r2
 8002696:	000a      	movs	r2, r1
 8002698:	43d2      	mvns	r2, r2
 800269a:	401a      	ands	r2, r3
 800269c:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 800269e:	683b      	ldr	r3, [r7, #0]
 80026a0:	019b      	lsls	r3, r3, #6
 80026a2:	22ff      	movs	r2, #255	@ 0xff
 80026a4:	401a      	ands	r2, r3
 80026a6:	1dfb      	adds	r3, r7, #7
 80026a8:	781b      	ldrb	r3, [r3, #0]
 80026aa:	0018      	movs	r0, r3
 80026ac:	2303      	movs	r3, #3
 80026ae:	4003      	ands	r3, r0
 80026b0:	00db      	lsls	r3, r3, #3
 80026b2:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80026b4:	4809      	ldr	r0, [pc, #36]	@ (80026dc <__NVIC_SetPriority+0xd8>)
 80026b6:	1dfb      	adds	r3, r7, #7
 80026b8:	781b      	ldrb	r3, [r3, #0]
 80026ba:	001c      	movs	r4, r3
 80026bc:	230f      	movs	r3, #15
 80026be:	4023      	ands	r3, r4
 80026c0:	3b08      	subs	r3, #8
 80026c2:	089b      	lsrs	r3, r3, #2
 80026c4:	430a      	orrs	r2, r1
 80026c6:	3306      	adds	r3, #6
 80026c8:	009b      	lsls	r3, r3, #2
 80026ca:	18c3      	adds	r3, r0, r3
 80026cc:	3304      	adds	r3, #4
 80026ce:	601a      	str	r2, [r3, #0]
}
 80026d0:	46c0      	nop			@ (mov r8, r8)
 80026d2:	46bd      	mov	sp, r7
 80026d4:	b003      	add	sp, #12
 80026d6:	bd90      	pop	{r4, r7, pc}
 80026d8:	e000e100 	.word	0xe000e100
 80026dc:	e000ed00 	.word	0xe000ed00

080026e0 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 80026e0:	b580      	push	{r7, lr}
 80026e2:	b082      	sub	sp, #8
 80026e4:	af00      	add	r7, sp, #0
 80026e6:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 80026e8:	687b      	ldr	r3, [r7, #4]
 80026ea:	1e5a      	subs	r2, r3, #1
 80026ec:	2380      	movs	r3, #128	@ 0x80
 80026ee:	045b      	lsls	r3, r3, #17
 80026f0:	429a      	cmp	r2, r3
 80026f2:	d301      	bcc.n	80026f8 <SysTick_Config+0x18>
  {
    return (1UL);                                                   /* Reload value impossible */
 80026f4:	2301      	movs	r3, #1
 80026f6:	e010      	b.n	800271a <SysTick_Config+0x3a>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 80026f8:	4b0a      	ldr	r3, [pc, #40]	@ (8002724 <SysTick_Config+0x44>)
 80026fa:	687a      	ldr	r2, [r7, #4]
 80026fc:	3a01      	subs	r2, #1
 80026fe:	605a      	str	r2, [r3, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8002700:	2301      	movs	r3, #1
 8002702:	425b      	negs	r3, r3
 8002704:	2103      	movs	r1, #3
 8002706:	0018      	movs	r0, r3
 8002708:	f7ff ff7c 	bl	8002604 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 800270c:	4b05      	ldr	r3, [pc, #20]	@ (8002724 <SysTick_Config+0x44>)
 800270e:	2200      	movs	r2, #0
 8002710:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8002712:	4b04      	ldr	r3, [pc, #16]	@ (8002724 <SysTick_Config+0x44>)
 8002714:	2207      	movs	r2, #7
 8002716:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8002718:	2300      	movs	r3, #0
}
 800271a:	0018      	movs	r0, r3
 800271c:	46bd      	mov	sp, r7
 800271e:	b002      	add	sp, #8
 8002720:	bd80      	pop	{r7, pc}
 8002722:	46c0      	nop			@ (mov r8, r8)
 8002724:	e000e010 	.word	0xe000e010

08002728 <statesToInt>:
void Inc_LocalClock(void);
uint32_t Get_LocalClock(void);

// Private functions -----------------------------------------------------------
void statesToInt(double x)
{
 8002728:	b5b0      	push	{r4, r5, r7, lr}
 800272a:	b08c      	sub	sp, #48	@ 0x30
 800272c:	af00      	add	r7, sp, #0
 800272e:	6038      	str	r0, [r7, #0]
 8002730:	6079      	str	r1, [r7, #4]
	char *tmpSign = (x < 0) ? "-" : "";
 8002732:	2200      	movs	r2, #0
 8002734:	2300      	movs	r3, #0
 8002736:	6838      	ldr	r0, [r7, #0]
 8002738:	6879      	ldr	r1, [r7, #4]
 800273a:	f7fd fe71 	bl	8000420 <__aeabi_dcmplt>
 800273e:	1e03      	subs	r3, r0, #0
 8002740:	d001      	beq.n	8002746 <statesToInt+0x1e>
 8002742:	4b29      	ldr	r3, [pc, #164]	@ (80027e8 <statesToInt+0xc0>)
 8002744:	e000      	b.n	8002748 <statesToInt+0x20>
 8002746:	4b29      	ldr	r3, [pc, #164]	@ (80027ec <statesToInt+0xc4>)
 8002748:	62fb      	str	r3, [r7, #44]	@ 0x2c
	double tmpVal = (x < 0) ? -x : x;
 800274a:	2200      	movs	r2, #0
 800274c:	2300      	movs	r3, #0
 800274e:	6838      	ldr	r0, [r7, #0]
 8002750:	6879      	ldr	r1, [r7, #4]
 8002752:	f7fd fe65 	bl	8000420 <__aeabi_dcmplt>
 8002756:	1e03      	subs	r3, r0, #0
 8002758:	d007      	beq.n	800276a <statesToInt+0x42>
 800275a:	683b      	ldr	r3, [r7, #0]
 800275c:	001c      	movs	r4, r3
 800275e:	687b      	ldr	r3, [r7, #4]
 8002760:	2280      	movs	r2, #128	@ 0x80
 8002762:	0612      	lsls	r2, r2, #24
 8002764:	405a      	eors	r2, r3
 8002766:	0015      	movs	r5, r2
 8002768:	e001      	b.n	800276e <statesToInt+0x46>
 800276a:	683c      	ldr	r4, [r7, #0]
 800276c:	687d      	ldr	r5, [r7, #4]
 800276e:	623c      	str	r4, [r7, #32]
 8002770:	627d      	str	r5, [r7, #36]	@ 0x24

	int tmpInt1 = tmpVal;                  // Get the integer (678).
 8002772:	6a38      	ldr	r0, [r7, #32]
 8002774:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8002776:	f7ff fa53 	bl	8001c20 <__aeabi_d2iz>
 800277a:	0003      	movs	r3, r0
 800277c:	61fb      	str	r3, [r7, #28]
	double tmpFrac = tmpVal - tmpInt1;      // Get fraction (0.0123).
 800277e:	69f8      	ldr	r0, [r7, #28]
 8002780:	f7ff fa8a 	bl	8001c98 <__aeabi_i2d>
 8002784:	0002      	movs	r2, r0
 8002786:	000b      	movs	r3, r1
 8002788:	6a38      	ldr	r0, [r7, #32]
 800278a:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 800278c:	f7fe fe3e 	bl	800140c <__aeabi_dsub>
 8002790:	0002      	movs	r2, r0
 8002792:	000b      	movs	r3, r1
 8002794:	613a      	str	r2, [r7, #16]
 8002796:	617b      	str	r3, [r7, #20]
	int tmpInt2 = trunc(tmpFrac * 10000);  // Turn into integer (123).
 8002798:	2200      	movs	r2, #0
 800279a:	4b15      	ldr	r3, [pc, #84]	@ (80027f0 <statesToInt+0xc8>)
 800279c:	6938      	ldr	r0, [r7, #16]
 800279e:	6979      	ldr	r1, [r7, #20]
 80027a0:	f7fe fb4e 	bl	8000e40 <__aeabi_dmul>
 80027a4:	0002      	movs	r2, r0
 80027a6:	000b      	movs	r3, r1
 80027a8:	0010      	movs	r0, r2
 80027aa:	0019      	movs	r1, r3
 80027ac:	f000 fcc0 	bl	8003130 <trunc>
 80027b0:	0002      	movs	r2, r0
 80027b2:	000b      	movs	r3, r1
 80027b4:	0010      	movs	r0, r2
 80027b6:	0019      	movs	r1, r3
 80027b8:	f7ff fa32 	bl	8001c20 <__aeabi_d2iz>
 80027bc:	0003      	movs	r3, r0
 80027be:	60fb      	str	r3, [r7, #12]
	TransmitString_TII(tmpSign);
 80027c0:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80027c2:	0018      	movs	r0, r3
 80027c4:	f000 fb90 	bl	8002ee8 <TransmitString_TII>
	printStates(tmpInt1);
 80027c8:	69fb      	ldr	r3, [r7, #28]
 80027ca:	0018      	movs	r0, r3
 80027cc:	f000 f814 	bl	80027f8 <printStates>
	TransmitString_TII(".");
 80027d0:	4b08      	ldr	r3, [pc, #32]	@ (80027f4 <statesToInt+0xcc>)
 80027d2:	0018      	movs	r0, r3
 80027d4:	f000 fb88 	bl	8002ee8 <TransmitString_TII>
	printStates(tmpInt2);
 80027d8:	68fb      	ldr	r3, [r7, #12]
 80027da:	0018      	movs	r0, r3
 80027dc:	f000 f80c 	bl	80027f8 <printStates>
}
 80027e0:	46c0      	nop			@ (mov r8, r8)
 80027e2:	46bd      	mov	sp, r7
 80027e4:	b00c      	add	sp, #48	@ 0x30
 80027e6:	bdb0      	pop	{r4, r5, r7, pc}
 80027e8:	080040c0 	.word	0x080040c0
 80027ec:	080040c4 	.word	0x080040c4
 80027f0:	40c38800 	.word	0x40c38800
 80027f4:	080040c8 	.word	0x080040c8

080027f8 <printStates>:
void printStates(int number)
{
 80027f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80027fa:	b08f      	sub	sp, #60	@ 0x3c
 80027fc:	af00      	add	r7, sp, #0
 80027fe:	6078      	str	r0, [r7, #4]
	int16_t base_val = 10, digit, i = 0, n = 0;
 8002800:	2332      	movs	r3, #50	@ 0x32
 8002802:	18fb      	adds	r3, r7, r3
 8002804:	220a      	movs	r2, #10
 8002806:	801a      	strh	r2, [r3, #0]
 8002808:	2336      	movs	r3, #54	@ 0x36
 800280a:	18fb      	adds	r3, r7, r3
 800280c:	2200      	movs	r2, #0
 800280e:	801a      	strh	r2, [r3, #0]
 8002810:	2334      	movs	r3, #52	@ 0x34
 8002812:	18fb      	adds	r3, r7, r3
 8002814:	2200      	movs	r2, #0
 8002816:	801a      	strh	r2, [r3, #0]
		char x_str[32], t;
		while (number)
 8002818:	e041      	b.n	800289e <printStates+0xa6>
		{
			digit = number % base_val;
 800281a:	2532      	movs	r5, #50	@ 0x32
 800281c:	197b      	adds	r3, r7, r5
 800281e:	2200      	movs	r2, #0
 8002820:	5e9a      	ldrsh	r2, [r3, r2]
 8002822:	687b      	ldr	r3, [r7, #4]
 8002824:	0011      	movs	r1, r2
 8002826:	0018      	movs	r0, r3
 8002828:	f7fd fdde 	bl	80003e8 <__aeabi_idivmod>
 800282c:	000b      	movs	r3, r1
 800282e:	001a      	movs	r2, r3
 8002830:	242e      	movs	r4, #46	@ 0x2e
 8002832:	193b      	adds	r3, r7, r4
 8002834:	801a      	strh	r2, [r3, #0]
			number /= base_val;
 8002836:	197b      	adds	r3, r7, r5
 8002838:	2200      	movs	r2, #0
 800283a:	5e9b      	ldrsh	r3, [r3, r2]
 800283c:	0019      	movs	r1, r3
 800283e:	6878      	ldr	r0, [r7, #4]
 8002840:	f7fd fcec 	bl	800021c <__divsi3>
 8002844:	0003      	movs	r3, r0
 8002846:	607b      	str	r3, [r7, #4]
			if (digit < 10)
 8002848:	193b      	adds	r3, r7, r4
 800284a:	2200      	movs	r2, #0
 800284c:	5e9b      	ldrsh	r3, [r3, r2]
 800284e:	2b09      	cmp	r3, #9
 8002850:	dc12      	bgt.n	8002878 <printStates+0x80>
			x_str[n++] = digit + '0';
 8002852:	193b      	adds	r3, r7, r4
 8002854:	881b      	ldrh	r3, [r3, #0]
 8002856:	b2db      	uxtb	r3, r3
 8002858:	2434      	movs	r4, #52	@ 0x34
 800285a:	193a      	adds	r2, r7, r4
 800285c:	2100      	movs	r1, #0
 800285e:	5e51      	ldrsh	r1, [r2, r1]
 8002860:	b28a      	uxth	r2, r1
 8002862:	3201      	adds	r2, #1
 8002864:	b290      	uxth	r0, r2
 8002866:	193a      	adds	r2, r7, r4
 8002868:	8010      	strh	r0, [r2, #0]
 800286a:	000a      	movs	r2, r1
 800286c:	3330      	adds	r3, #48	@ 0x30
 800286e:	b2d9      	uxtb	r1, r3
 8002870:	230c      	movs	r3, #12
 8002872:	18fb      	adds	r3, r7, r3
 8002874:	5499      	strb	r1, [r3, r2]
 8002876:	e012      	b.n	800289e <printStates+0xa6>
		    else
			 x_str[n++] = digit + 'A' - 10;   /*handle base > 9 */
 8002878:	232e      	movs	r3, #46	@ 0x2e
 800287a:	18fb      	adds	r3, r7, r3
 800287c:	881b      	ldrh	r3, [r3, #0]
 800287e:	b2db      	uxtb	r3, r3
 8002880:	2434      	movs	r4, #52	@ 0x34
 8002882:	193a      	adds	r2, r7, r4
 8002884:	2100      	movs	r1, #0
 8002886:	5e51      	ldrsh	r1, [r2, r1]
 8002888:	b28a      	uxth	r2, r1
 800288a:	3201      	adds	r2, #1
 800288c:	b290      	uxth	r0, r2
 800288e:	193a      	adds	r2, r7, r4
 8002890:	8010      	strh	r0, [r2, #0]
 8002892:	000a      	movs	r2, r1
 8002894:	3337      	adds	r3, #55	@ 0x37
 8002896:	b2d9      	uxtb	r1, r3
 8002898:	230c      	movs	r3, #12
 800289a:	18fb      	adds	r3, r7, r3
 800289c:	5499      	strb	r1, [r3, r2]
		while (number)
 800289e:	687b      	ldr	r3, [r7, #4]
 80028a0:	2b00      	cmp	r3, #0
 80028a2:	d1ba      	bne.n	800281a <printStates+0x22>
		}
		/* Terminate string */
		x_str[n] = '\0';
 80028a4:	2334      	movs	r3, #52	@ 0x34
 80028a6:	18fb      	adds	r3, r7, r3
 80028a8:	2200      	movs	r2, #0
 80028aa:	5e9b      	ldrsh	r3, [r3, r2]
 80028ac:	220c      	movs	r2, #12
 80028ae:	18ba      	adds	r2, r7, r2
 80028b0:	2100      	movs	r1, #0
 80028b2:	54d1      	strb	r1, [r2, r3]
		/* Reverse string */
		for (i=0; i<n/2; i++)
 80028b4:	2336      	movs	r3, #54	@ 0x36
 80028b6:	18fb      	adds	r3, r7, r3
 80028b8:	2200      	movs	r2, #0
 80028ba:	801a      	strh	r2, [r3, #0]
 80028bc:	e02d      	b.n	800291a <printStates+0x122>
		{
			t = x_str[i];
 80028be:	2036      	movs	r0, #54	@ 0x36
 80028c0:	183b      	adds	r3, r7, r0
 80028c2:	2200      	movs	r2, #0
 80028c4:	5e9a      	ldrsh	r2, [r3, r2]
 80028c6:	2531      	movs	r5, #49	@ 0x31
 80028c8:	197b      	adds	r3, r7, r5
 80028ca:	240c      	movs	r4, #12
 80028cc:	1939      	adds	r1, r7, r4
 80028ce:	5c8a      	ldrb	r2, [r1, r2]
 80028d0:	701a      	strb	r2, [r3, #0]
			x_str[i] = x_str[n-i-1];
 80028d2:	2634      	movs	r6, #52	@ 0x34
 80028d4:	19bb      	adds	r3, r7, r6
 80028d6:	2200      	movs	r2, #0
 80028d8:	5e9a      	ldrsh	r2, [r3, r2]
 80028da:	183b      	adds	r3, r7, r0
 80028dc:	2100      	movs	r1, #0
 80028de:	5e5b      	ldrsh	r3, [r3, r1]
 80028e0:	1ad3      	subs	r3, r2, r3
 80028e2:	1e5a      	subs	r2, r3, #1
 80028e4:	183b      	adds	r3, r7, r0
 80028e6:	2100      	movs	r1, #0
 80028e8:	5e5b      	ldrsh	r3, [r3, r1]
 80028ea:	1939      	adds	r1, r7, r4
 80028ec:	5c89      	ldrb	r1, [r1, r2]
 80028ee:	193a      	adds	r2, r7, r4
 80028f0:	54d1      	strb	r1, [r2, r3]
			x_str[n-i-1] = t;
 80028f2:	19bb      	adds	r3, r7, r6
 80028f4:	2200      	movs	r2, #0
 80028f6:	5e9a      	ldrsh	r2, [r3, r2]
 80028f8:	183b      	adds	r3, r7, r0
 80028fa:	2100      	movs	r1, #0
 80028fc:	5e5b      	ldrsh	r3, [r3, r1]
 80028fe:	1ad3      	subs	r3, r2, r3
 8002900:	3b01      	subs	r3, #1
 8002902:	193a      	adds	r2, r7, r4
 8002904:	1979      	adds	r1, r7, r5
 8002906:	7809      	ldrb	r1, [r1, #0]
 8002908:	54d1      	strb	r1, [r2, r3]
		for (i=0; i<n/2; i++)
 800290a:	183b      	adds	r3, r7, r0
 800290c:	2200      	movs	r2, #0
 800290e:	5e9b      	ldrsh	r3, [r3, r2]
 8002910:	b29b      	uxth	r3, r3
 8002912:	3301      	adds	r3, #1
 8002914:	b29a      	uxth	r2, r3
 8002916:	183b      	adds	r3, r7, r0
 8002918:	801a      	strh	r2, [r3, #0]
 800291a:	2334      	movs	r3, #52	@ 0x34
 800291c:	18fb      	adds	r3, r7, r3
 800291e:	2200      	movs	r2, #0
 8002920:	5e9b      	ldrsh	r3, [r3, r2]
 8002922:	2b00      	cmp	r3, #0
 8002924:	da00      	bge.n	8002928 <printStates+0x130>
 8002926:	3301      	adds	r3, #1
 8002928:	105b      	asrs	r3, r3, #1
 800292a:	b21b      	sxth	r3, r3
 800292c:	2236      	movs	r2, #54	@ 0x36
 800292e:	18ba      	adds	r2, r7, r2
 8002930:	2100      	movs	r1, #0
 8002932:	5e52      	ldrsh	r2, [r2, r1]
 8002934:	429a      	cmp	r2, r3
 8002936:	dbc2      	blt.n	80028be <printStates+0xc6>
	    }
		if (x_str[0]=='\0')
 8002938:	230c      	movs	r3, #12
 800293a:	18fb      	adds	r3, r7, r3
 800293c:	781b      	ldrb	r3, [r3, #0]
 800293e:	2b00      	cmp	r3, #0
 8002940:	d104      	bne.n	800294c <printStates+0x154>
		{
			TransmitString_TII("0");
 8002942:	4b07      	ldr	r3, [pc, #28]	@ (8002960 <printStates+0x168>)
 8002944:	0018      	movs	r0, r3
 8002946:	f000 facf 	bl	8002ee8 <TransmitString_TII>
		{
			TransmitString_TII(x_str);

		}

}
 800294a:	e004      	b.n	8002956 <printStates+0x15e>
			TransmitString_TII(x_str);
 800294c:	230c      	movs	r3, #12
 800294e:	18fb      	adds	r3, r7, r3
 8002950:	0018      	movs	r0, r3
 8002952:	f000 fac9 	bl	8002ee8 <TransmitString_TII>
}
 8002956:	46c0      	nop			@ (mov r8, r8)
 8002958:	46bd      	mov	sp, r7
 800295a:	b00f      	add	sp, #60	@ 0x3c
 800295c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800295e:	46c0      	nop			@ (mov r8, r8)
 8002960:	080040cc 	.word	0x080040cc

08002964 <Get_LocalClock>:
void Inc_LocalClock(void)
{
	local_tick++;
}
uint32_t Get_LocalClock(void)
{
 8002964:	b580      	push	{r7, lr}
 8002966:	af00      	add	r7, sp, #0
	return local_tick;
 8002968:	4b02      	ldr	r3, [pc, #8]	@ (8002974 <Get_LocalClock+0x10>)
 800296a:	681b      	ldr	r3, [r3, #0]
}
 800296c:	0018      	movs	r0, r3
 800296e:	46bd      	mov	sp, r7
 8002970:	bd80      	pop	{r7, pc}
 8002972:	46c0      	nop			@ (mov r8, r8)
 8002974:	20000260 	.word	0x20000260

08002978 <main>:
  * Brief  Main program.
  * Param  None
  * Return None
  */
int main(void)
{
 8002978:	b580      	push	{r7, lr}
 800297a:	b086      	sub	sp, #24
 800297c:	af00      	add	r7, sp, #0
     * this is done through SystemInit() function which is called from startup
     * file (startup_stm32f072xb.s) before to branch to application main.
     * To reconfigure the default setting of SystemInit() function, refer to
     * system_stm32f0xx.c file
     */
	SysTick_Config(80000);
 800297e:	4b54      	ldr	r3, [pc, #336]	@ (8002ad0 <main+0x158>)
 8002980:	0018      	movs	r0, r3
 8002982:	f7ff fead 	bl	80026e0 <SysTick_Config>

	Configure_GlobalClock();
 8002986:	f7ff fde9 	bl	800255c <Configure_GlobalClock>

    ConfigureGPIO();
 800298a:	f000 f8c9 	bl	8002b20 <ConfigureGPIO>
    ConfigureExternalIT();
 800298e:	f000 f8df 	bl	8002b50 <ConfigureExternalIT>
    ConfigureGPIO_TII(); // Used for monitoring the component
 8002992:	f000 fa13 	bl	8002dbc <ConfigureGPIO_TII>
    Configure_TII();
 8002996:	f000 fa37 	bl	8002e08 <Configure_TII>
    Configure_CNI(); // For master-node communication
 800299a:	f7ff fbdd 	bl	8002158 <Configure_CNI>
    Configure_FakeSensor();
 800299e:	f7ff fdb9 	bl	8002514 <Configure_FakeSensor>

    /* Initialize Simulink model */
     Undamped_initialize();
 80029a2:	f7ff fb29 	bl	8001ff8 <Undamped_initialize>
     TransmitString_TII("Pendulum Plant Emulator Started\r\n");
 80029a6:	4b4b      	ldr	r3, [pc, #300]	@ (8002ad4 <main+0x15c>)
 80029a8:	0018      	movs	r0, r3
 80029aa:	f000 fa9d 	bl	8002ee8 <TransmitString_TII>

     uint32_t tick=0;
 80029ae:	2300      	movs	r3, #0
 80029b0:	617b      	str	r3, [r7, #20]
     uint32_t lasttick=0;
 80029b2:	2300      	movs	r3, #0
 80029b4:	613b      	str	r3, [r7, #16]

    while(1) // Infinite loop
    {
    	if(mode == MASTER)
 80029b6:	4b48      	ldr	r3, [pc, #288]	@ (8002ad8 <main+0x160>)
 80029b8:	781b      	ldrb	r3, [r3, #0]
 80029ba:	b2db      	uxtb	r3, r3
 80029bc:	2b01      	cmp	r3, #1
 80029be:	d105      	bne.n	80029cc <main+0x54>
    	{
        	// Wait for 1000ms
    		delay_ms(1000);
 80029c0:	23fa      	movs	r3, #250	@ 0xfa
 80029c2:	009b      	lsls	r3, r3, #2
 80029c4:	0018      	movs	r0, r3
 80029c6:	f000 f895 	bl	8002af4 <delay_ms>
 80029ca:	e7f4      	b.n	80029b6 <main+0x3e>

    	}
    	else // Node
    	{

    		lasttick = tick;
 80029cc:	697b      	ldr	r3, [r7, #20]
 80029ce:	613b      	str	r3, [r7, #16]
        	tick= Get_LocalClock();
 80029d0:	f7ff ffc8 	bl	8002964 <Get_LocalClock>
 80029d4:	0003      	movs	r3, r0
 80029d6:	617b      	str	r3, [r7, #20]
        	if (tick>lasttick)
 80029d8:	697a      	ldr	r2, [r7, #20]
 80029da:	693b      	ldr	r3, [r7, #16]
 80029dc:	429a      	cmp	r2, r3
 80029de:	d964      	bls.n	8002aaa <main+0x132>
        	{
        		IncomingMessageHandler_CNI();
 80029e0:	f7ff fbde 	bl	80021a0 <IncomingMessageHandler_CNI>
        		// Execute one simulation step
        		Undamped_step();
 80029e4:	f7ff fa92 	bl	8001f0c <Undamped_step>

        		// Output data in the format: torque, acceleration, velocity, displacement
        		statesToInt(rtU.controlTorque);
 80029e8:	4b3c      	ldr	r3, [pc, #240]	@ (8002adc <main+0x164>)
 80029ea:	681a      	ldr	r2, [r3, #0]
 80029ec:	685b      	ldr	r3, [r3, #4]
 80029ee:	0010      	movs	r0, r2
 80029f0:	0019      	movs	r1, r3
 80029f2:	f7ff fe99 	bl	8002728 <statesToInt>
        		TransmitString_TII((char*)" ");  // Input torque
 80029f6:	4b3a      	ldr	r3, [pc, #232]	@ (8002ae0 <main+0x168>)
 80029f8:	0018      	movs	r0, r3
 80029fa:	f000 fa75 	bl	8002ee8 <TransmitString_TII>
        		statesToInt(rtY.thetaDoubleDot);     // Angular acceleration
 80029fe:	4b39      	ldr	r3, [pc, #228]	@ (8002ae4 <main+0x16c>)
 8002a00:	691a      	ldr	r2, [r3, #16]
 8002a02:	695b      	ldr	r3, [r3, #20]
 8002a04:	0010      	movs	r0, r2
 8002a06:	0019      	movs	r1, r3
 8002a08:	f7ff fe8e 	bl	8002728 <statesToInt>
        		TransmitString_TII(" ");
 8002a0c:	4b34      	ldr	r3, [pc, #208]	@ (8002ae0 <main+0x168>)
 8002a0e:	0018      	movs	r0, r3
 8002a10:	f000 fa6a 	bl	8002ee8 <TransmitString_TII>
        		statesToInt(rtY.thetaDot);           // Angular velocity
 8002a14:	4b33      	ldr	r3, [pc, #204]	@ (8002ae4 <main+0x16c>)
 8002a16:	689a      	ldr	r2, [r3, #8]
 8002a18:	68db      	ldr	r3, [r3, #12]
 8002a1a:	0010      	movs	r0, r2
 8002a1c:	0019      	movs	r1, r3
 8002a1e:	f7ff fe83 	bl	8002728 <statesToInt>
        		TransmitString_TII(" ");
 8002a22:	4b2f      	ldr	r3, [pc, #188]	@ (8002ae0 <main+0x168>)
 8002a24:	0018      	movs	r0, r3
 8002a26:	f000 fa5f 	bl	8002ee8 <TransmitString_TII>
        		statesToInt(rtY.theta);              // Angular position
 8002a2a:	4b2e      	ldr	r3, [pc, #184]	@ (8002ae4 <main+0x16c>)
 8002a2c:	681a      	ldr	r2, [r3, #0]
 8002a2e:	685b      	ldr	r3, [r3, #4]
 8002a30:	0010      	movs	r0, r2
 8002a32:	0019      	movs	r1, r3
 8002a34:	f7ff fe78 	bl	8002728 <statesToInt>
        		TransmitString_TII(" ");
 8002a38:	4b29      	ldr	r3, [pc, #164]	@ (8002ae0 <main+0x168>)
 8002a3a:	0018      	movs	r0, r3
 8002a3c:	f000 fa54 	bl	8002ee8 <TransmitString_TII>
        		statesToInt((double)Get_GlobalClock());        // Show global clock
 8002a40:	f7ff fd96 	bl	8002570 <Get_GlobalClock>
 8002a44:	0003      	movs	r3, r0
 8002a46:	0018      	movs	r0, r3
 8002a48:	f7ff f954 	bl	8001cf4 <__aeabi_ui2d>
 8002a4c:	0002      	movs	r2, r0
 8002a4e:	000b      	movs	r3, r1
 8002a50:	0010      	movs	r0, r2
 8002a52:	0019      	movs	r1, r3
 8002a54:	f7ff fe68 	bl	8002728 <statesToInt>

        		TransmitString_TII("\r\n");
 8002a58:	4b23      	ldr	r3, [pc, #140]	@ (8002ae8 <main+0x170>)
 8002a5a:	0018      	movs	r0, r3
 8002a5c:	f000 fa44 	bl	8002ee8 <TransmitString_TII>

        		observation_t obs =
 8002a60:	003b      	movs	r3, r7
 8002a62:	2201      	movs	r2, #1
 8002a64:	701a      	strb	r2, [r3, #0]
        			{1, (float)rtY.thetaDoubleDot, (float)rtY.thetaDot, (float)rtY.theta};
 8002a66:	4b1f      	ldr	r3, [pc, #124]	@ (8002ae4 <main+0x16c>)
 8002a68:	691a      	ldr	r2, [r3, #16]
 8002a6a:	695b      	ldr	r3, [r3, #20]
 8002a6c:	0010      	movs	r0, r2
 8002a6e:	0019      	movs	r1, r3
 8002a70:	f7ff f9ac 	bl	8001dcc <__aeabi_d2f>
 8002a74:	1c02      	adds	r2, r0, #0
        		observation_t obs =
 8002a76:	003b      	movs	r3, r7
 8002a78:	605a      	str	r2, [r3, #4]
        			{1, (float)rtY.thetaDoubleDot, (float)rtY.thetaDot, (float)rtY.theta};
 8002a7a:	4b1a      	ldr	r3, [pc, #104]	@ (8002ae4 <main+0x16c>)
 8002a7c:	689a      	ldr	r2, [r3, #8]
 8002a7e:	68db      	ldr	r3, [r3, #12]
 8002a80:	0010      	movs	r0, r2
 8002a82:	0019      	movs	r1, r3
 8002a84:	f7ff f9a2 	bl	8001dcc <__aeabi_d2f>
 8002a88:	1c02      	adds	r2, r0, #0
        		observation_t obs =
 8002a8a:	003b      	movs	r3, r7
 8002a8c:	609a      	str	r2, [r3, #8]
        			{1, (float)rtY.thetaDoubleDot, (float)rtY.thetaDot, (float)rtY.theta};
 8002a8e:	4b15      	ldr	r3, [pc, #84]	@ (8002ae4 <main+0x16c>)
 8002a90:	681a      	ldr	r2, [r3, #0]
 8002a92:	685b      	ldr	r3, [r3, #4]
 8002a94:	0010      	movs	r0, r2
 8002a96:	0019      	movs	r1, r3
 8002a98:	f7ff f998 	bl	8001dcc <__aeabi_d2f>
 8002a9c:	1c02      	adds	r2, r0, #0
        		observation_t obs =
 8002a9e:	003b      	movs	r3, r7
 8002aa0:	60da      	str	r2, [r3, #12]

        		// Transmit the observation message
        		TransmitMessage_CNI(&obs);
 8002aa2:	003b      	movs	r3, r7
 8002aa4:	0018      	movs	r0, r3
 8002aa6:	f7ff fb60 	bl	800216a <TransmitMessage_CNI>


        	}
    	    if((local_tick % 500) == 0){
 8002aaa:	4b10      	ldr	r3, [pc, #64]	@ (8002aec <main+0x174>)
 8002aac:	681b      	ldr	r3, [r3, #0]
 8002aae:	22fa      	movs	r2, #250	@ 0xfa
 8002ab0:	0051      	lsls	r1, r2, #1
 8002ab2:	0018      	movs	r0, r3
 8002ab4:	f7fd fbae 	bl	8000214 <__aeabi_uidivmod>

    	    }

    		// Read the RT image of the fake sensor
    		if(Get_FakeSensorValue() == 1)
 8002ab8:	f7ff fd36 	bl	8002528 <Get_FakeSensorValue>
 8002abc:	0003      	movs	r3, r0
 8002abe:	2b01      	cmp	r3, #1
 8002ac0:	d000      	beq.n	8002ac4 <main+0x14c>
 8002ac2:	e778      	b.n	80029b6 <main+0x3e>
    		{
    			// Transmit message
    			TransmitString_TII("B1 clicked on master\r\n");
 8002ac4:	4b0a      	ldr	r3, [pc, #40]	@ (8002af0 <main+0x178>)
 8002ac6:	0018      	movs	r0, r3
 8002ac8:	f000 fa0e 	bl	8002ee8 <TransmitString_TII>
    	if(mode == MASTER)
 8002acc:	e773      	b.n	80029b6 <main+0x3e>
 8002ace:	46c0      	nop			@ (mov r8, r8)
 8002ad0:	00013880 	.word	0x00013880
 8002ad4:	080040d0 	.word	0x080040d0
 8002ad8:	2000025c 	.word	0x2000025c
 8002adc:	20000030 	.word	0x20000030
 8002ae0:	080040f4 	.word	0x080040f4
 8002ae4:	20000038 	.word	0x20000038
 8002ae8:	080040f8 	.word	0x080040f8
 8002aec:	20000260 	.word	0x20000260
 8002af0:	080040fc 	.word	0x080040fc

08002af4 <delay_ms>:
  *        - variable is incremented every 1ms
  * Param  None
  * Return None
  */
inline void delay_ms(const uint32_t t)
{
 8002af4:	b580      	push	{r7, lr}
 8002af6:	b084      	sub	sp, #16
 8002af8:	af00      	add	r7, sp, #0
 8002afa:	6078      	str	r0, [r7, #4]
	uint32_t tick_stop = local_tick + t;
 8002afc:	4b07      	ldr	r3, [pc, #28]	@ (8002b1c <delay_ms+0x28>)
 8002afe:	681b      	ldr	r3, [r3, #0]
 8002b00:	687a      	ldr	r2, [r7, #4]
 8002b02:	18d3      	adds	r3, r2, r3
 8002b04:	60fb      	str	r3, [r7, #12]

	while(local_tick < tick_stop)
 8002b06:	46c0      	nop			@ (mov r8, r8)
 8002b08:	4b04      	ldr	r3, [pc, #16]	@ (8002b1c <delay_ms+0x28>)
 8002b0a:	681b      	ldr	r3, [r3, #0]
 8002b0c:	68fa      	ldr	r2, [r7, #12]
 8002b0e:	429a      	cmp	r2, r3
 8002b10:	d8fa      	bhi.n	8002b08 <delay_ms+0x14>
	{
		; // Do nothing
	}
}
 8002b12:	46c0      	nop			@ (mov r8, r8)
 8002b14:	46c0      	nop			@ (mov r8, r8)
 8002b16:	46bd      	mov	sp, r7
 8002b18:	b004      	add	sp, #16
 8002b1a:	bd80      	pop	{r7, pc}
 8002b1c:	20000260 	.word	0x20000260

08002b20 <ConfigureGPIO>:
  *        - configures GPIO PA5 in output mode for the Green LED pin
  * Param  None
  * Return None
  */
inline void ConfigureGPIO(void)
{  
 8002b20:	b580      	push	{r7, lr}
 8002b22:	af00      	add	r7, sp, #0
    // 1. Enable the peripheral clock of GPIOA
    // 2. Select output mode (01) on PA5
    RCC->AHBENR |= RCC_AHBENR_GPIOAEN;
 8002b24:	4b09      	ldr	r3, [pc, #36]	@ (8002b4c <ConfigureGPIO+0x2c>)
 8002b26:	695a      	ldr	r2, [r3, #20]
 8002b28:	4b08      	ldr	r3, [pc, #32]	@ (8002b4c <ConfigureGPIO+0x2c>)
 8002b2a:	2180      	movs	r1, #128	@ 0x80
 8002b2c:	0289      	lsls	r1, r1, #10
 8002b2e:	430a      	orrs	r2, r1
 8002b30:	615a      	str	r2, [r3, #20]
    GPIOA->MODER |= GPIO_MODER_MODER5_0;
 8002b32:	2390      	movs	r3, #144	@ 0x90
 8002b34:	05db      	lsls	r3, r3, #23
 8002b36:	681a      	ldr	r2, [r3, #0]
 8002b38:	2390      	movs	r3, #144	@ 0x90
 8002b3a:	05db      	lsls	r3, r3, #23
 8002b3c:	2180      	movs	r1, #128	@ 0x80
 8002b3e:	00c9      	lsls	r1, r1, #3
 8002b40:	430a      	orrs	r2, r1
 8002b42:	601a      	str	r2, [r3, #0]
}
 8002b44:	46c0      	nop			@ (mov r8, r8)
 8002b46:	46bd      	mov	sp, r7
 8002b48:	bd80      	pop	{r7, pc}
 8002b4a:	46c0      	nop			@ (mov r8, r8)
 8002b4c:	40021000 	.word	0x40021000

08002b50 <ConfigureExternalIT>:
  *        - configures NVIC IRQ
  * Param  None
  * Return None
  */
inline void ConfigureExternalIT(void)
{  
 8002b50:	b580      	push	{r7, lr}
 8002b52:	af00      	add	r7, sp, #0
    // 1. Enable the peripheral clock of SYSCFG
    // 2. Enable the peripheral clock of GPIOC
    // 3. Select PORTC for EXTI13 by writing 0010 in SYSCFG_EXTICR4
    // 4. Configure the corresponding mask bit in the EXTI_IMR register
    // 5. Configure the Trigger Selection bits on falling edge
    RCC->APB2ENR |= RCC_APB2ENR_SYSCFGCOMPEN;
 8002b54:	4b15      	ldr	r3, [pc, #84]	@ (8002bac <ConfigureExternalIT+0x5c>)
 8002b56:	699a      	ldr	r2, [r3, #24]
 8002b58:	4b14      	ldr	r3, [pc, #80]	@ (8002bac <ConfigureExternalIT+0x5c>)
 8002b5a:	2101      	movs	r1, #1
 8002b5c:	430a      	orrs	r2, r1
 8002b5e:	619a      	str	r2, [r3, #24]
    RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 8002b60:	4b12      	ldr	r3, [pc, #72]	@ (8002bac <ConfigureExternalIT+0x5c>)
 8002b62:	695a      	ldr	r2, [r3, #20]
 8002b64:	4b11      	ldr	r3, [pc, #68]	@ (8002bac <ConfigureExternalIT+0x5c>)
 8002b66:	2180      	movs	r1, #128	@ 0x80
 8002b68:	0309      	lsls	r1, r1, #12
 8002b6a:	430a      	orrs	r2, r1
 8002b6c:	615a      	str	r2, [r3, #20]
    SYSCFG->EXTICR[3] |= SYSCFG_EXTICR4_EXTI13_PC;
 8002b6e:	4b10      	ldr	r3, [pc, #64]	@ (8002bb0 <ConfigureExternalIT+0x60>)
 8002b70:	695a      	ldr	r2, [r3, #20]
 8002b72:	4b0f      	ldr	r3, [pc, #60]	@ (8002bb0 <ConfigureExternalIT+0x60>)
 8002b74:	2120      	movs	r1, #32
 8002b76:	430a      	orrs	r2, r1
 8002b78:	615a      	str	r2, [r3, #20]
    EXTI->IMR |= EXTI_IMR_MR13;
 8002b7a:	4b0e      	ldr	r3, [pc, #56]	@ (8002bb4 <ConfigureExternalIT+0x64>)
 8002b7c:	681a      	ldr	r2, [r3, #0]
 8002b7e:	4b0d      	ldr	r3, [pc, #52]	@ (8002bb4 <ConfigureExternalIT+0x64>)
 8002b80:	2180      	movs	r1, #128	@ 0x80
 8002b82:	0189      	lsls	r1, r1, #6
 8002b84:	430a      	orrs	r2, r1
 8002b86:	601a      	str	r2, [r3, #0]
    EXTI->FTSR |= EXTI_FTSR_TR13;
 8002b88:	4b0a      	ldr	r3, [pc, #40]	@ (8002bb4 <ConfigureExternalIT+0x64>)
 8002b8a:	68da      	ldr	r2, [r3, #12]
 8002b8c:	4b09      	ldr	r3, [pc, #36]	@ (8002bb4 <ConfigureExternalIT+0x64>)
 8002b8e:	2180      	movs	r1, #128	@ 0x80
 8002b90:	0189      	lsls	r1, r1, #6
 8002b92:	430a      	orrs	r2, r1
 8002b94:	60da      	str	r2, [r3, #12]

    // Configure NVIC for External Interrupt
    // 6. Set priority for EXTI4_15
    // 7. Enable Interrupt on EXTI4_15
    NVIC_SetPriority(EXTI4_15_IRQn, 3);
 8002b96:	2103      	movs	r1, #3
 8002b98:	2007      	movs	r0, #7
 8002b9a:	f7ff fd33 	bl	8002604 <__NVIC_SetPriority>
    NVIC_EnableIRQ(EXTI4_15_IRQn);
 8002b9e:	2007      	movs	r0, #7
 8002ba0:	f7ff fd16 	bl	80025d0 <__NVIC_EnableIRQ>
}
 8002ba4:	46c0      	nop			@ (mov r8, r8)
 8002ba6:	46bd      	mov	sp, r7
 8002ba8:	bd80      	pop	{r7, pc}
 8002baa:	46c0      	nop			@ (mov r8, r8)
 8002bac:	40021000 	.word	0x40021000
 8002bb0:	40010000 	.word	0x40010000
 8002bb4:	40010400 	.word	0x40010400

08002bb8 <NMI_Handler>:
  * Brief  This function handles NMI exception.
  * Param  None
  * Return None
  */
void NMI_Handler(void)
{
 8002bb8:	b580      	push	{r7, lr}
 8002bba:	af00      	add	r7, sp, #0
}
 8002bbc:	46c0      	nop			@ (mov r8, r8)
 8002bbe:	46bd      	mov	sp, r7
 8002bc0:	bd80      	pop	{r7, pc}

08002bc2 <HardFault_Handler>:
  * Brief  This function handles Hard Fault exception.
  * Param  None
  * Return None
  */
void HardFault_Handler(void)
{
 8002bc2:	b580      	push	{r7, lr}
 8002bc4:	af00      	add	r7, sp, #0
    // Go to infinite loop when Hard Fault exception occurs
    while (1)
 8002bc6:	46c0      	nop			@ (mov r8, r8)
 8002bc8:	e7fd      	b.n	8002bc6 <HardFault_Handler+0x4>

08002bca <SVC_Handler>:
  * Brief  This function handles SVCall exception.
  * Param  None
  * Return None
  */
void SVC_Handler(void)
{
 8002bca:	b580      	push	{r7, lr}
 8002bcc:	af00      	add	r7, sp, #0
}
 8002bce:	46c0      	nop			@ (mov r8, r8)
 8002bd0:	46bd      	mov	sp, r7
 8002bd2:	bd80      	pop	{r7, pc}

08002bd4 <PendSV_Handler>:
  * Brief  This function handles PendSVC exception.
  * Param  None
  * Return None
  */
void PendSV_Handler(void)
{
 8002bd4:	b580      	push	{r7, lr}
 8002bd6:	af00      	add	r7, sp, #0
}
 8002bd8:	46c0      	nop			@ (mov r8, r8)
 8002bda:	46bd      	mov	sp, r7
 8002bdc:	bd80      	pop	{r7, pc}
	...

08002be0 <SysTick_Handler>:
  * Brief  This function handles SysTick exception.
  * Param  None
  * Return None
  */
void SysTick_Handler(void)
{
 8002be0:	b580      	push	{r7, lr}
 8002be2:	af00      	add	r7, sp, #0
	// Increment local clock every 1ms
	local_tick++;
 8002be4:	4b08      	ldr	r3, [pc, #32]	@ (8002c08 <SysTick_Handler+0x28>)
 8002be6:	681b      	ldr	r3, [r3, #0]
 8002be8:	1c5a      	adds	r2, r3, #1
 8002bea:	4b07      	ldr	r3, [pc, #28]	@ (8002c08 <SysTick_Handler+0x28>)
 8002bec:	601a      	str	r2, [r3, #0]

	// Increment global clock every 50ms
	if((local_tick % 50) == 0)
 8002bee:	4b06      	ldr	r3, [pc, #24]	@ (8002c08 <SysTick_Handler+0x28>)
 8002bf0:	681b      	ldr	r3, [r3, #0]
 8002bf2:	2132      	movs	r1, #50	@ 0x32
 8002bf4:	0018      	movs	r0, r3
 8002bf6:	f7fd fb0d 	bl	8000214 <__aeabi_uidivmod>
 8002bfa:	1e0b      	subs	r3, r1, #0
 8002bfc:	d101      	bne.n	8002c02 <SysTick_Handler+0x22>
	{
		// Write the RT image of the global clock
		Inc_GlobalClock();
 8002bfe:	f7ff fcc1 	bl	8002584 <Inc_GlobalClock>
	}
}
 8002c02:	46c0      	nop			@ (mov r8, r8)
 8002c04:	46bd      	mov	sp, r7
 8002c06:	bd80      	pop	{r7, pc}
 8002c08:	20000260 	.word	0x20000260

08002c0c <EXTI4_15_IRQHandler>:
  * Brief  This function handles EXTI4_15 interrupt request.
  * Param  None
  * Return None
  */
void EXTI4_15_IRQHandler(void)
{
 8002c0c:	b580      	push	{r7, lr}
 8002c0e:	af00      	add	r7, sp, #0
    // Check line 13 has triggered the IT
    if ((EXTI->PR & EXTI_PR_PR13) != 0)
 8002c10:	4b10      	ldr	r3, [pc, #64]	@ (8002c54 <EXTI4_15_IRQHandler+0x48>)
 8002c12:	695a      	ldr	r2, [r3, #20]
 8002c14:	2380      	movs	r3, #128	@ 0x80
 8002c16:	019b      	lsls	r3, r3, #6
 8002c18:	4013      	ands	r3, r2
 8002c1a:	d017      	beq.n	8002c4c <EXTI4_15_IRQHandler+0x40>
    {
    	if(mode == MASTER)
 8002c1c:	4b0e      	ldr	r3, [pc, #56]	@ (8002c58 <EXTI4_15_IRQHandler+0x4c>)
 8002c1e:	781b      	ldrb	r3, [r3, #0]
 8002c20:	b2db      	uxtb	r3, r3
 8002c22:	2b01      	cmp	r3, #1
 8002c24:	d10b      	bne.n	8002c3e <EXTI4_15_IRQHandler+0x32>
    	{
			// Update the RT image of the fake sensor
			if(Get_FakeSensorValue() == 0)
 8002c26:	f7ff fc7f 	bl	8002528 <Get_FakeSensorValue>
 8002c2a:	1e03      	subs	r3, r0, #0
 8002c2c:	d103      	bne.n	8002c36 <EXTI4_15_IRQHandler+0x2a>
			{
				Set_FakeSensorValue(1);
 8002c2e:	2001      	movs	r0, #1
 8002c30:	f7ff fc84 	bl	800253c <Set_FakeSensorValue>
 8002c34:	e006      	b.n	8002c44 <EXTI4_15_IRQHandler+0x38>
			}
			else
			{
				Set_FakeSensorValue(0);
 8002c36:	2000      	movs	r0, #0
 8002c38:	f7ff fc80 	bl	800253c <Set_FakeSensorValue>
 8002c3c:	e002      	b.n	8002c44 <EXTI4_15_IRQHandler+0x38>
			}
    	}
    	else
    	{
    		mode = MASTER;
 8002c3e:	4b06      	ldr	r3, [pc, #24]	@ (8002c58 <EXTI4_15_IRQHandler+0x4c>)
 8002c40:	2201      	movs	r2, #1
 8002c42:	701a      	strb	r2, [r3, #0]
    	}

        // Clear the pending bit
        EXTI->PR = EXTI_PR_PR13;
 8002c44:	4b03      	ldr	r3, [pc, #12]	@ (8002c54 <EXTI4_15_IRQHandler+0x48>)
 8002c46:	2280      	movs	r2, #128	@ 0x80
 8002c48:	0192      	lsls	r2, r2, #6
 8002c4a:	615a      	str	r2, [r3, #20]
    }
    else // Should never occur
    {
        ;
    }
}
 8002c4c:	46c0      	nop			@ (mov r8, r8)
 8002c4e:	46bd      	mov	sp, r7
 8002c50:	bd80      	pop	{r7, pc}
 8002c52:	46c0      	nop			@ (mov r8, r8)
 8002c54:	40010400 	.word	0x40010400
 8002c58:	2000025c 	.word	0x2000025c

08002c5c <SystemInit>:
  * @brief  Setup the microcontroller system
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8002c5c:	b580      	push	{r7, lr}
 8002c5e:	af00      	add	r7, sp, #0
                         before branch to main program. This call is made inside
                         the "startup_stm32f0xx.s" file.
                         User can setups the default system clock (System clock source, PLL Multiplier
                         and Divider factors, AHB/APBx prescalers and Flash settings).
   */
}
 8002c60:	46c0      	nop			@ (mov r8, r8)
 8002c62:	46bd      	mov	sp, r7
 8002c64:	bd80      	pop	{r7, pc}
	...

08002c68 <__NVIC_EnableIRQ>:
{
 8002c68:	b580      	push	{r7, lr}
 8002c6a:	b082      	sub	sp, #8
 8002c6c:	af00      	add	r7, sp, #0
 8002c6e:	0002      	movs	r2, r0
 8002c70:	1dfb      	adds	r3, r7, #7
 8002c72:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 8002c74:	1dfb      	adds	r3, r7, #7
 8002c76:	781b      	ldrb	r3, [r3, #0]
 8002c78:	2b7f      	cmp	r3, #127	@ 0x7f
 8002c7a:	d809      	bhi.n	8002c90 <__NVIC_EnableIRQ+0x28>
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002c7c:	1dfb      	adds	r3, r7, #7
 8002c7e:	781b      	ldrb	r3, [r3, #0]
 8002c80:	001a      	movs	r2, r3
 8002c82:	231f      	movs	r3, #31
 8002c84:	401a      	ands	r2, r3
 8002c86:	4b04      	ldr	r3, [pc, #16]	@ (8002c98 <__NVIC_EnableIRQ+0x30>)
 8002c88:	2101      	movs	r1, #1
 8002c8a:	4091      	lsls	r1, r2
 8002c8c:	000a      	movs	r2, r1
 8002c8e:	601a      	str	r2, [r3, #0]
}
 8002c90:	46c0      	nop			@ (mov r8, r8)
 8002c92:	46bd      	mov	sp, r7
 8002c94:	b002      	add	sp, #8
 8002c96:	bd80      	pop	{r7, pc}
 8002c98:	e000e100 	.word	0xe000e100

08002c9c <__NVIC_DisableIRQ>:
{
 8002c9c:	b580      	push	{r7, lr}
 8002c9e:	b082      	sub	sp, #8
 8002ca0:	af00      	add	r7, sp, #0
 8002ca2:	0002      	movs	r2, r0
 8002ca4:	1dfb      	adds	r3, r7, #7
 8002ca6:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 8002ca8:	1dfb      	adds	r3, r7, #7
 8002caa:	781b      	ldrb	r3, [r3, #0]
 8002cac:	2b7f      	cmp	r3, #127	@ 0x7f
 8002cae:	d810      	bhi.n	8002cd2 <__NVIC_DisableIRQ+0x36>
    NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002cb0:	1dfb      	adds	r3, r7, #7
 8002cb2:	781b      	ldrb	r3, [r3, #0]
 8002cb4:	001a      	movs	r2, r3
 8002cb6:	231f      	movs	r3, #31
 8002cb8:	4013      	ands	r3, r2
 8002cba:	4908      	ldr	r1, [pc, #32]	@ (8002cdc <__NVIC_DisableIRQ+0x40>)
 8002cbc:	2201      	movs	r2, #1
 8002cbe:	409a      	lsls	r2, r3
 8002cc0:	0013      	movs	r3, r2
 8002cc2:	2280      	movs	r2, #128	@ 0x80
 8002cc4:	508b      	str	r3, [r1, r2]
  __ASM volatile ("dsb 0xF":::"memory");
 8002cc6:	f3bf 8f4f 	dsb	sy
}
 8002cca:	46c0      	nop			@ (mov r8, r8)
  __ASM volatile ("isb 0xF":::"memory");
 8002ccc:	f3bf 8f6f 	isb	sy
}
 8002cd0:	46c0      	nop			@ (mov r8, r8)
}
 8002cd2:	46c0      	nop			@ (mov r8, r8)
 8002cd4:	46bd      	mov	sp, r7
 8002cd6:	b002      	add	sp, #8
 8002cd8:	bd80      	pop	{r7, pc}
 8002cda:	46c0      	nop			@ (mov r8, r8)
 8002cdc:	e000e100 	.word	0xe000e100

08002ce0 <__NVIC_SetPriority>:
{
 8002ce0:	b590      	push	{r4, r7, lr}
 8002ce2:	b083      	sub	sp, #12
 8002ce4:	af00      	add	r7, sp, #0
 8002ce6:	0002      	movs	r2, r0
 8002ce8:	6039      	str	r1, [r7, #0]
 8002cea:	1dfb      	adds	r3, r7, #7
 8002cec:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 8002cee:	1dfb      	adds	r3, r7, #7
 8002cf0:	781b      	ldrb	r3, [r3, #0]
 8002cf2:	2b7f      	cmp	r3, #127	@ 0x7f
 8002cf4:	d828      	bhi.n	8002d48 <__NVIC_SetPriority+0x68>
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002cf6:	4a2f      	ldr	r2, [pc, #188]	@ (8002db4 <__NVIC_SetPriority+0xd4>)
 8002cf8:	1dfb      	adds	r3, r7, #7
 8002cfa:	781b      	ldrb	r3, [r3, #0]
 8002cfc:	b25b      	sxtb	r3, r3
 8002cfe:	089b      	lsrs	r3, r3, #2
 8002d00:	33c0      	adds	r3, #192	@ 0xc0
 8002d02:	009b      	lsls	r3, r3, #2
 8002d04:	589b      	ldr	r3, [r3, r2]
 8002d06:	1dfa      	adds	r2, r7, #7
 8002d08:	7812      	ldrb	r2, [r2, #0]
 8002d0a:	0011      	movs	r1, r2
 8002d0c:	2203      	movs	r2, #3
 8002d0e:	400a      	ands	r2, r1
 8002d10:	00d2      	lsls	r2, r2, #3
 8002d12:	21ff      	movs	r1, #255	@ 0xff
 8002d14:	4091      	lsls	r1, r2
 8002d16:	000a      	movs	r2, r1
 8002d18:	43d2      	mvns	r2, r2
 8002d1a:	401a      	ands	r2, r3
 8002d1c:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8002d1e:	683b      	ldr	r3, [r7, #0]
 8002d20:	019b      	lsls	r3, r3, #6
 8002d22:	22ff      	movs	r2, #255	@ 0xff
 8002d24:	401a      	ands	r2, r3
 8002d26:	1dfb      	adds	r3, r7, #7
 8002d28:	781b      	ldrb	r3, [r3, #0]
 8002d2a:	0018      	movs	r0, r3
 8002d2c:	2303      	movs	r3, #3
 8002d2e:	4003      	ands	r3, r0
 8002d30:	00db      	lsls	r3, r3, #3
 8002d32:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002d34:	481f      	ldr	r0, [pc, #124]	@ (8002db4 <__NVIC_SetPriority+0xd4>)
 8002d36:	1dfb      	adds	r3, r7, #7
 8002d38:	781b      	ldrb	r3, [r3, #0]
 8002d3a:	b25b      	sxtb	r3, r3
 8002d3c:	089b      	lsrs	r3, r3, #2
 8002d3e:	430a      	orrs	r2, r1
 8002d40:	33c0      	adds	r3, #192	@ 0xc0
 8002d42:	009b      	lsls	r3, r3, #2
 8002d44:	501a      	str	r2, [r3, r0]
}
 8002d46:	e031      	b.n	8002dac <__NVIC_SetPriority+0xcc>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002d48:	4a1b      	ldr	r2, [pc, #108]	@ (8002db8 <__NVIC_SetPriority+0xd8>)
 8002d4a:	1dfb      	adds	r3, r7, #7
 8002d4c:	781b      	ldrb	r3, [r3, #0]
 8002d4e:	0019      	movs	r1, r3
 8002d50:	230f      	movs	r3, #15
 8002d52:	400b      	ands	r3, r1
 8002d54:	3b08      	subs	r3, #8
 8002d56:	089b      	lsrs	r3, r3, #2
 8002d58:	3306      	adds	r3, #6
 8002d5a:	009b      	lsls	r3, r3, #2
 8002d5c:	18d3      	adds	r3, r2, r3
 8002d5e:	3304      	adds	r3, #4
 8002d60:	681b      	ldr	r3, [r3, #0]
 8002d62:	1dfa      	adds	r2, r7, #7
 8002d64:	7812      	ldrb	r2, [r2, #0]
 8002d66:	0011      	movs	r1, r2
 8002d68:	2203      	movs	r2, #3
 8002d6a:	400a      	ands	r2, r1
 8002d6c:	00d2      	lsls	r2, r2, #3
 8002d6e:	21ff      	movs	r1, #255	@ 0xff
 8002d70:	4091      	lsls	r1, r2
 8002d72:	000a      	movs	r2, r1
 8002d74:	43d2      	mvns	r2, r2
 8002d76:	401a      	ands	r2, r3
 8002d78:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8002d7a:	683b      	ldr	r3, [r7, #0]
 8002d7c:	019b      	lsls	r3, r3, #6
 8002d7e:	22ff      	movs	r2, #255	@ 0xff
 8002d80:	401a      	ands	r2, r3
 8002d82:	1dfb      	adds	r3, r7, #7
 8002d84:	781b      	ldrb	r3, [r3, #0]
 8002d86:	0018      	movs	r0, r3
 8002d88:	2303      	movs	r3, #3
 8002d8a:	4003      	ands	r3, r0
 8002d8c:	00db      	lsls	r3, r3, #3
 8002d8e:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002d90:	4809      	ldr	r0, [pc, #36]	@ (8002db8 <__NVIC_SetPriority+0xd8>)
 8002d92:	1dfb      	adds	r3, r7, #7
 8002d94:	781b      	ldrb	r3, [r3, #0]
 8002d96:	001c      	movs	r4, r3
 8002d98:	230f      	movs	r3, #15
 8002d9a:	4023      	ands	r3, r4
 8002d9c:	3b08      	subs	r3, #8
 8002d9e:	089b      	lsrs	r3, r3, #2
 8002da0:	430a      	orrs	r2, r1
 8002da2:	3306      	adds	r3, #6
 8002da4:	009b      	lsls	r3, r3, #2
 8002da6:	18c3      	adds	r3, r0, r3
 8002da8:	3304      	adds	r3, #4
 8002daa:	601a      	str	r2, [r3, #0]
}
 8002dac:	46c0      	nop			@ (mov r8, r8)
 8002dae:	46bd      	mov	sp, r7
 8002db0:	b003      	add	sp, #12
 8002db2:	bd90      	pop	{r4, r7, pc}
 8002db4:	e000e100 	.word	0xe000e100
 8002db8:	e000ed00 	.word	0xe000ed00

08002dbc <ConfigureGPIO_TII>:
           - Configures the UART pins on GPIO PA2 PA3
 * Param   None
 * Retval  None
 */
inline void ConfigureGPIO_TII(void)
{
 8002dbc:	b580      	push	{r7, lr}
 8002dbe:	af00      	add	r7, sp, #0
    // Enable the peripheral clock of GPIOA
    RCC->AHBENR |= RCC_AHBENR_GPIOAEN;
 8002dc0:	4b0f      	ldr	r3, [pc, #60]	@ (8002e00 <ConfigureGPIO_TII+0x44>)
 8002dc2:	695a      	ldr	r2, [r3, #20]
 8002dc4:	4b0e      	ldr	r3, [pc, #56]	@ (8002e00 <ConfigureGPIO_TII+0x44>)
 8002dc6:	2180      	movs	r1, #128	@ 0x80
 8002dc8:	0289      	lsls	r1, r1, #10
 8002dca:	430a      	orrs	r2, r1
 8002dcc:	615a      	str	r2, [r3, #20]

    // GPIO configuration for UART signals
    // 1. Select AF mode (10) on PA2 and PA3
    // 2. AF1 for UART signals
    GPIOA->MODER = (GPIOA->MODER & ~(GPIO_MODER_MODER2 | GPIO_MODER_MODER3))
 8002dce:	2390      	movs	r3, #144	@ 0x90
 8002dd0:	05db      	lsls	r3, r3, #23
 8002dd2:	681b      	ldr	r3, [r3, #0]
 8002dd4:	22f0      	movs	r2, #240	@ 0xf0
 8002dd6:	4393      	bics	r3, r2
 8002dd8:	001a      	movs	r2, r3
 8002dda:	2390      	movs	r3, #144	@ 0x90
 8002ddc:	05db      	lsls	r3, r3, #23
            | (GPIO_MODER_MODER2_1 | GPIO_MODER_MODER3_1);
 8002dde:	21a0      	movs	r1, #160	@ 0xa0
 8002de0:	430a      	orrs	r2, r1
    GPIOA->MODER = (GPIOA->MODER & ~(GPIO_MODER_MODER2 | GPIO_MODER_MODER3))
 8002de2:	601a      	str	r2, [r3, #0]
    GPIOA->AFR[0] = (GPIOA->AFR[0] & ~(GPIO_AFRL_AFRL2 | GPIO_AFRL_AFRL3))
 8002de4:	2390      	movs	r3, #144	@ 0x90
 8002de6:	05db      	lsls	r3, r3, #23
 8002de8:	6a1b      	ldr	r3, [r3, #32]
 8002dea:	4a06      	ldr	r2, [pc, #24]	@ (8002e04 <ConfigureGPIO_TII+0x48>)
 8002dec:	401a      	ands	r2, r3
 8002dee:	2390      	movs	r3, #144	@ 0x90
 8002df0:	05db      	lsls	r3, r3, #23
            | (1 << (2 * 4)) | (1 << (3 * 4));
 8002df2:	2188      	movs	r1, #136	@ 0x88
 8002df4:	0149      	lsls	r1, r1, #5
 8002df6:	430a      	orrs	r2, r1
    GPIOA->AFR[0] = (GPIOA->AFR[0] & ~(GPIO_AFRL_AFRL2 | GPIO_AFRL_AFRL3))
 8002df8:	621a      	str	r2, [r3, #32]
}
 8002dfa:	46c0      	nop			@ (mov r8, r8)
 8002dfc:	46bd      	mov	sp, r7
 8002dfe:	bd80      	pop	{r7, pc}
 8002e00:	40021000 	.word	0x40021000
 8002e04:	ffff00ff 	.word	0xffff00ff

08002e08 <Configure_TII>:
 *         - 9600,8,n,1
 * Param   None
 * Retval  None
 */
inline void Configure_TII(void)
{
 8002e08:	b580      	push	{r7, lr}
 8002e0a:	af00      	add	r7, sp, #0
    // Enable the peripheral clock UART
    RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
 8002e0c:	4b0e      	ldr	r3, [pc, #56]	@ (8002e48 <Configure_TII+0x40>)
 8002e0e:	69da      	ldr	r2, [r3, #28]
 8002e10:	4b0d      	ldr	r3, [pc, #52]	@ (8002e48 <Configure_TII+0x40>)
 8002e12:	2180      	movs	r1, #128	@ 0x80
 8002e14:	0289      	lsls	r1, r1, #10
 8002e16:	430a      	orrs	r2, r1
 8002e18:	61da      	str	r2, [r3, #28]

    // Configure UART
    // 1. Oversampling by 16, 9600 baud
    // 2. 8 data bit, 1 start bit, 1 stop bit, no parity,
    //     transmitter enable, receiver enable
    USART2->BRR = 833;
 8002e1a:	4b0c      	ldr	r3, [pc, #48]	@ (8002e4c <Configure_TII+0x44>)
 8002e1c:	4a0c      	ldr	r2, [pc, #48]	@ (8002e50 <Configure_TII+0x48>)
 8002e1e:	60da      	str	r2, [r3, #12]
    USART2->CR1 = USART_CR1_TE | USART_CR1_UE | USART_CR1_RXNEIE | USART_CR1_RE;
 8002e20:	4b0a      	ldr	r3, [pc, #40]	@ (8002e4c <Configure_TII+0x44>)
 8002e22:	222d      	movs	r2, #45	@ 0x2d
 8002e24:	601a      	str	r2, [r3, #0]

    // 3. Polling idle frame Transmission
    while ((USART2->ISR & USART_ISR_TC) != USART_ISR_TC)
 8002e26:	46c0      	nop			@ (mov r8, r8)
 8002e28:	4b08      	ldr	r3, [pc, #32]	@ (8002e4c <Configure_TII+0x44>)
 8002e2a:	69db      	ldr	r3, [r3, #28]
 8002e2c:	2240      	movs	r2, #64	@ 0x40
 8002e2e:	4013      	ands	r3, r2
 8002e30:	2b40      	cmp	r3, #64	@ 0x40
 8002e32:	d1f9      	bne.n	8002e28 <Configure_TII+0x20>
    }

    // Configure IT
    // 4. Set priority for UART_IRQn
    // 5. Enable UART_IRQn
    NVIC_SetPriority(USART2_IRQn, 0);
 8002e34:	2100      	movs	r1, #0
 8002e36:	201c      	movs	r0, #28
 8002e38:	f7ff ff52 	bl	8002ce0 <__NVIC_SetPriority>
    NVIC_EnableIRQ(USART2_IRQn);
 8002e3c:	201c      	movs	r0, #28
 8002e3e:	f7ff ff13 	bl	8002c68 <__NVIC_EnableIRQ>
}
 8002e42:	46c0      	nop			@ (mov r8, r8)
 8002e44:	46bd      	mov	sp, r7
 8002e46:	bd80      	pop	{r7, pc}
 8002e48:	40021000 	.word	0x40021000
 8002e4c:	40004400 	.word	0x40004400
 8002e50:	00000341 	.word	0x00000341

08002e54 <TransmitByte_TII>:
    // Return data
    return UART_RxBuf[tmptail];
}

void TransmitByte_TII(char data)
{
 8002e54:	b580      	push	{r7, lr}
 8002e56:	b084      	sub	sp, #16
 8002e58:	af00      	add	r7, sp, #0
 8002e5a:	0002      	movs	r2, r0
 8002e5c:	1dfb      	adds	r3, r7, #7
 8002e5e:	701a      	strb	r2, [r3, #0]
    uint32_t tmphead;

    // Calculate buffer index
    tmphead = (UART_TxHead + 1) & UART_TX_BUFFER_MASK;
 8002e60:	4b1d      	ldr	r3, [pc, #116]	@ (8002ed8 <TransmitByte_TII+0x84>)
 8002e62:	781b      	ldrb	r3, [r3, #0]
 8002e64:	b2db      	uxtb	r3, r3
 8002e66:	3301      	adds	r3, #1
 8002e68:	001a      	movs	r2, r3
 8002e6a:	233f      	movs	r3, #63	@ 0x3f
 8002e6c:	4013      	ands	r3, r2
 8002e6e:	60fb      	str	r3, [r7, #12]

    // Wait for free space in buffer
    while (tmphead == UART_TxTail)
 8002e70:	46c0      	nop			@ (mov r8, r8)
 8002e72:	4b1a      	ldr	r3, [pc, #104]	@ (8002edc <TransmitByte_TII+0x88>)
 8002e74:	781b      	ldrb	r3, [r3, #0]
 8002e76:	b2db      	uxtb	r3, r3
 8002e78:	001a      	movs	r2, r3
 8002e7a:	68fb      	ldr	r3, [r7, #12]
 8002e7c:	4293      	cmp	r3, r2
 8002e7e:	d0f8      	beq.n	8002e72 <TransmitByte_TII+0x1e>
    {
        ;
    }

    // Store data in buffer
    UART_TxBuf[tmphead] = data;
 8002e80:	4a17      	ldr	r2, [pc, #92]	@ (8002ee0 <TransmitByte_TII+0x8c>)
 8002e82:	68fb      	ldr	r3, [r7, #12]
 8002e84:	18d3      	adds	r3, r2, r3
 8002e86:	1dfa      	adds	r2, r7, #7
 8002e88:	7812      	ldrb	r2, [r2, #0]
 8002e8a:	701a      	strb	r2, [r3, #0]

    // Store new index
    UART_TxHead = tmphead;
 8002e8c:	68fb      	ldr	r3, [r7, #12]
 8002e8e:	b2da      	uxtb	r2, r3
 8002e90:	4b11      	ldr	r3, [pc, #68]	@ (8002ed8 <TransmitByte_TII+0x84>)
 8002e92:	701a      	strb	r2, [r3, #0]

    // Initiate a new transfer if this is not ongoing
    if((USART2->CR1 & USART_CR1_TCIE) == 0)
 8002e94:	4b13      	ldr	r3, [pc, #76]	@ (8002ee4 <TransmitByte_TII+0x90>)
 8002e96:	681b      	ldr	r3, [r3, #0]
 8002e98:	2240      	movs	r2, #64	@ 0x40
 8002e9a:	4013      	ands	r3, r2
 8002e9c:	d117      	bne.n	8002ece <TransmitByte_TII+0x7a>
    {
        // Calculate buffer index
        uint32_t tmptail = (UART_TxTail + 1) & UART_TX_BUFFER_MASK;
 8002e9e:	4b0f      	ldr	r3, [pc, #60]	@ (8002edc <TransmitByte_TII+0x88>)
 8002ea0:	781b      	ldrb	r3, [r3, #0]
 8002ea2:	b2db      	uxtb	r3, r3
 8002ea4:	3301      	adds	r3, #1
 8002ea6:	001a      	movs	r2, r3
 8002ea8:	233f      	movs	r3, #63	@ 0x3f
 8002eaa:	4013      	ands	r3, r2
 8002eac:	60bb      	str	r3, [r7, #8]

        // Store new index
        UART_TxTail = tmptail;
 8002eae:	68bb      	ldr	r3, [r7, #8]
 8002eb0:	b2da      	uxtb	r2, r3
 8002eb2:	4b0a      	ldr	r3, [pc, #40]	@ (8002edc <TransmitByte_TII+0x88>)
 8002eb4:	701a      	strb	r2, [r3, #0]

        // Start transmission
        USART2->TDR = UART_TxBuf[tmptail];
 8002eb6:	4a0a      	ldr	r2, [pc, #40]	@ (8002ee0 <TransmitByte_TII+0x8c>)
 8002eb8:	68bb      	ldr	r3, [r7, #8]
 8002eba:	18d3      	adds	r3, r2, r3
 8002ebc:	781a      	ldrb	r2, [r3, #0]
 8002ebe:	4b09      	ldr	r3, [pc, #36]	@ (8002ee4 <TransmitByte_TII+0x90>)
 8002ec0:	851a      	strh	r2, [r3, #40]	@ 0x28

        // enable TC interrupt
        USART2->CR1 |= USART_CR1_TCIE;
 8002ec2:	4b08      	ldr	r3, [pc, #32]	@ (8002ee4 <TransmitByte_TII+0x90>)
 8002ec4:	681a      	ldr	r2, [r3, #0]
 8002ec6:	4b07      	ldr	r3, [pc, #28]	@ (8002ee4 <TransmitByte_TII+0x90>)
 8002ec8:	2140      	movs	r1, #64	@ 0x40
 8002eca:	430a      	orrs	r2, r1
 8002ecc:	601a      	str	r2, [r3, #0]
    }
}
 8002ece:	46c0      	nop			@ (mov r8, r8)
 8002ed0:	46bd      	mov	sp, r7
 8002ed2:	b004      	add	sp, #16
 8002ed4:	bd80      	pop	{r7, pc}
 8002ed6:	46c0      	nop			@ (mov r8, r8)
 8002ed8:	200002e8 	.word	0x200002e8
 8002edc:	200002e9 	.word	0x200002e9
 8002ee0:	200002a8 	.word	0x200002a8
 8002ee4:	40004400 	.word	0x40004400

08002ee8 <TransmitString_TII>:
 *   transmit a byte via the UART
 * - Bytes are transmitted until the terminator
 *   character '\0' is detected. Then the function returns.
 */
void TransmitString_TII(char *str)
{
 8002ee8:	b580      	push	{r7, lr}
 8002eea:	b082      	sub	sp, #8
 8002eec:	af00      	add	r7, sp, #0
 8002eee:	6078      	str	r0, [r7, #4]
    while(*str)
 8002ef0:	e006      	b.n	8002f00 <TransmitString_TII+0x18>
    {
        TransmitByte_TII(*str++);
 8002ef2:	687b      	ldr	r3, [r7, #4]
 8002ef4:	1c5a      	adds	r2, r3, #1
 8002ef6:	607a      	str	r2, [r7, #4]
 8002ef8:	781b      	ldrb	r3, [r3, #0]
 8002efa:	0018      	movs	r0, r3
 8002efc:	f7ff ffaa 	bl	8002e54 <TransmitByte_TII>
    while(*str)
 8002f00:	687b      	ldr	r3, [r7, #4]
 8002f02:	781b      	ldrb	r3, [r3, #0]
 8002f04:	2b00      	cmp	r3, #0
 8002f06:	d1f4      	bne.n	8002ef2 <TransmitString_TII+0xa>
    }
}
 8002f08:	46c0      	nop			@ (mov r8, r8)
 8002f0a:	46c0      	nop			@ (mov r8, r8)
 8002f0c:	46bd      	mov	sp, r7
 8002f0e:	b002      	add	sp, #8
 8002f10:	bd80      	pop	{r7, pc}
	...

08002f14 <USART2_IRQHandler>:
 * Brief   This function handles UART interrupt request.
 * Param   None
 * Retval  None
 */
void USART2_IRQHandler(void)
{
 8002f14:	b580      	push	{r7, lr}
 8002f16:	b082      	sub	sp, #8
 8002f18:	af00      	add	r7, sp, #0
    if ((USART2->ISR & USART_ISR_TC) == USART_ISR_TC)
 8002f1a:	4b31      	ldr	r3, [pc, #196]	@ (8002fe0 <USART2_IRQHandler+0xcc>)
 8002f1c:	69db      	ldr	r3, [r3, #28]
 8002f1e:	2240      	movs	r2, #64	@ 0x40
 8002f20:	4013      	ands	r3, r2
 8002f22:	2b40      	cmp	r3, #64	@ 0x40
 8002f24:	d127      	bne.n	8002f76 <USART2_IRQHandler+0x62>
    {
        uint32_t tmptail;

        // Check if all data is transmitted
        if (UART_TxHead != UART_TxTail)
 8002f26:	4b2f      	ldr	r3, [pc, #188]	@ (8002fe4 <USART2_IRQHandler+0xd0>)
 8002f28:	781b      	ldrb	r3, [r3, #0]
 8002f2a:	b2da      	uxtb	r2, r3
 8002f2c:	4b2e      	ldr	r3, [pc, #184]	@ (8002fe8 <USART2_IRQHandler+0xd4>)
 8002f2e:	781b      	ldrb	r3, [r3, #0]
 8002f30:	b2db      	uxtb	r3, r3
 8002f32:	429a      	cmp	r2, r3
 8002f34:	d012      	beq.n	8002f5c <USART2_IRQHandler+0x48>
        {
            // Calculate buffer index
            tmptail = (UART_TxTail + 1) & UART_TX_BUFFER_MASK;
 8002f36:	4b2c      	ldr	r3, [pc, #176]	@ (8002fe8 <USART2_IRQHandler+0xd4>)
 8002f38:	781b      	ldrb	r3, [r3, #0]
 8002f3a:	b2db      	uxtb	r3, r3
 8002f3c:	3301      	adds	r3, #1
 8002f3e:	001a      	movs	r2, r3
 8002f40:	233f      	movs	r3, #63	@ 0x3f
 8002f42:	4013      	ands	r3, r2
 8002f44:	603b      	str	r3, [r7, #0]

            // Store new index
            UART_TxTail = tmptail;
 8002f46:	683b      	ldr	r3, [r7, #0]
 8002f48:	b2da      	uxtb	r2, r3
 8002f4a:	4b27      	ldr	r3, [pc, #156]	@ (8002fe8 <USART2_IRQHandler+0xd4>)
 8002f4c:	701a      	strb	r2, [r3, #0]

            // Start transmission
            USART2->TDR = UART_TxBuf[tmptail];
 8002f4e:	4a27      	ldr	r2, [pc, #156]	@ (8002fec <USART2_IRQHandler+0xd8>)
 8002f50:	683b      	ldr	r3, [r7, #0]
 8002f52:	18d3      	adds	r3, r2, r3
 8002f54:	781a      	ldrb	r2, [r3, #0]
 8002f56:	4b22      	ldr	r3, [pc, #136]	@ (8002fe0 <USART2_IRQHandler+0xcc>)
 8002f58:	851a      	strh	r2, [r3, #40]	@ 0x28
    }
    else
    {
        NVIC_DisableIRQ(USART2_IRQn); // Disable UART_IRQn
    }
}
 8002f5a:	e03d      	b.n	8002fd8 <USART2_IRQHandler+0xc4>
            USART2->ICR |= USART_ICR_TCCF; // Clear TC flag
 8002f5c:	4b20      	ldr	r3, [pc, #128]	@ (8002fe0 <USART2_IRQHandler+0xcc>)
 8002f5e:	6a1a      	ldr	r2, [r3, #32]
 8002f60:	4b1f      	ldr	r3, [pc, #124]	@ (8002fe0 <USART2_IRQHandler+0xcc>)
 8002f62:	2140      	movs	r1, #64	@ 0x40
 8002f64:	430a      	orrs	r2, r1
 8002f66:	621a      	str	r2, [r3, #32]
            USART2->CR1 &= ~USART_CR1_TCIE; // Disable TC interrupt
 8002f68:	4b1d      	ldr	r3, [pc, #116]	@ (8002fe0 <USART2_IRQHandler+0xcc>)
 8002f6a:	681a      	ldr	r2, [r3, #0]
 8002f6c:	4b1c      	ldr	r3, [pc, #112]	@ (8002fe0 <USART2_IRQHandler+0xcc>)
 8002f6e:	2140      	movs	r1, #64	@ 0x40
 8002f70:	438a      	bics	r2, r1
 8002f72:	601a      	str	r2, [r3, #0]
}
 8002f74:	e030      	b.n	8002fd8 <USART2_IRQHandler+0xc4>
    else if ((USART2->ISR & USART_ISR_RXNE) == USART_ISR_RXNE)
 8002f76:	4b1a      	ldr	r3, [pc, #104]	@ (8002fe0 <USART2_IRQHandler+0xcc>)
 8002f78:	69db      	ldr	r3, [r3, #28]
 8002f7a:	2220      	movs	r2, #32
 8002f7c:	4013      	ands	r3, r2
 8002f7e:	2b20      	cmp	r3, #32
 8002f80:	d11a      	bne.n	8002fb8 <USART2_IRQHandler+0xa4>
        uint8_t data = (uint8_t)(USART2->RDR); // Receive data, clear flag
 8002f82:	4b17      	ldr	r3, [pc, #92]	@ (8002fe0 <USART2_IRQHandler+0xcc>)
 8002f84:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 8002f86:	b29a      	uxth	r2, r3
 8002f88:	1dfb      	adds	r3, r7, #7
 8002f8a:	701a      	strb	r2, [r3, #0]
        uint8_t tmphead = (UART_RxHead + 1) & UART_RX_BUFFER_MASK;
 8002f8c:	4b18      	ldr	r3, [pc, #96]	@ (8002ff0 <USART2_IRQHandler+0xdc>)
 8002f8e:	781b      	ldrb	r3, [r3, #0]
 8002f90:	b2db      	uxtb	r3, r3
 8002f92:	3301      	adds	r3, #1
 8002f94:	b2da      	uxtb	r2, r3
 8002f96:	1dbb      	adds	r3, r7, #6
 8002f98:	213f      	movs	r1, #63	@ 0x3f
 8002f9a:	400a      	ands	r2, r1
 8002f9c:	701a      	strb	r2, [r3, #0]
        UART_RxHead = tmphead;
 8002f9e:	4b14      	ldr	r3, [pc, #80]	@ (8002ff0 <USART2_IRQHandler+0xdc>)
 8002fa0:	1dba      	adds	r2, r7, #6
 8002fa2:	7812      	ldrb	r2, [r2, #0]
 8002fa4:	701a      	strb	r2, [r3, #0]
        if (tmphead == UART_RxTail)
 8002fa6:	4b13      	ldr	r3, [pc, #76]	@ (8002ff4 <USART2_IRQHandler+0xe0>)
 8002fa8:	781b      	ldrb	r3, [r3, #0]
        UART_RxBuf[tmphead] = data;
 8002faa:	1dbb      	adds	r3, r7, #6
 8002fac:	781b      	ldrb	r3, [r3, #0]
 8002fae:	4a12      	ldr	r2, [pc, #72]	@ (8002ff8 <USART2_IRQHandler+0xe4>)
 8002fb0:	1df9      	adds	r1, r7, #7
 8002fb2:	7809      	ldrb	r1, [r1, #0]
 8002fb4:	54d1      	strb	r1, [r2, r3]
}
 8002fb6:	e00f      	b.n	8002fd8 <USART2_IRQHandler+0xc4>
    else if ((USART2->ISR & USART_ISR_ORE) == USART_ISR_ORE)
 8002fb8:	4b09      	ldr	r3, [pc, #36]	@ (8002fe0 <USART2_IRQHandler+0xcc>)
 8002fba:	69db      	ldr	r3, [r3, #28]
 8002fbc:	2208      	movs	r2, #8
 8002fbe:	4013      	ands	r3, r2
 8002fc0:	2b08      	cmp	r3, #8
 8002fc2:	d106      	bne.n	8002fd2 <USART2_IRQHandler+0xbe>
    	USART2->ICR |= USART_ICR_ORECF; // Clear ORE flag
 8002fc4:	4b06      	ldr	r3, [pc, #24]	@ (8002fe0 <USART2_IRQHandler+0xcc>)
 8002fc6:	6a1a      	ldr	r2, [r3, #32]
 8002fc8:	4b05      	ldr	r3, [pc, #20]	@ (8002fe0 <USART2_IRQHandler+0xcc>)
 8002fca:	2108      	movs	r1, #8
 8002fcc:	430a      	orrs	r2, r1
 8002fce:	621a      	str	r2, [r3, #32]
}
 8002fd0:	e002      	b.n	8002fd8 <USART2_IRQHandler+0xc4>
        NVIC_DisableIRQ(USART2_IRQn); // Disable UART_IRQn
 8002fd2:	201c      	movs	r0, #28
 8002fd4:	f7ff fe62 	bl	8002c9c <__NVIC_DisableIRQ>
}
 8002fd8:	46c0      	nop			@ (mov r8, r8)
 8002fda:	46bd      	mov	sp, r7
 8002fdc:	b002      	add	sp, #8
 8002fde:	bd80      	pop	{r7, pc}
 8002fe0:	40004400 	.word	0x40004400
 8002fe4:	200002e8 	.word	0x200002e8
 8002fe8:	200002e9 	.word	0x200002e9
 8002fec:	200002a8 	.word	0x200002a8
 8002ff0:	200002a4 	.word	0x200002a4
 8002ff4:	200002a5 	.word	0x200002a5
 8002ff8:	20000264 	.word	0x20000264

08002ffc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8002ffc:	480d      	ldr	r0, [pc, #52]	@ (8003034 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8002ffe:	4685      	mov	sp, r0
  
/* Call the clock system initialization function.*/
  bl  SystemInit
 8003000:	f7ff fe2c 	bl	8002c5c <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8003004:	480c      	ldr	r0, [pc, #48]	@ (8003038 <LoopForever+0x6>)
  ldr r1, =_edata
 8003006:	490d      	ldr	r1, [pc, #52]	@ (800303c <LoopForever+0xa>)
  ldr r2, =_sidata
 8003008:	4a0d      	ldr	r2, [pc, #52]	@ (8003040 <LoopForever+0xe>)
  movs r3, #0
 800300a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800300c:	e002      	b.n	8003014 <LoopCopyDataInit>

0800300e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800300e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8003010:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8003012:	3304      	adds	r3, #4

08003014 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8003014:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8003016:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8003018:	d3f9      	bcc.n	800300e <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800301a:	4a0a      	ldr	r2, [pc, #40]	@ (8003044 <LoopForever+0x12>)
  ldr r4, =_ebss
 800301c:	4c0a      	ldr	r4, [pc, #40]	@ (8003048 <LoopForever+0x16>)
  movs r3, #0
 800301e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8003020:	e001      	b.n	8003026 <LoopFillZerobss>

08003022 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8003022:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8003024:	3204      	adds	r2, #4

08003026 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8003026:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8003028:	d3fb      	bcc.n	8003022 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800302a:	f000 f819 	bl	8003060 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800302e:	f7ff fca3 	bl	8002978 <main>

08003032 <LoopForever>:

LoopForever:
    b LoopForever
 8003032:	e7fe      	b.n	8003032 <LoopForever>
  ldr   r0, =_estack
 8003034:	20004000 	.word	0x20004000
  ldr r0, =_sdata
 8003038:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800303c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8003040:	080042f8 	.word	0x080042f8
  ldr r2, =_sbss
 8003044:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8003048:	200002ec 	.word	0x200002ec

0800304c <ADC1_COMP_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800304c:	e7fe      	b.n	800304c <ADC1_COMP_IRQHandler>

0800304e <memset>:
 800304e:	0003      	movs	r3, r0
 8003050:	1882      	adds	r2, r0, r2
 8003052:	4293      	cmp	r3, r2
 8003054:	d100      	bne.n	8003058 <memset+0xa>
 8003056:	4770      	bx	lr
 8003058:	7019      	strb	r1, [r3, #0]
 800305a:	3301      	adds	r3, #1
 800305c:	e7f9      	b.n	8003052 <memset+0x4>
	...

08003060 <__libc_init_array>:
 8003060:	b570      	push	{r4, r5, r6, lr}
 8003062:	2600      	movs	r6, #0
 8003064:	4c0c      	ldr	r4, [pc, #48]	@ (8003098 <__libc_init_array+0x38>)
 8003066:	4d0d      	ldr	r5, [pc, #52]	@ (800309c <__libc_init_array+0x3c>)
 8003068:	1b64      	subs	r4, r4, r5
 800306a:	10a4      	asrs	r4, r4, #2
 800306c:	42a6      	cmp	r6, r4
 800306e:	d109      	bne.n	8003084 <__libc_init_array+0x24>
 8003070:	2600      	movs	r6, #0
 8003072:	f001 f819 	bl	80040a8 <_init>
 8003076:	4c0a      	ldr	r4, [pc, #40]	@ (80030a0 <__libc_init_array+0x40>)
 8003078:	4d0a      	ldr	r5, [pc, #40]	@ (80030a4 <__libc_init_array+0x44>)
 800307a:	1b64      	subs	r4, r4, r5
 800307c:	10a4      	asrs	r4, r4, #2
 800307e:	42a6      	cmp	r6, r4
 8003080:	d105      	bne.n	800308e <__libc_init_array+0x2e>
 8003082:	bd70      	pop	{r4, r5, r6, pc}
 8003084:	00b3      	lsls	r3, r6, #2
 8003086:	58eb      	ldr	r3, [r5, r3]
 8003088:	4798      	blx	r3
 800308a:	3601      	adds	r6, #1
 800308c:	e7ee      	b.n	800306c <__libc_init_array+0xc>
 800308e:	00b3      	lsls	r3, r6, #2
 8003090:	58eb      	ldr	r3, [r5, r3]
 8003092:	4798      	blx	r3
 8003094:	3601      	adds	r6, #1
 8003096:	e7f2      	b.n	800307e <__libc_init_array+0x1e>
 8003098:	080042f0 	.word	0x080042f0
 800309c:	080042f0 	.word	0x080042f0
 80030a0:	080042f4 	.word	0x080042f4
 80030a4:	080042f0 	.word	0x080042f0

080030a8 <sin>:
 80030a8:	b530      	push	{r4, r5, lr}
 80030aa:	4a1f      	ldr	r2, [pc, #124]	@ (8003128 <sin+0x80>)
 80030ac:	004b      	lsls	r3, r1, #1
 80030ae:	b087      	sub	sp, #28
 80030b0:	085b      	lsrs	r3, r3, #1
 80030b2:	4293      	cmp	r3, r2
 80030b4:	d806      	bhi.n	80030c4 <sin+0x1c>
 80030b6:	2300      	movs	r3, #0
 80030b8:	2200      	movs	r2, #0
 80030ba:	9300      	str	r3, [sp, #0]
 80030bc:	2300      	movs	r3, #0
 80030be:	f000 f92b 	bl	8003318 <__kernel_sin>
 80030c2:	e006      	b.n	80030d2 <sin+0x2a>
 80030c4:	4a19      	ldr	r2, [pc, #100]	@ (800312c <sin+0x84>)
 80030c6:	4293      	cmp	r3, r2
 80030c8:	d905      	bls.n	80030d6 <sin+0x2e>
 80030ca:	0002      	movs	r2, r0
 80030cc:	000b      	movs	r3, r1
 80030ce:	f7fe f99d 	bl	800140c <__aeabi_dsub>
 80030d2:	b007      	add	sp, #28
 80030d4:	bd30      	pop	{r4, r5, pc}
 80030d6:	aa02      	add	r2, sp, #8
 80030d8:	f000 f9ca 	bl	8003470 <__ieee754_rem_pio2>
 80030dc:	9c04      	ldr	r4, [sp, #16]
 80030de:	9d05      	ldr	r5, [sp, #20]
 80030e0:	2303      	movs	r3, #3
 80030e2:	4003      	ands	r3, r0
 80030e4:	9802      	ldr	r0, [sp, #8]
 80030e6:	9903      	ldr	r1, [sp, #12]
 80030e8:	2b01      	cmp	r3, #1
 80030ea:	d008      	beq.n	80030fe <sin+0x56>
 80030ec:	2b02      	cmp	r3, #2
 80030ee:	d00b      	beq.n	8003108 <sin+0x60>
 80030f0:	2b00      	cmp	r3, #0
 80030f2:	d113      	bne.n	800311c <sin+0x74>
 80030f4:	3301      	adds	r3, #1
 80030f6:	9300      	str	r3, [sp, #0]
 80030f8:	0022      	movs	r2, r4
 80030fa:	002b      	movs	r3, r5
 80030fc:	e7df      	b.n	80030be <sin+0x16>
 80030fe:	0022      	movs	r2, r4
 8003100:	002b      	movs	r3, r5
 8003102:	f000 f849 	bl	8003198 <__kernel_cos>
 8003106:	e7e4      	b.n	80030d2 <sin+0x2a>
 8003108:	2301      	movs	r3, #1
 800310a:	0022      	movs	r2, r4
 800310c:	9300      	str	r3, [sp, #0]
 800310e:	002b      	movs	r3, r5
 8003110:	f000 f902 	bl	8003318 <__kernel_sin>
 8003114:	2380      	movs	r3, #128	@ 0x80
 8003116:	061b      	lsls	r3, r3, #24
 8003118:	18c9      	adds	r1, r1, r3
 800311a:	e7da      	b.n	80030d2 <sin+0x2a>
 800311c:	0022      	movs	r2, r4
 800311e:	002b      	movs	r3, r5
 8003120:	f000 f83a 	bl	8003198 <__kernel_cos>
 8003124:	e7f6      	b.n	8003114 <sin+0x6c>
 8003126:	46c0      	nop			@ (mov r8, r8)
 8003128:	3fe921fb 	.word	0x3fe921fb
 800312c:	7fefffff 	.word	0x7fefffff

08003130 <trunc>:
 8003130:	4a16      	ldr	r2, [pc, #88]	@ (800318c <trunc+0x5c>)
 8003132:	004b      	lsls	r3, r1, #1
 8003134:	0d5b      	lsrs	r3, r3, #21
 8003136:	189a      	adds	r2, r3, r2
 8003138:	b570      	push	{r4, r5, r6, lr}
 800313a:	000e      	movs	r6, r1
 800313c:	2a13      	cmp	r2, #19
 800313e:	dc0f      	bgt.n	8003160 <trunc+0x30>
 8003140:	0fc9      	lsrs	r1, r1, #31
 8003142:	07c9      	lsls	r1, r1, #31
 8003144:	2a00      	cmp	r2, #0
 8003146:	da02      	bge.n	800314e <trunc+0x1e>
 8003148:	2200      	movs	r2, #0
 800314a:	0010      	movs	r0, r2
 800314c:	bd70      	pop	{r4, r5, r6, pc}
 800314e:	4b10      	ldr	r3, [pc, #64]	@ (8003190 <trunc+0x60>)
 8003150:	2400      	movs	r4, #0
 8003152:	4113      	asrs	r3, r2
 8003154:	4033      	ands	r3, r6
 8003156:	430b      	orrs	r3, r1
 8003158:	001d      	movs	r5, r3
 800315a:	0020      	movs	r0, r4
 800315c:	0029      	movs	r1, r5
 800315e:	e7f5      	b.n	800314c <trunc+0x1c>
 8003160:	2a33      	cmp	r2, #51	@ 0x33
 8003162:	dd08      	ble.n	8003176 <trunc+0x46>
 8003164:	2380      	movs	r3, #128	@ 0x80
 8003166:	00db      	lsls	r3, r3, #3
 8003168:	429a      	cmp	r2, r3
 800316a:	d1ef      	bne.n	800314c <trunc+0x1c>
 800316c:	0002      	movs	r2, r0
 800316e:	000b      	movs	r3, r1
 8003170:	f7fd f97e 	bl	8000470 <__aeabi_dadd>
 8003174:	e7ea      	b.n	800314c <trunc+0x1c>
 8003176:	4a07      	ldr	r2, [pc, #28]	@ (8003194 <trunc+0x64>)
 8003178:	000d      	movs	r5, r1
 800317a:	189b      	adds	r3, r3, r2
 800317c:	2201      	movs	r2, #1
 800317e:	4252      	negs	r2, r2
 8003180:	40da      	lsrs	r2, r3
 8003182:	0003      	movs	r3, r0
 8003184:	4393      	bics	r3, r2
 8003186:	001c      	movs	r4, r3
 8003188:	e7e7      	b.n	800315a <trunc+0x2a>
 800318a:	46c0      	nop			@ (mov r8, r8)
 800318c:	fffffc01 	.word	0xfffffc01
 8003190:	fff00000 	.word	0xfff00000
 8003194:	fffffbed 	.word	0xfffffbed

08003198 <__kernel_cos>:
 8003198:	b5f0      	push	{r4, r5, r6, r7, lr}
 800319a:	b087      	sub	sp, #28
 800319c:	9204      	str	r2, [sp, #16]
 800319e:	9305      	str	r3, [sp, #20]
 80031a0:	004b      	lsls	r3, r1, #1
 80031a2:	085b      	lsrs	r3, r3, #1
 80031a4:	9301      	str	r3, [sp, #4]
 80031a6:	23f9      	movs	r3, #249	@ 0xf9
 80031a8:	9a01      	ldr	r2, [sp, #4]
 80031aa:	0004      	movs	r4, r0
 80031ac:	000d      	movs	r5, r1
 80031ae:	059b      	lsls	r3, r3, #22
 80031b0:	429a      	cmp	r2, r3
 80031b2:	d204      	bcs.n	80031be <__kernel_cos+0x26>
 80031b4:	f7fe fd34 	bl	8001c20 <__aeabi_d2iz>
 80031b8:	2800      	cmp	r0, #0
 80031ba:	d100      	bne.n	80031be <__kernel_cos+0x26>
 80031bc:	e084      	b.n	80032c8 <__kernel_cos+0x130>
 80031be:	0022      	movs	r2, r4
 80031c0:	002b      	movs	r3, r5
 80031c2:	0020      	movs	r0, r4
 80031c4:	0029      	movs	r1, r5
 80031c6:	f7fd fe3b 	bl	8000e40 <__aeabi_dmul>
 80031ca:	2200      	movs	r2, #0
 80031cc:	4b40      	ldr	r3, [pc, #256]	@ (80032d0 <__kernel_cos+0x138>)
 80031ce:	0006      	movs	r6, r0
 80031d0:	000f      	movs	r7, r1
 80031d2:	f7fd fe35 	bl	8000e40 <__aeabi_dmul>
 80031d6:	4a3f      	ldr	r2, [pc, #252]	@ (80032d4 <__kernel_cos+0x13c>)
 80031d8:	9002      	str	r0, [sp, #8]
 80031da:	9103      	str	r1, [sp, #12]
 80031dc:	4b3e      	ldr	r3, [pc, #248]	@ (80032d8 <__kernel_cos+0x140>)
 80031de:	0030      	movs	r0, r6
 80031e0:	0039      	movs	r1, r7
 80031e2:	f7fd fe2d 	bl	8000e40 <__aeabi_dmul>
 80031e6:	4a3d      	ldr	r2, [pc, #244]	@ (80032dc <__kernel_cos+0x144>)
 80031e8:	4b3d      	ldr	r3, [pc, #244]	@ (80032e0 <__kernel_cos+0x148>)
 80031ea:	f7fd f941 	bl	8000470 <__aeabi_dadd>
 80031ee:	0032      	movs	r2, r6
 80031f0:	003b      	movs	r3, r7
 80031f2:	f7fd fe25 	bl	8000e40 <__aeabi_dmul>
 80031f6:	4a3b      	ldr	r2, [pc, #236]	@ (80032e4 <__kernel_cos+0x14c>)
 80031f8:	4b3b      	ldr	r3, [pc, #236]	@ (80032e8 <__kernel_cos+0x150>)
 80031fa:	f7fe f907 	bl	800140c <__aeabi_dsub>
 80031fe:	0032      	movs	r2, r6
 8003200:	003b      	movs	r3, r7
 8003202:	f7fd fe1d 	bl	8000e40 <__aeabi_dmul>
 8003206:	4a39      	ldr	r2, [pc, #228]	@ (80032ec <__kernel_cos+0x154>)
 8003208:	4b39      	ldr	r3, [pc, #228]	@ (80032f0 <__kernel_cos+0x158>)
 800320a:	f7fd f931 	bl	8000470 <__aeabi_dadd>
 800320e:	0032      	movs	r2, r6
 8003210:	003b      	movs	r3, r7
 8003212:	f7fd fe15 	bl	8000e40 <__aeabi_dmul>
 8003216:	4a37      	ldr	r2, [pc, #220]	@ (80032f4 <__kernel_cos+0x15c>)
 8003218:	4b37      	ldr	r3, [pc, #220]	@ (80032f8 <__kernel_cos+0x160>)
 800321a:	f7fe f8f7 	bl	800140c <__aeabi_dsub>
 800321e:	0032      	movs	r2, r6
 8003220:	003b      	movs	r3, r7
 8003222:	f7fd fe0d 	bl	8000e40 <__aeabi_dmul>
 8003226:	4a35      	ldr	r2, [pc, #212]	@ (80032fc <__kernel_cos+0x164>)
 8003228:	4b35      	ldr	r3, [pc, #212]	@ (8003300 <__kernel_cos+0x168>)
 800322a:	f7fd f921 	bl	8000470 <__aeabi_dadd>
 800322e:	0032      	movs	r2, r6
 8003230:	003b      	movs	r3, r7
 8003232:	f7fd fe05 	bl	8000e40 <__aeabi_dmul>
 8003236:	0032      	movs	r2, r6
 8003238:	003b      	movs	r3, r7
 800323a:	f7fd fe01 	bl	8000e40 <__aeabi_dmul>
 800323e:	9a04      	ldr	r2, [sp, #16]
 8003240:	9b05      	ldr	r3, [sp, #20]
 8003242:	0006      	movs	r6, r0
 8003244:	000f      	movs	r7, r1
 8003246:	0020      	movs	r0, r4
 8003248:	0029      	movs	r1, r5
 800324a:	f7fd fdf9 	bl	8000e40 <__aeabi_dmul>
 800324e:	0002      	movs	r2, r0
 8003250:	000b      	movs	r3, r1
 8003252:	0030      	movs	r0, r6
 8003254:	0039      	movs	r1, r7
 8003256:	f7fe f8d9 	bl	800140c <__aeabi_dsub>
 800325a:	4b2a      	ldr	r3, [pc, #168]	@ (8003304 <__kernel_cos+0x16c>)
 800325c:	9a01      	ldr	r2, [sp, #4]
 800325e:	9004      	str	r0, [sp, #16]
 8003260:	9105      	str	r1, [sp, #20]
 8003262:	429a      	cmp	r2, r3
 8003264:	d80d      	bhi.n	8003282 <__kernel_cos+0xea>
 8003266:	0002      	movs	r2, r0
 8003268:	000b      	movs	r3, r1
 800326a:	9802      	ldr	r0, [sp, #8]
 800326c:	9903      	ldr	r1, [sp, #12]
 800326e:	f7fe f8cd 	bl	800140c <__aeabi_dsub>
 8003272:	0002      	movs	r2, r0
 8003274:	2000      	movs	r0, #0
 8003276:	000b      	movs	r3, r1
 8003278:	4923      	ldr	r1, [pc, #140]	@ (8003308 <__kernel_cos+0x170>)
 800327a:	f7fe f8c7 	bl	800140c <__aeabi_dsub>
 800327e:	b007      	add	sp, #28
 8003280:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003282:	4b22      	ldr	r3, [pc, #136]	@ (800330c <__kernel_cos+0x174>)
 8003284:	9a01      	ldr	r2, [sp, #4]
 8003286:	2600      	movs	r6, #0
 8003288:	429a      	cmp	r2, r3
 800328a:	d81b      	bhi.n	80032c4 <__kernel_cos+0x12c>
 800328c:	0013      	movs	r3, r2
 800328e:	4a20      	ldr	r2, [pc, #128]	@ (8003310 <__kernel_cos+0x178>)
 8003290:	4694      	mov	ip, r2
 8003292:	4463      	add	r3, ip
 8003294:	001f      	movs	r7, r3
 8003296:	0032      	movs	r2, r6
 8003298:	003b      	movs	r3, r7
 800329a:	2000      	movs	r0, #0
 800329c:	491a      	ldr	r1, [pc, #104]	@ (8003308 <__kernel_cos+0x170>)
 800329e:	f7fe f8b5 	bl	800140c <__aeabi_dsub>
 80032a2:	0032      	movs	r2, r6
 80032a4:	0004      	movs	r4, r0
 80032a6:	000d      	movs	r5, r1
 80032a8:	9802      	ldr	r0, [sp, #8]
 80032aa:	9903      	ldr	r1, [sp, #12]
 80032ac:	003b      	movs	r3, r7
 80032ae:	f7fe f8ad 	bl	800140c <__aeabi_dsub>
 80032b2:	9a04      	ldr	r2, [sp, #16]
 80032b4:	9b05      	ldr	r3, [sp, #20]
 80032b6:	f7fe f8a9 	bl	800140c <__aeabi_dsub>
 80032ba:	0002      	movs	r2, r0
 80032bc:	000b      	movs	r3, r1
 80032be:	0020      	movs	r0, r4
 80032c0:	0029      	movs	r1, r5
 80032c2:	e7da      	b.n	800327a <__kernel_cos+0xe2>
 80032c4:	4f13      	ldr	r7, [pc, #76]	@ (8003314 <__kernel_cos+0x17c>)
 80032c6:	e7e6      	b.n	8003296 <__kernel_cos+0xfe>
 80032c8:	2000      	movs	r0, #0
 80032ca:	490f      	ldr	r1, [pc, #60]	@ (8003308 <__kernel_cos+0x170>)
 80032cc:	e7d7      	b.n	800327e <__kernel_cos+0xe6>
 80032ce:	46c0      	nop			@ (mov r8, r8)
 80032d0:	3fe00000 	.word	0x3fe00000
 80032d4:	be8838d4 	.word	0xbe8838d4
 80032d8:	bda8fae9 	.word	0xbda8fae9
 80032dc:	bdb4b1c4 	.word	0xbdb4b1c4
 80032e0:	3e21ee9e 	.word	0x3e21ee9e
 80032e4:	809c52ad 	.word	0x809c52ad
 80032e8:	3e927e4f 	.word	0x3e927e4f
 80032ec:	19cb1590 	.word	0x19cb1590
 80032f0:	3efa01a0 	.word	0x3efa01a0
 80032f4:	16c15177 	.word	0x16c15177
 80032f8:	3f56c16c 	.word	0x3f56c16c
 80032fc:	5555554c 	.word	0x5555554c
 8003300:	3fa55555 	.word	0x3fa55555
 8003304:	3fd33332 	.word	0x3fd33332
 8003308:	3ff00000 	.word	0x3ff00000
 800330c:	3fe90000 	.word	0x3fe90000
 8003310:	ffe00000 	.word	0xffe00000
 8003314:	3fd20000 	.word	0x3fd20000

08003318 <__kernel_sin>:
 8003318:	b5f0      	push	{r4, r5, r6, r7, lr}
 800331a:	b089      	sub	sp, #36	@ 0x24
 800331c:	9202      	str	r2, [sp, #8]
 800331e:	9303      	str	r3, [sp, #12]
 8003320:	22f9      	movs	r2, #249	@ 0xf9
 8003322:	004b      	lsls	r3, r1, #1
 8003324:	0006      	movs	r6, r0
 8003326:	000f      	movs	r7, r1
 8003328:	085b      	lsrs	r3, r3, #1
 800332a:	0592      	lsls	r2, r2, #22
 800332c:	4293      	cmp	r3, r2
 800332e:	d203      	bcs.n	8003338 <__kernel_sin+0x20>
 8003330:	f7fe fc76 	bl	8001c20 <__aeabi_d2iz>
 8003334:	2800      	cmp	r0, #0
 8003336:	d04c      	beq.n	80033d2 <__kernel_sin+0xba>
 8003338:	0032      	movs	r2, r6
 800333a:	003b      	movs	r3, r7
 800333c:	0030      	movs	r0, r6
 800333e:	0039      	movs	r1, r7
 8003340:	f7fd fd7e 	bl	8000e40 <__aeabi_dmul>
 8003344:	0004      	movs	r4, r0
 8003346:	000d      	movs	r5, r1
 8003348:	0002      	movs	r2, r0
 800334a:	000b      	movs	r3, r1
 800334c:	0030      	movs	r0, r6
 800334e:	0039      	movs	r1, r7
 8003350:	f7fd fd76 	bl	8000e40 <__aeabi_dmul>
 8003354:	4a39      	ldr	r2, [pc, #228]	@ (800343c <__kernel_sin+0x124>)
 8003356:	9000      	str	r0, [sp, #0]
 8003358:	9101      	str	r1, [sp, #4]
 800335a:	4b39      	ldr	r3, [pc, #228]	@ (8003440 <__kernel_sin+0x128>)
 800335c:	0020      	movs	r0, r4
 800335e:	0029      	movs	r1, r5
 8003360:	f7fd fd6e 	bl	8000e40 <__aeabi_dmul>
 8003364:	4a37      	ldr	r2, [pc, #220]	@ (8003444 <__kernel_sin+0x12c>)
 8003366:	4b38      	ldr	r3, [pc, #224]	@ (8003448 <__kernel_sin+0x130>)
 8003368:	f7fe f850 	bl	800140c <__aeabi_dsub>
 800336c:	0022      	movs	r2, r4
 800336e:	002b      	movs	r3, r5
 8003370:	f7fd fd66 	bl	8000e40 <__aeabi_dmul>
 8003374:	4a35      	ldr	r2, [pc, #212]	@ (800344c <__kernel_sin+0x134>)
 8003376:	4b36      	ldr	r3, [pc, #216]	@ (8003450 <__kernel_sin+0x138>)
 8003378:	f7fd f87a 	bl	8000470 <__aeabi_dadd>
 800337c:	0022      	movs	r2, r4
 800337e:	002b      	movs	r3, r5
 8003380:	f7fd fd5e 	bl	8000e40 <__aeabi_dmul>
 8003384:	4a33      	ldr	r2, [pc, #204]	@ (8003454 <__kernel_sin+0x13c>)
 8003386:	4b34      	ldr	r3, [pc, #208]	@ (8003458 <__kernel_sin+0x140>)
 8003388:	f7fe f840 	bl	800140c <__aeabi_dsub>
 800338c:	0022      	movs	r2, r4
 800338e:	002b      	movs	r3, r5
 8003390:	f7fd fd56 	bl	8000e40 <__aeabi_dmul>
 8003394:	4b31      	ldr	r3, [pc, #196]	@ (800345c <__kernel_sin+0x144>)
 8003396:	4a32      	ldr	r2, [pc, #200]	@ (8003460 <__kernel_sin+0x148>)
 8003398:	f7fd f86a 	bl	8000470 <__aeabi_dadd>
 800339c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800339e:	9004      	str	r0, [sp, #16]
 80033a0:	9105      	str	r1, [sp, #20]
 80033a2:	2b00      	cmp	r3, #0
 80033a4:	d119      	bne.n	80033da <__kernel_sin+0xc2>
 80033a6:	0002      	movs	r2, r0
 80033a8:	000b      	movs	r3, r1
 80033aa:	0020      	movs	r0, r4
 80033ac:	0029      	movs	r1, r5
 80033ae:	f7fd fd47 	bl	8000e40 <__aeabi_dmul>
 80033b2:	4a2c      	ldr	r2, [pc, #176]	@ (8003464 <__kernel_sin+0x14c>)
 80033b4:	4b2c      	ldr	r3, [pc, #176]	@ (8003468 <__kernel_sin+0x150>)
 80033b6:	f7fe f829 	bl	800140c <__aeabi_dsub>
 80033ba:	9a00      	ldr	r2, [sp, #0]
 80033bc:	9b01      	ldr	r3, [sp, #4]
 80033be:	f7fd fd3f 	bl	8000e40 <__aeabi_dmul>
 80033c2:	0002      	movs	r2, r0
 80033c4:	000b      	movs	r3, r1
 80033c6:	0030      	movs	r0, r6
 80033c8:	0039      	movs	r1, r7
 80033ca:	f7fd f851 	bl	8000470 <__aeabi_dadd>
 80033ce:	0006      	movs	r6, r0
 80033d0:	000f      	movs	r7, r1
 80033d2:	0030      	movs	r0, r6
 80033d4:	0039      	movs	r1, r7
 80033d6:	b009      	add	sp, #36	@ 0x24
 80033d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80033da:	2200      	movs	r2, #0
 80033dc:	9802      	ldr	r0, [sp, #8]
 80033de:	9903      	ldr	r1, [sp, #12]
 80033e0:	4b22      	ldr	r3, [pc, #136]	@ (800346c <__kernel_sin+0x154>)
 80033e2:	f7fd fd2d 	bl	8000e40 <__aeabi_dmul>
 80033e6:	9a04      	ldr	r2, [sp, #16]
 80033e8:	9b05      	ldr	r3, [sp, #20]
 80033ea:	9006      	str	r0, [sp, #24]
 80033ec:	9107      	str	r1, [sp, #28]
 80033ee:	9800      	ldr	r0, [sp, #0]
 80033f0:	9901      	ldr	r1, [sp, #4]
 80033f2:	f7fd fd25 	bl	8000e40 <__aeabi_dmul>
 80033f6:	0002      	movs	r2, r0
 80033f8:	000b      	movs	r3, r1
 80033fa:	9806      	ldr	r0, [sp, #24]
 80033fc:	9907      	ldr	r1, [sp, #28]
 80033fe:	f7fe f805 	bl	800140c <__aeabi_dsub>
 8003402:	0022      	movs	r2, r4
 8003404:	002b      	movs	r3, r5
 8003406:	f7fd fd1b 	bl	8000e40 <__aeabi_dmul>
 800340a:	9a02      	ldr	r2, [sp, #8]
 800340c:	9b03      	ldr	r3, [sp, #12]
 800340e:	f7fd fffd 	bl	800140c <__aeabi_dsub>
 8003412:	4a14      	ldr	r2, [pc, #80]	@ (8003464 <__kernel_sin+0x14c>)
 8003414:	0004      	movs	r4, r0
 8003416:	000d      	movs	r5, r1
 8003418:	9800      	ldr	r0, [sp, #0]
 800341a:	9901      	ldr	r1, [sp, #4]
 800341c:	4b12      	ldr	r3, [pc, #72]	@ (8003468 <__kernel_sin+0x150>)
 800341e:	f7fd fd0f 	bl	8000e40 <__aeabi_dmul>
 8003422:	0002      	movs	r2, r0
 8003424:	000b      	movs	r3, r1
 8003426:	0020      	movs	r0, r4
 8003428:	0029      	movs	r1, r5
 800342a:	f7fd f821 	bl	8000470 <__aeabi_dadd>
 800342e:	0002      	movs	r2, r0
 8003430:	000b      	movs	r3, r1
 8003432:	0030      	movs	r0, r6
 8003434:	0039      	movs	r1, r7
 8003436:	f7fd ffe9 	bl	800140c <__aeabi_dsub>
 800343a:	e7c8      	b.n	80033ce <__kernel_sin+0xb6>
 800343c:	5acfd57c 	.word	0x5acfd57c
 8003440:	3de5d93a 	.word	0x3de5d93a
 8003444:	8a2b9ceb 	.word	0x8a2b9ceb
 8003448:	3e5ae5e6 	.word	0x3e5ae5e6
 800344c:	57b1fe7d 	.word	0x57b1fe7d
 8003450:	3ec71de3 	.word	0x3ec71de3
 8003454:	19c161d5 	.word	0x19c161d5
 8003458:	3f2a01a0 	.word	0x3f2a01a0
 800345c:	3f811111 	.word	0x3f811111
 8003460:	1110f8a6 	.word	0x1110f8a6
 8003464:	55555549 	.word	0x55555549
 8003468:	3fc55555 	.word	0x3fc55555
 800346c:	3fe00000 	.word	0x3fe00000

08003470 <__ieee754_rem_pio2>:
 8003470:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003472:	4baf      	ldr	r3, [pc, #700]	@ (8003730 <__ieee754_rem_pio2+0x2c0>)
 8003474:	b095      	sub	sp, #84	@ 0x54
 8003476:	004d      	lsls	r5, r1, #1
 8003478:	0017      	movs	r7, r2
 800347a:	910d      	str	r1, [sp, #52]	@ 0x34
 800347c:	086d      	lsrs	r5, r5, #1
 800347e:	429d      	cmp	r5, r3
 8003480:	d807      	bhi.n	8003492 <__ieee754_rem_pio2+0x22>
 8003482:	6010      	str	r0, [r2, #0]
 8003484:	6051      	str	r1, [r2, #4]
 8003486:	2300      	movs	r3, #0
 8003488:	2200      	movs	r2, #0
 800348a:	60ba      	str	r2, [r7, #8]
 800348c:	60fb      	str	r3, [r7, #12]
 800348e:	2300      	movs	r3, #0
 8003490:	e024      	b.n	80034dc <__ieee754_rem_pio2+0x6c>
 8003492:	4ba8      	ldr	r3, [pc, #672]	@ (8003734 <__ieee754_rem_pio2+0x2c4>)
 8003494:	429d      	cmp	r5, r3
 8003496:	d900      	bls.n	800349a <__ieee754_rem_pio2+0x2a>
 8003498:	e072      	b.n	8003580 <__ieee754_rem_pio2+0x110>
 800349a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800349c:	4ca6      	ldr	r4, [pc, #664]	@ (8003738 <__ieee754_rem_pio2+0x2c8>)
 800349e:	4aa7      	ldr	r2, [pc, #668]	@ (800373c <__ieee754_rem_pio2+0x2cc>)
 80034a0:	2b00      	cmp	r3, #0
 80034a2:	dd37      	ble.n	8003514 <__ieee754_rem_pio2+0xa4>
 80034a4:	4ba4      	ldr	r3, [pc, #656]	@ (8003738 <__ieee754_rem_pio2+0x2c8>)
 80034a6:	f7fd ffb1 	bl	800140c <__aeabi_dsub>
 80034aa:	9002      	str	r0, [sp, #8]
 80034ac:	9103      	str	r1, [sp, #12]
 80034ae:	42a5      	cmp	r5, r4
 80034b0:	d018      	beq.n	80034e4 <__ieee754_rem_pio2+0x74>
 80034b2:	4aa3      	ldr	r2, [pc, #652]	@ (8003740 <__ieee754_rem_pio2+0x2d0>)
 80034b4:	4ba3      	ldr	r3, [pc, #652]	@ (8003744 <__ieee754_rem_pio2+0x2d4>)
 80034b6:	f7fd ffa9 	bl	800140c <__aeabi_dsub>
 80034ba:	0002      	movs	r2, r0
 80034bc:	000b      	movs	r3, r1
 80034be:	0004      	movs	r4, r0
 80034c0:	000d      	movs	r5, r1
 80034c2:	9802      	ldr	r0, [sp, #8]
 80034c4:	9903      	ldr	r1, [sp, #12]
 80034c6:	f7fd ffa1 	bl	800140c <__aeabi_dsub>
 80034ca:	4a9d      	ldr	r2, [pc, #628]	@ (8003740 <__ieee754_rem_pio2+0x2d0>)
 80034cc:	4b9d      	ldr	r3, [pc, #628]	@ (8003744 <__ieee754_rem_pio2+0x2d4>)
 80034ce:	f7fd ff9d 	bl	800140c <__aeabi_dsub>
 80034d2:	2301      	movs	r3, #1
 80034d4:	603c      	str	r4, [r7, #0]
 80034d6:	607d      	str	r5, [r7, #4]
 80034d8:	60b8      	str	r0, [r7, #8]
 80034da:	60f9      	str	r1, [r7, #12]
 80034dc:	9302      	str	r3, [sp, #8]
 80034de:	9802      	ldr	r0, [sp, #8]
 80034e0:	b015      	add	sp, #84	@ 0x54
 80034e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80034e4:	22d3      	movs	r2, #211	@ 0xd3
 80034e6:	9802      	ldr	r0, [sp, #8]
 80034e8:	9903      	ldr	r1, [sp, #12]
 80034ea:	4b96      	ldr	r3, [pc, #600]	@ (8003744 <__ieee754_rem_pio2+0x2d4>)
 80034ec:	0552      	lsls	r2, r2, #21
 80034ee:	f7fd ff8d 	bl	800140c <__aeabi_dsub>
 80034f2:	4a95      	ldr	r2, [pc, #596]	@ (8003748 <__ieee754_rem_pio2+0x2d8>)
 80034f4:	4b95      	ldr	r3, [pc, #596]	@ (800374c <__ieee754_rem_pio2+0x2dc>)
 80034f6:	9002      	str	r0, [sp, #8]
 80034f8:	9103      	str	r1, [sp, #12]
 80034fa:	f7fd ff87 	bl	800140c <__aeabi_dsub>
 80034fe:	0002      	movs	r2, r0
 8003500:	000b      	movs	r3, r1
 8003502:	0004      	movs	r4, r0
 8003504:	000d      	movs	r5, r1
 8003506:	9802      	ldr	r0, [sp, #8]
 8003508:	9903      	ldr	r1, [sp, #12]
 800350a:	f7fd ff7f 	bl	800140c <__aeabi_dsub>
 800350e:	4a8e      	ldr	r2, [pc, #568]	@ (8003748 <__ieee754_rem_pio2+0x2d8>)
 8003510:	4b8e      	ldr	r3, [pc, #568]	@ (800374c <__ieee754_rem_pio2+0x2dc>)
 8003512:	e7dc      	b.n	80034ce <__ieee754_rem_pio2+0x5e>
 8003514:	4b88      	ldr	r3, [pc, #544]	@ (8003738 <__ieee754_rem_pio2+0x2c8>)
 8003516:	f7fc ffab 	bl	8000470 <__aeabi_dadd>
 800351a:	9002      	str	r0, [sp, #8]
 800351c:	9103      	str	r1, [sp, #12]
 800351e:	42a5      	cmp	r5, r4
 8003520:	d016      	beq.n	8003550 <__ieee754_rem_pio2+0xe0>
 8003522:	4a87      	ldr	r2, [pc, #540]	@ (8003740 <__ieee754_rem_pio2+0x2d0>)
 8003524:	4b87      	ldr	r3, [pc, #540]	@ (8003744 <__ieee754_rem_pio2+0x2d4>)
 8003526:	f7fc ffa3 	bl	8000470 <__aeabi_dadd>
 800352a:	0002      	movs	r2, r0
 800352c:	000b      	movs	r3, r1
 800352e:	0004      	movs	r4, r0
 8003530:	000d      	movs	r5, r1
 8003532:	9802      	ldr	r0, [sp, #8]
 8003534:	9903      	ldr	r1, [sp, #12]
 8003536:	f7fd ff69 	bl	800140c <__aeabi_dsub>
 800353a:	4a81      	ldr	r2, [pc, #516]	@ (8003740 <__ieee754_rem_pio2+0x2d0>)
 800353c:	4b81      	ldr	r3, [pc, #516]	@ (8003744 <__ieee754_rem_pio2+0x2d4>)
 800353e:	f7fc ff97 	bl	8000470 <__aeabi_dadd>
 8003542:	2301      	movs	r3, #1
 8003544:	603c      	str	r4, [r7, #0]
 8003546:	607d      	str	r5, [r7, #4]
 8003548:	60b8      	str	r0, [r7, #8]
 800354a:	60f9      	str	r1, [r7, #12]
 800354c:	425b      	negs	r3, r3
 800354e:	e7c5      	b.n	80034dc <__ieee754_rem_pio2+0x6c>
 8003550:	22d3      	movs	r2, #211	@ 0xd3
 8003552:	9802      	ldr	r0, [sp, #8]
 8003554:	9903      	ldr	r1, [sp, #12]
 8003556:	4b7b      	ldr	r3, [pc, #492]	@ (8003744 <__ieee754_rem_pio2+0x2d4>)
 8003558:	0552      	lsls	r2, r2, #21
 800355a:	f7fc ff89 	bl	8000470 <__aeabi_dadd>
 800355e:	4a7a      	ldr	r2, [pc, #488]	@ (8003748 <__ieee754_rem_pio2+0x2d8>)
 8003560:	4b7a      	ldr	r3, [pc, #488]	@ (800374c <__ieee754_rem_pio2+0x2dc>)
 8003562:	9002      	str	r0, [sp, #8]
 8003564:	9103      	str	r1, [sp, #12]
 8003566:	f7fc ff83 	bl	8000470 <__aeabi_dadd>
 800356a:	0002      	movs	r2, r0
 800356c:	000b      	movs	r3, r1
 800356e:	0004      	movs	r4, r0
 8003570:	000d      	movs	r5, r1
 8003572:	9802      	ldr	r0, [sp, #8]
 8003574:	9903      	ldr	r1, [sp, #12]
 8003576:	f7fd ff49 	bl	800140c <__aeabi_dsub>
 800357a:	4a73      	ldr	r2, [pc, #460]	@ (8003748 <__ieee754_rem_pio2+0x2d8>)
 800357c:	4b73      	ldr	r3, [pc, #460]	@ (800374c <__ieee754_rem_pio2+0x2dc>)
 800357e:	e7de      	b.n	800353e <__ieee754_rem_pio2+0xce>
 8003580:	4b73      	ldr	r3, [pc, #460]	@ (8003750 <__ieee754_rem_pio2+0x2e0>)
 8003582:	429d      	cmp	r5, r3
 8003584:	d900      	bls.n	8003588 <__ieee754_rem_pio2+0x118>
 8003586:	e0c6      	b.n	8003716 <__ieee754_rem_pio2+0x2a6>
 8003588:	f000 f94e 	bl	8003828 <fabs>
 800358c:	4a71      	ldr	r2, [pc, #452]	@ (8003754 <__ieee754_rem_pio2+0x2e4>)
 800358e:	4b72      	ldr	r3, [pc, #456]	@ (8003758 <__ieee754_rem_pio2+0x2e8>)
 8003590:	9004      	str	r0, [sp, #16]
 8003592:	9105      	str	r1, [sp, #20]
 8003594:	f7fd fc54 	bl	8000e40 <__aeabi_dmul>
 8003598:	2200      	movs	r2, #0
 800359a:	4b70      	ldr	r3, [pc, #448]	@ (800375c <__ieee754_rem_pio2+0x2ec>)
 800359c:	f7fc ff68 	bl	8000470 <__aeabi_dadd>
 80035a0:	f7fe fb3e 	bl	8001c20 <__aeabi_d2iz>
 80035a4:	9002      	str	r0, [sp, #8]
 80035a6:	f7fe fb77 	bl	8001c98 <__aeabi_i2d>
 80035aa:	4a64      	ldr	r2, [pc, #400]	@ (800373c <__ieee754_rem_pio2+0x2cc>)
 80035ac:	4b62      	ldr	r3, [pc, #392]	@ (8003738 <__ieee754_rem_pio2+0x2c8>)
 80035ae:	9008      	str	r0, [sp, #32]
 80035b0:	9109      	str	r1, [sp, #36]	@ 0x24
 80035b2:	f7fd fc45 	bl	8000e40 <__aeabi_dmul>
 80035b6:	0002      	movs	r2, r0
 80035b8:	000b      	movs	r3, r1
 80035ba:	9804      	ldr	r0, [sp, #16]
 80035bc:	9905      	ldr	r1, [sp, #20]
 80035be:	f7fd ff25 	bl	800140c <__aeabi_dsub>
 80035c2:	4b60      	ldr	r3, [pc, #384]	@ (8003744 <__ieee754_rem_pio2+0x2d4>)
 80035c4:	9004      	str	r0, [sp, #16]
 80035c6:	9105      	str	r1, [sp, #20]
 80035c8:	9808      	ldr	r0, [sp, #32]
 80035ca:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80035cc:	4a5c      	ldr	r2, [pc, #368]	@ (8003740 <__ieee754_rem_pio2+0x2d0>)
 80035ce:	f7fd fc37 	bl	8000e40 <__aeabi_dmul>
 80035d2:	9b02      	ldr	r3, [sp, #8]
 80035d4:	9006      	str	r0, [sp, #24]
 80035d6:	9107      	str	r1, [sp, #28]
 80035d8:	2b1f      	cmp	r3, #31
 80035da:	dc0d      	bgt.n	80035f8 <__ieee754_rem_pio2+0x188>
 80035dc:	9a02      	ldr	r2, [sp, #8]
 80035de:	4b60      	ldr	r3, [pc, #384]	@ (8003760 <__ieee754_rem_pio2+0x2f0>)
 80035e0:	3a01      	subs	r2, #1
 80035e2:	0092      	lsls	r2, r2, #2
 80035e4:	58d3      	ldr	r3, [r2, r3]
 80035e6:	42ab      	cmp	r3, r5
 80035e8:	d006      	beq.n	80035f8 <__ieee754_rem_pio2+0x188>
 80035ea:	0002      	movs	r2, r0
 80035ec:	000b      	movs	r3, r1
 80035ee:	9804      	ldr	r0, [sp, #16]
 80035f0:	9905      	ldr	r1, [sp, #20]
 80035f2:	f7fd ff0b 	bl	800140c <__aeabi_dsub>
 80035f6:	e00b      	b.n	8003610 <__ieee754_rem_pio2+0x1a0>
 80035f8:	9a06      	ldr	r2, [sp, #24]
 80035fa:	9b07      	ldr	r3, [sp, #28]
 80035fc:	9804      	ldr	r0, [sp, #16]
 80035fe:	9905      	ldr	r1, [sp, #20]
 8003600:	f7fd ff04 	bl	800140c <__aeabi_dsub>
 8003604:	004b      	lsls	r3, r1, #1
 8003606:	152e      	asrs	r6, r5, #20
 8003608:	0d5b      	lsrs	r3, r3, #21
 800360a:	1af3      	subs	r3, r6, r3
 800360c:	2b10      	cmp	r3, #16
 800360e:	dc02      	bgt.n	8003616 <__ieee754_rem_pio2+0x1a6>
 8003610:	6038      	str	r0, [r7, #0]
 8003612:	6079      	str	r1, [r7, #4]
 8003614:	e039      	b.n	800368a <__ieee754_rem_pio2+0x21a>
 8003616:	22d3      	movs	r2, #211	@ 0xd3
 8003618:	9808      	ldr	r0, [sp, #32]
 800361a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800361c:	4b49      	ldr	r3, [pc, #292]	@ (8003744 <__ieee754_rem_pio2+0x2d4>)
 800361e:	0552      	lsls	r2, r2, #21
 8003620:	f7fd fc0e 	bl	8000e40 <__aeabi_dmul>
 8003624:	0004      	movs	r4, r0
 8003626:	000d      	movs	r5, r1
 8003628:	0002      	movs	r2, r0
 800362a:	000b      	movs	r3, r1
 800362c:	9804      	ldr	r0, [sp, #16]
 800362e:	9905      	ldr	r1, [sp, #20]
 8003630:	f7fd feec 	bl	800140c <__aeabi_dsub>
 8003634:	0002      	movs	r2, r0
 8003636:	000b      	movs	r3, r1
 8003638:	900a      	str	r0, [sp, #40]	@ 0x28
 800363a:	910b      	str	r1, [sp, #44]	@ 0x2c
 800363c:	9804      	ldr	r0, [sp, #16]
 800363e:	9905      	ldr	r1, [sp, #20]
 8003640:	f7fd fee4 	bl	800140c <__aeabi_dsub>
 8003644:	0022      	movs	r2, r4
 8003646:	002b      	movs	r3, r5
 8003648:	f7fd fee0 	bl	800140c <__aeabi_dsub>
 800364c:	0004      	movs	r4, r0
 800364e:	000d      	movs	r5, r1
 8003650:	9808      	ldr	r0, [sp, #32]
 8003652:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8003654:	4a3c      	ldr	r2, [pc, #240]	@ (8003748 <__ieee754_rem_pio2+0x2d8>)
 8003656:	4b3d      	ldr	r3, [pc, #244]	@ (800374c <__ieee754_rem_pio2+0x2dc>)
 8003658:	f7fd fbf2 	bl	8000e40 <__aeabi_dmul>
 800365c:	0022      	movs	r2, r4
 800365e:	002b      	movs	r3, r5
 8003660:	f7fd fed4 	bl	800140c <__aeabi_dsub>
 8003664:	000b      	movs	r3, r1
 8003666:	0002      	movs	r2, r0
 8003668:	9006      	str	r0, [sp, #24]
 800366a:	9107      	str	r1, [sp, #28]
 800366c:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800366e:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8003670:	f7fd fecc 	bl	800140c <__aeabi_dsub>
 8003674:	004b      	lsls	r3, r1, #1
 8003676:	0d5b      	lsrs	r3, r3, #21
 8003678:	1af3      	subs	r3, r6, r3
 800367a:	2b31      	cmp	r3, #49	@ 0x31
 800367c:	dc21      	bgt.n	80036c2 <__ieee754_rem_pio2+0x252>
 800367e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003680:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8003682:	6038      	str	r0, [r7, #0]
 8003684:	6079      	str	r1, [r7, #4]
 8003686:	9304      	str	r3, [sp, #16]
 8003688:	9405      	str	r4, [sp, #20]
 800368a:	683c      	ldr	r4, [r7, #0]
 800368c:	687d      	ldr	r5, [r7, #4]
 800368e:	9804      	ldr	r0, [sp, #16]
 8003690:	9905      	ldr	r1, [sp, #20]
 8003692:	0022      	movs	r2, r4
 8003694:	002b      	movs	r3, r5
 8003696:	f7fd feb9 	bl	800140c <__aeabi_dsub>
 800369a:	9a06      	ldr	r2, [sp, #24]
 800369c:	9b07      	ldr	r3, [sp, #28]
 800369e:	f7fd feb5 	bl	800140c <__aeabi_dsub>
 80036a2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80036a4:	60b8      	str	r0, [r7, #8]
 80036a6:	60f9      	str	r1, [r7, #12]
 80036a8:	2b00      	cmp	r3, #0
 80036aa:	db00      	blt.n	80036ae <__ieee754_rem_pio2+0x23e>
 80036ac:	e717      	b.n	80034de <__ieee754_rem_pio2+0x6e>
 80036ae:	2280      	movs	r2, #128	@ 0x80
 80036b0:	0612      	lsls	r2, r2, #24
 80036b2:	18ab      	adds	r3, r5, r2
 80036b4:	607b      	str	r3, [r7, #4]
 80036b6:	188b      	adds	r3, r1, r2
 80036b8:	603c      	str	r4, [r7, #0]
 80036ba:	60b8      	str	r0, [r7, #8]
 80036bc:	60fb      	str	r3, [r7, #12]
 80036be:	9b02      	ldr	r3, [sp, #8]
 80036c0:	e744      	b.n	800354c <__ieee754_rem_pio2+0xdc>
 80036c2:	22b8      	movs	r2, #184	@ 0xb8
 80036c4:	9808      	ldr	r0, [sp, #32]
 80036c6:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80036c8:	4b20      	ldr	r3, [pc, #128]	@ (800374c <__ieee754_rem_pio2+0x2dc>)
 80036ca:	0592      	lsls	r2, r2, #22
 80036cc:	f7fd fbb8 	bl	8000e40 <__aeabi_dmul>
 80036d0:	0004      	movs	r4, r0
 80036d2:	000d      	movs	r5, r1
 80036d4:	0002      	movs	r2, r0
 80036d6:	000b      	movs	r3, r1
 80036d8:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80036da:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80036dc:	f7fd fe96 	bl	800140c <__aeabi_dsub>
 80036e0:	0002      	movs	r2, r0
 80036e2:	000b      	movs	r3, r1
 80036e4:	9004      	str	r0, [sp, #16]
 80036e6:	9105      	str	r1, [sp, #20]
 80036e8:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80036ea:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80036ec:	f7fd fe8e 	bl	800140c <__aeabi_dsub>
 80036f0:	0022      	movs	r2, r4
 80036f2:	002b      	movs	r3, r5
 80036f4:	f7fd fe8a 	bl	800140c <__aeabi_dsub>
 80036f8:	0004      	movs	r4, r0
 80036fa:	000d      	movs	r5, r1
 80036fc:	9808      	ldr	r0, [sp, #32]
 80036fe:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8003700:	4a18      	ldr	r2, [pc, #96]	@ (8003764 <__ieee754_rem_pio2+0x2f4>)
 8003702:	4b19      	ldr	r3, [pc, #100]	@ (8003768 <__ieee754_rem_pio2+0x2f8>)
 8003704:	f7fd fb9c 	bl	8000e40 <__aeabi_dmul>
 8003708:	0022      	movs	r2, r4
 800370a:	002b      	movs	r3, r5
 800370c:	f7fd fe7e 	bl	800140c <__aeabi_dsub>
 8003710:	9006      	str	r0, [sp, #24]
 8003712:	9107      	str	r1, [sp, #28]
 8003714:	e769      	b.n	80035ea <__ieee754_rem_pio2+0x17a>
 8003716:	4b15      	ldr	r3, [pc, #84]	@ (800376c <__ieee754_rem_pio2+0x2fc>)
 8003718:	429d      	cmp	r5, r3
 800371a:	d929      	bls.n	8003770 <__ieee754_rem_pio2+0x300>
 800371c:	0002      	movs	r2, r0
 800371e:	000b      	movs	r3, r1
 8003720:	f7fd fe74 	bl	800140c <__aeabi_dsub>
 8003724:	60b8      	str	r0, [r7, #8]
 8003726:	60f9      	str	r1, [r7, #12]
 8003728:	6038      	str	r0, [r7, #0]
 800372a:	6079      	str	r1, [r7, #4]
 800372c:	e6af      	b.n	800348e <__ieee754_rem_pio2+0x1e>
 800372e:	46c0      	nop			@ (mov r8, r8)
 8003730:	3fe921fb 	.word	0x3fe921fb
 8003734:	4002d97b 	.word	0x4002d97b
 8003738:	3ff921fb 	.word	0x3ff921fb
 800373c:	54400000 	.word	0x54400000
 8003740:	1a626331 	.word	0x1a626331
 8003744:	3dd0b461 	.word	0x3dd0b461
 8003748:	2e037073 	.word	0x2e037073
 800374c:	3ba3198a 	.word	0x3ba3198a
 8003750:	413921fb 	.word	0x413921fb
 8003754:	6dc9c883 	.word	0x6dc9c883
 8003758:	3fe45f30 	.word	0x3fe45f30
 800375c:	3fe00000 	.word	0x3fe00000
 8003760:	08004114 	.word	0x08004114
 8003764:	252049c1 	.word	0x252049c1
 8003768:	397b839a 	.word	0x397b839a
 800376c:	7fefffff 	.word	0x7fefffff
 8003770:	4b2a      	ldr	r3, [pc, #168]	@ (800381c <__ieee754_rem_pio2+0x3ac>)
 8003772:	152e      	asrs	r6, r5, #20
 8003774:	18f6      	adds	r6, r6, r3
 8003776:	0531      	lsls	r1, r6, #20
 8003778:	1a6b      	subs	r3, r5, r1
 800377a:	0019      	movs	r1, r3
 800377c:	001d      	movs	r5, r3
 800377e:	0004      	movs	r4, r0
 8003780:	f7fe fa4e 	bl	8001c20 <__aeabi_d2iz>
 8003784:	f7fe fa88 	bl	8001c98 <__aeabi_i2d>
 8003788:	0002      	movs	r2, r0
 800378a:	000b      	movs	r3, r1
 800378c:	0020      	movs	r0, r4
 800378e:	0029      	movs	r1, r5
 8003790:	920e      	str	r2, [sp, #56]	@ 0x38
 8003792:	930f      	str	r3, [sp, #60]	@ 0x3c
 8003794:	f7fd fe3a 	bl	800140c <__aeabi_dsub>
 8003798:	2200      	movs	r2, #0
 800379a:	4b21      	ldr	r3, [pc, #132]	@ (8003820 <__ieee754_rem_pio2+0x3b0>)
 800379c:	f7fd fb50 	bl	8000e40 <__aeabi_dmul>
 80037a0:	000d      	movs	r5, r1
 80037a2:	0004      	movs	r4, r0
 80037a4:	f7fe fa3c 	bl	8001c20 <__aeabi_d2iz>
 80037a8:	f7fe fa76 	bl	8001c98 <__aeabi_i2d>
 80037ac:	0002      	movs	r2, r0
 80037ae:	000b      	movs	r3, r1
 80037b0:	0020      	movs	r0, r4
 80037b2:	0029      	movs	r1, r5
 80037b4:	9210      	str	r2, [sp, #64]	@ 0x40
 80037b6:	9311      	str	r3, [sp, #68]	@ 0x44
 80037b8:	f7fd fe28 	bl	800140c <__aeabi_dsub>
 80037bc:	2200      	movs	r2, #0
 80037be:	4b18      	ldr	r3, [pc, #96]	@ (8003820 <__ieee754_rem_pio2+0x3b0>)
 80037c0:	f7fd fb3e 	bl	8000e40 <__aeabi_dmul>
 80037c4:	2503      	movs	r5, #3
 80037c6:	9012      	str	r0, [sp, #72]	@ 0x48
 80037c8:	9113      	str	r1, [sp, #76]	@ 0x4c
 80037ca:	ac0e      	add	r4, sp, #56	@ 0x38
 80037cc:	2200      	movs	r2, #0
 80037ce:	6920      	ldr	r0, [r4, #16]
 80037d0:	6961      	ldr	r1, [r4, #20]
 80037d2:	2300      	movs	r3, #0
 80037d4:	9502      	str	r5, [sp, #8]
 80037d6:	3c08      	subs	r4, #8
 80037d8:	3d01      	subs	r5, #1
 80037da:	f7fc fe1b 	bl	8000414 <__aeabi_dcmpeq>
 80037de:	2800      	cmp	r0, #0
 80037e0:	d1f4      	bne.n	80037cc <__ieee754_rem_pio2+0x35c>
 80037e2:	4b10      	ldr	r3, [pc, #64]	@ (8003824 <__ieee754_rem_pio2+0x3b4>)
 80037e4:	0032      	movs	r2, r6
 80037e6:	9301      	str	r3, [sp, #4]
 80037e8:	2302      	movs	r3, #2
 80037ea:	0039      	movs	r1, r7
 80037ec:	9300      	str	r3, [sp, #0]
 80037ee:	a80e      	add	r0, sp, #56	@ 0x38
 80037f0:	9b02      	ldr	r3, [sp, #8]
 80037f2:	f000 f81d 	bl	8003830 <__kernel_rem_pio2>
 80037f6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80037f8:	9002      	str	r0, [sp, #8]
 80037fa:	2b00      	cmp	r3, #0
 80037fc:	db00      	blt.n	8003800 <__ieee754_rem_pio2+0x390>
 80037fe:	e66e      	b.n	80034de <__ieee754_rem_pio2+0x6e>
 8003800:	2080      	movs	r0, #128	@ 0x80
 8003802:	6879      	ldr	r1, [r7, #4]
 8003804:	683a      	ldr	r2, [r7, #0]
 8003806:	0600      	lsls	r0, r0, #24
 8003808:	180b      	adds	r3, r1, r0
 800380a:	68f9      	ldr	r1, [r7, #12]
 800380c:	603a      	str	r2, [r7, #0]
 800380e:	607b      	str	r3, [r7, #4]
 8003810:	68ba      	ldr	r2, [r7, #8]
 8003812:	180b      	adds	r3, r1, r0
 8003814:	60ba      	str	r2, [r7, #8]
 8003816:	60fb      	str	r3, [r7, #12]
 8003818:	e751      	b.n	80036be <__ieee754_rem_pio2+0x24e>
 800381a:	46c0      	nop			@ (mov r8, r8)
 800381c:	fffffbea 	.word	0xfffffbea
 8003820:	41700000 	.word	0x41700000
 8003824:	08004194 	.word	0x08004194

08003828 <fabs>:
 8003828:	0049      	lsls	r1, r1, #1
 800382a:	084b      	lsrs	r3, r1, #1
 800382c:	0019      	movs	r1, r3
 800382e:	4770      	bx	lr

08003830 <__kernel_rem_pio2>:
 8003830:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003832:	4cc6      	ldr	r4, [pc, #792]	@ (8003b4c <__kernel_rem_pio2+0x31c>)
 8003834:	44a5      	add	sp, r4
 8003836:	0014      	movs	r4, r2
 8003838:	9aa4      	ldr	r2, [sp, #656]	@ 0x290
 800383a:	930e      	str	r3, [sp, #56]	@ 0x38
 800383c:	4bc4      	ldr	r3, [pc, #784]	@ (8003b50 <__kernel_rem_pio2+0x320>)
 800383e:	0092      	lsls	r2, r2, #2
 8003840:	58d3      	ldr	r3, [r2, r3]
 8003842:	900f      	str	r0, [sp, #60]	@ 0x3c
 8003844:	9308      	str	r3, [sp, #32]
 8003846:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8003848:	9105      	str	r1, [sp, #20]
 800384a:	3b01      	subs	r3, #1
 800384c:	930d      	str	r3, [sp, #52]	@ 0x34
 800384e:	2300      	movs	r3, #0
 8003850:	9300      	str	r3, [sp, #0]
 8003852:	0023      	movs	r3, r4
 8003854:	3314      	adds	r3, #20
 8003856:	db04      	blt.n	8003862 <__kernel_rem_pio2+0x32>
 8003858:	2118      	movs	r1, #24
 800385a:	1ee0      	subs	r0, r4, #3
 800385c:	f7fc fcde 	bl	800021c <__divsi3>
 8003860:	9000      	str	r0, [sp, #0]
 8003862:	9b00      	ldr	r3, [sp, #0]
 8003864:	ae26      	add	r6, sp, #152	@ 0x98
 8003866:	1c5a      	adds	r2, r3, #1
 8003868:	2318      	movs	r3, #24
 800386a:	425b      	negs	r3, r3
 800386c:	4353      	muls	r3, r2
 800386e:	191b      	adds	r3, r3, r4
 8003870:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8003872:	9302      	str	r3, [sp, #8]
 8003874:	9b00      	ldr	r3, [sp, #0]
 8003876:	1a9d      	subs	r5, r3, r2
 8003878:	002c      	movs	r4, r5
 800387a:	9b08      	ldr	r3, [sp, #32]
 800387c:	189f      	adds	r7, r3, r2
 800387e:	1b63      	subs	r3, r4, r5
 8003880:	429f      	cmp	r7, r3
 8003882:	da0f      	bge.n	80038a4 <__kernel_rem_pio2+0x74>
 8003884:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8003886:	af76      	add	r7, sp, #472	@ 0x1d8
 8003888:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800388a:	9a08      	ldr	r2, [sp, #32]
 800388c:	1aeb      	subs	r3, r5, r3
 800388e:	429a      	cmp	r2, r3
 8003890:	db30      	blt.n	80038f4 <__kernel_rem_pio2+0xc4>
 8003892:	00eb      	lsls	r3, r5, #3
 8003894:	aa26      	add	r2, sp, #152	@ 0x98
 8003896:	2400      	movs	r4, #0
 8003898:	189e      	adds	r6, r3, r2
 800389a:	2300      	movs	r3, #0
 800389c:	9306      	str	r3, [sp, #24]
 800389e:	9407      	str	r4, [sp, #28]
 80038a0:	2400      	movs	r4, #0
 80038a2:	e01e      	b.n	80038e2 <__kernel_rem_pio2+0xb2>
 80038a4:	2c00      	cmp	r4, #0
 80038a6:	db07      	blt.n	80038b8 <__kernel_rem_pio2+0x88>
 80038a8:	9aa5      	ldr	r2, [sp, #660]	@ 0x294
 80038aa:	00a3      	lsls	r3, r4, #2
 80038ac:	58d0      	ldr	r0, [r2, r3]
 80038ae:	f7fe f9f3 	bl	8001c98 <__aeabi_i2d>
 80038b2:	c603      	stmia	r6!, {r0, r1}
 80038b4:	3401      	adds	r4, #1
 80038b6:	e7e2      	b.n	800387e <__kernel_rem_pio2+0x4e>
 80038b8:	2000      	movs	r0, #0
 80038ba:	2100      	movs	r1, #0
 80038bc:	e7f9      	b.n	80038b2 <__kernel_rem_pio2+0x82>
 80038be:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80038c0:	00e1      	lsls	r1, r4, #3
 80038c2:	1859      	adds	r1, r3, r1
 80038c4:	6808      	ldr	r0, [r1, #0]
 80038c6:	6849      	ldr	r1, [r1, #4]
 80038c8:	6832      	ldr	r2, [r6, #0]
 80038ca:	6873      	ldr	r3, [r6, #4]
 80038cc:	f7fd fab8 	bl	8000e40 <__aeabi_dmul>
 80038d0:	0002      	movs	r2, r0
 80038d2:	000b      	movs	r3, r1
 80038d4:	9806      	ldr	r0, [sp, #24]
 80038d6:	9907      	ldr	r1, [sp, #28]
 80038d8:	f7fc fdca 	bl	8000470 <__aeabi_dadd>
 80038dc:	9006      	str	r0, [sp, #24]
 80038de:	9107      	str	r1, [sp, #28]
 80038e0:	3401      	adds	r4, #1
 80038e2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80038e4:	3e08      	subs	r6, #8
 80038e6:	429c      	cmp	r4, r3
 80038e8:	dde9      	ble.n	80038be <__kernel_rem_pio2+0x8e>
 80038ea:	9b06      	ldr	r3, [sp, #24]
 80038ec:	9c07      	ldr	r4, [sp, #28]
 80038ee:	3501      	adds	r5, #1
 80038f0:	c718      	stmia	r7!, {r3, r4}
 80038f2:	e7c9      	b.n	8003888 <__kernel_rem_pio2+0x58>
 80038f4:	9b08      	ldr	r3, [sp, #32]
 80038f6:	aa12      	add	r2, sp, #72	@ 0x48
 80038f8:	009b      	lsls	r3, r3, #2
 80038fa:	189b      	adds	r3, r3, r2
 80038fc:	9311      	str	r3, [sp, #68]	@ 0x44
 80038fe:	9b00      	ldr	r3, [sp, #0]
 8003900:	9aa5      	ldr	r2, [sp, #660]	@ 0x294
 8003902:	009b      	lsls	r3, r3, #2
 8003904:	18d3      	adds	r3, r2, r3
 8003906:	9310      	str	r3, [sp, #64]	@ 0x40
 8003908:	9b08      	ldr	r3, [sp, #32]
 800390a:	9300      	str	r3, [sp, #0]
 800390c:	9b00      	ldr	r3, [sp, #0]
 800390e:	aa76      	add	r2, sp, #472	@ 0x1d8
 8003910:	00db      	lsls	r3, r3, #3
 8003912:	18d3      	adds	r3, r2, r3
 8003914:	681e      	ldr	r6, [r3, #0]
 8003916:	685f      	ldr	r7, [r3, #4]
 8003918:	ab12      	add	r3, sp, #72	@ 0x48
 800391a:	001d      	movs	r5, r3
 800391c:	9c00      	ldr	r4, [sp, #0]
 800391e:	930a      	str	r3, [sp, #40]	@ 0x28
 8003920:	2c00      	cmp	r4, #0
 8003922:	dc73      	bgt.n	8003a0c <__kernel_rem_pio2+0x1dc>
 8003924:	0030      	movs	r0, r6
 8003926:	0039      	movs	r1, r7
 8003928:	9a02      	ldr	r2, [sp, #8]
 800392a:	f000 fad5 	bl	8003ed8 <scalbn>
 800392e:	23ff      	movs	r3, #255	@ 0xff
 8003930:	2200      	movs	r2, #0
 8003932:	059b      	lsls	r3, r3, #22
 8003934:	0004      	movs	r4, r0
 8003936:	000d      	movs	r5, r1
 8003938:	f7fd fa82 	bl	8000e40 <__aeabi_dmul>
 800393c:	f000 fb38 	bl	8003fb0 <floor>
 8003940:	2200      	movs	r2, #0
 8003942:	4b84      	ldr	r3, [pc, #528]	@ (8003b54 <__kernel_rem_pio2+0x324>)
 8003944:	f7fd fa7c 	bl	8000e40 <__aeabi_dmul>
 8003948:	0002      	movs	r2, r0
 800394a:	000b      	movs	r3, r1
 800394c:	0020      	movs	r0, r4
 800394e:	0029      	movs	r1, r5
 8003950:	f7fd fd5c 	bl	800140c <__aeabi_dsub>
 8003954:	000d      	movs	r5, r1
 8003956:	0004      	movs	r4, r0
 8003958:	f7fe f962 	bl	8001c20 <__aeabi_d2iz>
 800395c:	900c      	str	r0, [sp, #48]	@ 0x30
 800395e:	f7fe f99b 	bl	8001c98 <__aeabi_i2d>
 8003962:	000b      	movs	r3, r1
 8003964:	0002      	movs	r2, r0
 8003966:	0029      	movs	r1, r5
 8003968:	0020      	movs	r0, r4
 800396a:	f7fd fd4f 	bl	800140c <__aeabi_dsub>
 800396e:	9b02      	ldr	r3, [sp, #8]
 8003970:	0006      	movs	r6, r0
 8003972:	000f      	movs	r7, r1
 8003974:	2b00      	cmp	r3, #0
 8003976:	dd6f      	ble.n	8003a58 <__kernel_rem_pio2+0x228>
 8003978:	2018      	movs	r0, #24
 800397a:	9b00      	ldr	r3, [sp, #0]
 800397c:	aa12      	add	r2, sp, #72	@ 0x48
 800397e:	3b01      	subs	r3, #1
 8003980:	009b      	lsls	r3, r3, #2
 8003982:	589a      	ldr	r2, [r3, r2]
 8003984:	9902      	ldr	r1, [sp, #8]
 8003986:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8003988:	1a40      	subs	r0, r0, r1
 800398a:	0011      	movs	r1, r2
 800398c:	4101      	asrs	r1, r0
 800398e:	1864      	adds	r4, r4, r1
 8003990:	4081      	lsls	r1, r0
 8003992:	1a52      	subs	r2, r2, r1
 8003994:	a912      	add	r1, sp, #72	@ 0x48
 8003996:	505a      	str	r2, [r3, r1]
 8003998:	2317      	movs	r3, #23
 800399a:	9902      	ldr	r1, [sp, #8]
 800399c:	940c      	str	r4, [sp, #48]	@ 0x30
 800399e:	1a5b      	subs	r3, r3, r1
 80039a0:	411a      	asrs	r2, r3
 80039a2:	9206      	str	r2, [sp, #24]
 80039a4:	9b06      	ldr	r3, [sp, #24]
 80039a6:	2b00      	cmp	r3, #0
 80039a8:	dd68      	ble.n	8003a7c <__kernel_rem_pio2+0x24c>
 80039aa:	2200      	movs	r2, #0
 80039ac:	2580      	movs	r5, #128	@ 0x80
 80039ae:	0014      	movs	r4, r2
 80039b0:	2101      	movs	r1, #1
 80039b2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80039b4:	4868      	ldr	r0, [pc, #416]	@ (8003b58 <__kernel_rem_pio2+0x328>)
 80039b6:	3301      	adds	r3, #1
 80039b8:	930c      	str	r3, [sp, #48]	@ 0x30
 80039ba:	046d      	lsls	r5, r5, #17
 80039bc:	9b00      	ldr	r3, [sp, #0]
 80039be:	4293      	cmp	r3, r2
 80039c0:	dd00      	ble.n	80039c4 <__kernel_rem_pio2+0x194>
 80039c2:	e098      	b.n	8003af6 <__kernel_rem_pio2+0x2c6>
 80039c4:	9b02      	ldr	r3, [sp, #8]
 80039c6:	2b00      	cmp	r3, #0
 80039c8:	dd05      	ble.n	80039d6 <__kernel_rem_pio2+0x1a6>
 80039ca:	2b01      	cmp	r3, #1
 80039cc:	d100      	bne.n	80039d0 <__kernel_rem_pio2+0x1a0>
 80039ce:	e0a4      	b.n	8003b1a <__kernel_rem_pio2+0x2ea>
 80039d0:	2b02      	cmp	r3, #2
 80039d2:	d100      	bne.n	80039d6 <__kernel_rem_pio2+0x1a6>
 80039d4:	e0ab      	b.n	8003b2e <__kernel_rem_pio2+0x2fe>
 80039d6:	9b06      	ldr	r3, [sp, #24]
 80039d8:	2b02      	cmp	r3, #2
 80039da:	d14f      	bne.n	8003a7c <__kernel_rem_pio2+0x24c>
 80039dc:	0032      	movs	r2, r6
 80039de:	003b      	movs	r3, r7
 80039e0:	2000      	movs	r0, #0
 80039e2:	495e      	ldr	r1, [pc, #376]	@ (8003b5c <__kernel_rem_pio2+0x32c>)
 80039e4:	f7fd fd12 	bl	800140c <__aeabi_dsub>
 80039e8:	0006      	movs	r6, r0
 80039ea:	000f      	movs	r7, r1
 80039ec:	2c00      	cmp	r4, #0
 80039ee:	d045      	beq.n	8003a7c <__kernel_rem_pio2+0x24c>
 80039f0:	9a02      	ldr	r2, [sp, #8]
 80039f2:	2000      	movs	r0, #0
 80039f4:	4959      	ldr	r1, [pc, #356]	@ (8003b5c <__kernel_rem_pio2+0x32c>)
 80039f6:	f000 fa6f 	bl	8003ed8 <scalbn>
 80039fa:	0002      	movs	r2, r0
 80039fc:	000b      	movs	r3, r1
 80039fe:	0030      	movs	r0, r6
 8003a00:	0039      	movs	r1, r7
 8003a02:	f7fd fd03 	bl	800140c <__aeabi_dsub>
 8003a06:	0006      	movs	r6, r0
 8003a08:	000f      	movs	r7, r1
 8003a0a:	e037      	b.n	8003a7c <__kernel_rem_pio2+0x24c>
 8003a0c:	2200      	movs	r2, #0
 8003a0e:	4b54      	ldr	r3, [pc, #336]	@ (8003b60 <__kernel_rem_pio2+0x330>)
 8003a10:	0030      	movs	r0, r6
 8003a12:	0039      	movs	r1, r7
 8003a14:	f7fd fa14 	bl	8000e40 <__aeabi_dmul>
 8003a18:	f7fe f902 	bl	8001c20 <__aeabi_d2iz>
 8003a1c:	f7fe f93c 	bl	8001c98 <__aeabi_i2d>
 8003a20:	2200      	movs	r2, #0
 8003a22:	4b50      	ldr	r3, [pc, #320]	@ (8003b64 <__kernel_rem_pio2+0x334>)
 8003a24:	9006      	str	r0, [sp, #24]
 8003a26:	9107      	str	r1, [sp, #28]
 8003a28:	f7fd fa0a 	bl	8000e40 <__aeabi_dmul>
 8003a2c:	0002      	movs	r2, r0
 8003a2e:	000b      	movs	r3, r1
 8003a30:	0030      	movs	r0, r6
 8003a32:	0039      	movs	r1, r7
 8003a34:	f7fd fcea 	bl	800140c <__aeabi_dsub>
 8003a38:	f7fe f8f2 	bl	8001c20 <__aeabi_d2iz>
 8003a3c:	3c01      	subs	r4, #1
 8003a3e:	aa76      	add	r2, sp, #472	@ 0x1d8
 8003a40:	00e3      	lsls	r3, r4, #3
 8003a42:	18d3      	adds	r3, r2, r3
 8003a44:	c501      	stmia	r5!, {r0}
 8003a46:	681a      	ldr	r2, [r3, #0]
 8003a48:	685b      	ldr	r3, [r3, #4]
 8003a4a:	9806      	ldr	r0, [sp, #24]
 8003a4c:	9907      	ldr	r1, [sp, #28]
 8003a4e:	f7fc fd0f 	bl	8000470 <__aeabi_dadd>
 8003a52:	0006      	movs	r6, r0
 8003a54:	000f      	movs	r7, r1
 8003a56:	e763      	b.n	8003920 <__kernel_rem_pio2+0xf0>
 8003a58:	9b02      	ldr	r3, [sp, #8]
 8003a5a:	2b00      	cmp	r3, #0
 8003a5c:	d107      	bne.n	8003a6e <__kernel_rem_pio2+0x23e>
 8003a5e:	9b00      	ldr	r3, [sp, #0]
 8003a60:	aa12      	add	r2, sp, #72	@ 0x48
 8003a62:	3b01      	subs	r3, #1
 8003a64:	009b      	lsls	r3, r3, #2
 8003a66:	589b      	ldr	r3, [r3, r2]
 8003a68:	15db      	asrs	r3, r3, #23
 8003a6a:	9306      	str	r3, [sp, #24]
 8003a6c:	e79a      	b.n	80039a4 <__kernel_rem_pio2+0x174>
 8003a6e:	2200      	movs	r2, #0
 8003a70:	4b3d      	ldr	r3, [pc, #244]	@ (8003b68 <__kernel_rem_pio2+0x338>)
 8003a72:	f7fc fcf3 	bl	800045c <__aeabi_dcmpge>
 8003a76:	2800      	cmp	r0, #0
 8003a78:	d13a      	bne.n	8003af0 <__kernel_rem_pio2+0x2c0>
 8003a7a:	9006      	str	r0, [sp, #24]
 8003a7c:	2200      	movs	r2, #0
 8003a7e:	2300      	movs	r3, #0
 8003a80:	0030      	movs	r0, r6
 8003a82:	0039      	movs	r1, r7
 8003a84:	f7fc fcc6 	bl	8000414 <__aeabi_dcmpeq>
 8003a88:	2800      	cmp	r0, #0
 8003a8a:	d100      	bne.n	8003a8e <__kernel_rem_pio2+0x25e>
 8003a8c:	e0b5      	b.n	8003bfa <__kernel_rem_pio2+0x3ca>
 8003a8e:	2200      	movs	r2, #0
 8003a90:	9b00      	ldr	r3, [sp, #0]
 8003a92:	3b01      	subs	r3, #1
 8003a94:	9908      	ldr	r1, [sp, #32]
 8003a96:	428b      	cmp	r3, r1
 8003a98:	da51      	bge.n	8003b3e <__kernel_rem_pio2+0x30e>
 8003a9a:	2a00      	cmp	r2, #0
 8003a9c:	d100      	bne.n	8003aa0 <__kernel_rem_pio2+0x270>
 8003a9e:	e096      	b.n	8003bce <__kernel_rem_pio2+0x39e>
 8003aa0:	9b00      	ldr	r3, [sp, #0]
 8003aa2:	aa12      	add	r2, sp, #72	@ 0x48
 8003aa4:	3b01      	subs	r3, #1
 8003aa6:	9300      	str	r3, [sp, #0]
 8003aa8:	9b02      	ldr	r3, [sp, #8]
 8003aaa:	3b18      	subs	r3, #24
 8003aac:	9302      	str	r3, [sp, #8]
 8003aae:	9b00      	ldr	r3, [sp, #0]
 8003ab0:	009b      	lsls	r3, r3, #2
 8003ab2:	589b      	ldr	r3, [r3, r2]
 8003ab4:	2b00      	cmp	r3, #0
 8003ab6:	d0f3      	beq.n	8003aa0 <__kernel_rem_pio2+0x270>
 8003ab8:	2000      	movs	r0, #0
 8003aba:	9a02      	ldr	r2, [sp, #8]
 8003abc:	4927      	ldr	r1, [pc, #156]	@ (8003b5c <__kernel_rem_pio2+0x32c>)
 8003abe:	f000 fa0b 	bl	8003ed8 <scalbn>
 8003ac2:	0004      	movs	r4, r0
 8003ac4:	000d      	movs	r5, r1
 8003ac6:	9e00      	ldr	r6, [sp, #0]
 8003ac8:	2e00      	cmp	r6, #0
 8003aca:	db00      	blt.n	8003ace <__kernel_rem_pio2+0x29e>
 8003acc:	e0d2      	b.n	8003c74 <__kernel_rem_pio2+0x444>
 8003ace:	4b27      	ldr	r3, [pc, #156]	@ (8003b6c <__kernel_rem_pio2+0x33c>)
 8003ad0:	9c00      	ldr	r4, [sp, #0]
 8003ad2:	930a      	str	r3, [sp, #40]	@ 0x28
 8003ad4:	2c00      	cmp	r4, #0
 8003ad6:	da00      	bge.n	8003ada <__kernel_rem_pio2+0x2aa>
 8003ad8:	e103      	b.n	8003ce2 <__kernel_rem_pio2+0x4b2>
 8003ada:	00e3      	lsls	r3, r4, #3
 8003adc:	aa76      	add	r2, sp, #472	@ 0x1d8
 8003ade:	189f      	adds	r7, r3, r2
 8003ae0:	2300      	movs	r3, #0
 8003ae2:	2200      	movs	r2, #0
 8003ae4:	9202      	str	r2, [sp, #8]
 8003ae6:	9303      	str	r3, [sp, #12]
 8003ae8:	9b00      	ldr	r3, [sp, #0]
 8003aea:	2500      	movs	r5, #0
 8003aec:	1b1e      	subs	r6, r3, r4
 8003aee:	e0ea      	b.n	8003cc6 <__kernel_rem_pio2+0x496>
 8003af0:	2302      	movs	r3, #2
 8003af2:	9306      	str	r3, [sp, #24]
 8003af4:	e759      	b.n	80039aa <__kernel_rem_pio2+0x17a>
 8003af6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003af8:	681b      	ldr	r3, [r3, #0]
 8003afa:	2c00      	cmp	r4, #0
 8003afc:	d10b      	bne.n	8003b16 <__kernel_rem_pio2+0x2e6>
 8003afe:	2b00      	cmp	r3, #0
 8003b00:	d003      	beq.n	8003b0a <__kernel_rem_pio2+0x2da>
 8003b02:	1aeb      	subs	r3, r5, r3
 8003b04:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8003b06:	6023      	str	r3, [r4, #0]
 8003b08:	000b      	movs	r3, r1
 8003b0a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8003b0c:	3201      	adds	r2, #1
 8003b0e:	3404      	adds	r4, #4
 8003b10:	940a      	str	r4, [sp, #40]	@ 0x28
 8003b12:	001c      	movs	r4, r3
 8003b14:	e752      	b.n	80039bc <__kernel_rem_pio2+0x18c>
 8003b16:	1ac3      	subs	r3, r0, r3
 8003b18:	e7f4      	b.n	8003b04 <__kernel_rem_pio2+0x2d4>
 8003b1a:	9b00      	ldr	r3, [sp, #0]
 8003b1c:	aa12      	add	r2, sp, #72	@ 0x48
 8003b1e:	3b01      	subs	r3, #1
 8003b20:	009b      	lsls	r3, r3, #2
 8003b22:	589a      	ldr	r2, [r3, r2]
 8003b24:	0252      	lsls	r2, r2, #9
 8003b26:	0a52      	lsrs	r2, r2, #9
 8003b28:	a912      	add	r1, sp, #72	@ 0x48
 8003b2a:	505a      	str	r2, [r3, r1]
 8003b2c:	e753      	b.n	80039d6 <__kernel_rem_pio2+0x1a6>
 8003b2e:	9b00      	ldr	r3, [sp, #0]
 8003b30:	aa12      	add	r2, sp, #72	@ 0x48
 8003b32:	3b01      	subs	r3, #1
 8003b34:	009b      	lsls	r3, r3, #2
 8003b36:	589a      	ldr	r2, [r3, r2]
 8003b38:	0292      	lsls	r2, r2, #10
 8003b3a:	0a92      	lsrs	r2, r2, #10
 8003b3c:	e7f4      	b.n	8003b28 <__kernel_rem_pio2+0x2f8>
 8003b3e:	0099      	lsls	r1, r3, #2
 8003b40:	a812      	add	r0, sp, #72	@ 0x48
 8003b42:	5809      	ldr	r1, [r1, r0]
 8003b44:	3b01      	subs	r3, #1
 8003b46:	430a      	orrs	r2, r1
 8003b48:	e7a4      	b.n	8003a94 <__kernel_rem_pio2+0x264>
 8003b4a:	46c0      	nop			@ (mov r8, r8)
 8003b4c:	fffffd84 	.word	0xfffffd84
 8003b50:	080042e0 	.word	0x080042e0
 8003b54:	40200000 	.word	0x40200000
 8003b58:	00ffffff 	.word	0x00ffffff
 8003b5c:	3ff00000 	.word	0x3ff00000
 8003b60:	3e700000 	.word	0x3e700000
 8003b64:	41700000 	.word	0x41700000
 8003b68:	3fe00000 	.word	0x3fe00000
 8003b6c:	080042a0 	.word	0x080042a0
 8003b70:	3301      	adds	r3, #1
 8003b72:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8003b74:	009a      	lsls	r2, r3, #2
 8003b76:	4252      	negs	r2, r2
 8003b78:	588a      	ldr	r2, [r1, r2]
 8003b7a:	2a00      	cmp	r2, #0
 8003b7c:	d0f8      	beq.n	8003b70 <__kernel_rem_pio2+0x340>
 8003b7e:	9a00      	ldr	r2, [sp, #0]
 8003b80:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8003b82:	1c55      	adds	r5, r2, #1
 8003b84:	1852      	adds	r2, r2, r1
 8003b86:	00d2      	lsls	r2, r2, #3
 8003b88:	a926      	add	r1, sp, #152	@ 0x98
 8003b8a:	188c      	adds	r4, r1, r2
 8003b8c:	9a00      	ldr	r2, [sp, #0]
 8003b8e:	18d3      	adds	r3, r2, r3
 8003b90:	9306      	str	r3, [sp, #24]
 8003b92:	9b06      	ldr	r3, [sp, #24]
 8003b94:	42ab      	cmp	r3, r5
 8003b96:	da00      	bge.n	8003b9a <__kernel_rem_pio2+0x36a>
 8003b98:	e6b7      	b.n	800390a <__kernel_rem_pio2+0xda>
 8003b9a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8003b9c:	00ab      	lsls	r3, r5, #2
 8003b9e:	58d0      	ldr	r0, [r2, r3]
 8003ba0:	f7fe f87a 	bl	8001c98 <__aeabi_i2d>
 8003ba4:	2200      	movs	r2, #0
 8003ba6:	2300      	movs	r3, #0
 8003ba8:	0027      	movs	r7, r4
 8003baa:	2600      	movs	r6, #0
 8003bac:	6020      	str	r0, [r4, #0]
 8003bae:	6061      	str	r1, [r4, #4]
 8003bb0:	9200      	str	r2, [sp, #0]
 8003bb2:	9301      	str	r3, [sp, #4]
 8003bb4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8003bb6:	429e      	cmp	r6, r3
 8003bb8:	dd0b      	ble.n	8003bd2 <__kernel_rem_pio2+0x3a2>
 8003bba:	00eb      	lsls	r3, r5, #3
 8003bbc:	aa76      	add	r2, sp, #472	@ 0x1d8
 8003bbe:	18d3      	adds	r3, r2, r3
 8003bc0:	3501      	adds	r5, #1
 8003bc2:	9900      	ldr	r1, [sp, #0]
 8003bc4:	9a01      	ldr	r2, [sp, #4]
 8003bc6:	3408      	adds	r4, #8
 8003bc8:	6019      	str	r1, [r3, #0]
 8003bca:	605a      	str	r2, [r3, #4]
 8003bcc:	e7e1      	b.n	8003b92 <__kernel_rem_pio2+0x362>
 8003bce:	2301      	movs	r3, #1
 8003bd0:	e7cf      	b.n	8003b72 <__kernel_rem_pio2+0x342>
 8003bd2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8003bd4:	00f1      	lsls	r1, r6, #3
 8003bd6:	1859      	adds	r1, r3, r1
 8003bd8:	6808      	ldr	r0, [r1, #0]
 8003bda:	6849      	ldr	r1, [r1, #4]
 8003bdc:	683a      	ldr	r2, [r7, #0]
 8003bde:	687b      	ldr	r3, [r7, #4]
 8003be0:	f7fd f92e 	bl	8000e40 <__aeabi_dmul>
 8003be4:	0002      	movs	r2, r0
 8003be6:	000b      	movs	r3, r1
 8003be8:	9800      	ldr	r0, [sp, #0]
 8003bea:	9901      	ldr	r1, [sp, #4]
 8003bec:	f7fc fc40 	bl	8000470 <__aeabi_dadd>
 8003bf0:	3601      	adds	r6, #1
 8003bf2:	9000      	str	r0, [sp, #0]
 8003bf4:	9101      	str	r1, [sp, #4]
 8003bf6:	3f08      	subs	r7, #8
 8003bf8:	e7dc      	b.n	8003bb4 <__kernel_rem_pio2+0x384>
 8003bfa:	9b02      	ldr	r3, [sp, #8]
 8003bfc:	0030      	movs	r0, r6
 8003bfe:	425a      	negs	r2, r3
 8003c00:	0039      	movs	r1, r7
 8003c02:	f000 f969 	bl	8003ed8 <scalbn>
 8003c06:	2200      	movs	r2, #0
 8003c08:	4bb1      	ldr	r3, [pc, #708]	@ (8003ed0 <__kernel_rem_pio2+0x6a0>)
 8003c0a:	0006      	movs	r6, r0
 8003c0c:	000f      	movs	r7, r1
 8003c0e:	f7fc fc25 	bl	800045c <__aeabi_dcmpge>
 8003c12:	2800      	cmp	r0, #0
 8003c14:	d025      	beq.n	8003c62 <__kernel_rem_pio2+0x432>
 8003c16:	2200      	movs	r2, #0
 8003c18:	4bae      	ldr	r3, [pc, #696]	@ (8003ed4 <__kernel_rem_pio2+0x6a4>)
 8003c1a:	0030      	movs	r0, r6
 8003c1c:	0039      	movs	r1, r7
 8003c1e:	f7fd f90f 	bl	8000e40 <__aeabi_dmul>
 8003c22:	f7fd fffd 	bl	8001c20 <__aeabi_d2iz>
 8003c26:	9b00      	ldr	r3, [sp, #0]
 8003c28:	0004      	movs	r4, r0
 8003c2a:	009d      	lsls	r5, r3, #2
 8003c2c:	f7fe f834 	bl	8001c98 <__aeabi_i2d>
 8003c30:	2200      	movs	r2, #0
 8003c32:	4ba7      	ldr	r3, [pc, #668]	@ (8003ed0 <__kernel_rem_pio2+0x6a0>)
 8003c34:	f7fd f904 	bl	8000e40 <__aeabi_dmul>
 8003c38:	0002      	movs	r2, r0
 8003c3a:	000b      	movs	r3, r1
 8003c3c:	0030      	movs	r0, r6
 8003c3e:	0039      	movs	r1, r7
 8003c40:	f7fd fbe4 	bl	800140c <__aeabi_dsub>
 8003c44:	f7fd ffec 	bl	8001c20 <__aeabi_d2iz>
 8003c48:	ab12      	add	r3, sp, #72	@ 0x48
 8003c4a:	5158      	str	r0, [r3, r5]
 8003c4c:	9b00      	ldr	r3, [sp, #0]
 8003c4e:	aa12      	add	r2, sp, #72	@ 0x48
 8003c50:	3301      	adds	r3, #1
 8003c52:	9300      	str	r3, [sp, #0]
 8003c54:	9b02      	ldr	r3, [sp, #8]
 8003c56:	3318      	adds	r3, #24
 8003c58:	9302      	str	r3, [sp, #8]
 8003c5a:	9b00      	ldr	r3, [sp, #0]
 8003c5c:	009b      	lsls	r3, r3, #2
 8003c5e:	509c      	str	r4, [r3, r2]
 8003c60:	e72a      	b.n	8003ab8 <__kernel_rem_pio2+0x288>
 8003c62:	9b00      	ldr	r3, [sp, #0]
 8003c64:	0030      	movs	r0, r6
 8003c66:	0039      	movs	r1, r7
 8003c68:	009c      	lsls	r4, r3, #2
 8003c6a:	f7fd ffd9 	bl	8001c20 <__aeabi_d2iz>
 8003c6e:	ab12      	add	r3, sp, #72	@ 0x48
 8003c70:	5118      	str	r0, [r3, r4]
 8003c72:	e721      	b.n	8003ab8 <__kernel_rem_pio2+0x288>
 8003c74:	00f3      	lsls	r3, r6, #3
 8003c76:	aa76      	add	r2, sp, #472	@ 0x1d8
 8003c78:	18d7      	adds	r7, r2, r3
 8003c7a:	00b3      	lsls	r3, r6, #2
 8003c7c:	aa12      	add	r2, sp, #72	@ 0x48
 8003c7e:	5898      	ldr	r0, [r3, r2]
 8003c80:	f7fe f80a 	bl	8001c98 <__aeabi_i2d>
 8003c84:	0022      	movs	r2, r4
 8003c86:	002b      	movs	r3, r5
 8003c88:	f7fd f8da 	bl	8000e40 <__aeabi_dmul>
 8003c8c:	2200      	movs	r2, #0
 8003c8e:	6038      	str	r0, [r7, #0]
 8003c90:	6079      	str	r1, [r7, #4]
 8003c92:	4b90      	ldr	r3, [pc, #576]	@ (8003ed4 <__kernel_rem_pio2+0x6a4>)
 8003c94:	0020      	movs	r0, r4
 8003c96:	0029      	movs	r1, r5
 8003c98:	f7fd f8d2 	bl	8000e40 <__aeabi_dmul>
 8003c9c:	3e01      	subs	r6, #1
 8003c9e:	0004      	movs	r4, r0
 8003ca0:	000d      	movs	r5, r1
 8003ca2:	e711      	b.n	8003ac8 <__kernel_rem_pio2+0x298>
 8003ca4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003ca6:	00e9      	lsls	r1, r5, #3
 8003ca8:	18c9      	adds	r1, r1, r3
 8003caa:	6808      	ldr	r0, [r1, #0]
 8003cac:	6849      	ldr	r1, [r1, #4]
 8003cae:	cf0c      	ldmia	r7!, {r2, r3}
 8003cb0:	f7fd f8c6 	bl	8000e40 <__aeabi_dmul>
 8003cb4:	0002      	movs	r2, r0
 8003cb6:	000b      	movs	r3, r1
 8003cb8:	9802      	ldr	r0, [sp, #8]
 8003cba:	9903      	ldr	r1, [sp, #12]
 8003cbc:	f7fc fbd8 	bl	8000470 <__aeabi_dadd>
 8003cc0:	9002      	str	r0, [sp, #8]
 8003cc2:	9103      	str	r1, [sp, #12]
 8003cc4:	3501      	adds	r5, #1
 8003cc6:	9b08      	ldr	r3, [sp, #32]
 8003cc8:	429d      	cmp	r5, r3
 8003cca:	dc01      	bgt.n	8003cd0 <__kernel_rem_pio2+0x4a0>
 8003ccc:	42b5      	cmp	r5, r6
 8003cce:	dde9      	ble.n	8003ca4 <__kernel_rem_pio2+0x474>
 8003cd0:	00f6      	lsls	r6, r6, #3
 8003cd2:	ab4e      	add	r3, sp, #312	@ 0x138
 8003cd4:	199b      	adds	r3, r3, r6
 8003cd6:	9902      	ldr	r1, [sp, #8]
 8003cd8:	9a03      	ldr	r2, [sp, #12]
 8003cda:	3c01      	subs	r4, #1
 8003cdc:	6019      	str	r1, [r3, #0]
 8003cde:	605a      	str	r2, [r3, #4]
 8003ce0:	e6f8      	b.n	8003ad4 <__kernel_rem_pio2+0x2a4>
 8003ce2:	9ba4      	ldr	r3, [sp, #656]	@ 0x290
 8003ce4:	2b02      	cmp	r3, #2
 8003ce6:	dc0b      	bgt.n	8003d00 <__kernel_rem_pio2+0x4d0>
 8003ce8:	2b00      	cmp	r3, #0
 8003cea:	dd00      	ble.n	8003cee <__kernel_rem_pio2+0x4be>
 8003cec:	e084      	b.n	8003df8 <__kernel_rem_pio2+0x5c8>
 8003cee:	d052      	beq.n	8003d96 <__kernel_rem_pio2+0x566>
 8003cf0:	2007      	movs	r0, #7
 8003cf2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8003cf4:	4003      	ands	r3, r0
 8003cf6:	0018      	movs	r0, r3
 8003cf8:	239f      	movs	r3, #159	@ 0x9f
 8003cfa:	009b      	lsls	r3, r3, #2
 8003cfc:	449d      	add	sp, r3
 8003cfe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003d00:	9ba4      	ldr	r3, [sp, #656]	@ 0x290
 8003d02:	2b03      	cmp	r3, #3
 8003d04:	d1f4      	bne.n	8003cf0 <__kernel_rem_pio2+0x4c0>
 8003d06:	9b00      	ldr	r3, [sp, #0]
 8003d08:	aa4e      	add	r2, sp, #312	@ 0x138
 8003d0a:	00db      	lsls	r3, r3, #3
 8003d0c:	18d4      	adds	r4, r2, r3
 8003d0e:	0025      	movs	r5, r4
 8003d10:	9b00      	ldr	r3, [sp, #0]
 8003d12:	9302      	str	r3, [sp, #8]
 8003d14:	9b02      	ldr	r3, [sp, #8]
 8003d16:	3d08      	subs	r5, #8
 8003d18:	2b00      	cmp	r3, #0
 8003d1a:	dd00      	ble.n	8003d1e <__kernel_rem_pio2+0x4ee>
 8003d1c:	e07a      	b.n	8003e14 <__kernel_rem_pio2+0x5e4>
 8003d1e:	9d00      	ldr	r5, [sp, #0]
 8003d20:	3c08      	subs	r4, #8
 8003d22:	2d01      	cmp	r5, #1
 8003d24:	dd00      	ble.n	8003d28 <__kernel_rem_pio2+0x4f8>
 8003d26:	e095      	b.n	8003e54 <__kernel_rem_pio2+0x624>
 8003d28:	2000      	movs	r0, #0
 8003d2a:	2100      	movs	r1, #0
 8003d2c:	9b00      	ldr	r3, [sp, #0]
 8003d2e:	2b01      	cmp	r3, #1
 8003d30:	dd00      	ble.n	8003d34 <__kernel_rem_pio2+0x504>
 8003d32:	e0ad      	b.n	8003e90 <__kernel_rem_pio2+0x660>
 8003d34:	9b50      	ldr	r3, [sp, #320]	@ 0x140
 8003d36:	9c51      	ldr	r4, [sp, #324]	@ 0x144
 8003d38:	9d4e      	ldr	r5, [sp, #312]	@ 0x138
 8003d3a:	9e4f      	ldr	r6, [sp, #316]	@ 0x13c
 8003d3c:	9300      	str	r3, [sp, #0]
 8003d3e:	9401      	str	r4, [sp, #4]
 8003d40:	9b06      	ldr	r3, [sp, #24]
 8003d42:	2b00      	cmp	r3, #0
 8003d44:	d000      	beq.n	8003d48 <__kernel_rem_pio2+0x518>
 8003d46:	e0af      	b.n	8003ea8 <__kernel_rem_pio2+0x678>
 8003d48:	9b05      	ldr	r3, [sp, #20]
 8003d4a:	601d      	str	r5, [r3, #0]
 8003d4c:	605e      	str	r6, [r3, #4]
 8003d4e:	9c00      	ldr	r4, [sp, #0]
 8003d50:	9d01      	ldr	r5, [sp, #4]
 8003d52:	6118      	str	r0, [r3, #16]
 8003d54:	6159      	str	r1, [r3, #20]
 8003d56:	609c      	str	r4, [r3, #8]
 8003d58:	60dd      	str	r5, [r3, #12]
 8003d5a:	e7c9      	b.n	8003cf0 <__kernel_rem_pio2+0x4c0>
 8003d5c:	9b00      	ldr	r3, [sp, #0]
 8003d5e:	aa4e      	add	r2, sp, #312	@ 0x138
 8003d60:	00db      	lsls	r3, r3, #3
 8003d62:	18d3      	adds	r3, r2, r3
 8003d64:	0020      	movs	r0, r4
 8003d66:	681a      	ldr	r2, [r3, #0]
 8003d68:	685b      	ldr	r3, [r3, #4]
 8003d6a:	0029      	movs	r1, r5
 8003d6c:	f7fc fb80 	bl	8000470 <__aeabi_dadd>
 8003d70:	0004      	movs	r4, r0
 8003d72:	000d      	movs	r5, r1
 8003d74:	9b00      	ldr	r3, [sp, #0]
 8003d76:	3b01      	subs	r3, #1
 8003d78:	9300      	str	r3, [sp, #0]
 8003d7a:	9b00      	ldr	r3, [sp, #0]
 8003d7c:	2b00      	cmp	r3, #0
 8003d7e:	daed      	bge.n	8003d5c <__kernel_rem_pio2+0x52c>
 8003d80:	9b06      	ldr	r3, [sp, #24]
 8003d82:	2b00      	cmp	r3, #0
 8003d84:	d003      	beq.n	8003d8e <__kernel_rem_pio2+0x55e>
 8003d86:	2180      	movs	r1, #128	@ 0x80
 8003d88:	0609      	lsls	r1, r1, #24
 8003d8a:	186b      	adds	r3, r5, r1
 8003d8c:	001d      	movs	r5, r3
 8003d8e:	9b05      	ldr	r3, [sp, #20]
 8003d90:	601c      	str	r4, [r3, #0]
 8003d92:	605d      	str	r5, [r3, #4]
 8003d94:	e7ac      	b.n	8003cf0 <__kernel_rem_pio2+0x4c0>
 8003d96:	2400      	movs	r4, #0
 8003d98:	2500      	movs	r5, #0
 8003d9a:	e7ee      	b.n	8003d7a <__kernel_rem_pio2+0x54a>
 8003d9c:	00e3      	lsls	r3, r4, #3
 8003d9e:	aa4e      	add	r2, sp, #312	@ 0x138
 8003da0:	18d3      	adds	r3, r2, r3
 8003da2:	681a      	ldr	r2, [r3, #0]
 8003da4:	685b      	ldr	r3, [r3, #4]
 8003da6:	f7fc fb63 	bl	8000470 <__aeabi_dadd>
 8003daa:	3c01      	subs	r4, #1
 8003dac:	2c00      	cmp	r4, #0
 8003dae:	daf5      	bge.n	8003d9c <__kernel_rem_pio2+0x56c>
 8003db0:	9c06      	ldr	r4, [sp, #24]
 8003db2:	0002      	movs	r2, r0
 8003db4:	000b      	movs	r3, r1
 8003db6:	2c00      	cmp	r4, #0
 8003db8:	d002      	beq.n	8003dc0 <__kernel_rem_pio2+0x590>
 8003dba:	2480      	movs	r4, #128	@ 0x80
 8003dbc:	0624      	lsls	r4, r4, #24
 8003dbe:	190b      	adds	r3, r1, r4
 8003dc0:	9c05      	ldr	r4, [sp, #20]
 8003dc2:	2501      	movs	r5, #1
 8003dc4:	6022      	str	r2, [r4, #0]
 8003dc6:	6063      	str	r3, [r4, #4]
 8003dc8:	0002      	movs	r2, r0
 8003dca:	000b      	movs	r3, r1
 8003dcc:	984e      	ldr	r0, [sp, #312]	@ 0x138
 8003dce:	994f      	ldr	r1, [sp, #316]	@ 0x13c
 8003dd0:	f7fd fb1c 	bl	800140c <__aeabi_dsub>
 8003dd4:	0006      	movs	r6, r0
 8003dd6:	000f      	movs	r7, r1
 8003dd8:	ac4e      	add	r4, sp, #312	@ 0x138
 8003dda:	9b00      	ldr	r3, [sp, #0]
 8003ddc:	3408      	adds	r4, #8
 8003dde:	42ab      	cmp	r3, r5
 8003de0:	da0e      	bge.n	8003e00 <__kernel_rem_pio2+0x5d0>
 8003de2:	9b06      	ldr	r3, [sp, #24]
 8003de4:	2b00      	cmp	r3, #0
 8003de6:	d003      	beq.n	8003df0 <__kernel_rem_pio2+0x5c0>
 8003de8:	2180      	movs	r1, #128	@ 0x80
 8003dea:	0609      	lsls	r1, r1, #24
 8003dec:	187b      	adds	r3, r7, r1
 8003dee:	001f      	movs	r7, r3
 8003df0:	9b05      	ldr	r3, [sp, #20]
 8003df2:	609e      	str	r6, [r3, #8]
 8003df4:	60df      	str	r7, [r3, #12]
 8003df6:	e77b      	b.n	8003cf0 <__kernel_rem_pio2+0x4c0>
 8003df8:	2000      	movs	r0, #0
 8003dfa:	2100      	movs	r1, #0
 8003dfc:	9c00      	ldr	r4, [sp, #0]
 8003dfe:	e7d5      	b.n	8003dac <__kernel_rem_pio2+0x57c>
 8003e00:	0030      	movs	r0, r6
 8003e02:	6822      	ldr	r2, [r4, #0]
 8003e04:	6863      	ldr	r3, [r4, #4]
 8003e06:	0039      	movs	r1, r7
 8003e08:	f7fc fb32 	bl	8000470 <__aeabi_dadd>
 8003e0c:	3501      	adds	r5, #1
 8003e0e:	0006      	movs	r6, r0
 8003e10:	000f      	movs	r7, r1
 8003e12:	e7e2      	b.n	8003dda <__kernel_rem_pio2+0x5aa>
 8003e14:	9b02      	ldr	r3, [sp, #8]
 8003e16:	3b01      	subs	r3, #1
 8003e18:	9302      	str	r3, [sp, #8]
 8003e1a:	682a      	ldr	r2, [r5, #0]
 8003e1c:	686b      	ldr	r3, [r5, #4]
 8003e1e:	9208      	str	r2, [sp, #32]
 8003e20:	9309      	str	r3, [sp, #36]	@ 0x24
 8003e22:	9808      	ldr	r0, [sp, #32]
 8003e24:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8003e26:	68aa      	ldr	r2, [r5, #8]
 8003e28:	68eb      	ldr	r3, [r5, #12]
 8003e2a:	920a      	str	r2, [sp, #40]	@ 0x28
 8003e2c:	930b      	str	r3, [sp, #44]	@ 0x2c
 8003e2e:	f7fc fb1f 	bl	8000470 <__aeabi_dadd>
 8003e32:	0002      	movs	r2, r0
 8003e34:	000b      	movs	r3, r1
 8003e36:	0006      	movs	r6, r0
 8003e38:	000f      	movs	r7, r1
 8003e3a:	9808      	ldr	r0, [sp, #32]
 8003e3c:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8003e3e:	f7fd fae5 	bl	800140c <__aeabi_dsub>
 8003e42:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8003e44:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003e46:	f7fc fb13 	bl	8000470 <__aeabi_dadd>
 8003e4a:	602e      	str	r6, [r5, #0]
 8003e4c:	606f      	str	r7, [r5, #4]
 8003e4e:	60a8      	str	r0, [r5, #8]
 8003e50:	60e9      	str	r1, [r5, #12]
 8003e52:	e75f      	b.n	8003d14 <__kernel_rem_pio2+0x4e4>
 8003e54:	6822      	ldr	r2, [r4, #0]
 8003e56:	6863      	ldr	r3, [r4, #4]
 8003e58:	9202      	str	r2, [sp, #8]
 8003e5a:	9303      	str	r3, [sp, #12]
 8003e5c:	9802      	ldr	r0, [sp, #8]
 8003e5e:	9903      	ldr	r1, [sp, #12]
 8003e60:	68a2      	ldr	r2, [r4, #8]
 8003e62:	68e3      	ldr	r3, [r4, #12]
 8003e64:	9208      	str	r2, [sp, #32]
 8003e66:	9309      	str	r3, [sp, #36]	@ 0x24
 8003e68:	f7fc fb02 	bl	8000470 <__aeabi_dadd>
 8003e6c:	0002      	movs	r2, r0
 8003e6e:	000b      	movs	r3, r1
 8003e70:	0006      	movs	r6, r0
 8003e72:	000f      	movs	r7, r1
 8003e74:	9802      	ldr	r0, [sp, #8]
 8003e76:	9903      	ldr	r1, [sp, #12]
 8003e78:	f7fd fac8 	bl	800140c <__aeabi_dsub>
 8003e7c:	9a08      	ldr	r2, [sp, #32]
 8003e7e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003e80:	f7fc faf6 	bl	8000470 <__aeabi_dadd>
 8003e84:	3d01      	subs	r5, #1
 8003e86:	60a0      	str	r0, [r4, #8]
 8003e88:	60e1      	str	r1, [r4, #12]
 8003e8a:	6026      	str	r6, [r4, #0]
 8003e8c:	6067      	str	r7, [r4, #4]
 8003e8e:	e747      	b.n	8003d20 <__kernel_rem_pio2+0x4f0>
 8003e90:	9b00      	ldr	r3, [sp, #0]
 8003e92:	aa4e      	add	r2, sp, #312	@ 0x138
 8003e94:	00db      	lsls	r3, r3, #3
 8003e96:	18d3      	adds	r3, r2, r3
 8003e98:	681a      	ldr	r2, [r3, #0]
 8003e9a:	685b      	ldr	r3, [r3, #4]
 8003e9c:	f7fc fae8 	bl	8000470 <__aeabi_dadd>
 8003ea0:	9b00      	ldr	r3, [sp, #0]
 8003ea2:	3b01      	subs	r3, #1
 8003ea4:	9300      	str	r3, [sp, #0]
 8003ea6:	e741      	b.n	8003d2c <__kernel_rem_pio2+0x4fc>
 8003ea8:	9b05      	ldr	r3, [sp, #20]
 8003eaa:	9a05      	ldr	r2, [sp, #20]
 8003eac:	601d      	str	r5, [r3, #0]
 8003eae:	2380      	movs	r3, #128	@ 0x80
 8003eb0:	061b      	lsls	r3, r3, #24
 8003eb2:	18f4      	adds	r4, r6, r3
 8003eb4:	6054      	str	r4, [r2, #4]
 8003eb6:	9a00      	ldr	r2, [sp, #0]
 8003eb8:	9c05      	ldr	r4, [sp, #20]
 8003eba:	60a2      	str	r2, [r4, #8]
 8003ebc:	001a      	movs	r2, r3
 8003ebe:	9c01      	ldr	r4, [sp, #4]
 8003ec0:	18e3      	adds	r3, r4, r3
 8003ec2:	9c05      	ldr	r4, [sp, #20]
 8003ec4:	60e3      	str	r3, [r4, #12]
 8003ec6:	188b      	adds	r3, r1, r2
 8003ec8:	6120      	str	r0, [r4, #16]
 8003eca:	6163      	str	r3, [r4, #20]
 8003ecc:	e710      	b.n	8003cf0 <__kernel_rem_pio2+0x4c0>
 8003ece:	46c0      	nop			@ (mov r8, r8)
 8003ed0:	41700000 	.word	0x41700000
 8003ed4:	3e700000 	.word	0x3e700000

08003ed8 <scalbn>:
 8003ed8:	004b      	lsls	r3, r1, #1
 8003eda:	b570      	push	{r4, r5, r6, lr}
 8003edc:	0d5b      	lsrs	r3, r3, #21
 8003ede:	0014      	movs	r4, r2
 8003ee0:	000d      	movs	r5, r1
 8003ee2:	2b00      	cmp	r3, #0
 8003ee4:	d10f      	bne.n	8003f06 <scalbn+0x2e>
 8003ee6:	004b      	lsls	r3, r1, #1
 8003ee8:	085b      	lsrs	r3, r3, #1
 8003eea:	4303      	orrs	r3, r0
 8003eec:	d012      	beq.n	8003f14 <scalbn+0x3c>
 8003eee:	4b23      	ldr	r3, [pc, #140]	@ (8003f7c <scalbn+0xa4>)
 8003ef0:	2200      	movs	r2, #0
 8003ef2:	f7fc ffa5 	bl	8000e40 <__aeabi_dmul>
 8003ef6:	4b22      	ldr	r3, [pc, #136]	@ (8003f80 <scalbn+0xa8>)
 8003ef8:	429c      	cmp	r4, r3
 8003efa:	da0c      	bge.n	8003f16 <scalbn+0x3e>
 8003efc:	4a21      	ldr	r2, [pc, #132]	@ (8003f84 <scalbn+0xac>)
 8003efe:	4b22      	ldr	r3, [pc, #136]	@ (8003f88 <scalbn+0xb0>)
 8003f00:	f7fc ff9e 	bl	8000e40 <__aeabi_dmul>
 8003f04:	e006      	b.n	8003f14 <scalbn+0x3c>
 8003f06:	4a21      	ldr	r2, [pc, #132]	@ (8003f8c <scalbn+0xb4>)
 8003f08:	4293      	cmp	r3, r2
 8003f0a:	d108      	bne.n	8003f1e <scalbn+0x46>
 8003f0c:	0002      	movs	r2, r0
 8003f0e:	000b      	movs	r3, r1
 8003f10:	f7fc faae 	bl	8000470 <__aeabi_dadd>
 8003f14:	bd70      	pop	{r4, r5, r6, pc}
 8003f16:	000d      	movs	r5, r1
 8003f18:	004b      	lsls	r3, r1, #1
 8003f1a:	0d5b      	lsrs	r3, r3, #21
 8003f1c:	3b36      	subs	r3, #54	@ 0x36
 8003f1e:	4a1c      	ldr	r2, [pc, #112]	@ (8003f90 <scalbn+0xb8>)
 8003f20:	4294      	cmp	r4, r2
 8003f22:	dd0a      	ble.n	8003f3a <scalbn+0x62>
 8003f24:	4c1b      	ldr	r4, [pc, #108]	@ (8003f94 <scalbn+0xbc>)
 8003f26:	4d1c      	ldr	r5, [pc, #112]	@ (8003f98 <scalbn+0xc0>)
 8003f28:	2900      	cmp	r1, #0
 8003f2a:	da01      	bge.n	8003f30 <scalbn+0x58>
 8003f2c:	4c19      	ldr	r4, [pc, #100]	@ (8003f94 <scalbn+0xbc>)
 8003f2e:	4d1b      	ldr	r5, [pc, #108]	@ (8003f9c <scalbn+0xc4>)
 8003f30:	4a18      	ldr	r2, [pc, #96]	@ (8003f94 <scalbn+0xbc>)
 8003f32:	4b19      	ldr	r3, [pc, #100]	@ (8003f98 <scalbn+0xc0>)
 8003f34:	0020      	movs	r0, r4
 8003f36:	0029      	movs	r1, r5
 8003f38:	e7e2      	b.n	8003f00 <scalbn+0x28>
 8003f3a:	18e2      	adds	r2, r4, r3
 8003f3c:	4b18      	ldr	r3, [pc, #96]	@ (8003fa0 <scalbn+0xc8>)
 8003f3e:	429a      	cmp	r2, r3
 8003f40:	dcf0      	bgt.n	8003f24 <scalbn+0x4c>
 8003f42:	2a00      	cmp	r2, #0
 8003f44:	dd05      	ble.n	8003f52 <scalbn+0x7a>
 8003f46:	4b17      	ldr	r3, [pc, #92]	@ (8003fa4 <scalbn+0xcc>)
 8003f48:	0512      	lsls	r2, r2, #20
 8003f4a:	402b      	ands	r3, r5
 8003f4c:	4313      	orrs	r3, r2
 8003f4e:	0019      	movs	r1, r3
 8003f50:	e7e0      	b.n	8003f14 <scalbn+0x3c>
 8003f52:	0013      	movs	r3, r2
 8003f54:	3335      	adds	r3, #53	@ 0x35
 8003f56:	da08      	bge.n	8003f6a <scalbn+0x92>
 8003f58:	4c0a      	ldr	r4, [pc, #40]	@ (8003f84 <scalbn+0xac>)
 8003f5a:	4d0b      	ldr	r5, [pc, #44]	@ (8003f88 <scalbn+0xb0>)
 8003f5c:	2900      	cmp	r1, #0
 8003f5e:	da01      	bge.n	8003f64 <scalbn+0x8c>
 8003f60:	4c08      	ldr	r4, [pc, #32]	@ (8003f84 <scalbn+0xac>)
 8003f62:	4d11      	ldr	r5, [pc, #68]	@ (8003fa8 <scalbn+0xd0>)
 8003f64:	4a07      	ldr	r2, [pc, #28]	@ (8003f84 <scalbn+0xac>)
 8003f66:	4b08      	ldr	r3, [pc, #32]	@ (8003f88 <scalbn+0xb0>)
 8003f68:	e7e4      	b.n	8003f34 <scalbn+0x5c>
 8003f6a:	4b0e      	ldr	r3, [pc, #56]	@ (8003fa4 <scalbn+0xcc>)
 8003f6c:	3236      	adds	r2, #54	@ 0x36
 8003f6e:	401d      	ands	r5, r3
 8003f70:	0512      	lsls	r2, r2, #20
 8003f72:	432a      	orrs	r2, r5
 8003f74:	0011      	movs	r1, r2
 8003f76:	4b0d      	ldr	r3, [pc, #52]	@ (8003fac <scalbn+0xd4>)
 8003f78:	2200      	movs	r2, #0
 8003f7a:	e7c1      	b.n	8003f00 <scalbn+0x28>
 8003f7c:	43500000 	.word	0x43500000
 8003f80:	ffff3cb0 	.word	0xffff3cb0
 8003f84:	c2f8f359 	.word	0xc2f8f359
 8003f88:	01a56e1f 	.word	0x01a56e1f
 8003f8c:	000007ff 	.word	0x000007ff
 8003f90:	0000c350 	.word	0x0000c350
 8003f94:	8800759c 	.word	0x8800759c
 8003f98:	7e37e43c 	.word	0x7e37e43c
 8003f9c:	fe37e43c 	.word	0xfe37e43c
 8003fa0:	000007fe 	.word	0x000007fe
 8003fa4:	800fffff 	.word	0x800fffff
 8003fa8:	81a56e1f 	.word	0x81a56e1f
 8003fac:	3c900000 	.word	0x3c900000

08003fb0 <floor>:
 8003fb0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003fb2:	004b      	lsls	r3, r1, #1
 8003fb4:	4a36      	ldr	r2, [pc, #216]	@ (8004090 <floor+0xe0>)
 8003fb6:	0d5b      	lsrs	r3, r3, #21
 8003fb8:	189e      	adds	r6, r3, r2
 8003fba:	000c      	movs	r4, r1
 8003fbc:	0005      	movs	r5, r0
 8003fbe:	9001      	str	r0, [sp, #4]
 8003fc0:	2e13      	cmp	r6, #19
 8003fc2:	dc2f      	bgt.n	8004024 <floor+0x74>
 8003fc4:	2e00      	cmp	r6, #0
 8003fc6:	da14      	bge.n	8003ff2 <floor+0x42>
 8003fc8:	4a32      	ldr	r2, [pc, #200]	@ (8004094 <floor+0xe4>)
 8003fca:	4b33      	ldr	r3, [pc, #204]	@ (8004098 <floor+0xe8>)
 8003fcc:	f7fc fa50 	bl	8000470 <__aeabi_dadd>
 8003fd0:	2200      	movs	r2, #0
 8003fd2:	2300      	movs	r3, #0
 8003fd4:	f7fc fa38 	bl	8000448 <__aeabi_dcmpgt>
 8003fd8:	2800      	cmp	r0, #0
 8003fda:	d007      	beq.n	8003fec <floor+0x3c>
 8003fdc:	2c00      	cmp	r4, #0
 8003fde:	da50      	bge.n	8004082 <floor+0xd2>
 8003fe0:	0064      	lsls	r4, r4, #1
 8003fe2:	0864      	lsrs	r4, r4, #1
 8003fe4:	4325      	orrs	r5, r4
 8003fe6:	d14f      	bne.n	8004088 <floor+0xd8>
 8003fe8:	2480      	movs	r4, #128	@ 0x80
 8003fea:	0624      	lsls	r4, r4, #24
 8003fec:	0021      	movs	r1, r4
 8003fee:	0028      	movs	r0, r5
 8003ff0:	e022      	b.n	8004038 <floor+0x88>
 8003ff2:	4f2a      	ldr	r7, [pc, #168]	@ (800409c <floor+0xec>)
 8003ff4:	4137      	asrs	r7, r6
 8003ff6:	003b      	movs	r3, r7
 8003ff8:	400b      	ands	r3, r1
 8003ffa:	4303      	orrs	r3, r0
 8003ffc:	d01c      	beq.n	8004038 <floor+0x88>
 8003ffe:	4a25      	ldr	r2, [pc, #148]	@ (8004094 <floor+0xe4>)
 8004000:	4b25      	ldr	r3, [pc, #148]	@ (8004098 <floor+0xe8>)
 8004002:	f7fc fa35 	bl	8000470 <__aeabi_dadd>
 8004006:	2200      	movs	r2, #0
 8004008:	2300      	movs	r3, #0
 800400a:	f7fc fa1d 	bl	8000448 <__aeabi_dcmpgt>
 800400e:	2800      	cmp	r0, #0
 8004010:	d0ec      	beq.n	8003fec <floor+0x3c>
 8004012:	2c00      	cmp	r4, #0
 8004014:	da03      	bge.n	800401e <floor+0x6e>
 8004016:	2380      	movs	r3, #128	@ 0x80
 8004018:	035b      	lsls	r3, r3, #13
 800401a:	4133      	asrs	r3, r6
 800401c:	18e4      	adds	r4, r4, r3
 800401e:	2500      	movs	r5, #0
 8004020:	43bc      	bics	r4, r7
 8004022:	e7e3      	b.n	8003fec <floor+0x3c>
 8004024:	2e33      	cmp	r6, #51	@ 0x33
 8004026:	dd09      	ble.n	800403c <floor+0x8c>
 8004028:	2380      	movs	r3, #128	@ 0x80
 800402a:	00db      	lsls	r3, r3, #3
 800402c:	429e      	cmp	r6, r3
 800402e:	d103      	bne.n	8004038 <floor+0x88>
 8004030:	0002      	movs	r2, r0
 8004032:	000b      	movs	r3, r1
 8004034:	f7fc fa1c 	bl	8000470 <__aeabi_dadd>
 8004038:	b003      	add	sp, #12
 800403a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800403c:	2701      	movs	r7, #1
 800403e:	4a18      	ldr	r2, [pc, #96]	@ (80040a0 <floor+0xf0>)
 8004040:	427f      	negs	r7, r7
 8004042:	189b      	adds	r3, r3, r2
 8004044:	40df      	lsrs	r7, r3
 8004046:	4238      	tst	r0, r7
 8004048:	d0f6      	beq.n	8004038 <floor+0x88>
 800404a:	4a12      	ldr	r2, [pc, #72]	@ (8004094 <floor+0xe4>)
 800404c:	4b12      	ldr	r3, [pc, #72]	@ (8004098 <floor+0xe8>)
 800404e:	f7fc fa0f 	bl	8000470 <__aeabi_dadd>
 8004052:	2200      	movs	r2, #0
 8004054:	2300      	movs	r3, #0
 8004056:	f7fc f9f7 	bl	8000448 <__aeabi_dcmpgt>
 800405a:	2800      	cmp	r0, #0
 800405c:	d0c6      	beq.n	8003fec <floor+0x3c>
 800405e:	2c00      	cmp	r4, #0
 8004060:	da02      	bge.n	8004068 <floor+0xb8>
 8004062:	2e14      	cmp	r6, #20
 8004064:	d102      	bne.n	800406c <floor+0xbc>
 8004066:	3401      	adds	r4, #1
 8004068:	43bd      	bics	r5, r7
 800406a:	e7bf      	b.n	8003fec <floor+0x3c>
 800406c:	2234      	movs	r2, #52	@ 0x34
 800406e:	2301      	movs	r3, #1
 8004070:	1b92      	subs	r2, r2, r6
 8004072:	4093      	lsls	r3, r2
 8004074:	18ed      	adds	r5, r5, r3
 8004076:	9b01      	ldr	r3, [sp, #4]
 8004078:	429d      	cmp	r5, r3
 800407a:	419b      	sbcs	r3, r3
 800407c:	425b      	negs	r3, r3
 800407e:	18e4      	adds	r4, r4, r3
 8004080:	e7f2      	b.n	8004068 <floor+0xb8>
 8004082:	2500      	movs	r5, #0
 8004084:	002c      	movs	r4, r5
 8004086:	e7b1      	b.n	8003fec <floor+0x3c>
 8004088:	2500      	movs	r5, #0
 800408a:	4c06      	ldr	r4, [pc, #24]	@ (80040a4 <floor+0xf4>)
 800408c:	e7ae      	b.n	8003fec <floor+0x3c>
 800408e:	46c0      	nop			@ (mov r8, r8)
 8004090:	fffffc01 	.word	0xfffffc01
 8004094:	8800759c 	.word	0x8800759c
 8004098:	7e37e43c 	.word	0x7e37e43c
 800409c:	000fffff 	.word	0x000fffff
 80040a0:	fffffbed 	.word	0xfffffbed
 80040a4:	bff00000 	.word	0xbff00000

080040a8 <_init>:
 80040a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80040aa:	46c0      	nop			@ (mov r8, r8)
 80040ac:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80040ae:	bc08      	pop	{r3}
 80040b0:	469e      	mov	lr, r3
 80040b2:	4770      	bx	lr

080040b4 <_fini>:
 80040b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80040b6:	46c0      	nop			@ (mov r8, r8)
 80040b8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80040ba:	bc08      	pop	{r3}
 80040bc:	469e      	mov	lr, r3
 80040be:	4770      	bx	lr
