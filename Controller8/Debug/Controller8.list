
Controller8.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000488c  080000c0  080000c0  000010c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000002b0  08004950  08004950  00005950  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004c00  08004c00  00006004  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08004c00  08004c00  00006004  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08004c00  08004c00  00006004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004c00  08004c00  00005c00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08004c04  08004c04  00005c04  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000004  20000000  08004c08  00006000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000304  20000008  08004c0c  00006008  2**3
                  ALLOC
 10 ._user_heap_stack 00000604  2000030c  08004c0c  0000630c  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00006004  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000249b  00000000  00000000  0000602c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000d0f  00000000  00000000  000084c7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000270  00000000  00000000  000091d8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000001d1  00000000  00000000  00009448  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00018bb2  00000000  00000000  00009619  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000407c  00000000  00000000  000221cb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008f6fa  00000000  00000000  00026247  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000b5941  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b38  00000000  00000000  000b5984  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000067  00000000  00000000  000b64bc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	@ (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	@ (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	@ (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000008 	.word	0x20000008
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08004934 	.word	0x08004934

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	@ (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	@ (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	@ (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			@ (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	2000000c 	.word	0x2000000c
 8000104:	08004934 	.word	0x08004934

08000108 <strcmp>:
 8000108:	7802      	ldrb	r2, [r0, #0]
 800010a:	780b      	ldrb	r3, [r1, #0]
 800010c:	2a00      	cmp	r2, #0
 800010e:	d003      	beq.n	8000118 <strcmp+0x10>
 8000110:	3001      	adds	r0, #1
 8000112:	3101      	adds	r1, #1
 8000114:	429a      	cmp	r2, r3
 8000116:	d0f7      	beq.n	8000108 <strcmp>
 8000118:	1ad0      	subs	r0, r2, r3
 800011a:	4770      	bx	lr

0800011c <__udivsi3>:
 800011c:	2200      	movs	r2, #0
 800011e:	0843      	lsrs	r3, r0, #1
 8000120:	428b      	cmp	r3, r1
 8000122:	d374      	bcc.n	800020e <__udivsi3+0xf2>
 8000124:	0903      	lsrs	r3, r0, #4
 8000126:	428b      	cmp	r3, r1
 8000128:	d35f      	bcc.n	80001ea <__udivsi3+0xce>
 800012a:	0a03      	lsrs	r3, r0, #8
 800012c:	428b      	cmp	r3, r1
 800012e:	d344      	bcc.n	80001ba <__udivsi3+0x9e>
 8000130:	0b03      	lsrs	r3, r0, #12
 8000132:	428b      	cmp	r3, r1
 8000134:	d328      	bcc.n	8000188 <__udivsi3+0x6c>
 8000136:	0c03      	lsrs	r3, r0, #16
 8000138:	428b      	cmp	r3, r1
 800013a:	d30d      	bcc.n	8000158 <__udivsi3+0x3c>
 800013c:	22ff      	movs	r2, #255	@ 0xff
 800013e:	0209      	lsls	r1, r1, #8
 8000140:	ba12      	rev	r2, r2
 8000142:	0c03      	lsrs	r3, r0, #16
 8000144:	428b      	cmp	r3, r1
 8000146:	d302      	bcc.n	800014e <__udivsi3+0x32>
 8000148:	1212      	asrs	r2, r2, #8
 800014a:	0209      	lsls	r1, r1, #8
 800014c:	d065      	beq.n	800021a <__udivsi3+0xfe>
 800014e:	0b03      	lsrs	r3, r0, #12
 8000150:	428b      	cmp	r3, r1
 8000152:	d319      	bcc.n	8000188 <__udivsi3+0x6c>
 8000154:	e000      	b.n	8000158 <__udivsi3+0x3c>
 8000156:	0a09      	lsrs	r1, r1, #8
 8000158:	0bc3      	lsrs	r3, r0, #15
 800015a:	428b      	cmp	r3, r1
 800015c:	d301      	bcc.n	8000162 <__udivsi3+0x46>
 800015e:	03cb      	lsls	r3, r1, #15
 8000160:	1ac0      	subs	r0, r0, r3
 8000162:	4152      	adcs	r2, r2
 8000164:	0b83      	lsrs	r3, r0, #14
 8000166:	428b      	cmp	r3, r1
 8000168:	d301      	bcc.n	800016e <__udivsi3+0x52>
 800016a:	038b      	lsls	r3, r1, #14
 800016c:	1ac0      	subs	r0, r0, r3
 800016e:	4152      	adcs	r2, r2
 8000170:	0b43      	lsrs	r3, r0, #13
 8000172:	428b      	cmp	r3, r1
 8000174:	d301      	bcc.n	800017a <__udivsi3+0x5e>
 8000176:	034b      	lsls	r3, r1, #13
 8000178:	1ac0      	subs	r0, r0, r3
 800017a:	4152      	adcs	r2, r2
 800017c:	0b03      	lsrs	r3, r0, #12
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x6a>
 8000182:	030b      	lsls	r3, r1, #12
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0ac3      	lsrs	r3, r0, #11
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x76>
 800018e:	02cb      	lsls	r3, r1, #11
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0a83      	lsrs	r3, r0, #10
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x82>
 800019a:	028b      	lsls	r3, r1, #10
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0a43      	lsrs	r3, r0, #9
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x8e>
 80001a6:	024b      	lsls	r3, r1, #9
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0a03      	lsrs	r3, r0, #8
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x9a>
 80001b2:	020b      	lsls	r3, r1, #8
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	d2cd      	bcs.n	8000156 <__udivsi3+0x3a>
 80001ba:	09c3      	lsrs	r3, r0, #7
 80001bc:	428b      	cmp	r3, r1
 80001be:	d301      	bcc.n	80001c4 <__udivsi3+0xa8>
 80001c0:	01cb      	lsls	r3, r1, #7
 80001c2:	1ac0      	subs	r0, r0, r3
 80001c4:	4152      	adcs	r2, r2
 80001c6:	0983      	lsrs	r3, r0, #6
 80001c8:	428b      	cmp	r3, r1
 80001ca:	d301      	bcc.n	80001d0 <__udivsi3+0xb4>
 80001cc:	018b      	lsls	r3, r1, #6
 80001ce:	1ac0      	subs	r0, r0, r3
 80001d0:	4152      	adcs	r2, r2
 80001d2:	0943      	lsrs	r3, r0, #5
 80001d4:	428b      	cmp	r3, r1
 80001d6:	d301      	bcc.n	80001dc <__udivsi3+0xc0>
 80001d8:	014b      	lsls	r3, r1, #5
 80001da:	1ac0      	subs	r0, r0, r3
 80001dc:	4152      	adcs	r2, r2
 80001de:	0903      	lsrs	r3, r0, #4
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xcc>
 80001e4:	010b      	lsls	r3, r1, #4
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	08c3      	lsrs	r3, r0, #3
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xd8>
 80001f0:	00cb      	lsls	r3, r1, #3
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0883      	lsrs	r3, r0, #2
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xe4>
 80001fc:	008b      	lsls	r3, r1, #2
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0843      	lsrs	r3, r0, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xf0>
 8000208:	004b      	lsls	r3, r1, #1
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	1a41      	subs	r1, r0, r1
 8000210:	d200      	bcs.n	8000214 <__udivsi3+0xf8>
 8000212:	4601      	mov	r1, r0
 8000214:	4152      	adcs	r2, r2
 8000216:	4610      	mov	r0, r2
 8000218:	4770      	bx	lr
 800021a:	e7ff      	b.n	800021c <__udivsi3+0x100>
 800021c:	b501      	push	{r0, lr}
 800021e:	2000      	movs	r0, #0
 8000220:	f000 f8f0 	bl	8000404 <__aeabi_idiv0>
 8000224:	bd02      	pop	{r1, pc}
 8000226:	46c0      	nop			@ (mov r8, r8)

08000228 <__aeabi_uidivmod>:
 8000228:	2900      	cmp	r1, #0
 800022a:	d0f7      	beq.n	800021c <__udivsi3+0x100>
 800022c:	e776      	b.n	800011c <__udivsi3>
 800022e:	4770      	bx	lr

08000230 <__divsi3>:
 8000230:	4603      	mov	r3, r0
 8000232:	430b      	orrs	r3, r1
 8000234:	d47f      	bmi.n	8000336 <__divsi3+0x106>
 8000236:	2200      	movs	r2, #0
 8000238:	0843      	lsrs	r3, r0, #1
 800023a:	428b      	cmp	r3, r1
 800023c:	d374      	bcc.n	8000328 <__divsi3+0xf8>
 800023e:	0903      	lsrs	r3, r0, #4
 8000240:	428b      	cmp	r3, r1
 8000242:	d35f      	bcc.n	8000304 <__divsi3+0xd4>
 8000244:	0a03      	lsrs	r3, r0, #8
 8000246:	428b      	cmp	r3, r1
 8000248:	d344      	bcc.n	80002d4 <__divsi3+0xa4>
 800024a:	0b03      	lsrs	r3, r0, #12
 800024c:	428b      	cmp	r3, r1
 800024e:	d328      	bcc.n	80002a2 <__divsi3+0x72>
 8000250:	0c03      	lsrs	r3, r0, #16
 8000252:	428b      	cmp	r3, r1
 8000254:	d30d      	bcc.n	8000272 <__divsi3+0x42>
 8000256:	22ff      	movs	r2, #255	@ 0xff
 8000258:	0209      	lsls	r1, r1, #8
 800025a:	ba12      	rev	r2, r2
 800025c:	0c03      	lsrs	r3, r0, #16
 800025e:	428b      	cmp	r3, r1
 8000260:	d302      	bcc.n	8000268 <__divsi3+0x38>
 8000262:	1212      	asrs	r2, r2, #8
 8000264:	0209      	lsls	r1, r1, #8
 8000266:	d065      	beq.n	8000334 <__divsi3+0x104>
 8000268:	0b03      	lsrs	r3, r0, #12
 800026a:	428b      	cmp	r3, r1
 800026c:	d319      	bcc.n	80002a2 <__divsi3+0x72>
 800026e:	e000      	b.n	8000272 <__divsi3+0x42>
 8000270:	0a09      	lsrs	r1, r1, #8
 8000272:	0bc3      	lsrs	r3, r0, #15
 8000274:	428b      	cmp	r3, r1
 8000276:	d301      	bcc.n	800027c <__divsi3+0x4c>
 8000278:	03cb      	lsls	r3, r1, #15
 800027a:	1ac0      	subs	r0, r0, r3
 800027c:	4152      	adcs	r2, r2
 800027e:	0b83      	lsrs	r3, r0, #14
 8000280:	428b      	cmp	r3, r1
 8000282:	d301      	bcc.n	8000288 <__divsi3+0x58>
 8000284:	038b      	lsls	r3, r1, #14
 8000286:	1ac0      	subs	r0, r0, r3
 8000288:	4152      	adcs	r2, r2
 800028a:	0b43      	lsrs	r3, r0, #13
 800028c:	428b      	cmp	r3, r1
 800028e:	d301      	bcc.n	8000294 <__divsi3+0x64>
 8000290:	034b      	lsls	r3, r1, #13
 8000292:	1ac0      	subs	r0, r0, r3
 8000294:	4152      	adcs	r2, r2
 8000296:	0b03      	lsrs	r3, r0, #12
 8000298:	428b      	cmp	r3, r1
 800029a:	d301      	bcc.n	80002a0 <__divsi3+0x70>
 800029c:	030b      	lsls	r3, r1, #12
 800029e:	1ac0      	subs	r0, r0, r3
 80002a0:	4152      	adcs	r2, r2
 80002a2:	0ac3      	lsrs	r3, r0, #11
 80002a4:	428b      	cmp	r3, r1
 80002a6:	d301      	bcc.n	80002ac <__divsi3+0x7c>
 80002a8:	02cb      	lsls	r3, r1, #11
 80002aa:	1ac0      	subs	r0, r0, r3
 80002ac:	4152      	adcs	r2, r2
 80002ae:	0a83      	lsrs	r3, r0, #10
 80002b0:	428b      	cmp	r3, r1
 80002b2:	d301      	bcc.n	80002b8 <__divsi3+0x88>
 80002b4:	028b      	lsls	r3, r1, #10
 80002b6:	1ac0      	subs	r0, r0, r3
 80002b8:	4152      	adcs	r2, r2
 80002ba:	0a43      	lsrs	r3, r0, #9
 80002bc:	428b      	cmp	r3, r1
 80002be:	d301      	bcc.n	80002c4 <__divsi3+0x94>
 80002c0:	024b      	lsls	r3, r1, #9
 80002c2:	1ac0      	subs	r0, r0, r3
 80002c4:	4152      	adcs	r2, r2
 80002c6:	0a03      	lsrs	r3, r0, #8
 80002c8:	428b      	cmp	r3, r1
 80002ca:	d301      	bcc.n	80002d0 <__divsi3+0xa0>
 80002cc:	020b      	lsls	r3, r1, #8
 80002ce:	1ac0      	subs	r0, r0, r3
 80002d0:	4152      	adcs	r2, r2
 80002d2:	d2cd      	bcs.n	8000270 <__divsi3+0x40>
 80002d4:	09c3      	lsrs	r3, r0, #7
 80002d6:	428b      	cmp	r3, r1
 80002d8:	d301      	bcc.n	80002de <__divsi3+0xae>
 80002da:	01cb      	lsls	r3, r1, #7
 80002dc:	1ac0      	subs	r0, r0, r3
 80002de:	4152      	adcs	r2, r2
 80002e0:	0983      	lsrs	r3, r0, #6
 80002e2:	428b      	cmp	r3, r1
 80002e4:	d301      	bcc.n	80002ea <__divsi3+0xba>
 80002e6:	018b      	lsls	r3, r1, #6
 80002e8:	1ac0      	subs	r0, r0, r3
 80002ea:	4152      	adcs	r2, r2
 80002ec:	0943      	lsrs	r3, r0, #5
 80002ee:	428b      	cmp	r3, r1
 80002f0:	d301      	bcc.n	80002f6 <__divsi3+0xc6>
 80002f2:	014b      	lsls	r3, r1, #5
 80002f4:	1ac0      	subs	r0, r0, r3
 80002f6:	4152      	adcs	r2, r2
 80002f8:	0903      	lsrs	r3, r0, #4
 80002fa:	428b      	cmp	r3, r1
 80002fc:	d301      	bcc.n	8000302 <__divsi3+0xd2>
 80002fe:	010b      	lsls	r3, r1, #4
 8000300:	1ac0      	subs	r0, r0, r3
 8000302:	4152      	adcs	r2, r2
 8000304:	08c3      	lsrs	r3, r0, #3
 8000306:	428b      	cmp	r3, r1
 8000308:	d301      	bcc.n	800030e <__divsi3+0xde>
 800030a:	00cb      	lsls	r3, r1, #3
 800030c:	1ac0      	subs	r0, r0, r3
 800030e:	4152      	adcs	r2, r2
 8000310:	0883      	lsrs	r3, r0, #2
 8000312:	428b      	cmp	r3, r1
 8000314:	d301      	bcc.n	800031a <__divsi3+0xea>
 8000316:	008b      	lsls	r3, r1, #2
 8000318:	1ac0      	subs	r0, r0, r3
 800031a:	4152      	adcs	r2, r2
 800031c:	0843      	lsrs	r3, r0, #1
 800031e:	428b      	cmp	r3, r1
 8000320:	d301      	bcc.n	8000326 <__divsi3+0xf6>
 8000322:	004b      	lsls	r3, r1, #1
 8000324:	1ac0      	subs	r0, r0, r3
 8000326:	4152      	adcs	r2, r2
 8000328:	1a41      	subs	r1, r0, r1
 800032a:	d200      	bcs.n	800032e <__divsi3+0xfe>
 800032c:	4601      	mov	r1, r0
 800032e:	4152      	adcs	r2, r2
 8000330:	4610      	mov	r0, r2
 8000332:	4770      	bx	lr
 8000334:	e05d      	b.n	80003f2 <__divsi3+0x1c2>
 8000336:	0fca      	lsrs	r2, r1, #31
 8000338:	d000      	beq.n	800033c <__divsi3+0x10c>
 800033a:	4249      	negs	r1, r1
 800033c:	1003      	asrs	r3, r0, #32
 800033e:	d300      	bcc.n	8000342 <__divsi3+0x112>
 8000340:	4240      	negs	r0, r0
 8000342:	4053      	eors	r3, r2
 8000344:	2200      	movs	r2, #0
 8000346:	469c      	mov	ip, r3
 8000348:	0903      	lsrs	r3, r0, #4
 800034a:	428b      	cmp	r3, r1
 800034c:	d32d      	bcc.n	80003aa <__divsi3+0x17a>
 800034e:	0a03      	lsrs	r3, r0, #8
 8000350:	428b      	cmp	r3, r1
 8000352:	d312      	bcc.n	800037a <__divsi3+0x14a>
 8000354:	22fc      	movs	r2, #252	@ 0xfc
 8000356:	0189      	lsls	r1, r1, #6
 8000358:	ba12      	rev	r2, r2
 800035a:	0a03      	lsrs	r3, r0, #8
 800035c:	428b      	cmp	r3, r1
 800035e:	d30c      	bcc.n	800037a <__divsi3+0x14a>
 8000360:	0189      	lsls	r1, r1, #6
 8000362:	1192      	asrs	r2, r2, #6
 8000364:	428b      	cmp	r3, r1
 8000366:	d308      	bcc.n	800037a <__divsi3+0x14a>
 8000368:	0189      	lsls	r1, r1, #6
 800036a:	1192      	asrs	r2, r2, #6
 800036c:	428b      	cmp	r3, r1
 800036e:	d304      	bcc.n	800037a <__divsi3+0x14a>
 8000370:	0189      	lsls	r1, r1, #6
 8000372:	d03a      	beq.n	80003ea <__divsi3+0x1ba>
 8000374:	1192      	asrs	r2, r2, #6
 8000376:	e000      	b.n	800037a <__divsi3+0x14a>
 8000378:	0989      	lsrs	r1, r1, #6
 800037a:	09c3      	lsrs	r3, r0, #7
 800037c:	428b      	cmp	r3, r1
 800037e:	d301      	bcc.n	8000384 <__divsi3+0x154>
 8000380:	01cb      	lsls	r3, r1, #7
 8000382:	1ac0      	subs	r0, r0, r3
 8000384:	4152      	adcs	r2, r2
 8000386:	0983      	lsrs	r3, r0, #6
 8000388:	428b      	cmp	r3, r1
 800038a:	d301      	bcc.n	8000390 <__divsi3+0x160>
 800038c:	018b      	lsls	r3, r1, #6
 800038e:	1ac0      	subs	r0, r0, r3
 8000390:	4152      	adcs	r2, r2
 8000392:	0943      	lsrs	r3, r0, #5
 8000394:	428b      	cmp	r3, r1
 8000396:	d301      	bcc.n	800039c <__divsi3+0x16c>
 8000398:	014b      	lsls	r3, r1, #5
 800039a:	1ac0      	subs	r0, r0, r3
 800039c:	4152      	adcs	r2, r2
 800039e:	0903      	lsrs	r3, r0, #4
 80003a0:	428b      	cmp	r3, r1
 80003a2:	d301      	bcc.n	80003a8 <__divsi3+0x178>
 80003a4:	010b      	lsls	r3, r1, #4
 80003a6:	1ac0      	subs	r0, r0, r3
 80003a8:	4152      	adcs	r2, r2
 80003aa:	08c3      	lsrs	r3, r0, #3
 80003ac:	428b      	cmp	r3, r1
 80003ae:	d301      	bcc.n	80003b4 <__divsi3+0x184>
 80003b0:	00cb      	lsls	r3, r1, #3
 80003b2:	1ac0      	subs	r0, r0, r3
 80003b4:	4152      	adcs	r2, r2
 80003b6:	0883      	lsrs	r3, r0, #2
 80003b8:	428b      	cmp	r3, r1
 80003ba:	d301      	bcc.n	80003c0 <__divsi3+0x190>
 80003bc:	008b      	lsls	r3, r1, #2
 80003be:	1ac0      	subs	r0, r0, r3
 80003c0:	4152      	adcs	r2, r2
 80003c2:	d2d9      	bcs.n	8000378 <__divsi3+0x148>
 80003c4:	0843      	lsrs	r3, r0, #1
 80003c6:	428b      	cmp	r3, r1
 80003c8:	d301      	bcc.n	80003ce <__divsi3+0x19e>
 80003ca:	004b      	lsls	r3, r1, #1
 80003cc:	1ac0      	subs	r0, r0, r3
 80003ce:	4152      	adcs	r2, r2
 80003d0:	1a41      	subs	r1, r0, r1
 80003d2:	d200      	bcs.n	80003d6 <__divsi3+0x1a6>
 80003d4:	4601      	mov	r1, r0
 80003d6:	4663      	mov	r3, ip
 80003d8:	4152      	adcs	r2, r2
 80003da:	105b      	asrs	r3, r3, #1
 80003dc:	4610      	mov	r0, r2
 80003de:	d301      	bcc.n	80003e4 <__divsi3+0x1b4>
 80003e0:	4240      	negs	r0, r0
 80003e2:	2b00      	cmp	r3, #0
 80003e4:	d500      	bpl.n	80003e8 <__divsi3+0x1b8>
 80003e6:	4249      	negs	r1, r1
 80003e8:	4770      	bx	lr
 80003ea:	4663      	mov	r3, ip
 80003ec:	105b      	asrs	r3, r3, #1
 80003ee:	d300      	bcc.n	80003f2 <__divsi3+0x1c2>
 80003f0:	4240      	negs	r0, r0
 80003f2:	b501      	push	{r0, lr}
 80003f4:	2000      	movs	r0, #0
 80003f6:	f000 f805 	bl	8000404 <__aeabi_idiv0>
 80003fa:	bd02      	pop	{r1, pc}

080003fc <__aeabi_idivmod>:
 80003fc:	2900      	cmp	r1, #0
 80003fe:	d0f8      	beq.n	80003f2 <__divsi3+0x1c2>
 8000400:	e716      	b.n	8000230 <__divsi3>
 8000402:	4770      	bx	lr

08000404 <__aeabi_idiv0>:
 8000404:	4770      	bx	lr
 8000406:	46c0      	nop			@ (mov r8, r8)

08000408 <__aeabi_cdrcmple>:
 8000408:	4684      	mov	ip, r0
 800040a:	0010      	movs	r0, r2
 800040c:	4662      	mov	r2, ip
 800040e:	468c      	mov	ip, r1
 8000410:	0019      	movs	r1, r3
 8000412:	4663      	mov	r3, ip
 8000414:	e000      	b.n	8000418 <__aeabi_cdcmpeq>
 8000416:	46c0      	nop			@ (mov r8, r8)

08000418 <__aeabi_cdcmpeq>:
 8000418:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800041a:	f000 ffe3 	bl	80013e4 <__ledf2>
 800041e:	2800      	cmp	r0, #0
 8000420:	d401      	bmi.n	8000426 <__aeabi_cdcmpeq+0xe>
 8000422:	2100      	movs	r1, #0
 8000424:	42c8      	cmn	r0, r1
 8000426:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

08000428 <__aeabi_dcmpeq>:
 8000428:	b510      	push	{r4, lr}
 800042a:	f000 ff27 	bl	800127c <__eqdf2>
 800042e:	4240      	negs	r0, r0
 8000430:	3001      	adds	r0, #1
 8000432:	bd10      	pop	{r4, pc}

08000434 <__aeabi_dcmplt>:
 8000434:	b510      	push	{r4, lr}
 8000436:	f000 ffd5 	bl	80013e4 <__ledf2>
 800043a:	2800      	cmp	r0, #0
 800043c:	db01      	blt.n	8000442 <__aeabi_dcmplt+0xe>
 800043e:	2000      	movs	r0, #0
 8000440:	bd10      	pop	{r4, pc}
 8000442:	2001      	movs	r0, #1
 8000444:	bd10      	pop	{r4, pc}
 8000446:	46c0      	nop			@ (mov r8, r8)

08000448 <__aeabi_dcmple>:
 8000448:	b510      	push	{r4, lr}
 800044a:	f000 ffcb 	bl	80013e4 <__ledf2>
 800044e:	2800      	cmp	r0, #0
 8000450:	dd01      	ble.n	8000456 <__aeabi_dcmple+0xe>
 8000452:	2000      	movs	r0, #0
 8000454:	bd10      	pop	{r4, pc}
 8000456:	2001      	movs	r0, #1
 8000458:	bd10      	pop	{r4, pc}
 800045a:	46c0      	nop			@ (mov r8, r8)

0800045c <__aeabi_dcmpgt>:
 800045c:	b510      	push	{r4, lr}
 800045e:	f000 ff51 	bl	8001304 <__gedf2>
 8000462:	2800      	cmp	r0, #0
 8000464:	dc01      	bgt.n	800046a <__aeabi_dcmpgt+0xe>
 8000466:	2000      	movs	r0, #0
 8000468:	bd10      	pop	{r4, pc}
 800046a:	2001      	movs	r0, #1
 800046c:	bd10      	pop	{r4, pc}
 800046e:	46c0      	nop			@ (mov r8, r8)

08000470 <__aeabi_dcmpge>:
 8000470:	b510      	push	{r4, lr}
 8000472:	f000 ff47 	bl	8001304 <__gedf2>
 8000476:	2800      	cmp	r0, #0
 8000478:	da01      	bge.n	800047e <__aeabi_dcmpge+0xe>
 800047a:	2000      	movs	r0, #0
 800047c:	bd10      	pop	{r4, pc}
 800047e:	2001      	movs	r0, #1
 8000480:	bd10      	pop	{r4, pc}
 8000482:	46c0      	nop			@ (mov r8, r8)

08000484 <__aeabi_d2uiz>:
 8000484:	b570      	push	{r4, r5, r6, lr}
 8000486:	2200      	movs	r2, #0
 8000488:	4b0c      	ldr	r3, [pc, #48]	@ (80004bc <__aeabi_d2uiz+0x38>)
 800048a:	0004      	movs	r4, r0
 800048c:	000d      	movs	r5, r1
 800048e:	f7ff ffef 	bl	8000470 <__aeabi_dcmpge>
 8000492:	2800      	cmp	r0, #0
 8000494:	d104      	bne.n	80004a0 <__aeabi_d2uiz+0x1c>
 8000496:	0020      	movs	r0, r4
 8000498:	0029      	movs	r1, r5
 800049a:	f001 ff01 	bl	80022a0 <__aeabi_d2iz>
 800049e:	bd70      	pop	{r4, r5, r6, pc}
 80004a0:	4b06      	ldr	r3, [pc, #24]	@ (80004bc <__aeabi_d2uiz+0x38>)
 80004a2:	2200      	movs	r2, #0
 80004a4:	0020      	movs	r0, r4
 80004a6:	0029      	movs	r1, r5
 80004a8:	f001 faf0 	bl	8001a8c <__aeabi_dsub>
 80004ac:	f001 fef8 	bl	80022a0 <__aeabi_d2iz>
 80004b0:	2380      	movs	r3, #128	@ 0x80
 80004b2:	061b      	lsls	r3, r3, #24
 80004b4:	469c      	mov	ip, r3
 80004b6:	4460      	add	r0, ip
 80004b8:	e7f1      	b.n	800049e <__aeabi_d2uiz+0x1a>
 80004ba:	46c0      	nop			@ (mov r8, r8)
 80004bc:	41e00000 	.word	0x41e00000

080004c0 <__aeabi_dadd>:
 80004c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80004c2:	464f      	mov	r7, r9
 80004c4:	4646      	mov	r6, r8
 80004c6:	46d6      	mov	lr, sl
 80004c8:	b5c0      	push	{r6, r7, lr}
 80004ca:	b082      	sub	sp, #8
 80004cc:	9000      	str	r0, [sp, #0]
 80004ce:	9101      	str	r1, [sp, #4]
 80004d0:	030e      	lsls	r6, r1, #12
 80004d2:	004c      	lsls	r4, r1, #1
 80004d4:	0fcd      	lsrs	r5, r1, #31
 80004d6:	0a71      	lsrs	r1, r6, #9
 80004d8:	9e00      	ldr	r6, [sp, #0]
 80004da:	005f      	lsls	r7, r3, #1
 80004dc:	0f76      	lsrs	r6, r6, #29
 80004de:	430e      	orrs	r6, r1
 80004e0:	9900      	ldr	r1, [sp, #0]
 80004e2:	9200      	str	r2, [sp, #0]
 80004e4:	9301      	str	r3, [sp, #4]
 80004e6:	00c9      	lsls	r1, r1, #3
 80004e8:	4689      	mov	r9, r1
 80004ea:	0319      	lsls	r1, r3, #12
 80004ec:	0d7b      	lsrs	r3, r7, #21
 80004ee:	4698      	mov	r8, r3
 80004f0:	9b01      	ldr	r3, [sp, #4]
 80004f2:	0a49      	lsrs	r1, r1, #9
 80004f4:	0fdb      	lsrs	r3, r3, #31
 80004f6:	469c      	mov	ip, r3
 80004f8:	9b00      	ldr	r3, [sp, #0]
 80004fa:	9a00      	ldr	r2, [sp, #0]
 80004fc:	0f5b      	lsrs	r3, r3, #29
 80004fe:	430b      	orrs	r3, r1
 8000500:	4641      	mov	r1, r8
 8000502:	0d64      	lsrs	r4, r4, #21
 8000504:	00d2      	lsls	r2, r2, #3
 8000506:	1a61      	subs	r1, r4, r1
 8000508:	4565      	cmp	r5, ip
 800050a:	d100      	bne.n	800050e <__aeabi_dadd+0x4e>
 800050c:	e0a6      	b.n	800065c <__aeabi_dadd+0x19c>
 800050e:	2900      	cmp	r1, #0
 8000510:	dd72      	ble.n	80005f8 <__aeabi_dadd+0x138>
 8000512:	4647      	mov	r7, r8
 8000514:	2f00      	cmp	r7, #0
 8000516:	d100      	bne.n	800051a <__aeabi_dadd+0x5a>
 8000518:	e0dd      	b.n	80006d6 <__aeabi_dadd+0x216>
 800051a:	4fcc      	ldr	r7, [pc, #816]	@ (800084c <__aeabi_dadd+0x38c>)
 800051c:	42bc      	cmp	r4, r7
 800051e:	d100      	bne.n	8000522 <__aeabi_dadd+0x62>
 8000520:	e19a      	b.n	8000858 <__aeabi_dadd+0x398>
 8000522:	2701      	movs	r7, #1
 8000524:	2938      	cmp	r1, #56	@ 0x38
 8000526:	dc17      	bgt.n	8000558 <__aeabi_dadd+0x98>
 8000528:	2780      	movs	r7, #128	@ 0x80
 800052a:	043f      	lsls	r7, r7, #16
 800052c:	433b      	orrs	r3, r7
 800052e:	291f      	cmp	r1, #31
 8000530:	dd00      	ble.n	8000534 <__aeabi_dadd+0x74>
 8000532:	e1dd      	b.n	80008f0 <__aeabi_dadd+0x430>
 8000534:	2720      	movs	r7, #32
 8000536:	1a78      	subs	r0, r7, r1
 8000538:	001f      	movs	r7, r3
 800053a:	4087      	lsls	r7, r0
 800053c:	46ba      	mov	sl, r7
 800053e:	0017      	movs	r7, r2
 8000540:	40cf      	lsrs	r7, r1
 8000542:	4684      	mov	ip, r0
 8000544:	0038      	movs	r0, r7
 8000546:	4657      	mov	r7, sl
 8000548:	4307      	orrs	r7, r0
 800054a:	4660      	mov	r0, ip
 800054c:	4082      	lsls	r2, r0
 800054e:	40cb      	lsrs	r3, r1
 8000550:	1e50      	subs	r0, r2, #1
 8000552:	4182      	sbcs	r2, r0
 8000554:	1af6      	subs	r6, r6, r3
 8000556:	4317      	orrs	r7, r2
 8000558:	464b      	mov	r3, r9
 800055a:	1bdf      	subs	r7, r3, r7
 800055c:	45b9      	cmp	r9, r7
 800055e:	4180      	sbcs	r0, r0
 8000560:	4240      	negs	r0, r0
 8000562:	1a36      	subs	r6, r6, r0
 8000564:	0233      	lsls	r3, r6, #8
 8000566:	d400      	bmi.n	800056a <__aeabi_dadd+0xaa>
 8000568:	e0ff      	b.n	800076a <__aeabi_dadd+0x2aa>
 800056a:	0276      	lsls	r6, r6, #9
 800056c:	0a76      	lsrs	r6, r6, #9
 800056e:	2e00      	cmp	r6, #0
 8000570:	d100      	bne.n	8000574 <__aeabi_dadd+0xb4>
 8000572:	e13c      	b.n	80007ee <__aeabi_dadd+0x32e>
 8000574:	0030      	movs	r0, r6
 8000576:	f001 ff21 	bl	80023bc <__clzsi2>
 800057a:	0003      	movs	r3, r0
 800057c:	3b08      	subs	r3, #8
 800057e:	2120      	movs	r1, #32
 8000580:	0038      	movs	r0, r7
 8000582:	1aca      	subs	r2, r1, r3
 8000584:	40d0      	lsrs	r0, r2
 8000586:	409e      	lsls	r6, r3
 8000588:	0002      	movs	r2, r0
 800058a:	409f      	lsls	r7, r3
 800058c:	4332      	orrs	r2, r6
 800058e:	429c      	cmp	r4, r3
 8000590:	dd00      	ble.n	8000594 <__aeabi_dadd+0xd4>
 8000592:	e1a6      	b.n	80008e2 <__aeabi_dadd+0x422>
 8000594:	1b18      	subs	r0, r3, r4
 8000596:	3001      	adds	r0, #1
 8000598:	1a09      	subs	r1, r1, r0
 800059a:	003e      	movs	r6, r7
 800059c:	408f      	lsls	r7, r1
 800059e:	40c6      	lsrs	r6, r0
 80005a0:	1e7b      	subs	r3, r7, #1
 80005a2:	419f      	sbcs	r7, r3
 80005a4:	0013      	movs	r3, r2
 80005a6:	408b      	lsls	r3, r1
 80005a8:	4337      	orrs	r7, r6
 80005aa:	431f      	orrs	r7, r3
 80005ac:	40c2      	lsrs	r2, r0
 80005ae:	003b      	movs	r3, r7
 80005b0:	0016      	movs	r6, r2
 80005b2:	2400      	movs	r4, #0
 80005b4:	4313      	orrs	r3, r2
 80005b6:	d100      	bne.n	80005ba <__aeabi_dadd+0xfa>
 80005b8:	e1df      	b.n	800097a <__aeabi_dadd+0x4ba>
 80005ba:	077b      	lsls	r3, r7, #29
 80005bc:	d100      	bne.n	80005c0 <__aeabi_dadd+0x100>
 80005be:	e332      	b.n	8000c26 <__aeabi_dadd+0x766>
 80005c0:	230f      	movs	r3, #15
 80005c2:	003a      	movs	r2, r7
 80005c4:	403b      	ands	r3, r7
 80005c6:	2b04      	cmp	r3, #4
 80005c8:	d004      	beq.n	80005d4 <__aeabi_dadd+0x114>
 80005ca:	1d3a      	adds	r2, r7, #4
 80005cc:	42ba      	cmp	r2, r7
 80005ce:	41bf      	sbcs	r7, r7
 80005d0:	427f      	negs	r7, r7
 80005d2:	19f6      	adds	r6, r6, r7
 80005d4:	0233      	lsls	r3, r6, #8
 80005d6:	d400      	bmi.n	80005da <__aeabi_dadd+0x11a>
 80005d8:	e323      	b.n	8000c22 <__aeabi_dadd+0x762>
 80005da:	4b9c      	ldr	r3, [pc, #624]	@ (800084c <__aeabi_dadd+0x38c>)
 80005dc:	3401      	adds	r4, #1
 80005de:	429c      	cmp	r4, r3
 80005e0:	d100      	bne.n	80005e4 <__aeabi_dadd+0x124>
 80005e2:	e0b4      	b.n	800074e <__aeabi_dadd+0x28e>
 80005e4:	4b9a      	ldr	r3, [pc, #616]	@ (8000850 <__aeabi_dadd+0x390>)
 80005e6:	0564      	lsls	r4, r4, #21
 80005e8:	401e      	ands	r6, r3
 80005ea:	0d64      	lsrs	r4, r4, #21
 80005ec:	0777      	lsls	r7, r6, #29
 80005ee:	08d2      	lsrs	r2, r2, #3
 80005f0:	0276      	lsls	r6, r6, #9
 80005f2:	4317      	orrs	r7, r2
 80005f4:	0b36      	lsrs	r6, r6, #12
 80005f6:	e0ac      	b.n	8000752 <__aeabi_dadd+0x292>
 80005f8:	2900      	cmp	r1, #0
 80005fa:	d100      	bne.n	80005fe <__aeabi_dadd+0x13e>
 80005fc:	e07e      	b.n	80006fc <__aeabi_dadd+0x23c>
 80005fe:	4641      	mov	r1, r8
 8000600:	1b09      	subs	r1, r1, r4
 8000602:	2c00      	cmp	r4, #0
 8000604:	d000      	beq.n	8000608 <__aeabi_dadd+0x148>
 8000606:	e160      	b.n	80008ca <__aeabi_dadd+0x40a>
 8000608:	0034      	movs	r4, r6
 800060a:	4648      	mov	r0, r9
 800060c:	4304      	orrs	r4, r0
 800060e:	d100      	bne.n	8000612 <__aeabi_dadd+0x152>
 8000610:	e1c9      	b.n	80009a6 <__aeabi_dadd+0x4e6>
 8000612:	1e4c      	subs	r4, r1, #1
 8000614:	2901      	cmp	r1, #1
 8000616:	d100      	bne.n	800061a <__aeabi_dadd+0x15a>
 8000618:	e22e      	b.n	8000a78 <__aeabi_dadd+0x5b8>
 800061a:	4d8c      	ldr	r5, [pc, #560]	@ (800084c <__aeabi_dadd+0x38c>)
 800061c:	42a9      	cmp	r1, r5
 800061e:	d100      	bne.n	8000622 <__aeabi_dadd+0x162>
 8000620:	e224      	b.n	8000a6c <__aeabi_dadd+0x5ac>
 8000622:	2701      	movs	r7, #1
 8000624:	2c38      	cmp	r4, #56	@ 0x38
 8000626:	dc11      	bgt.n	800064c <__aeabi_dadd+0x18c>
 8000628:	0021      	movs	r1, r4
 800062a:	291f      	cmp	r1, #31
 800062c:	dd00      	ble.n	8000630 <__aeabi_dadd+0x170>
 800062e:	e20b      	b.n	8000a48 <__aeabi_dadd+0x588>
 8000630:	2420      	movs	r4, #32
 8000632:	0037      	movs	r7, r6
 8000634:	4648      	mov	r0, r9
 8000636:	1a64      	subs	r4, r4, r1
 8000638:	40a7      	lsls	r7, r4
 800063a:	40c8      	lsrs	r0, r1
 800063c:	4307      	orrs	r7, r0
 800063e:	4648      	mov	r0, r9
 8000640:	40a0      	lsls	r0, r4
 8000642:	40ce      	lsrs	r6, r1
 8000644:	1e44      	subs	r4, r0, #1
 8000646:	41a0      	sbcs	r0, r4
 8000648:	1b9b      	subs	r3, r3, r6
 800064a:	4307      	orrs	r7, r0
 800064c:	1bd7      	subs	r7, r2, r7
 800064e:	42ba      	cmp	r2, r7
 8000650:	4192      	sbcs	r2, r2
 8000652:	4252      	negs	r2, r2
 8000654:	4665      	mov	r5, ip
 8000656:	4644      	mov	r4, r8
 8000658:	1a9e      	subs	r6, r3, r2
 800065a:	e783      	b.n	8000564 <__aeabi_dadd+0xa4>
 800065c:	2900      	cmp	r1, #0
 800065e:	dc00      	bgt.n	8000662 <__aeabi_dadd+0x1a2>
 8000660:	e09c      	b.n	800079c <__aeabi_dadd+0x2dc>
 8000662:	4647      	mov	r7, r8
 8000664:	2f00      	cmp	r7, #0
 8000666:	d167      	bne.n	8000738 <__aeabi_dadd+0x278>
 8000668:	001f      	movs	r7, r3
 800066a:	4317      	orrs	r7, r2
 800066c:	d100      	bne.n	8000670 <__aeabi_dadd+0x1b0>
 800066e:	e0e4      	b.n	800083a <__aeabi_dadd+0x37a>
 8000670:	1e48      	subs	r0, r1, #1
 8000672:	2901      	cmp	r1, #1
 8000674:	d100      	bne.n	8000678 <__aeabi_dadd+0x1b8>
 8000676:	e19b      	b.n	80009b0 <__aeabi_dadd+0x4f0>
 8000678:	4f74      	ldr	r7, [pc, #464]	@ (800084c <__aeabi_dadd+0x38c>)
 800067a:	42b9      	cmp	r1, r7
 800067c:	d100      	bne.n	8000680 <__aeabi_dadd+0x1c0>
 800067e:	e0eb      	b.n	8000858 <__aeabi_dadd+0x398>
 8000680:	2701      	movs	r7, #1
 8000682:	0001      	movs	r1, r0
 8000684:	2838      	cmp	r0, #56	@ 0x38
 8000686:	dc11      	bgt.n	80006ac <__aeabi_dadd+0x1ec>
 8000688:	291f      	cmp	r1, #31
 800068a:	dd00      	ble.n	800068e <__aeabi_dadd+0x1ce>
 800068c:	e1c7      	b.n	8000a1e <__aeabi_dadd+0x55e>
 800068e:	2720      	movs	r7, #32
 8000690:	1a78      	subs	r0, r7, r1
 8000692:	001f      	movs	r7, r3
 8000694:	4684      	mov	ip, r0
 8000696:	4087      	lsls	r7, r0
 8000698:	0010      	movs	r0, r2
 800069a:	40c8      	lsrs	r0, r1
 800069c:	4307      	orrs	r7, r0
 800069e:	4660      	mov	r0, ip
 80006a0:	4082      	lsls	r2, r0
 80006a2:	40cb      	lsrs	r3, r1
 80006a4:	1e50      	subs	r0, r2, #1
 80006a6:	4182      	sbcs	r2, r0
 80006a8:	18f6      	adds	r6, r6, r3
 80006aa:	4317      	orrs	r7, r2
 80006ac:	444f      	add	r7, r9
 80006ae:	454f      	cmp	r7, r9
 80006b0:	4180      	sbcs	r0, r0
 80006b2:	4240      	negs	r0, r0
 80006b4:	1836      	adds	r6, r6, r0
 80006b6:	0233      	lsls	r3, r6, #8
 80006b8:	d557      	bpl.n	800076a <__aeabi_dadd+0x2aa>
 80006ba:	4b64      	ldr	r3, [pc, #400]	@ (800084c <__aeabi_dadd+0x38c>)
 80006bc:	3401      	adds	r4, #1
 80006be:	429c      	cmp	r4, r3
 80006c0:	d045      	beq.n	800074e <__aeabi_dadd+0x28e>
 80006c2:	2101      	movs	r1, #1
 80006c4:	4b62      	ldr	r3, [pc, #392]	@ (8000850 <__aeabi_dadd+0x390>)
 80006c6:	087a      	lsrs	r2, r7, #1
 80006c8:	401e      	ands	r6, r3
 80006ca:	4039      	ands	r1, r7
 80006cc:	430a      	orrs	r2, r1
 80006ce:	07f7      	lsls	r7, r6, #31
 80006d0:	4317      	orrs	r7, r2
 80006d2:	0876      	lsrs	r6, r6, #1
 80006d4:	e771      	b.n	80005ba <__aeabi_dadd+0xfa>
 80006d6:	001f      	movs	r7, r3
 80006d8:	4317      	orrs	r7, r2
 80006da:	d100      	bne.n	80006de <__aeabi_dadd+0x21e>
 80006dc:	e0ad      	b.n	800083a <__aeabi_dadd+0x37a>
 80006de:	1e4f      	subs	r7, r1, #1
 80006e0:	46bc      	mov	ip, r7
 80006e2:	2901      	cmp	r1, #1
 80006e4:	d100      	bne.n	80006e8 <__aeabi_dadd+0x228>
 80006e6:	e182      	b.n	80009ee <__aeabi_dadd+0x52e>
 80006e8:	4f58      	ldr	r7, [pc, #352]	@ (800084c <__aeabi_dadd+0x38c>)
 80006ea:	42b9      	cmp	r1, r7
 80006ec:	d100      	bne.n	80006f0 <__aeabi_dadd+0x230>
 80006ee:	e190      	b.n	8000a12 <__aeabi_dadd+0x552>
 80006f0:	4661      	mov	r1, ip
 80006f2:	2701      	movs	r7, #1
 80006f4:	2938      	cmp	r1, #56	@ 0x38
 80006f6:	dd00      	ble.n	80006fa <__aeabi_dadd+0x23a>
 80006f8:	e72e      	b.n	8000558 <__aeabi_dadd+0x98>
 80006fa:	e718      	b.n	800052e <__aeabi_dadd+0x6e>
 80006fc:	4f55      	ldr	r7, [pc, #340]	@ (8000854 <__aeabi_dadd+0x394>)
 80006fe:	1c61      	adds	r1, r4, #1
 8000700:	4239      	tst	r1, r7
 8000702:	d000      	beq.n	8000706 <__aeabi_dadd+0x246>
 8000704:	e0d0      	b.n	80008a8 <__aeabi_dadd+0x3e8>
 8000706:	0031      	movs	r1, r6
 8000708:	4648      	mov	r0, r9
 800070a:	001f      	movs	r7, r3
 800070c:	4301      	orrs	r1, r0
 800070e:	4317      	orrs	r7, r2
 8000710:	2c00      	cmp	r4, #0
 8000712:	d000      	beq.n	8000716 <__aeabi_dadd+0x256>
 8000714:	e13d      	b.n	8000992 <__aeabi_dadd+0x4d2>
 8000716:	2900      	cmp	r1, #0
 8000718:	d100      	bne.n	800071c <__aeabi_dadd+0x25c>
 800071a:	e1bc      	b.n	8000a96 <__aeabi_dadd+0x5d6>
 800071c:	2f00      	cmp	r7, #0
 800071e:	d000      	beq.n	8000722 <__aeabi_dadd+0x262>
 8000720:	e1bf      	b.n	8000aa2 <__aeabi_dadd+0x5e2>
 8000722:	464b      	mov	r3, r9
 8000724:	2100      	movs	r1, #0
 8000726:	08d8      	lsrs	r0, r3, #3
 8000728:	0777      	lsls	r7, r6, #29
 800072a:	4307      	orrs	r7, r0
 800072c:	08f0      	lsrs	r0, r6, #3
 800072e:	0306      	lsls	r6, r0, #12
 8000730:	054c      	lsls	r4, r1, #21
 8000732:	0b36      	lsrs	r6, r6, #12
 8000734:	0d64      	lsrs	r4, r4, #21
 8000736:	e00c      	b.n	8000752 <__aeabi_dadd+0x292>
 8000738:	4f44      	ldr	r7, [pc, #272]	@ (800084c <__aeabi_dadd+0x38c>)
 800073a:	42bc      	cmp	r4, r7
 800073c:	d100      	bne.n	8000740 <__aeabi_dadd+0x280>
 800073e:	e08b      	b.n	8000858 <__aeabi_dadd+0x398>
 8000740:	2701      	movs	r7, #1
 8000742:	2938      	cmp	r1, #56	@ 0x38
 8000744:	dcb2      	bgt.n	80006ac <__aeabi_dadd+0x1ec>
 8000746:	2780      	movs	r7, #128	@ 0x80
 8000748:	043f      	lsls	r7, r7, #16
 800074a:	433b      	orrs	r3, r7
 800074c:	e79c      	b.n	8000688 <__aeabi_dadd+0x1c8>
 800074e:	2600      	movs	r6, #0
 8000750:	2700      	movs	r7, #0
 8000752:	0524      	lsls	r4, r4, #20
 8000754:	4334      	orrs	r4, r6
 8000756:	07ed      	lsls	r5, r5, #31
 8000758:	432c      	orrs	r4, r5
 800075a:	0038      	movs	r0, r7
 800075c:	0021      	movs	r1, r4
 800075e:	b002      	add	sp, #8
 8000760:	bce0      	pop	{r5, r6, r7}
 8000762:	46ba      	mov	sl, r7
 8000764:	46b1      	mov	r9, r6
 8000766:	46a8      	mov	r8, r5
 8000768:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800076a:	077b      	lsls	r3, r7, #29
 800076c:	d004      	beq.n	8000778 <__aeabi_dadd+0x2b8>
 800076e:	230f      	movs	r3, #15
 8000770:	403b      	ands	r3, r7
 8000772:	2b04      	cmp	r3, #4
 8000774:	d000      	beq.n	8000778 <__aeabi_dadd+0x2b8>
 8000776:	e728      	b.n	80005ca <__aeabi_dadd+0x10a>
 8000778:	08f8      	lsrs	r0, r7, #3
 800077a:	4b34      	ldr	r3, [pc, #208]	@ (800084c <__aeabi_dadd+0x38c>)
 800077c:	0777      	lsls	r7, r6, #29
 800077e:	4307      	orrs	r7, r0
 8000780:	08f0      	lsrs	r0, r6, #3
 8000782:	429c      	cmp	r4, r3
 8000784:	d000      	beq.n	8000788 <__aeabi_dadd+0x2c8>
 8000786:	e24a      	b.n	8000c1e <__aeabi_dadd+0x75e>
 8000788:	003b      	movs	r3, r7
 800078a:	4303      	orrs	r3, r0
 800078c:	d059      	beq.n	8000842 <__aeabi_dadd+0x382>
 800078e:	2680      	movs	r6, #128	@ 0x80
 8000790:	0336      	lsls	r6, r6, #12
 8000792:	4306      	orrs	r6, r0
 8000794:	0336      	lsls	r6, r6, #12
 8000796:	4c2d      	ldr	r4, [pc, #180]	@ (800084c <__aeabi_dadd+0x38c>)
 8000798:	0b36      	lsrs	r6, r6, #12
 800079a:	e7da      	b.n	8000752 <__aeabi_dadd+0x292>
 800079c:	2900      	cmp	r1, #0
 800079e:	d061      	beq.n	8000864 <__aeabi_dadd+0x3a4>
 80007a0:	4641      	mov	r1, r8
 80007a2:	1b09      	subs	r1, r1, r4
 80007a4:	2c00      	cmp	r4, #0
 80007a6:	d100      	bne.n	80007aa <__aeabi_dadd+0x2ea>
 80007a8:	e0b9      	b.n	800091e <__aeabi_dadd+0x45e>
 80007aa:	4c28      	ldr	r4, [pc, #160]	@ (800084c <__aeabi_dadd+0x38c>)
 80007ac:	45a0      	cmp	r8, r4
 80007ae:	d100      	bne.n	80007b2 <__aeabi_dadd+0x2f2>
 80007b0:	e1a5      	b.n	8000afe <__aeabi_dadd+0x63e>
 80007b2:	2701      	movs	r7, #1
 80007b4:	2938      	cmp	r1, #56	@ 0x38
 80007b6:	dc13      	bgt.n	80007e0 <__aeabi_dadd+0x320>
 80007b8:	2480      	movs	r4, #128	@ 0x80
 80007ba:	0424      	lsls	r4, r4, #16
 80007bc:	4326      	orrs	r6, r4
 80007be:	291f      	cmp	r1, #31
 80007c0:	dd00      	ble.n	80007c4 <__aeabi_dadd+0x304>
 80007c2:	e1c8      	b.n	8000b56 <__aeabi_dadd+0x696>
 80007c4:	2420      	movs	r4, #32
 80007c6:	0037      	movs	r7, r6
 80007c8:	4648      	mov	r0, r9
 80007ca:	1a64      	subs	r4, r4, r1
 80007cc:	40a7      	lsls	r7, r4
 80007ce:	40c8      	lsrs	r0, r1
 80007d0:	4307      	orrs	r7, r0
 80007d2:	4648      	mov	r0, r9
 80007d4:	40a0      	lsls	r0, r4
 80007d6:	40ce      	lsrs	r6, r1
 80007d8:	1e44      	subs	r4, r0, #1
 80007da:	41a0      	sbcs	r0, r4
 80007dc:	199b      	adds	r3, r3, r6
 80007de:	4307      	orrs	r7, r0
 80007e0:	18bf      	adds	r7, r7, r2
 80007e2:	4297      	cmp	r7, r2
 80007e4:	4192      	sbcs	r2, r2
 80007e6:	4252      	negs	r2, r2
 80007e8:	4644      	mov	r4, r8
 80007ea:	18d6      	adds	r6, r2, r3
 80007ec:	e763      	b.n	80006b6 <__aeabi_dadd+0x1f6>
 80007ee:	0038      	movs	r0, r7
 80007f0:	f001 fde4 	bl	80023bc <__clzsi2>
 80007f4:	0003      	movs	r3, r0
 80007f6:	3318      	adds	r3, #24
 80007f8:	2b1f      	cmp	r3, #31
 80007fa:	dc00      	bgt.n	80007fe <__aeabi_dadd+0x33e>
 80007fc:	e6bf      	b.n	800057e <__aeabi_dadd+0xbe>
 80007fe:	003a      	movs	r2, r7
 8000800:	3808      	subs	r0, #8
 8000802:	4082      	lsls	r2, r0
 8000804:	429c      	cmp	r4, r3
 8000806:	dd00      	ble.n	800080a <__aeabi_dadd+0x34a>
 8000808:	e083      	b.n	8000912 <__aeabi_dadd+0x452>
 800080a:	1b1b      	subs	r3, r3, r4
 800080c:	1c58      	adds	r0, r3, #1
 800080e:	281f      	cmp	r0, #31
 8000810:	dc00      	bgt.n	8000814 <__aeabi_dadd+0x354>
 8000812:	e1b4      	b.n	8000b7e <__aeabi_dadd+0x6be>
 8000814:	0017      	movs	r7, r2
 8000816:	3b1f      	subs	r3, #31
 8000818:	40df      	lsrs	r7, r3
 800081a:	2820      	cmp	r0, #32
 800081c:	d005      	beq.n	800082a <__aeabi_dadd+0x36a>
 800081e:	2340      	movs	r3, #64	@ 0x40
 8000820:	1a1b      	subs	r3, r3, r0
 8000822:	409a      	lsls	r2, r3
 8000824:	1e53      	subs	r3, r2, #1
 8000826:	419a      	sbcs	r2, r3
 8000828:	4317      	orrs	r7, r2
 800082a:	2400      	movs	r4, #0
 800082c:	2f00      	cmp	r7, #0
 800082e:	d00a      	beq.n	8000846 <__aeabi_dadd+0x386>
 8000830:	077b      	lsls	r3, r7, #29
 8000832:	d000      	beq.n	8000836 <__aeabi_dadd+0x376>
 8000834:	e6c4      	b.n	80005c0 <__aeabi_dadd+0x100>
 8000836:	0026      	movs	r6, r4
 8000838:	e79e      	b.n	8000778 <__aeabi_dadd+0x2b8>
 800083a:	464b      	mov	r3, r9
 800083c:	000c      	movs	r4, r1
 800083e:	08d8      	lsrs	r0, r3, #3
 8000840:	e79b      	b.n	800077a <__aeabi_dadd+0x2ba>
 8000842:	2700      	movs	r7, #0
 8000844:	4c01      	ldr	r4, [pc, #4]	@ (800084c <__aeabi_dadd+0x38c>)
 8000846:	2600      	movs	r6, #0
 8000848:	e783      	b.n	8000752 <__aeabi_dadd+0x292>
 800084a:	46c0      	nop			@ (mov r8, r8)
 800084c:	000007ff 	.word	0x000007ff
 8000850:	ff7fffff 	.word	0xff7fffff
 8000854:	000007fe 	.word	0x000007fe
 8000858:	464b      	mov	r3, r9
 800085a:	0777      	lsls	r7, r6, #29
 800085c:	08d8      	lsrs	r0, r3, #3
 800085e:	4307      	orrs	r7, r0
 8000860:	08f0      	lsrs	r0, r6, #3
 8000862:	e791      	b.n	8000788 <__aeabi_dadd+0x2c8>
 8000864:	4fcd      	ldr	r7, [pc, #820]	@ (8000b9c <__aeabi_dadd+0x6dc>)
 8000866:	1c61      	adds	r1, r4, #1
 8000868:	4239      	tst	r1, r7
 800086a:	d16b      	bne.n	8000944 <__aeabi_dadd+0x484>
 800086c:	0031      	movs	r1, r6
 800086e:	4648      	mov	r0, r9
 8000870:	4301      	orrs	r1, r0
 8000872:	2c00      	cmp	r4, #0
 8000874:	d000      	beq.n	8000878 <__aeabi_dadd+0x3b8>
 8000876:	e14b      	b.n	8000b10 <__aeabi_dadd+0x650>
 8000878:	001f      	movs	r7, r3
 800087a:	4317      	orrs	r7, r2
 800087c:	2900      	cmp	r1, #0
 800087e:	d100      	bne.n	8000882 <__aeabi_dadd+0x3c2>
 8000880:	e181      	b.n	8000b86 <__aeabi_dadd+0x6c6>
 8000882:	2f00      	cmp	r7, #0
 8000884:	d100      	bne.n	8000888 <__aeabi_dadd+0x3c8>
 8000886:	e74c      	b.n	8000722 <__aeabi_dadd+0x262>
 8000888:	444a      	add	r2, r9
 800088a:	454a      	cmp	r2, r9
 800088c:	4180      	sbcs	r0, r0
 800088e:	18f6      	adds	r6, r6, r3
 8000890:	4240      	negs	r0, r0
 8000892:	1836      	adds	r6, r6, r0
 8000894:	0233      	lsls	r3, r6, #8
 8000896:	d500      	bpl.n	800089a <__aeabi_dadd+0x3da>
 8000898:	e1b0      	b.n	8000bfc <__aeabi_dadd+0x73c>
 800089a:	0017      	movs	r7, r2
 800089c:	4691      	mov	r9, r2
 800089e:	4337      	orrs	r7, r6
 80008a0:	d000      	beq.n	80008a4 <__aeabi_dadd+0x3e4>
 80008a2:	e73e      	b.n	8000722 <__aeabi_dadd+0x262>
 80008a4:	2600      	movs	r6, #0
 80008a6:	e754      	b.n	8000752 <__aeabi_dadd+0x292>
 80008a8:	4649      	mov	r1, r9
 80008aa:	1a89      	subs	r1, r1, r2
 80008ac:	4688      	mov	r8, r1
 80008ae:	45c1      	cmp	r9, r8
 80008b0:	41bf      	sbcs	r7, r7
 80008b2:	1af1      	subs	r1, r6, r3
 80008b4:	427f      	negs	r7, r7
 80008b6:	1bc9      	subs	r1, r1, r7
 80008b8:	020f      	lsls	r7, r1, #8
 80008ba:	d461      	bmi.n	8000980 <__aeabi_dadd+0x4c0>
 80008bc:	4647      	mov	r7, r8
 80008be:	430f      	orrs	r7, r1
 80008c0:	d100      	bne.n	80008c4 <__aeabi_dadd+0x404>
 80008c2:	e0bd      	b.n	8000a40 <__aeabi_dadd+0x580>
 80008c4:	000e      	movs	r6, r1
 80008c6:	4647      	mov	r7, r8
 80008c8:	e651      	b.n	800056e <__aeabi_dadd+0xae>
 80008ca:	4cb5      	ldr	r4, [pc, #724]	@ (8000ba0 <__aeabi_dadd+0x6e0>)
 80008cc:	45a0      	cmp	r8, r4
 80008ce:	d100      	bne.n	80008d2 <__aeabi_dadd+0x412>
 80008d0:	e100      	b.n	8000ad4 <__aeabi_dadd+0x614>
 80008d2:	2701      	movs	r7, #1
 80008d4:	2938      	cmp	r1, #56	@ 0x38
 80008d6:	dd00      	ble.n	80008da <__aeabi_dadd+0x41a>
 80008d8:	e6b8      	b.n	800064c <__aeabi_dadd+0x18c>
 80008da:	2480      	movs	r4, #128	@ 0x80
 80008dc:	0424      	lsls	r4, r4, #16
 80008de:	4326      	orrs	r6, r4
 80008e0:	e6a3      	b.n	800062a <__aeabi_dadd+0x16a>
 80008e2:	4eb0      	ldr	r6, [pc, #704]	@ (8000ba4 <__aeabi_dadd+0x6e4>)
 80008e4:	1ae4      	subs	r4, r4, r3
 80008e6:	4016      	ands	r6, r2
 80008e8:	077b      	lsls	r3, r7, #29
 80008ea:	d000      	beq.n	80008ee <__aeabi_dadd+0x42e>
 80008ec:	e73f      	b.n	800076e <__aeabi_dadd+0x2ae>
 80008ee:	e743      	b.n	8000778 <__aeabi_dadd+0x2b8>
 80008f0:	000f      	movs	r7, r1
 80008f2:	0018      	movs	r0, r3
 80008f4:	3f20      	subs	r7, #32
 80008f6:	40f8      	lsrs	r0, r7
 80008f8:	4684      	mov	ip, r0
 80008fa:	2920      	cmp	r1, #32
 80008fc:	d003      	beq.n	8000906 <__aeabi_dadd+0x446>
 80008fe:	2740      	movs	r7, #64	@ 0x40
 8000900:	1a79      	subs	r1, r7, r1
 8000902:	408b      	lsls	r3, r1
 8000904:	431a      	orrs	r2, r3
 8000906:	1e53      	subs	r3, r2, #1
 8000908:	419a      	sbcs	r2, r3
 800090a:	4663      	mov	r3, ip
 800090c:	0017      	movs	r7, r2
 800090e:	431f      	orrs	r7, r3
 8000910:	e622      	b.n	8000558 <__aeabi_dadd+0x98>
 8000912:	48a4      	ldr	r0, [pc, #656]	@ (8000ba4 <__aeabi_dadd+0x6e4>)
 8000914:	1ae1      	subs	r1, r4, r3
 8000916:	4010      	ands	r0, r2
 8000918:	0747      	lsls	r7, r0, #29
 800091a:	08c0      	lsrs	r0, r0, #3
 800091c:	e707      	b.n	800072e <__aeabi_dadd+0x26e>
 800091e:	0034      	movs	r4, r6
 8000920:	4648      	mov	r0, r9
 8000922:	4304      	orrs	r4, r0
 8000924:	d100      	bne.n	8000928 <__aeabi_dadd+0x468>
 8000926:	e0fa      	b.n	8000b1e <__aeabi_dadd+0x65e>
 8000928:	1e4c      	subs	r4, r1, #1
 800092a:	2901      	cmp	r1, #1
 800092c:	d100      	bne.n	8000930 <__aeabi_dadd+0x470>
 800092e:	e0d7      	b.n	8000ae0 <__aeabi_dadd+0x620>
 8000930:	4f9b      	ldr	r7, [pc, #620]	@ (8000ba0 <__aeabi_dadd+0x6e0>)
 8000932:	42b9      	cmp	r1, r7
 8000934:	d100      	bne.n	8000938 <__aeabi_dadd+0x478>
 8000936:	e0e2      	b.n	8000afe <__aeabi_dadd+0x63e>
 8000938:	2701      	movs	r7, #1
 800093a:	2c38      	cmp	r4, #56	@ 0x38
 800093c:	dd00      	ble.n	8000940 <__aeabi_dadd+0x480>
 800093e:	e74f      	b.n	80007e0 <__aeabi_dadd+0x320>
 8000940:	0021      	movs	r1, r4
 8000942:	e73c      	b.n	80007be <__aeabi_dadd+0x2fe>
 8000944:	4c96      	ldr	r4, [pc, #600]	@ (8000ba0 <__aeabi_dadd+0x6e0>)
 8000946:	42a1      	cmp	r1, r4
 8000948:	d100      	bne.n	800094c <__aeabi_dadd+0x48c>
 800094a:	e0dd      	b.n	8000b08 <__aeabi_dadd+0x648>
 800094c:	444a      	add	r2, r9
 800094e:	454a      	cmp	r2, r9
 8000950:	4180      	sbcs	r0, r0
 8000952:	18f3      	adds	r3, r6, r3
 8000954:	4240      	negs	r0, r0
 8000956:	1818      	adds	r0, r3, r0
 8000958:	07c7      	lsls	r7, r0, #31
 800095a:	0852      	lsrs	r2, r2, #1
 800095c:	4317      	orrs	r7, r2
 800095e:	0846      	lsrs	r6, r0, #1
 8000960:	0752      	lsls	r2, r2, #29
 8000962:	d005      	beq.n	8000970 <__aeabi_dadd+0x4b0>
 8000964:	220f      	movs	r2, #15
 8000966:	000c      	movs	r4, r1
 8000968:	403a      	ands	r2, r7
 800096a:	2a04      	cmp	r2, #4
 800096c:	d000      	beq.n	8000970 <__aeabi_dadd+0x4b0>
 800096e:	e62c      	b.n	80005ca <__aeabi_dadd+0x10a>
 8000970:	0776      	lsls	r6, r6, #29
 8000972:	08ff      	lsrs	r7, r7, #3
 8000974:	4337      	orrs	r7, r6
 8000976:	0900      	lsrs	r0, r0, #4
 8000978:	e6d9      	b.n	800072e <__aeabi_dadd+0x26e>
 800097a:	2700      	movs	r7, #0
 800097c:	2600      	movs	r6, #0
 800097e:	e6e8      	b.n	8000752 <__aeabi_dadd+0x292>
 8000980:	4649      	mov	r1, r9
 8000982:	1a57      	subs	r7, r2, r1
 8000984:	42ba      	cmp	r2, r7
 8000986:	4192      	sbcs	r2, r2
 8000988:	1b9e      	subs	r6, r3, r6
 800098a:	4252      	negs	r2, r2
 800098c:	4665      	mov	r5, ip
 800098e:	1ab6      	subs	r6, r6, r2
 8000990:	e5ed      	b.n	800056e <__aeabi_dadd+0xae>
 8000992:	2900      	cmp	r1, #0
 8000994:	d000      	beq.n	8000998 <__aeabi_dadd+0x4d8>
 8000996:	e0c6      	b.n	8000b26 <__aeabi_dadd+0x666>
 8000998:	2f00      	cmp	r7, #0
 800099a:	d167      	bne.n	8000a6c <__aeabi_dadd+0x5ac>
 800099c:	2680      	movs	r6, #128	@ 0x80
 800099e:	2500      	movs	r5, #0
 80009a0:	4c7f      	ldr	r4, [pc, #508]	@ (8000ba0 <__aeabi_dadd+0x6e0>)
 80009a2:	0336      	lsls	r6, r6, #12
 80009a4:	e6d5      	b.n	8000752 <__aeabi_dadd+0x292>
 80009a6:	4665      	mov	r5, ip
 80009a8:	000c      	movs	r4, r1
 80009aa:	001e      	movs	r6, r3
 80009ac:	08d0      	lsrs	r0, r2, #3
 80009ae:	e6e4      	b.n	800077a <__aeabi_dadd+0x2ba>
 80009b0:	444a      	add	r2, r9
 80009b2:	454a      	cmp	r2, r9
 80009b4:	4180      	sbcs	r0, r0
 80009b6:	18f3      	adds	r3, r6, r3
 80009b8:	4240      	negs	r0, r0
 80009ba:	1818      	adds	r0, r3, r0
 80009bc:	0011      	movs	r1, r2
 80009be:	0203      	lsls	r3, r0, #8
 80009c0:	d400      	bmi.n	80009c4 <__aeabi_dadd+0x504>
 80009c2:	e096      	b.n	8000af2 <__aeabi_dadd+0x632>
 80009c4:	4b77      	ldr	r3, [pc, #476]	@ (8000ba4 <__aeabi_dadd+0x6e4>)
 80009c6:	0849      	lsrs	r1, r1, #1
 80009c8:	4018      	ands	r0, r3
 80009ca:	07c3      	lsls	r3, r0, #31
 80009cc:	430b      	orrs	r3, r1
 80009ce:	0844      	lsrs	r4, r0, #1
 80009d0:	0749      	lsls	r1, r1, #29
 80009d2:	d100      	bne.n	80009d6 <__aeabi_dadd+0x516>
 80009d4:	e129      	b.n	8000c2a <__aeabi_dadd+0x76a>
 80009d6:	220f      	movs	r2, #15
 80009d8:	401a      	ands	r2, r3
 80009da:	2a04      	cmp	r2, #4
 80009dc:	d100      	bne.n	80009e0 <__aeabi_dadd+0x520>
 80009de:	e0ea      	b.n	8000bb6 <__aeabi_dadd+0x6f6>
 80009e0:	1d1f      	adds	r7, r3, #4
 80009e2:	429f      	cmp	r7, r3
 80009e4:	41b6      	sbcs	r6, r6
 80009e6:	4276      	negs	r6, r6
 80009e8:	1936      	adds	r6, r6, r4
 80009ea:	2402      	movs	r4, #2
 80009ec:	e6c4      	b.n	8000778 <__aeabi_dadd+0x2b8>
 80009ee:	4649      	mov	r1, r9
 80009f0:	1a8f      	subs	r7, r1, r2
 80009f2:	45b9      	cmp	r9, r7
 80009f4:	4180      	sbcs	r0, r0
 80009f6:	1af6      	subs	r6, r6, r3
 80009f8:	4240      	negs	r0, r0
 80009fa:	1a36      	subs	r6, r6, r0
 80009fc:	0233      	lsls	r3, r6, #8
 80009fe:	d406      	bmi.n	8000a0e <__aeabi_dadd+0x54e>
 8000a00:	0773      	lsls	r3, r6, #29
 8000a02:	08ff      	lsrs	r7, r7, #3
 8000a04:	2101      	movs	r1, #1
 8000a06:	431f      	orrs	r7, r3
 8000a08:	08f0      	lsrs	r0, r6, #3
 8000a0a:	e690      	b.n	800072e <__aeabi_dadd+0x26e>
 8000a0c:	4665      	mov	r5, ip
 8000a0e:	2401      	movs	r4, #1
 8000a10:	e5ab      	b.n	800056a <__aeabi_dadd+0xaa>
 8000a12:	464b      	mov	r3, r9
 8000a14:	0777      	lsls	r7, r6, #29
 8000a16:	08d8      	lsrs	r0, r3, #3
 8000a18:	4307      	orrs	r7, r0
 8000a1a:	08f0      	lsrs	r0, r6, #3
 8000a1c:	e6b4      	b.n	8000788 <__aeabi_dadd+0x2c8>
 8000a1e:	000f      	movs	r7, r1
 8000a20:	0018      	movs	r0, r3
 8000a22:	3f20      	subs	r7, #32
 8000a24:	40f8      	lsrs	r0, r7
 8000a26:	4684      	mov	ip, r0
 8000a28:	2920      	cmp	r1, #32
 8000a2a:	d003      	beq.n	8000a34 <__aeabi_dadd+0x574>
 8000a2c:	2740      	movs	r7, #64	@ 0x40
 8000a2e:	1a79      	subs	r1, r7, r1
 8000a30:	408b      	lsls	r3, r1
 8000a32:	431a      	orrs	r2, r3
 8000a34:	1e53      	subs	r3, r2, #1
 8000a36:	419a      	sbcs	r2, r3
 8000a38:	4663      	mov	r3, ip
 8000a3a:	0017      	movs	r7, r2
 8000a3c:	431f      	orrs	r7, r3
 8000a3e:	e635      	b.n	80006ac <__aeabi_dadd+0x1ec>
 8000a40:	2500      	movs	r5, #0
 8000a42:	2400      	movs	r4, #0
 8000a44:	2600      	movs	r6, #0
 8000a46:	e684      	b.n	8000752 <__aeabi_dadd+0x292>
 8000a48:	000c      	movs	r4, r1
 8000a4a:	0035      	movs	r5, r6
 8000a4c:	3c20      	subs	r4, #32
 8000a4e:	40e5      	lsrs	r5, r4
 8000a50:	2920      	cmp	r1, #32
 8000a52:	d005      	beq.n	8000a60 <__aeabi_dadd+0x5a0>
 8000a54:	2440      	movs	r4, #64	@ 0x40
 8000a56:	1a61      	subs	r1, r4, r1
 8000a58:	408e      	lsls	r6, r1
 8000a5a:	4649      	mov	r1, r9
 8000a5c:	4331      	orrs	r1, r6
 8000a5e:	4689      	mov	r9, r1
 8000a60:	4648      	mov	r0, r9
 8000a62:	1e41      	subs	r1, r0, #1
 8000a64:	4188      	sbcs	r0, r1
 8000a66:	0007      	movs	r7, r0
 8000a68:	432f      	orrs	r7, r5
 8000a6a:	e5ef      	b.n	800064c <__aeabi_dadd+0x18c>
 8000a6c:	08d2      	lsrs	r2, r2, #3
 8000a6e:	075f      	lsls	r7, r3, #29
 8000a70:	4665      	mov	r5, ip
 8000a72:	4317      	orrs	r7, r2
 8000a74:	08d8      	lsrs	r0, r3, #3
 8000a76:	e687      	b.n	8000788 <__aeabi_dadd+0x2c8>
 8000a78:	1a17      	subs	r7, r2, r0
 8000a7a:	42ba      	cmp	r2, r7
 8000a7c:	4192      	sbcs	r2, r2
 8000a7e:	1b9e      	subs	r6, r3, r6
 8000a80:	4252      	negs	r2, r2
 8000a82:	1ab6      	subs	r6, r6, r2
 8000a84:	0233      	lsls	r3, r6, #8
 8000a86:	d4c1      	bmi.n	8000a0c <__aeabi_dadd+0x54c>
 8000a88:	0773      	lsls	r3, r6, #29
 8000a8a:	08ff      	lsrs	r7, r7, #3
 8000a8c:	4665      	mov	r5, ip
 8000a8e:	2101      	movs	r1, #1
 8000a90:	431f      	orrs	r7, r3
 8000a92:	08f0      	lsrs	r0, r6, #3
 8000a94:	e64b      	b.n	800072e <__aeabi_dadd+0x26e>
 8000a96:	2f00      	cmp	r7, #0
 8000a98:	d07b      	beq.n	8000b92 <__aeabi_dadd+0x6d2>
 8000a9a:	4665      	mov	r5, ip
 8000a9c:	001e      	movs	r6, r3
 8000a9e:	4691      	mov	r9, r2
 8000aa0:	e63f      	b.n	8000722 <__aeabi_dadd+0x262>
 8000aa2:	1a81      	subs	r1, r0, r2
 8000aa4:	4688      	mov	r8, r1
 8000aa6:	45c1      	cmp	r9, r8
 8000aa8:	41a4      	sbcs	r4, r4
 8000aaa:	1af1      	subs	r1, r6, r3
 8000aac:	4264      	negs	r4, r4
 8000aae:	1b09      	subs	r1, r1, r4
 8000ab0:	2480      	movs	r4, #128	@ 0x80
 8000ab2:	0424      	lsls	r4, r4, #16
 8000ab4:	4221      	tst	r1, r4
 8000ab6:	d077      	beq.n	8000ba8 <__aeabi_dadd+0x6e8>
 8000ab8:	1a10      	subs	r0, r2, r0
 8000aba:	4282      	cmp	r2, r0
 8000abc:	4192      	sbcs	r2, r2
 8000abe:	0007      	movs	r7, r0
 8000ac0:	1b9e      	subs	r6, r3, r6
 8000ac2:	4252      	negs	r2, r2
 8000ac4:	1ab6      	subs	r6, r6, r2
 8000ac6:	4337      	orrs	r7, r6
 8000ac8:	d000      	beq.n	8000acc <__aeabi_dadd+0x60c>
 8000aca:	e0a0      	b.n	8000c0e <__aeabi_dadd+0x74e>
 8000acc:	4665      	mov	r5, ip
 8000ace:	2400      	movs	r4, #0
 8000ad0:	2600      	movs	r6, #0
 8000ad2:	e63e      	b.n	8000752 <__aeabi_dadd+0x292>
 8000ad4:	075f      	lsls	r7, r3, #29
 8000ad6:	08d2      	lsrs	r2, r2, #3
 8000ad8:	4665      	mov	r5, ip
 8000ada:	4317      	orrs	r7, r2
 8000adc:	08d8      	lsrs	r0, r3, #3
 8000ade:	e653      	b.n	8000788 <__aeabi_dadd+0x2c8>
 8000ae0:	1881      	adds	r1, r0, r2
 8000ae2:	4291      	cmp	r1, r2
 8000ae4:	4192      	sbcs	r2, r2
 8000ae6:	18f0      	adds	r0, r6, r3
 8000ae8:	4252      	negs	r2, r2
 8000aea:	1880      	adds	r0, r0, r2
 8000aec:	0203      	lsls	r3, r0, #8
 8000aee:	d500      	bpl.n	8000af2 <__aeabi_dadd+0x632>
 8000af0:	e768      	b.n	80009c4 <__aeabi_dadd+0x504>
 8000af2:	0747      	lsls	r7, r0, #29
 8000af4:	08c9      	lsrs	r1, r1, #3
 8000af6:	430f      	orrs	r7, r1
 8000af8:	08c0      	lsrs	r0, r0, #3
 8000afa:	2101      	movs	r1, #1
 8000afc:	e617      	b.n	800072e <__aeabi_dadd+0x26e>
 8000afe:	08d2      	lsrs	r2, r2, #3
 8000b00:	075f      	lsls	r7, r3, #29
 8000b02:	4317      	orrs	r7, r2
 8000b04:	08d8      	lsrs	r0, r3, #3
 8000b06:	e63f      	b.n	8000788 <__aeabi_dadd+0x2c8>
 8000b08:	000c      	movs	r4, r1
 8000b0a:	2600      	movs	r6, #0
 8000b0c:	2700      	movs	r7, #0
 8000b0e:	e620      	b.n	8000752 <__aeabi_dadd+0x292>
 8000b10:	2900      	cmp	r1, #0
 8000b12:	d156      	bne.n	8000bc2 <__aeabi_dadd+0x702>
 8000b14:	075f      	lsls	r7, r3, #29
 8000b16:	08d2      	lsrs	r2, r2, #3
 8000b18:	4317      	orrs	r7, r2
 8000b1a:	08d8      	lsrs	r0, r3, #3
 8000b1c:	e634      	b.n	8000788 <__aeabi_dadd+0x2c8>
 8000b1e:	000c      	movs	r4, r1
 8000b20:	001e      	movs	r6, r3
 8000b22:	08d0      	lsrs	r0, r2, #3
 8000b24:	e629      	b.n	800077a <__aeabi_dadd+0x2ba>
 8000b26:	08c1      	lsrs	r1, r0, #3
 8000b28:	0770      	lsls	r0, r6, #29
 8000b2a:	4301      	orrs	r1, r0
 8000b2c:	08f0      	lsrs	r0, r6, #3
 8000b2e:	2f00      	cmp	r7, #0
 8000b30:	d062      	beq.n	8000bf8 <__aeabi_dadd+0x738>
 8000b32:	2480      	movs	r4, #128	@ 0x80
 8000b34:	0324      	lsls	r4, r4, #12
 8000b36:	4220      	tst	r0, r4
 8000b38:	d007      	beq.n	8000b4a <__aeabi_dadd+0x68a>
 8000b3a:	08de      	lsrs	r6, r3, #3
 8000b3c:	4226      	tst	r6, r4
 8000b3e:	d104      	bne.n	8000b4a <__aeabi_dadd+0x68a>
 8000b40:	4665      	mov	r5, ip
 8000b42:	0030      	movs	r0, r6
 8000b44:	08d1      	lsrs	r1, r2, #3
 8000b46:	075b      	lsls	r3, r3, #29
 8000b48:	4319      	orrs	r1, r3
 8000b4a:	0f4f      	lsrs	r7, r1, #29
 8000b4c:	00c9      	lsls	r1, r1, #3
 8000b4e:	08c9      	lsrs	r1, r1, #3
 8000b50:	077f      	lsls	r7, r7, #29
 8000b52:	430f      	orrs	r7, r1
 8000b54:	e618      	b.n	8000788 <__aeabi_dadd+0x2c8>
 8000b56:	000c      	movs	r4, r1
 8000b58:	0030      	movs	r0, r6
 8000b5a:	3c20      	subs	r4, #32
 8000b5c:	40e0      	lsrs	r0, r4
 8000b5e:	4684      	mov	ip, r0
 8000b60:	2920      	cmp	r1, #32
 8000b62:	d005      	beq.n	8000b70 <__aeabi_dadd+0x6b0>
 8000b64:	2440      	movs	r4, #64	@ 0x40
 8000b66:	1a61      	subs	r1, r4, r1
 8000b68:	408e      	lsls	r6, r1
 8000b6a:	4649      	mov	r1, r9
 8000b6c:	4331      	orrs	r1, r6
 8000b6e:	4689      	mov	r9, r1
 8000b70:	4648      	mov	r0, r9
 8000b72:	1e41      	subs	r1, r0, #1
 8000b74:	4188      	sbcs	r0, r1
 8000b76:	4661      	mov	r1, ip
 8000b78:	0007      	movs	r7, r0
 8000b7a:	430f      	orrs	r7, r1
 8000b7c:	e630      	b.n	80007e0 <__aeabi_dadd+0x320>
 8000b7e:	2120      	movs	r1, #32
 8000b80:	2700      	movs	r7, #0
 8000b82:	1a09      	subs	r1, r1, r0
 8000b84:	e50e      	b.n	80005a4 <__aeabi_dadd+0xe4>
 8000b86:	001e      	movs	r6, r3
 8000b88:	2f00      	cmp	r7, #0
 8000b8a:	d000      	beq.n	8000b8e <__aeabi_dadd+0x6ce>
 8000b8c:	e522      	b.n	80005d4 <__aeabi_dadd+0x114>
 8000b8e:	2400      	movs	r4, #0
 8000b90:	e758      	b.n	8000a44 <__aeabi_dadd+0x584>
 8000b92:	2500      	movs	r5, #0
 8000b94:	2400      	movs	r4, #0
 8000b96:	2600      	movs	r6, #0
 8000b98:	e5db      	b.n	8000752 <__aeabi_dadd+0x292>
 8000b9a:	46c0      	nop			@ (mov r8, r8)
 8000b9c:	000007fe 	.word	0x000007fe
 8000ba0:	000007ff 	.word	0x000007ff
 8000ba4:	ff7fffff 	.word	0xff7fffff
 8000ba8:	4647      	mov	r7, r8
 8000baa:	430f      	orrs	r7, r1
 8000bac:	d100      	bne.n	8000bb0 <__aeabi_dadd+0x6f0>
 8000bae:	e747      	b.n	8000a40 <__aeabi_dadd+0x580>
 8000bb0:	000e      	movs	r6, r1
 8000bb2:	46c1      	mov	r9, r8
 8000bb4:	e5b5      	b.n	8000722 <__aeabi_dadd+0x262>
 8000bb6:	08df      	lsrs	r7, r3, #3
 8000bb8:	0764      	lsls	r4, r4, #29
 8000bba:	2102      	movs	r1, #2
 8000bbc:	4327      	orrs	r7, r4
 8000bbe:	0900      	lsrs	r0, r0, #4
 8000bc0:	e5b5      	b.n	800072e <__aeabi_dadd+0x26e>
 8000bc2:	0019      	movs	r1, r3
 8000bc4:	08c0      	lsrs	r0, r0, #3
 8000bc6:	0777      	lsls	r7, r6, #29
 8000bc8:	4307      	orrs	r7, r0
 8000bca:	4311      	orrs	r1, r2
 8000bcc:	08f0      	lsrs	r0, r6, #3
 8000bce:	2900      	cmp	r1, #0
 8000bd0:	d100      	bne.n	8000bd4 <__aeabi_dadd+0x714>
 8000bd2:	e5d9      	b.n	8000788 <__aeabi_dadd+0x2c8>
 8000bd4:	2180      	movs	r1, #128	@ 0x80
 8000bd6:	0309      	lsls	r1, r1, #12
 8000bd8:	4208      	tst	r0, r1
 8000bda:	d007      	beq.n	8000bec <__aeabi_dadd+0x72c>
 8000bdc:	08dc      	lsrs	r4, r3, #3
 8000bde:	420c      	tst	r4, r1
 8000be0:	d104      	bne.n	8000bec <__aeabi_dadd+0x72c>
 8000be2:	08d2      	lsrs	r2, r2, #3
 8000be4:	075b      	lsls	r3, r3, #29
 8000be6:	431a      	orrs	r2, r3
 8000be8:	0017      	movs	r7, r2
 8000bea:	0020      	movs	r0, r4
 8000bec:	0f7b      	lsrs	r3, r7, #29
 8000bee:	00ff      	lsls	r7, r7, #3
 8000bf0:	08ff      	lsrs	r7, r7, #3
 8000bf2:	075b      	lsls	r3, r3, #29
 8000bf4:	431f      	orrs	r7, r3
 8000bf6:	e5c7      	b.n	8000788 <__aeabi_dadd+0x2c8>
 8000bf8:	000f      	movs	r7, r1
 8000bfa:	e5c5      	b.n	8000788 <__aeabi_dadd+0x2c8>
 8000bfc:	4b12      	ldr	r3, [pc, #72]	@ (8000c48 <__aeabi_dadd+0x788>)
 8000bfe:	08d2      	lsrs	r2, r2, #3
 8000c00:	4033      	ands	r3, r6
 8000c02:	075f      	lsls	r7, r3, #29
 8000c04:	025b      	lsls	r3, r3, #9
 8000c06:	2401      	movs	r4, #1
 8000c08:	4317      	orrs	r7, r2
 8000c0a:	0b1e      	lsrs	r6, r3, #12
 8000c0c:	e5a1      	b.n	8000752 <__aeabi_dadd+0x292>
 8000c0e:	4226      	tst	r6, r4
 8000c10:	d012      	beq.n	8000c38 <__aeabi_dadd+0x778>
 8000c12:	4b0d      	ldr	r3, [pc, #52]	@ (8000c48 <__aeabi_dadd+0x788>)
 8000c14:	4665      	mov	r5, ip
 8000c16:	0002      	movs	r2, r0
 8000c18:	2401      	movs	r4, #1
 8000c1a:	401e      	ands	r6, r3
 8000c1c:	e4e6      	b.n	80005ec <__aeabi_dadd+0x12c>
 8000c1e:	0021      	movs	r1, r4
 8000c20:	e585      	b.n	800072e <__aeabi_dadd+0x26e>
 8000c22:	0017      	movs	r7, r2
 8000c24:	e5a8      	b.n	8000778 <__aeabi_dadd+0x2b8>
 8000c26:	003a      	movs	r2, r7
 8000c28:	e4d4      	b.n	80005d4 <__aeabi_dadd+0x114>
 8000c2a:	08db      	lsrs	r3, r3, #3
 8000c2c:	0764      	lsls	r4, r4, #29
 8000c2e:	431c      	orrs	r4, r3
 8000c30:	0027      	movs	r7, r4
 8000c32:	2102      	movs	r1, #2
 8000c34:	0900      	lsrs	r0, r0, #4
 8000c36:	e57a      	b.n	800072e <__aeabi_dadd+0x26e>
 8000c38:	08c0      	lsrs	r0, r0, #3
 8000c3a:	0777      	lsls	r7, r6, #29
 8000c3c:	4307      	orrs	r7, r0
 8000c3e:	4665      	mov	r5, ip
 8000c40:	2100      	movs	r1, #0
 8000c42:	08f0      	lsrs	r0, r6, #3
 8000c44:	e573      	b.n	800072e <__aeabi_dadd+0x26e>
 8000c46:	46c0      	nop			@ (mov r8, r8)
 8000c48:	ff7fffff 	.word	0xff7fffff

08000c4c <__aeabi_ddiv>:
 8000c4c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000c4e:	46de      	mov	lr, fp
 8000c50:	4645      	mov	r5, r8
 8000c52:	4657      	mov	r7, sl
 8000c54:	464e      	mov	r6, r9
 8000c56:	b5e0      	push	{r5, r6, r7, lr}
 8000c58:	b087      	sub	sp, #28
 8000c5a:	9200      	str	r2, [sp, #0]
 8000c5c:	9301      	str	r3, [sp, #4]
 8000c5e:	030b      	lsls	r3, r1, #12
 8000c60:	0b1b      	lsrs	r3, r3, #12
 8000c62:	469b      	mov	fp, r3
 8000c64:	0fca      	lsrs	r2, r1, #31
 8000c66:	004b      	lsls	r3, r1, #1
 8000c68:	0004      	movs	r4, r0
 8000c6a:	4680      	mov	r8, r0
 8000c6c:	0d5b      	lsrs	r3, r3, #21
 8000c6e:	9202      	str	r2, [sp, #8]
 8000c70:	d100      	bne.n	8000c74 <__aeabi_ddiv+0x28>
 8000c72:	e098      	b.n	8000da6 <__aeabi_ddiv+0x15a>
 8000c74:	4a7c      	ldr	r2, [pc, #496]	@ (8000e68 <__aeabi_ddiv+0x21c>)
 8000c76:	4293      	cmp	r3, r2
 8000c78:	d037      	beq.n	8000cea <__aeabi_ddiv+0x9e>
 8000c7a:	4659      	mov	r1, fp
 8000c7c:	0f42      	lsrs	r2, r0, #29
 8000c7e:	00c9      	lsls	r1, r1, #3
 8000c80:	430a      	orrs	r2, r1
 8000c82:	2180      	movs	r1, #128	@ 0x80
 8000c84:	0409      	lsls	r1, r1, #16
 8000c86:	4311      	orrs	r1, r2
 8000c88:	00c2      	lsls	r2, r0, #3
 8000c8a:	4690      	mov	r8, r2
 8000c8c:	4a77      	ldr	r2, [pc, #476]	@ (8000e6c <__aeabi_ddiv+0x220>)
 8000c8e:	4689      	mov	r9, r1
 8000c90:	4692      	mov	sl, r2
 8000c92:	449a      	add	sl, r3
 8000c94:	2300      	movs	r3, #0
 8000c96:	2400      	movs	r4, #0
 8000c98:	9303      	str	r3, [sp, #12]
 8000c9a:	9e00      	ldr	r6, [sp, #0]
 8000c9c:	9f01      	ldr	r7, [sp, #4]
 8000c9e:	033b      	lsls	r3, r7, #12
 8000ca0:	0b1b      	lsrs	r3, r3, #12
 8000ca2:	469b      	mov	fp, r3
 8000ca4:	007b      	lsls	r3, r7, #1
 8000ca6:	0030      	movs	r0, r6
 8000ca8:	0d5b      	lsrs	r3, r3, #21
 8000caa:	0ffd      	lsrs	r5, r7, #31
 8000cac:	2b00      	cmp	r3, #0
 8000cae:	d059      	beq.n	8000d64 <__aeabi_ddiv+0x118>
 8000cb0:	4a6d      	ldr	r2, [pc, #436]	@ (8000e68 <__aeabi_ddiv+0x21c>)
 8000cb2:	4293      	cmp	r3, r2
 8000cb4:	d048      	beq.n	8000d48 <__aeabi_ddiv+0xfc>
 8000cb6:	4659      	mov	r1, fp
 8000cb8:	0f72      	lsrs	r2, r6, #29
 8000cba:	00c9      	lsls	r1, r1, #3
 8000cbc:	430a      	orrs	r2, r1
 8000cbe:	2180      	movs	r1, #128	@ 0x80
 8000cc0:	0409      	lsls	r1, r1, #16
 8000cc2:	4311      	orrs	r1, r2
 8000cc4:	468b      	mov	fp, r1
 8000cc6:	4969      	ldr	r1, [pc, #420]	@ (8000e6c <__aeabi_ddiv+0x220>)
 8000cc8:	00f2      	lsls	r2, r6, #3
 8000cca:	468c      	mov	ip, r1
 8000ccc:	4651      	mov	r1, sl
 8000cce:	4463      	add	r3, ip
 8000cd0:	1acb      	subs	r3, r1, r3
 8000cd2:	469a      	mov	sl, r3
 8000cd4:	2100      	movs	r1, #0
 8000cd6:	9e02      	ldr	r6, [sp, #8]
 8000cd8:	406e      	eors	r6, r5
 8000cda:	b2f6      	uxtb	r6, r6
 8000cdc:	2c0f      	cmp	r4, #15
 8000cde:	d900      	bls.n	8000ce2 <__aeabi_ddiv+0x96>
 8000ce0:	e0ce      	b.n	8000e80 <__aeabi_ddiv+0x234>
 8000ce2:	4b63      	ldr	r3, [pc, #396]	@ (8000e70 <__aeabi_ddiv+0x224>)
 8000ce4:	00a4      	lsls	r4, r4, #2
 8000ce6:	591b      	ldr	r3, [r3, r4]
 8000ce8:	469f      	mov	pc, r3
 8000cea:	465a      	mov	r2, fp
 8000cec:	4302      	orrs	r2, r0
 8000cee:	4691      	mov	r9, r2
 8000cf0:	d000      	beq.n	8000cf4 <__aeabi_ddiv+0xa8>
 8000cf2:	e090      	b.n	8000e16 <__aeabi_ddiv+0x1ca>
 8000cf4:	469a      	mov	sl, r3
 8000cf6:	2302      	movs	r3, #2
 8000cf8:	4690      	mov	r8, r2
 8000cfa:	2408      	movs	r4, #8
 8000cfc:	9303      	str	r3, [sp, #12]
 8000cfe:	e7cc      	b.n	8000c9a <__aeabi_ddiv+0x4e>
 8000d00:	46cb      	mov	fp, r9
 8000d02:	4642      	mov	r2, r8
 8000d04:	9d02      	ldr	r5, [sp, #8]
 8000d06:	9903      	ldr	r1, [sp, #12]
 8000d08:	2902      	cmp	r1, #2
 8000d0a:	d100      	bne.n	8000d0e <__aeabi_ddiv+0xc2>
 8000d0c:	e1de      	b.n	80010cc <__aeabi_ddiv+0x480>
 8000d0e:	2903      	cmp	r1, #3
 8000d10:	d100      	bne.n	8000d14 <__aeabi_ddiv+0xc8>
 8000d12:	e08d      	b.n	8000e30 <__aeabi_ddiv+0x1e4>
 8000d14:	2901      	cmp	r1, #1
 8000d16:	d000      	beq.n	8000d1a <__aeabi_ddiv+0xce>
 8000d18:	e179      	b.n	800100e <__aeabi_ddiv+0x3c2>
 8000d1a:	002e      	movs	r6, r5
 8000d1c:	2200      	movs	r2, #0
 8000d1e:	2300      	movs	r3, #0
 8000d20:	2400      	movs	r4, #0
 8000d22:	4690      	mov	r8, r2
 8000d24:	051b      	lsls	r3, r3, #20
 8000d26:	4323      	orrs	r3, r4
 8000d28:	07f6      	lsls	r6, r6, #31
 8000d2a:	4333      	orrs	r3, r6
 8000d2c:	4640      	mov	r0, r8
 8000d2e:	0019      	movs	r1, r3
 8000d30:	b007      	add	sp, #28
 8000d32:	bcf0      	pop	{r4, r5, r6, r7}
 8000d34:	46bb      	mov	fp, r7
 8000d36:	46b2      	mov	sl, r6
 8000d38:	46a9      	mov	r9, r5
 8000d3a:	46a0      	mov	r8, r4
 8000d3c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000d3e:	2200      	movs	r2, #0
 8000d40:	2400      	movs	r4, #0
 8000d42:	4690      	mov	r8, r2
 8000d44:	4b48      	ldr	r3, [pc, #288]	@ (8000e68 <__aeabi_ddiv+0x21c>)
 8000d46:	e7ed      	b.n	8000d24 <__aeabi_ddiv+0xd8>
 8000d48:	465a      	mov	r2, fp
 8000d4a:	9b00      	ldr	r3, [sp, #0]
 8000d4c:	431a      	orrs	r2, r3
 8000d4e:	4b49      	ldr	r3, [pc, #292]	@ (8000e74 <__aeabi_ddiv+0x228>)
 8000d50:	469c      	mov	ip, r3
 8000d52:	44e2      	add	sl, ip
 8000d54:	2a00      	cmp	r2, #0
 8000d56:	d159      	bne.n	8000e0c <__aeabi_ddiv+0x1c0>
 8000d58:	2302      	movs	r3, #2
 8000d5a:	431c      	orrs	r4, r3
 8000d5c:	2300      	movs	r3, #0
 8000d5e:	2102      	movs	r1, #2
 8000d60:	469b      	mov	fp, r3
 8000d62:	e7b8      	b.n	8000cd6 <__aeabi_ddiv+0x8a>
 8000d64:	465a      	mov	r2, fp
 8000d66:	9b00      	ldr	r3, [sp, #0]
 8000d68:	431a      	orrs	r2, r3
 8000d6a:	d049      	beq.n	8000e00 <__aeabi_ddiv+0x1b4>
 8000d6c:	465b      	mov	r3, fp
 8000d6e:	2b00      	cmp	r3, #0
 8000d70:	d100      	bne.n	8000d74 <__aeabi_ddiv+0x128>
 8000d72:	e19c      	b.n	80010ae <__aeabi_ddiv+0x462>
 8000d74:	4658      	mov	r0, fp
 8000d76:	f001 fb21 	bl	80023bc <__clzsi2>
 8000d7a:	0002      	movs	r2, r0
 8000d7c:	0003      	movs	r3, r0
 8000d7e:	3a0b      	subs	r2, #11
 8000d80:	271d      	movs	r7, #29
 8000d82:	9e00      	ldr	r6, [sp, #0]
 8000d84:	1aba      	subs	r2, r7, r2
 8000d86:	0019      	movs	r1, r3
 8000d88:	4658      	mov	r0, fp
 8000d8a:	40d6      	lsrs	r6, r2
 8000d8c:	3908      	subs	r1, #8
 8000d8e:	4088      	lsls	r0, r1
 8000d90:	0032      	movs	r2, r6
 8000d92:	4302      	orrs	r2, r0
 8000d94:	4693      	mov	fp, r2
 8000d96:	9a00      	ldr	r2, [sp, #0]
 8000d98:	408a      	lsls	r2, r1
 8000d9a:	4937      	ldr	r1, [pc, #220]	@ (8000e78 <__aeabi_ddiv+0x22c>)
 8000d9c:	4453      	add	r3, sl
 8000d9e:	468a      	mov	sl, r1
 8000da0:	2100      	movs	r1, #0
 8000da2:	449a      	add	sl, r3
 8000da4:	e797      	b.n	8000cd6 <__aeabi_ddiv+0x8a>
 8000da6:	465b      	mov	r3, fp
 8000da8:	4303      	orrs	r3, r0
 8000daa:	4699      	mov	r9, r3
 8000dac:	d021      	beq.n	8000df2 <__aeabi_ddiv+0x1a6>
 8000dae:	465b      	mov	r3, fp
 8000db0:	2b00      	cmp	r3, #0
 8000db2:	d100      	bne.n	8000db6 <__aeabi_ddiv+0x16a>
 8000db4:	e169      	b.n	800108a <__aeabi_ddiv+0x43e>
 8000db6:	4658      	mov	r0, fp
 8000db8:	f001 fb00 	bl	80023bc <__clzsi2>
 8000dbc:	230b      	movs	r3, #11
 8000dbe:	425b      	negs	r3, r3
 8000dc0:	469c      	mov	ip, r3
 8000dc2:	0002      	movs	r2, r0
 8000dc4:	4484      	add	ip, r0
 8000dc6:	4666      	mov	r6, ip
 8000dc8:	231d      	movs	r3, #29
 8000dca:	1b9b      	subs	r3, r3, r6
 8000dcc:	0026      	movs	r6, r4
 8000dce:	0011      	movs	r1, r2
 8000dd0:	4658      	mov	r0, fp
 8000dd2:	40de      	lsrs	r6, r3
 8000dd4:	3908      	subs	r1, #8
 8000dd6:	4088      	lsls	r0, r1
 8000dd8:	0033      	movs	r3, r6
 8000dda:	4303      	orrs	r3, r0
 8000ddc:	4699      	mov	r9, r3
 8000dde:	0023      	movs	r3, r4
 8000de0:	408b      	lsls	r3, r1
 8000de2:	4698      	mov	r8, r3
 8000de4:	4b25      	ldr	r3, [pc, #148]	@ (8000e7c <__aeabi_ddiv+0x230>)
 8000de6:	2400      	movs	r4, #0
 8000de8:	1a9b      	subs	r3, r3, r2
 8000dea:	469a      	mov	sl, r3
 8000dec:	2300      	movs	r3, #0
 8000dee:	9303      	str	r3, [sp, #12]
 8000df0:	e753      	b.n	8000c9a <__aeabi_ddiv+0x4e>
 8000df2:	2300      	movs	r3, #0
 8000df4:	4698      	mov	r8, r3
 8000df6:	469a      	mov	sl, r3
 8000df8:	3301      	adds	r3, #1
 8000dfa:	2404      	movs	r4, #4
 8000dfc:	9303      	str	r3, [sp, #12]
 8000dfe:	e74c      	b.n	8000c9a <__aeabi_ddiv+0x4e>
 8000e00:	2301      	movs	r3, #1
 8000e02:	431c      	orrs	r4, r3
 8000e04:	2300      	movs	r3, #0
 8000e06:	2101      	movs	r1, #1
 8000e08:	469b      	mov	fp, r3
 8000e0a:	e764      	b.n	8000cd6 <__aeabi_ddiv+0x8a>
 8000e0c:	2303      	movs	r3, #3
 8000e0e:	0032      	movs	r2, r6
 8000e10:	2103      	movs	r1, #3
 8000e12:	431c      	orrs	r4, r3
 8000e14:	e75f      	b.n	8000cd6 <__aeabi_ddiv+0x8a>
 8000e16:	469a      	mov	sl, r3
 8000e18:	2303      	movs	r3, #3
 8000e1a:	46d9      	mov	r9, fp
 8000e1c:	240c      	movs	r4, #12
 8000e1e:	9303      	str	r3, [sp, #12]
 8000e20:	e73b      	b.n	8000c9a <__aeabi_ddiv+0x4e>
 8000e22:	2300      	movs	r3, #0
 8000e24:	2480      	movs	r4, #128	@ 0x80
 8000e26:	4698      	mov	r8, r3
 8000e28:	2600      	movs	r6, #0
 8000e2a:	4b0f      	ldr	r3, [pc, #60]	@ (8000e68 <__aeabi_ddiv+0x21c>)
 8000e2c:	0324      	lsls	r4, r4, #12
 8000e2e:	e779      	b.n	8000d24 <__aeabi_ddiv+0xd8>
 8000e30:	2480      	movs	r4, #128	@ 0x80
 8000e32:	465b      	mov	r3, fp
 8000e34:	0324      	lsls	r4, r4, #12
 8000e36:	431c      	orrs	r4, r3
 8000e38:	0324      	lsls	r4, r4, #12
 8000e3a:	002e      	movs	r6, r5
 8000e3c:	4690      	mov	r8, r2
 8000e3e:	4b0a      	ldr	r3, [pc, #40]	@ (8000e68 <__aeabi_ddiv+0x21c>)
 8000e40:	0b24      	lsrs	r4, r4, #12
 8000e42:	e76f      	b.n	8000d24 <__aeabi_ddiv+0xd8>
 8000e44:	2480      	movs	r4, #128	@ 0x80
 8000e46:	464b      	mov	r3, r9
 8000e48:	0324      	lsls	r4, r4, #12
 8000e4a:	4223      	tst	r3, r4
 8000e4c:	d002      	beq.n	8000e54 <__aeabi_ddiv+0x208>
 8000e4e:	465b      	mov	r3, fp
 8000e50:	4223      	tst	r3, r4
 8000e52:	d0f0      	beq.n	8000e36 <__aeabi_ddiv+0x1ea>
 8000e54:	2480      	movs	r4, #128	@ 0x80
 8000e56:	464b      	mov	r3, r9
 8000e58:	0324      	lsls	r4, r4, #12
 8000e5a:	431c      	orrs	r4, r3
 8000e5c:	0324      	lsls	r4, r4, #12
 8000e5e:	9e02      	ldr	r6, [sp, #8]
 8000e60:	4b01      	ldr	r3, [pc, #4]	@ (8000e68 <__aeabi_ddiv+0x21c>)
 8000e62:	0b24      	lsrs	r4, r4, #12
 8000e64:	e75e      	b.n	8000d24 <__aeabi_ddiv+0xd8>
 8000e66:	46c0      	nop			@ (mov r8, r8)
 8000e68:	000007ff 	.word	0x000007ff
 8000e6c:	fffffc01 	.word	0xfffffc01
 8000e70:	080049e4 	.word	0x080049e4
 8000e74:	fffff801 	.word	0xfffff801
 8000e78:	000003f3 	.word	0x000003f3
 8000e7c:	fffffc0d 	.word	0xfffffc0d
 8000e80:	45cb      	cmp	fp, r9
 8000e82:	d200      	bcs.n	8000e86 <__aeabi_ddiv+0x23a>
 8000e84:	e0f8      	b.n	8001078 <__aeabi_ddiv+0x42c>
 8000e86:	d100      	bne.n	8000e8a <__aeabi_ddiv+0x23e>
 8000e88:	e0f3      	b.n	8001072 <__aeabi_ddiv+0x426>
 8000e8a:	2301      	movs	r3, #1
 8000e8c:	425b      	negs	r3, r3
 8000e8e:	469c      	mov	ip, r3
 8000e90:	4644      	mov	r4, r8
 8000e92:	4648      	mov	r0, r9
 8000e94:	2500      	movs	r5, #0
 8000e96:	44e2      	add	sl, ip
 8000e98:	465b      	mov	r3, fp
 8000e9a:	0e17      	lsrs	r7, r2, #24
 8000e9c:	021b      	lsls	r3, r3, #8
 8000e9e:	431f      	orrs	r7, r3
 8000ea0:	0c19      	lsrs	r1, r3, #16
 8000ea2:	043b      	lsls	r3, r7, #16
 8000ea4:	0212      	lsls	r2, r2, #8
 8000ea6:	9700      	str	r7, [sp, #0]
 8000ea8:	0c1f      	lsrs	r7, r3, #16
 8000eaa:	4691      	mov	r9, r2
 8000eac:	9102      	str	r1, [sp, #8]
 8000eae:	9703      	str	r7, [sp, #12]
 8000eb0:	f7ff f9ba 	bl	8000228 <__aeabi_uidivmod>
 8000eb4:	0002      	movs	r2, r0
 8000eb6:	437a      	muls	r2, r7
 8000eb8:	040b      	lsls	r3, r1, #16
 8000eba:	0c21      	lsrs	r1, r4, #16
 8000ebc:	4680      	mov	r8, r0
 8000ebe:	4319      	orrs	r1, r3
 8000ec0:	428a      	cmp	r2, r1
 8000ec2:	d909      	bls.n	8000ed8 <__aeabi_ddiv+0x28c>
 8000ec4:	9f00      	ldr	r7, [sp, #0]
 8000ec6:	2301      	movs	r3, #1
 8000ec8:	46bc      	mov	ip, r7
 8000eca:	425b      	negs	r3, r3
 8000ecc:	4461      	add	r1, ip
 8000ece:	469c      	mov	ip, r3
 8000ed0:	44e0      	add	r8, ip
 8000ed2:	428f      	cmp	r7, r1
 8000ed4:	d800      	bhi.n	8000ed8 <__aeabi_ddiv+0x28c>
 8000ed6:	e15c      	b.n	8001192 <__aeabi_ddiv+0x546>
 8000ed8:	1a88      	subs	r0, r1, r2
 8000eda:	9902      	ldr	r1, [sp, #8]
 8000edc:	f7ff f9a4 	bl	8000228 <__aeabi_uidivmod>
 8000ee0:	9a03      	ldr	r2, [sp, #12]
 8000ee2:	0424      	lsls	r4, r4, #16
 8000ee4:	4342      	muls	r2, r0
 8000ee6:	0409      	lsls	r1, r1, #16
 8000ee8:	0c24      	lsrs	r4, r4, #16
 8000eea:	0003      	movs	r3, r0
 8000eec:	430c      	orrs	r4, r1
 8000eee:	42a2      	cmp	r2, r4
 8000ef0:	d906      	bls.n	8000f00 <__aeabi_ddiv+0x2b4>
 8000ef2:	9900      	ldr	r1, [sp, #0]
 8000ef4:	3b01      	subs	r3, #1
 8000ef6:	468c      	mov	ip, r1
 8000ef8:	4464      	add	r4, ip
 8000efa:	42a1      	cmp	r1, r4
 8000efc:	d800      	bhi.n	8000f00 <__aeabi_ddiv+0x2b4>
 8000efe:	e142      	b.n	8001186 <__aeabi_ddiv+0x53a>
 8000f00:	1aa0      	subs	r0, r4, r2
 8000f02:	4642      	mov	r2, r8
 8000f04:	0412      	lsls	r2, r2, #16
 8000f06:	431a      	orrs	r2, r3
 8000f08:	4693      	mov	fp, r2
 8000f0a:	464b      	mov	r3, r9
 8000f0c:	4659      	mov	r1, fp
 8000f0e:	0c1b      	lsrs	r3, r3, #16
 8000f10:	001f      	movs	r7, r3
 8000f12:	9304      	str	r3, [sp, #16]
 8000f14:	040b      	lsls	r3, r1, #16
 8000f16:	4649      	mov	r1, r9
 8000f18:	0409      	lsls	r1, r1, #16
 8000f1a:	0c09      	lsrs	r1, r1, #16
 8000f1c:	000c      	movs	r4, r1
 8000f1e:	0c1b      	lsrs	r3, r3, #16
 8000f20:	435c      	muls	r4, r3
 8000f22:	0c12      	lsrs	r2, r2, #16
 8000f24:	437b      	muls	r3, r7
 8000f26:	4688      	mov	r8, r1
 8000f28:	4351      	muls	r1, r2
 8000f2a:	437a      	muls	r2, r7
 8000f2c:	0c27      	lsrs	r7, r4, #16
 8000f2e:	46bc      	mov	ip, r7
 8000f30:	185b      	adds	r3, r3, r1
 8000f32:	4463      	add	r3, ip
 8000f34:	4299      	cmp	r1, r3
 8000f36:	d903      	bls.n	8000f40 <__aeabi_ddiv+0x2f4>
 8000f38:	2180      	movs	r1, #128	@ 0x80
 8000f3a:	0249      	lsls	r1, r1, #9
 8000f3c:	468c      	mov	ip, r1
 8000f3e:	4462      	add	r2, ip
 8000f40:	0c19      	lsrs	r1, r3, #16
 8000f42:	0424      	lsls	r4, r4, #16
 8000f44:	041b      	lsls	r3, r3, #16
 8000f46:	0c24      	lsrs	r4, r4, #16
 8000f48:	188a      	adds	r2, r1, r2
 8000f4a:	191c      	adds	r4, r3, r4
 8000f4c:	4290      	cmp	r0, r2
 8000f4e:	d302      	bcc.n	8000f56 <__aeabi_ddiv+0x30a>
 8000f50:	d116      	bne.n	8000f80 <__aeabi_ddiv+0x334>
 8000f52:	42a5      	cmp	r5, r4
 8000f54:	d214      	bcs.n	8000f80 <__aeabi_ddiv+0x334>
 8000f56:	465b      	mov	r3, fp
 8000f58:	9f00      	ldr	r7, [sp, #0]
 8000f5a:	3b01      	subs	r3, #1
 8000f5c:	444d      	add	r5, r9
 8000f5e:	9305      	str	r3, [sp, #20]
 8000f60:	454d      	cmp	r5, r9
 8000f62:	419b      	sbcs	r3, r3
 8000f64:	46bc      	mov	ip, r7
 8000f66:	425b      	negs	r3, r3
 8000f68:	4463      	add	r3, ip
 8000f6a:	18c0      	adds	r0, r0, r3
 8000f6c:	4287      	cmp	r7, r0
 8000f6e:	d300      	bcc.n	8000f72 <__aeabi_ddiv+0x326>
 8000f70:	e102      	b.n	8001178 <__aeabi_ddiv+0x52c>
 8000f72:	4282      	cmp	r2, r0
 8000f74:	d900      	bls.n	8000f78 <__aeabi_ddiv+0x32c>
 8000f76:	e129      	b.n	80011cc <__aeabi_ddiv+0x580>
 8000f78:	d100      	bne.n	8000f7c <__aeabi_ddiv+0x330>
 8000f7a:	e124      	b.n	80011c6 <__aeabi_ddiv+0x57a>
 8000f7c:	9b05      	ldr	r3, [sp, #20]
 8000f7e:	469b      	mov	fp, r3
 8000f80:	1b2c      	subs	r4, r5, r4
 8000f82:	42a5      	cmp	r5, r4
 8000f84:	41ad      	sbcs	r5, r5
 8000f86:	9b00      	ldr	r3, [sp, #0]
 8000f88:	1a80      	subs	r0, r0, r2
 8000f8a:	426d      	negs	r5, r5
 8000f8c:	1b40      	subs	r0, r0, r5
 8000f8e:	4283      	cmp	r3, r0
 8000f90:	d100      	bne.n	8000f94 <__aeabi_ddiv+0x348>
 8000f92:	e10f      	b.n	80011b4 <__aeabi_ddiv+0x568>
 8000f94:	9902      	ldr	r1, [sp, #8]
 8000f96:	f7ff f947 	bl	8000228 <__aeabi_uidivmod>
 8000f9a:	9a03      	ldr	r2, [sp, #12]
 8000f9c:	040b      	lsls	r3, r1, #16
 8000f9e:	4342      	muls	r2, r0
 8000fa0:	0c21      	lsrs	r1, r4, #16
 8000fa2:	0005      	movs	r5, r0
 8000fa4:	4319      	orrs	r1, r3
 8000fa6:	428a      	cmp	r2, r1
 8000fa8:	d900      	bls.n	8000fac <__aeabi_ddiv+0x360>
 8000faa:	e0cb      	b.n	8001144 <__aeabi_ddiv+0x4f8>
 8000fac:	1a88      	subs	r0, r1, r2
 8000fae:	9902      	ldr	r1, [sp, #8]
 8000fb0:	f7ff f93a 	bl	8000228 <__aeabi_uidivmod>
 8000fb4:	9a03      	ldr	r2, [sp, #12]
 8000fb6:	0424      	lsls	r4, r4, #16
 8000fb8:	4342      	muls	r2, r0
 8000fba:	0409      	lsls	r1, r1, #16
 8000fbc:	0c24      	lsrs	r4, r4, #16
 8000fbe:	0003      	movs	r3, r0
 8000fc0:	430c      	orrs	r4, r1
 8000fc2:	42a2      	cmp	r2, r4
 8000fc4:	d900      	bls.n	8000fc8 <__aeabi_ddiv+0x37c>
 8000fc6:	e0ca      	b.n	800115e <__aeabi_ddiv+0x512>
 8000fc8:	4641      	mov	r1, r8
 8000fca:	1aa4      	subs	r4, r4, r2
 8000fcc:	042a      	lsls	r2, r5, #16
 8000fce:	431a      	orrs	r2, r3
 8000fd0:	9f04      	ldr	r7, [sp, #16]
 8000fd2:	0413      	lsls	r3, r2, #16
 8000fd4:	0c1b      	lsrs	r3, r3, #16
 8000fd6:	4359      	muls	r1, r3
 8000fd8:	4640      	mov	r0, r8
 8000fda:	437b      	muls	r3, r7
 8000fdc:	469c      	mov	ip, r3
 8000fde:	0c15      	lsrs	r5, r2, #16
 8000fe0:	4368      	muls	r0, r5
 8000fe2:	0c0b      	lsrs	r3, r1, #16
 8000fe4:	4484      	add	ip, r0
 8000fe6:	4463      	add	r3, ip
 8000fe8:	437d      	muls	r5, r7
 8000fea:	4298      	cmp	r0, r3
 8000fec:	d903      	bls.n	8000ff6 <__aeabi_ddiv+0x3aa>
 8000fee:	2080      	movs	r0, #128	@ 0x80
 8000ff0:	0240      	lsls	r0, r0, #9
 8000ff2:	4684      	mov	ip, r0
 8000ff4:	4465      	add	r5, ip
 8000ff6:	0c18      	lsrs	r0, r3, #16
 8000ff8:	0409      	lsls	r1, r1, #16
 8000ffa:	041b      	lsls	r3, r3, #16
 8000ffc:	0c09      	lsrs	r1, r1, #16
 8000ffe:	1940      	adds	r0, r0, r5
 8001000:	185b      	adds	r3, r3, r1
 8001002:	4284      	cmp	r4, r0
 8001004:	d327      	bcc.n	8001056 <__aeabi_ddiv+0x40a>
 8001006:	d023      	beq.n	8001050 <__aeabi_ddiv+0x404>
 8001008:	2301      	movs	r3, #1
 800100a:	0035      	movs	r5, r6
 800100c:	431a      	orrs	r2, r3
 800100e:	4b94      	ldr	r3, [pc, #592]	@ (8001260 <__aeabi_ddiv+0x614>)
 8001010:	4453      	add	r3, sl
 8001012:	2b00      	cmp	r3, #0
 8001014:	dd60      	ble.n	80010d8 <__aeabi_ddiv+0x48c>
 8001016:	0751      	lsls	r1, r2, #29
 8001018:	d000      	beq.n	800101c <__aeabi_ddiv+0x3d0>
 800101a:	e086      	b.n	800112a <__aeabi_ddiv+0x4de>
 800101c:	002e      	movs	r6, r5
 800101e:	08d1      	lsrs	r1, r2, #3
 8001020:	465a      	mov	r2, fp
 8001022:	01d2      	lsls	r2, r2, #7
 8001024:	d506      	bpl.n	8001034 <__aeabi_ddiv+0x3e8>
 8001026:	465a      	mov	r2, fp
 8001028:	4b8e      	ldr	r3, [pc, #568]	@ (8001264 <__aeabi_ddiv+0x618>)
 800102a:	401a      	ands	r2, r3
 800102c:	2380      	movs	r3, #128	@ 0x80
 800102e:	4693      	mov	fp, r2
 8001030:	00db      	lsls	r3, r3, #3
 8001032:	4453      	add	r3, sl
 8001034:	4a8c      	ldr	r2, [pc, #560]	@ (8001268 <__aeabi_ddiv+0x61c>)
 8001036:	4293      	cmp	r3, r2
 8001038:	dd00      	ble.n	800103c <__aeabi_ddiv+0x3f0>
 800103a:	e680      	b.n	8000d3e <__aeabi_ddiv+0xf2>
 800103c:	465a      	mov	r2, fp
 800103e:	0752      	lsls	r2, r2, #29
 8001040:	430a      	orrs	r2, r1
 8001042:	4690      	mov	r8, r2
 8001044:	465a      	mov	r2, fp
 8001046:	055b      	lsls	r3, r3, #21
 8001048:	0254      	lsls	r4, r2, #9
 800104a:	0b24      	lsrs	r4, r4, #12
 800104c:	0d5b      	lsrs	r3, r3, #21
 800104e:	e669      	b.n	8000d24 <__aeabi_ddiv+0xd8>
 8001050:	0035      	movs	r5, r6
 8001052:	2b00      	cmp	r3, #0
 8001054:	d0db      	beq.n	800100e <__aeabi_ddiv+0x3c2>
 8001056:	9d00      	ldr	r5, [sp, #0]
 8001058:	1e51      	subs	r1, r2, #1
 800105a:	46ac      	mov	ip, r5
 800105c:	4464      	add	r4, ip
 800105e:	42ac      	cmp	r4, r5
 8001060:	d200      	bcs.n	8001064 <__aeabi_ddiv+0x418>
 8001062:	e09e      	b.n	80011a2 <__aeabi_ddiv+0x556>
 8001064:	4284      	cmp	r4, r0
 8001066:	d200      	bcs.n	800106a <__aeabi_ddiv+0x41e>
 8001068:	e0e1      	b.n	800122e <__aeabi_ddiv+0x5e2>
 800106a:	d100      	bne.n	800106e <__aeabi_ddiv+0x422>
 800106c:	e0ee      	b.n	800124c <__aeabi_ddiv+0x600>
 800106e:	000a      	movs	r2, r1
 8001070:	e7ca      	b.n	8001008 <__aeabi_ddiv+0x3bc>
 8001072:	4542      	cmp	r2, r8
 8001074:	d900      	bls.n	8001078 <__aeabi_ddiv+0x42c>
 8001076:	e708      	b.n	8000e8a <__aeabi_ddiv+0x23e>
 8001078:	464b      	mov	r3, r9
 800107a:	07dc      	lsls	r4, r3, #31
 800107c:	0858      	lsrs	r0, r3, #1
 800107e:	4643      	mov	r3, r8
 8001080:	085b      	lsrs	r3, r3, #1
 8001082:	431c      	orrs	r4, r3
 8001084:	4643      	mov	r3, r8
 8001086:	07dd      	lsls	r5, r3, #31
 8001088:	e706      	b.n	8000e98 <__aeabi_ddiv+0x24c>
 800108a:	f001 f997 	bl	80023bc <__clzsi2>
 800108e:	2315      	movs	r3, #21
 8001090:	469c      	mov	ip, r3
 8001092:	4484      	add	ip, r0
 8001094:	0002      	movs	r2, r0
 8001096:	4663      	mov	r3, ip
 8001098:	3220      	adds	r2, #32
 800109a:	2b1c      	cmp	r3, #28
 800109c:	dc00      	bgt.n	80010a0 <__aeabi_ddiv+0x454>
 800109e:	e692      	b.n	8000dc6 <__aeabi_ddiv+0x17a>
 80010a0:	0023      	movs	r3, r4
 80010a2:	3808      	subs	r0, #8
 80010a4:	4083      	lsls	r3, r0
 80010a6:	4699      	mov	r9, r3
 80010a8:	2300      	movs	r3, #0
 80010aa:	4698      	mov	r8, r3
 80010ac:	e69a      	b.n	8000de4 <__aeabi_ddiv+0x198>
 80010ae:	f001 f985 	bl	80023bc <__clzsi2>
 80010b2:	0002      	movs	r2, r0
 80010b4:	0003      	movs	r3, r0
 80010b6:	3215      	adds	r2, #21
 80010b8:	3320      	adds	r3, #32
 80010ba:	2a1c      	cmp	r2, #28
 80010bc:	dc00      	bgt.n	80010c0 <__aeabi_ddiv+0x474>
 80010be:	e65f      	b.n	8000d80 <__aeabi_ddiv+0x134>
 80010c0:	9900      	ldr	r1, [sp, #0]
 80010c2:	3808      	subs	r0, #8
 80010c4:	4081      	lsls	r1, r0
 80010c6:	2200      	movs	r2, #0
 80010c8:	468b      	mov	fp, r1
 80010ca:	e666      	b.n	8000d9a <__aeabi_ddiv+0x14e>
 80010cc:	2200      	movs	r2, #0
 80010ce:	002e      	movs	r6, r5
 80010d0:	2400      	movs	r4, #0
 80010d2:	4690      	mov	r8, r2
 80010d4:	4b65      	ldr	r3, [pc, #404]	@ (800126c <__aeabi_ddiv+0x620>)
 80010d6:	e625      	b.n	8000d24 <__aeabi_ddiv+0xd8>
 80010d8:	002e      	movs	r6, r5
 80010da:	2101      	movs	r1, #1
 80010dc:	1ac9      	subs	r1, r1, r3
 80010de:	2938      	cmp	r1, #56	@ 0x38
 80010e0:	dd00      	ble.n	80010e4 <__aeabi_ddiv+0x498>
 80010e2:	e61b      	b.n	8000d1c <__aeabi_ddiv+0xd0>
 80010e4:	291f      	cmp	r1, #31
 80010e6:	dc7e      	bgt.n	80011e6 <__aeabi_ddiv+0x59a>
 80010e8:	4861      	ldr	r0, [pc, #388]	@ (8001270 <__aeabi_ddiv+0x624>)
 80010ea:	0014      	movs	r4, r2
 80010ec:	4450      	add	r0, sl
 80010ee:	465b      	mov	r3, fp
 80010f0:	4082      	lsls	r2, r0
 80010f2:	4083      	lsls	r3, r0
 80010f4:	40cc      	lsrs	r4, r1
 80010f6:	1e50      	subs	r0, r2, #1
 80010f8:	4182      	sbcs	r2, r0
 80010fa:	4323      	orrs	r3, r4
 80010fc:	431a      	orrs	r2, r3
 80010fe:	465b      	mov	r3, fp
 8001100:	40cb      	lsrs	r3, r1
 8001102:	0751      	lsls	r1, r2, #29
 8001104:	d009      	beq.n	800111a <__aeabi_ddiv+0x4ce>
 8001106:	210f      	movs	r1, #15
 8001108:	4011      	ands	r1, r2
 800110a:	2904      	cmp	r1, #4
 800110c:	d005      	beq.n	800111a <__aeabi_ddiv+0x4ce>
 800110e:	1d11      	adds	r1, r2, #4
 8001110:	4291      	cmp	r1, r2
 8001112:	4192      	sbcs	r2, r2
 8001114:	4252      	negs	r2, r2
 8001116:	189b      	adds	r3, r3, r2
 8001118:	000a      	movs	r2, r1
 800111a:	0219      	lsls	r1, r3, #8
 800111c:	d400      	bmi.n	8001120 <__aeabi_ddiv+0x4d4>
 800111e:	e09b      	b.n	8001258 <__aeabi_ddiv+0x60c>
 8001120:	2200      	movs	r2, #0
 8001122:	2301      	movs	r3, #1
 8001124:	2400      	movs	r4, #0
 8001126:	4690      	mov	r8, r2
 8001128:	e5fc      	b.n	8000d24 <__aeabi_ddiv+0xd8>
 800112a:	210f      	movs	r1, #15
 800112c:	4011      	ands	r1, r2
 800112e:	2904      	cmp	r1, #4
 8001130:	d100      	bne.n	8001134 <__aeabi_ddiv+0x4e8>
 8001132:	e773      	b.n	800101c <__aeabi_ddiv+0x3d0>
 8001134:	1d11      	adds	r1, r2, #4
 8001136:	4291      	cmp	r1, r2
 8001138:	4192      	sbcs	r2, r2
 800113a:	4252      	negs	r2, r2
 800113c:	002e      	movs	r6, r5
 800113e:	08c9      	lsrs	r1, r1, #3
 8001140:	4493      	add	fp, r2
 8001142:	e76d      	b.n	8001020 <__aeabi_ddiv+0x3d4>
 8001144:	9b00      	ldr	r3, [sp, #0]
 8001146:	3d01      	subs	r5, #1
 8001148:	469c      	mov	ip, r3
 800114a:	4461      	add	r1, ip
 800114c:	428b      	cmp	r3, r1
 800114e:	d900      	bls.n	8001152 <__aeabi_ddiv+0x506>
 8001150:	e72c      	b.n	8000fac <__aeabi_ddiv+0x360>
 8001152:	428a      	cmp	r2, r1
 8001154:	d800      	bhi.n	8001158 <__aeabi_ddiv+0x50c>
 8001156:	e729      	b.n	8000fac <__aeabi_ddiv+0x360>
 8001158:	1e85      	subs	r5, r0, #2
 800115a:	4461      	add	r1, ip
 800115c:	e726      	b.n	8000fac <__aeabi_ddiv+0x360>
 800115e:	9900      	ldr	r1, [sp, #0]
 8001160:	3b01      	subs	r3, #1
 8001162:	468c      	mov	ip, r1
 8001164:	4464      	add	r4, ip
 8001166:	42a1      	cmp	r1, r4
 8001168:	d900      	bls.n	800116c <__aeabi_ddiv+0x520>
 800116a:	e72d      	b.n	8000fc8 <__aeabi_ddiv+0x37c>
 800116c:	42a2      	cmp	r2, r4
 800116e:	d800      	bhi.n	8001172 <__aeabi_ddiv+0x526>
 8001170:	e72a      	b.n	8000fc8 <__aeabi_ddiv+0x37c>
 8001172:	1e83      	subs	r3, r0, #2
 8001174:	4464      	add	r4, ip
 8001176:	e727      	b.n	8000fc8 <__aeabi_ddiv+0x37c>
 8001178:	4287      	cmp	r7, r0
 800117a:	d000      	beq.n	800117e <__aeabi_ddiv+0x532>
 800117c:	e6fe      	b.n	8000f7c <__aeabi_ddiv+0x330>
 800117e:	45a9      	cmp	r9, r5
 8001180:	d900      	bls.n	8001184 <__aeabi_ddiv+0x538>
 8001182:	e6fb      	b.n	8000f7c <__aeabi_ddiv+0x330>
 8001184:	e6f5      	b.n	8000f72 <__aeabi_ddiv+0x326>
 8001186:	42a2      	cmp	r2, r4
 8001188:	d800      	bhi.n	800118c <__aeabi_ddiv+0x540>
 800118a:	e6b9      	b.n	8000f00 <__aeabi_ddiv+0x2b4>
 800118c:	1e83      	subs	r3, r0, #2
 800118e:	4464      	add	r4, ip
 8001190:	e6b6      	b.n	8000f00 <__aeabi_ddiv+0x2b4>
 8001192:	428a      	cmp	r2, r1
 8001194:	d800      	bhi.n	8001198 <__aeabi_ddiv+0x54c>
 8001196:	e69f      	b.n	8000ed8 <__aeabi_ddiv+0x28c>
 8001198:	46bc      	mov	ip, r7
 800119a:	1e83      	subs	r3, r0, #2
 800119c:	4698      	mov	r8, r3
 800119e:	4461      	add	r1, ip
 80011a0:	e69a      	b.n	8000ed8 <__aeabi_ddiv+0x28c>
 80011a2:	000a      	movs	r2, r1
 80011a4:	4284      	cmp	r4, r0
 80011a6:	d000      	beq.n	80011aa <__aeabi_ddiv+0x55e>
 80011a8:	e72e      	b.n	8001008 <__aeabi_ddiv+0x3bc>
 80011aa:	454b      	cmp	r3, r9
 80011ac:	d000      	beq.n	80011b0 <__aeabi_ddiv+0x564>
 80011ae:	e72b      	b.n	8001008 <__aeabi_ddiv+0x3bc>
 80011b0:	0035      	movs	r5, r6
 80011b2:	e72c      	b.n	800100e <__aeabi_ddiv+0x3c2>
 80011b4:	4b2a      	ldr	r3, [pc, #168]	@ (8001260 <__aeabi_ddiv+0x614>)
 80011b6:	4a2f      	ldr	r2, [pc, #188]	@ (8001274 <__aeabi_ddiv+0x628>)
 80011b8:	4453      	add	r3, sl
 80011ba:	4592      	cmp	sl, r2
 80011bc:	db43      	blt.n	8001246 <__aeabi_ddiv+0x5fa>
 80011be:	2201      	movs	r2, #1
 80011c0:	2100      	movs	r1, #0
 80011c2:	4493      	add	fp, r2
 80011c4:	e72c      	b.n	8001020 <__aeabi_ddiv+0x3d4>
 80011c6:	42ac      	cmp	r4, r5
 80011c8:	d800      	bhi.n	80011cc <__aeabi_ddiv+0x580>
 80011ca:	e6d7      	b.n	8000f7c <__aeabi_ddiv+0x330>
 80011cc:	2302      	movs	r3, #2
 80011ce:	425b      	negs	r3, r3
 80011d0:	469c      	mov	ip, r3
 80011d2:	9900      	ldr	r1, [sp, #0]
 80011d4:	444d      	add	r5, r9
 80011d6:	454d      	cmp	r5, r9
 80011d8:	419b      	sbcs	r3, r3
 80011da:	44e3      	add	fp, ip
 80011dc:	468c      	mov	ip, r1
 80011de:	425b      	negs	r3, r3
 80011e0:	4463      	add	r3, ip
 80011e2:	18c0      	adds	r0, r0, r3
 80011e4:	e6cc      	b.n	8000f80 <__aeabi_ddiv+0x334>
 80011e6:	201f      	movs	r0, #31
 80011e8:	4240      	negs	r0, r0
 80011ea:	1ac3      	subs	r3, r0, r3
 80011ec:	4658      	mov	r0, fp
 80011ee:	40d8      	lsrs	r0, r3
 80011f0:	2920      	cmp	r1, #32
 80011f2:	d004      	beq.n	80011fe <__aeabi_ddiv+0x5b2>
 80011f4:	4659      	mov	r1, fp
 80011f6:	4b20      	ldr	r3, [pc, #128]	@ (8001278 <__aeabi_ddiv+0x62c>)
 80011f8:	4453      	add	r3, sl
 80011fa:	4099      	lsls	r1, r3
 80011fc:	430a      	orrs	r2, r1
 80011fe:	1e53      	subs	r3, r2, #1
 8001200:	419a      	sbcs	r2, r3
 8001202:	2307      	movs	r3, #7
 8001204:	0019      	movs	r1, r3
 8001206:	4302      	orrs	r2, r0
 8001208:	2400      	movs	r4, #0
 800120a:	4011      	ands	r1, r2
 800120c:	4213      	tst	r3, r2
 800120e:	d009      	beq.n	8001224 <__aeabi_ddiv+0x5d8>
 8001210:	3308      	adds	r3, #8
 8001212:	4013      	ands	r3, r2
 8001214:	2b04      	cmp	r3, #4
 8001216:	d01d      	beq.n	8001254 <__aeabi_ddiv+0x608>
 8001218:	1d13      	adds	r3, r2, #4
 800121a:	4293      	cmp	r3, r2
 800121c:	4189      	sbcs	r1, r1
 800121e:	001a      	movs	r2, r3
 8001220:	4249      	negs	r1, r1
 8001222:	0749      	lsls	r1, r1, #29
 8001224:	08d2      	lsrs	r2, r2, #3
 8001226:	430a      	orrs	r2, r1
 8001228:	4690      	mov	r8, r2
 800122a:	2300      	movs	r3, #0
 800122c:	e57a      	b.n	8000d24 <__aeabi_ddiv+0xd8>
 800122e:	4649      	mov	r1, r9
 8001230:	9f00      	ldr	r7, [sp, #0]
 8001232:	004d      	lsls	r5, r1, #1
 8001234:	454d      	cmp	r5, r9
 8001236:	4189      	sbcs	r1, r1
 8001238:	46bc      	mov	ip, r7
 800123a:	4249      	negs	r1, r1
 800123c:	4461      	add	r1, ip
 800123e:	46a9      	mov	r9, r5
 8001240:	3a02      	subs	r2, #2
 8001242:	1864      	adds	r4, r4, r1
 8001244:	e7ae      	b.n	80011a4 <__aeabi_ddiv+0x558>
 8001246:	2201      	movs	r2, #1
 8001248:	4252      	negs	r2, r2
 800124a:	e746      	b.n	80010da <__aeabi_ddiv+0x48e>
 800124c:	4599      	cmp	r9, r3
 800124e:	d3ee      	bcc.n	800122e <__aeabi_ddiv+0x5e2>
 8001250:	000a      	movs	r2, r1
 8001252:	e7aa      	b.n	80011aa <__aeabi_ddiv+0x55e>
 8001254:	2100      	movs	r1, #0
 8001256:	e7e5      	b.n	8001224 <__aeabi_ddiv+0x5d8>
 8001258:	0759      	lsls	r1, r3, #29
 800125a:	025b      	lsls	r3, r3, #9
 800125c:	0b1c      	lsrs	r4, r3, #12
 800125e:	e7e1      	b.n	8001224 <__aeabi_ddiv+0x5d8>
 8001260:	000003ff 	.word	0x000003ff
 8001264:	feffffff 	.word	0xfeffffff
 8001268:	000007fe 	.word	0x000007fe
 800126c:	000007ff 	.word	0x000007ff
 8001270:	0000041e 	.word	0x0000041e
 8001274:	fffffc02 	.word	0xfffffc02
 8001278:	0000043e 	.word	0x0000043e

0800127c <__eqdf2>:
 800127c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800127e:	4657      	mov	r7, sl
 8001280:	46de      	mov	lr, fp
 8001282:	464e      	mov	r6, r9
 8001284:	4645      	mov	r5, r8
 8001286:	b5e0      	push	{r5, r6, r7, lr}
 8001288:	000d      	movs	r5, r1
 800128a:	0004      	movs	r4, r0
 800128c:	0fe8      	lsrs	r0, r5, #31
 800128e:	4683      	mov	fp, r0
 8001290:	0309      	lsls	r1, r1, #12
 8001292:	0fd8      	lsrs	r0, r3, #31
 8001294:	0b09      	lsrs	r1, r1, #12
 8001296:	4682      	mov	sl, r0
 8001298:	4819      	ldr	r0, [pc, #100]	@ (8001300 <__eqdf2+0x84>)
 800129a:	468c      	mov	ip, r1
 800129c:	031f      	lsls	r7, r3, #12
 800129e:	0069      	lsls	r1, r5, #1
 80012a0:	005e      	lsls	r6, r3, #1
 80012a2:	0d49      	lsrs	r1, r1, #21
 80012a4:	0b3f      	lsrs	r7, r7, #12
 80012a6:	0d76      	lsrs	r6, r6, #21
 80012a8:	4281      	cmp	r1, r0
 80012aa:	d018      	beq.n	80012de <__eqdf2+0x62>
 80012ac:	4286      	cmp	r6, r0
 80012ae:	d00f      	beq.n	80012d0 <__eqdf2+0x54>
 80012b0:	2001      	movs	r0, #1
 80012b2:	42b1      	cmp	r1, r6
 80012b4:	d10d      	bne.n	80012d2 <__eqdf2+0x56>
 80012b6:	45bc      	cmp	ip, r7
 80012b8:	d10b      	bne.n	80012d2 <__eqdf2+0x56>
 80012ba:	4294      	cmp	r4, r2
 80012bc:	d109      	bne.n	80012d2 <__eqdf2+0x56>
 80012be:	45d3      	cmp	fp, sl
 80012c0:	d01c      	beq.n	80012fc <__eqdf2+0x80>
 80012c2:	2900      	cmp	r1, #0
 80012c4:	d105      	bne.n	80012d2 <__eqdf2+0x56>
 80012c6:	4660      	mov	r0, ip
 80012c8:	4320      	orrs	r0, r4
 80012ca:	1e43      	subs	r3, r0, #1
 80012cc:	4198      	sbcs	r0, r3
 80012ce:	e000      	b.n	80012d2 <__eqdf2+0x56>
 80012d0:	2001      	movs	r0, #1
 80012d2:	bcf0      	pop	{r4, r5, r6, r7}
 80012d4:	46bb      	mov	fp, r7
 80012d6:	46b2      	mov	sl, r6
 80012d8:	46a9      	mov	r9, r5
 80012da:	46a0      	mov	r8, r4
 80012dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80012de:	2001      	movs	r0, #1
 80012e0:	428e      	cmp	r6, r1
 80012e2:	d1f6      	bne.n	80012d2 <__eqdf2+0x56>
 80012e4:	4661      	mov	r1, ip
 80012e6:	4339      	orrs	r1, r7
 80012e8:	000f      	movs	r7, r1
 80012ea:	4317      	orrs	r7, r2
 80012ec:	4327      	orrs	r7, r4
 80012ee:	d1f0      	bne.n	80012d2 <__eqdf2+0x56>
 80012f0:	465b      	mov	r3, fp
 80012f2:	4652      	mov	r2, sl
 80012f4:	1a98      	subs	r0, r3, r2
 80012f6:	1e43      	subs	r3, r0, #1
 80012f8:	4198      	sbcs	r0, r3
 80012fa:	e7ea      	b.n	80012d2 <__eqdf2+0x56>
 80012fc:	2000      	movs	r0, #0
 80012fe:	e7e8      	b.n	80012d2 <__eqdf2+0x56>
 8001300:	000007ff 	.word	0x000007ff

08001304 <__gedf2>:
 8001304:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001306:	4657      	mov	r7, sl
 8001308:	464e      	mov	r6, r9
 800130a:	4645      	mov	r5, r8
 800130c:	46de      	mov	lr, fp
 800130e:	b5e0      	push	{r5, r6, r7, lr}
 8001310:	000d      	movs	r5, r1
 8001312:	030e      	lsls	r6, r1, #12
 8001314:	0049      	lsls	r1, r1, #1
 8001316:	0d49      	lsrs	r1, r1, #21
 8001318:	468a      	mov	sl, r1
 800131a:	0fdf      	lsrs	r7, r3, #31
 800131c:	0fe9      	lsrs	r1, r5, #31
 800131e:	46bc      	mov	ip, r7
 8001320:	b083      	sub	sp, #12
 8001322:	4f2f      	ldr	r7, [pc, #188]	@ (80013e0 <__gedf2+0xdc>)
 8001324:	0004      	movs	r4, r0
 8001326:	4680      	mov	r8, r0
 8001328:	9101      	str	r1, [sp, #4]
 800132a:	0058      	lsls	r0, r3, #1
 800132c:	0319      	lsls	r1, r3, #12
 800132e:	4691      	mov	r9, r2
 8001330:	0b36      	lsrs	r6, r6, #12
 8001332:	0b09      	lsrs	r1, r1, #12
 8001334:	0d40      	lsrs	r0, r0, #21
 8001336:	45ba      	cmp	sl, r7
 8001338:	d01d      	beq.n	8001376 <__gedf2+0x72>
 800133a:	42b8      	cmp	r0, r7
 800133c:	d00d      	beq.n	800135a <__gedf2+0x56>
 800133e:	4657      	mov	r7, sl
 8001340:	2f00      	cmp	r7, #0
 8001342:	d12a      	bne.n	800139a <__gedf2+0x96>
 8001344:	4334      	orrs	r4, r6
 8001346:	2800      	cmp	r0, #0
 8001348:	d124      	bne.n	8001394 <__gedf2+0x90>
 800134a:	430a      	orrs	r2, r1
 800134c:	d036      	beq.n	80013bc <__gedf2+0xb8>
 800134e:	2c00      	cmp	r4, #0
 8001350:	d141      	bne.n	80013d6 <__gedf2+0xd2>
 8001352:	4663      	mov	r3, ip
 8001354:	0058      	lsls	r0, r3, #1
 8001356:	3801      	subs	r0, #1
 8001358:	e015      	b.n	8001386 <__gedf2+0x82>
 800135a:	4311      	orrs	r1, r2
 800135c:	d138      	bne.n	80013d0 <__gedf2+0xcc>
 800135e:	4653      	mov	r3, sl
 8001360:	2b00      	cmp	r3, #0
 8001362:	d101      	bne.n	8001368 <__gedf2+0x64>
 8001364:	4326      	orrs	r6, r4
 8001366:	d0f4      	beq.n	8001352 <__gedf2+0x4e>
 8001368:	9b01      	ldr	r3, [sp, #4]
 800136a:	4563      	cmp	r3, ip
 800136c:	d107      	bne.n	800137e <__gedf2+0x7a>
 800136e:	9b01      	ldr	r3, [sp, #4]
 8001370:	0058      	lsls	r0, r3, #1
 8001372:	3801      	subs	r0, #1
 8001374:	e007      	b.n	8001386 <__gedf2+0x82>
 8001376:	4326      	orrs	r6, r4
 8001378:	d12a      	bne.n	80013d0 <__gedf2+0xcc>
 800137a:	4550      	cmp	r0, sl
 800137c:	d021      	beq.n	80013c2 <__gedf2+0xbe>
 800137e:	2001      	movs	r0, #1
 8001380:	9b01      	ldr	r3, [sp, #4]
 8001382:	425f      	negs	r7, r3
 8001384:	4338      	orrs	r0, r7
 8001386:	b003      	add	sp, #12
 8001388:	bcf0      	pop	{r4, r5, r6, r7}
 800138a:	46bb      	mov	fp, r7
 800138c:	46b2      	mov	sl, r6
 800138e:	46a9      	mov	r9, r5
 8001390:	46a0      	mov	r8, r4
 8001392:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001394:	2c00      	cmp	r4, #0
 8001396:	d0dc      	beq.n	8001352 <__gedf2+0x4e>
 8001398:	e7e6      	b.n	8001368 <__gedf2+0x64>
 800139a:	2800      	cmp	r0, #0
 800139c:	d0ef      	beq.n	800137e <__gedf2+0x7a>
 800139e:	9b01      	ldr	r3, [sp, #4]
 80013a0:	4563      	cmp	r3, ip
 80013a2:	d1ec      	bne.n	800137e <__gedf2+0x7a>
 80013a4:	4582      	cmp	sl, r0
 80013a6:	dcea      	bgt.n	800137e <__gedf2+0x7a>
 80013a8:	dbe1      	blt.n	800136e <__gedf2+0x6a>
 80013aa:	428e      	cmp	r6, r1
 80013ac:	d8e7      	bhi.n	800137e <__gedf2+0x7a>
 80013ae:	d1de      	bne.n	800136e <__gedf2+0x6a>
 80013b0:	45c8      	cmp	r8, r9
 80013b2:	d8e4      	bhi.n	800137e <__gedf2+0x7a>
 80013b4:	2000      	movs	r0, #0
 80013b6:	45c8      	cmp	r8, r9
 80013b8:	d2e5      	bcs.n	8001386 <__gedf2+0x82>
 80013ba:	e7d8      	b.n	800136e <__gedf2+0x6a>
 80013bc:	2c00      	cmp	r4, #0
 80013be:	d0e2      	beq.n	8001386 <__gedf2+0x82>
 80013c0:	e7dd      	b.n	800137e <__gedf2+0x7a>
 80013c2:	4311      	orrs	r1, r2
 80013c4:	d104      	bne.n	80013d0 <__gedf2+0xcc>
 80013c6:	9b01      	ldr	r3, [sp, #4]
 80013c8:	4563      	cmp	r3, ip
 80013ca:	d1d8      	bne.n	800137e <__gedf2+0x7a>
 80013cc:	2000      	movs	r0, #0
 80013ce:	e7da      	b.n	8001386 <__gedf2+0x82>
 80013d0:	2002      	movs	r0, #2
 80013d2:	4240      	negs	r0, r0
 80013d4:	e7d7      	b.n	8001386 <__gedf2+0x82>
 80013d6:	9b01      	ldr	r3, [sp, #4]
 80013d8:	4563      	cmp	r3, ip
 80013da:	d0e6      	beq.n	80013aa <__gedf2+0xa6>
 80013dc:	e7cf      	b.n	800137e <__gedf2+0x7a>
 80013de:	46c0      	nop			@ (mov r8, r8)
 80013e0:	000007ff 	.word	0x000007ff

080013e4 <__ledf2>:
 80013e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80013e6:	4657      	mov	r7, sl
 80013e8:	464e      	mov	r6, r9
 80013ea:	4645      	mov	r5, r8
 80013ec:	46de      	mov	lr, fp
 80013ee:	b5e0      	push	{r5, r6, r7, lr}
 80013f0:	000d      	movs	r5, r1
 80013f2:	030e      	lsls	r6, r1, #12
 80013f4:	0049      	lsls	r1, r1, #1
 80013f6:	0d49      	lsrs	r1, r1, #21
 80013f8:	468a      	mov	sl, r1
 80013fa:	0fdf      	lsrs	r7, r3, #31
 80013fc:	0fe9      	lsrs	r1, r5, #31
 80013fe:	46bc      	mov	ip, r7
 8001400:	b083      	sub	sp, #12
 8001402:	4f2e      	ldr	r7, [pc, #184]	@ (80014bc <__ledf2+0xd8>)
 8001404:	0004      	movs	r4, r0
 8001406:	4680      	mov	r8, r0
 8001408:	9101      	str	r1, [sp, #4]
 800140a:	0058      	lsls	r0, r3, #1
 800140c:	0319      	lsls	r1, r3, #12
 800140e:	4691      	mov	r9, r2
 8001410:	0b36      	lsrs	r6, r6, #12
 8001412:	0b09      	lsrs	r1, r1, #12
 8001414:	0d40      	lsrs	r0, r0, #21
 8001416:	45ba      	cmp	sl, r7
 8001418:	d01e      	beq.n	8001458 <__ledf2+0x74>
 800141a:	42b8      	cmp	r0, r7
 800141c:	d00d      	beq.n	800143a <__ledf2+0x56>
 800141e:	4657      	mov	r7, sl
 8001420:	2f00      	cmp	r7, #0
 8001422:	d127      	bne.n	8001474 <__ledf2+0x90>
 8001424:	4334      	orrs	r4, r6
 8001426:	2800      	cmp	r0, #0
 8001428:	d133      	bne.n	8001492 <__ledf2+0xae>
 800142a:	430a      	orrs	r2, r1
 800142c:	d034      	beq.n	8001498 <__ledf2+0xb4>
 800142e:	2c00      	cmp	r4, #0
 8001430:	d140      	bne.n	80014b4 <__ledf2+0xd0>
 8001432:	4663      	mov	r3, ip
 8001434:	0058      	lsls	r0, r3, #1
 8001436:	3801      	subs	r0, #1
 8001438:	e015      	b.n	8001466 <__ledf2+0x82>
 800143a:	4311      	orrs	r1, r2
 800143c:	d112      	bne.n	8001464 <__ledf2+0x80>
 800143e:	4653      	mov	r3, sl
 8001440:	2b00      	cmp	r3, #0
 8001442:	d101      	bne.n	8001448 <__ledf2+0x64>
 8001444:	4326      	orrs	r6, r4
 8001446:	d0f4      	beq.n	8001432 <__ledf2+0x4e>
 8001448:	9b01      	ldr	r3, [sp, #4]
 800144a:	4563      	cmp	r3, ip
 800144c:	d01d      	beq.n	800148a <__ledf2+0xa6>
 800144e:	2001      	movs	r0, #1
 8001450:	9b01      	ldr	r3, [sp, #4]
 8001452:	425f      	negs	r7, r3
 8001454:	4338      	orrs	r0, r7
 8001456:	e006      	b.n	8001466 <__ledf2+0x82>
 8001458:	4326      	orrs	r6, r4
 800145a:	d103      	bne.n	8001464 <__ledf2+0x80>
 800145c:	4550      	cmp	r0, sl
 800145e:	d1f6      	bne.n	800144e <__ledf2+0x6a>
 8001460:	4311      	orrs	r1, r2
 8001462:	d01c      	beq.n	800149e <__ledf2+0xba>
 8001464:	2002      	movs	r0, #2
 8001466:	b003      	add	sp, #12
 8001468:	bcf0      	pop	{r4, r5, r6, r7}
 800146a:	46bb      	mov	fp, r7
 800146c:	46b2      	mov	sl, r6
 800146e:	46a9      	mov	r9, r5
 8001470:	46a0      	mov	r8, r4
 8001472:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001474:	2800      	cmp	r0, #0
 8001476:	d0ea      	beq.n	800144e <__ledf2+0x6a>
 8001478:	9b01      	ldr	r3, [sp, #4]
 800147a:	4563      	cmp	r3, ip
 800147c:	d1e7      	bne.n	800144e <__ledf2+0x6a>
 800147e:	4582      	cmp	sl, r0
 8001480:	dce5      	bgt.n	800144e <__ledf2+0x6a>
 8001482:	db02      	blt.n	800148a <__ledf2+0xa6>
 8001484:	428e      	cmp	r6, r1
 8001486:	d8e2      	bhi.n	800144e <__ledf2+0x6a>
 8001488:	d00e      	beq.n	80014a8 <__ledf2+0xc4>
 800148a:	9b01      	ldr	r3, [sp, #4]
 800148c:	0058      	lsls	r0, r3, #1
 800148e:	3801      	subs	r0, #1
 8001490:	e7e9      	b.n	8001466 <__ledf2+0x82>
 8001492:	2c00      	cmp	r4, #0
 8001494:	d0cd      	beq.n	8001432 <__ledf2+0x4e>
 8001496:	e7d7      	b.n	8001448 <__ledf2+0x64>
 8001498:	2c00      	cmp	r4, #0
 800149a:	d0e4      	beq.n	8001466 <__ledf2+0x82>
 800149c:	e7d7      	b.n	800144e <__ledf2+0x6a>
 800149e:	9b01      	ldr	r3, [sp, #4]
 80014a0:	2000      	movs	r0, #0
 80014a2:	4563      	cmp	r3, ip
 80014a4:	d0df      	beq.n	8001466 <__ledf2+0x82>
 80014a6:	e7d2      	b.n	800144e <__ledf2+0x6a>
 80014a8:	45c8      	cmp	r8, r9
 80014aa:	d8d0      	bhi.n	800144e <__ledf2+0x6a>
 80014ac:	2000      	movs	r0, #0
 80014ae:	45c8      	cmp	r8, r9
 80014b0:	d2d9      	bcs.n	8001466 <__ledf2+0x82>
 80014b2:	e7ea      	b.n	800148a <__ledf2+0xa6>
 80014b4:	9b01      	ldr	r3, [sp, #4]
 80014b6:	4563      	cmp	r3, ip
 80014b8:	d0e4      	beq.n	8001484 <__ledf2+0xa0>
 80014ba:	e7c8      	b.n	800144e <__ledf2+0x6a>
 80014bc:	000007ff 	.word	0x000007ff

080014c0 <__aeabi_dmul>:
 80014c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80014c2:	4657      	mov	r7, sl
 80014c4:	464e      	mov	r6, r9
 80014c6:	46de      	mov	lr, fp
 80014c8:	4645      	mov	r5, r8
 80014ca:	b5e0      	push	{r5, r6, r7, lr}
 80014cc:	001f      	movs	r7, r3
 80014ce:	030b      	lsls	r3, r1, #12
 80014d0:	0b1b      	lsrs	r3, r3, #12
 80014d2:	0016      	movs	r6, r2
 80014d4:	469a      	mov	sl, r3
 80014d6:	0fca      	lsrs	r2, r1, #31
 80014d8:	004b      	lsls	r3, r1, #1
 80014da:	0004      	movs	r4, r0
 80014dc:	4691      	mov	r9, r2
 80014de:	b085      	sub	sp, #20
 80014e0:	0d5b      	lsrs	r3, r3, #21
 80014e2:	d100      	bne.n	80014e6 <__aeabi_dmul+0x26>
 80014e4:	e1cf      	b.n	8001886 <__aeabi_dmul+0x3c6>
 80014e6:	4acd      	ldr	r2, [pc, #820]	@ (800181c <__aeabi_dmul+0x35c>)
 80014e8:	4293      	cmp	r3, r2
 80014ea:	d055      	beq.n	8001598 <__aeabi_dmul+0xd8>
 80014ec:	4651      	mov	r1, sl
 80014ee:	0f42      	lsrs	r2, r0, #29
 80014f0:	00c9      	lsls	r1, r1, #3
 80014f2:	430a      	orrs	r2, r1
 80014f4:	2180      	movs	r1, #128	@ 0x80
 80014f6:	0409      	lsls	r1, r1, #16
 80014f8:	4311      	orrs	r1, r2
 80014fa:	00c2      	lsls	r2, r0, #3
 80014fc:	4690      	mov	r8, r2
 80014fe:	4ac8      	ldr	r2, [pc, #800]	@ (8001820 <__aeabi_dmul+0x360>)
 8001500:	468a      	mov	sl, r1
 8001502:	4693      	mov	fp, r2
 8001504:	449b      	add	fp, r3
 8001506:	2300      	movs	r3, #0
 8001508:	2500      	movs	r5, #0
 800150a:	9302      	str	r3, [sp, #8]
 800150c:	033c      	lsls	r4, r7, #12
 800150e:	007b      	lsls	r3, r7, #1
 8001510:	0ffa      	lsrs	r2, r7, #31
 8001512:	9601      	str	r6, [sp, #4]
 8001514:	0b24      	lsrs	r4, r4, #12
 8001516:	0d5b      	lsrs	r3, r3, #21
 8001518:	9200      	str	r2, [sp, #0]
 800151a:	d100      	bne.n	800151e <__aeabi_dmul+0x5e>
 800151c:	e188      	b.n	8001830 <__aeabi_dmul+0x370>
 800151e:	4abf      	ldr	r2, [pc, #764]	@ (800181c <__aeabi_dmul+0x35c>)
 8001520:	4293      	cmp	r3, r2
 8001522:	d100      	bne.n	8001526 <__aeabi_dmul+0x66>
 8001524:	e092      	b.n	800164c <__aeabi_dmul+0x18c>
 8001526:	4abe      	ldr	r2, [pc, #760]	@ (8001820 <__aeabi_dmul+0x360>)
 8001528:	4694      	mov	ip, r2
 800152a:	4463      	add	r3, ip
 800152c:	449b      	add	fp, r3
 800152e:	2d0a      	cmp	r5, #10
 8001530:	dc42      	bgt.n	80015b8 <__aeabi_dmul+0xf8>
 8001532:	00e4      	lsls	r4, r4, #3
 8001534:	0f73      	lsrs	r3, r6, #29
 8001536:	4323      	orrs	r3, r4
 8001538:	2480      	movs	r4, #128	@ 0x80
 800153a:	4649      	mov	r1, r9
 800153c:	0424      	lsls	r4, r4, #16
 800153e:	431c      	orrs	r4, r3
 8001540:	00f3      	lsls	r3, r6, #3
 8001542:	9301      	str	r3, [sp, #4]
 8001544:	9b00      	ldr	r3, [sp, #0]
 8001546:	2000      	movs	r0, #0
 8001548:	4059      	eors	r1, r3
 800154a:	b2cb      	uxtb	r3, r1
 800154c:	9303      	str	r3, [sp, #12]
 800154e:	2d02      	cmp	r5, #2
 8001550:	dc00      	bgt.n	8001554 <__aeabi_dmul+0x94>
 8001552:	e094      	b.n	800167e <__aeabi_dmul+0x1be>
 8001554:	2301      	movs	r3, #1
 8001556:	40ab      	lsls	r3, r5
 8001558:	001d      	movs	r5, r3
 800155a:	23a6      	movs	r3, #166	@ 0xa6
 800155c:	002a      	movs	r2, r5
 800155e:	00db      	lsls	r3, r3, #3
 8001560:	401a      	ands	r2, r3
 8001562:	421d      	tst	r5, r3
 8001564:	d000      	beq.n	8001568 <__aeabi_dmul+0xa8>
 8001566:	e229      	b.n	80019bc <__aeabi_dmul+0x4fc>
 8001568:	2390      	movs	r3, #144	@ 0x90
 800156a:	009b      	lsls	r3, r3, #2
 800156c:	421d      	tst	r5, r3
 800156e:	d100      	bne.n	8001572 <__aeabi_dmul+0xb2>
 8001570:	e24d      	b.n	8001a0e <__aeabi_dmul+0x54e>
 8001572:	2300      	movs	r3, #0
 8001574:	2480      	movs	r4, #128	@ 0x80
 8001576:	4699      	mov	r9, r3
 8001578:	0324      	lsls	r4, r4, #12
 800157a:	4ba8      	ldr	r3, [pc, #672]	@ (800181c <__aeabi_dmul+0x35c>)
 800157c:	0010      	movs	r0, r2
 800157e:	464a      	mov	r2, r9
 8001580:	051b      	lsls	r3, r3, #20
 8001582:	4323      	orrs	r3, r4
 8001584:	07d2      	lsls	r2, r2, #31
 8001586:	4313      	orrs	r3, r2
 8001588:	0019      	movs	r1, r3
 800158a:	b005      	add	sp, #20
 800158c:	bcf0      	pop	{r4, r5, r6, r7}
 800158e:	46bb      	mov	fp, r7
 8001590:	46b2      	mov	sl, r6
 8001592:	46a9      	mov	r9, r5
 8001594:	46a0      	mov	r8, r4
 8001596:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001598:	4652      	mov	r2, sl
 800159a:	4302      	orrs	r2, r0
 800159c:	4690      	mov	r8, r2
 800159e:	d000      	beq.n	80015a2 <__aeabi_dmul+0xe2>
 80015a0:	e1ac      	b.n	80018fc <__aeabi_dmul+0x43c>
 80015a2:	469b      	mov	fp, r3
 80015a4:	2302      	movs	r3, #2
 80015a6:	4692      	mov	sl, r2
 80015a8:	2508      	movs	r5, #8
 80015aa:	9302      	str	r3, [sp, #8]
 80015ac:	e7ae      	b.n	800150c <__aeabi_dmul+0x4c>
 80015ae:	9b00      	ldr	r3, [sp, #0]
 80015b0:	46a2      	mov	sl, r4
 80015b2:	4699      	mov	r9, r3
 80015b4:	9b01      	ldr	r3, [sp, #4]
 80015b6:	4698      	mov	r8, r3
 80015b8:	9b02      	ldr	r3, [sp, #8]
 80015ba:	2b02      	cmp	r3, #2
 80015bc:	d100      	bne.n	80015c0 <__aeabi_dmul+0x100>
 80015be:	e1ca      	b.n	8001956 <__aeabi_dmul+0x496>
 80015c0:	2b03      	cmp	r3, #3
 80015c2:	d100      	bne.n	80015c6 <__aeabi_dmul+0x106>
 80015c4:	e192      	b.n	80018ec <__aeabi_dmul+0x42c>
 80015c6:	2b01      	cmp	r3, #1
 80015c8:	d110      	bne.n	80015ec <__aeabi_dmul+0x12c>
 80015ca:	2300      	movs	r3, #0
 80015cc:	2400      	movs	r4, #0
 80015ce:	2200      	movs	r2, #0
 80015d0:	e7d4      	b.n	800157c <__aeabi_dmul+0xbc>
 80015d2:	2201      	movs	r2, #1
 80015d4:	087b      	lsrs	r3, r7, #1
 80015d6:	403a      	ands	r2, r7
 80015d8:	4313      	orrs	r3, r2
 80015da:	4652      	mov	r2, sl
 80015dc:	07d2      	lsls	r2, r2, #31
 80015de:	4313      	orrs	r3, r2
 80015e0:	4698      	mov	r8, r3
 80015e2:	4653      	mov	r3, sl
 80015e4:	085b      	lsrs	r3, r3, #1
 80015e6:	469a      	mov	sl, r3
 80015e8:	9b03      	ldr	r3, [sp, #12]
 80015ea:	4699      	mov	r9, r3
 80015ec:	465b      	mov	r3, fp
 80015ee:	1c58      	adds	r0, r3, #1
 80015f0:	2380      	movs	r3, #128	@ 0x80
 80015f2:	00db      	lsls	r3, r3, #3
 80015f4:	445b      	add	r3, fp
 80015f6:	2b00      	cmp	r3, #0
 80015f8:	dc00      	bgt.n	80015fc <__aeabi_dmul+0x13c>
 80015fa:	e1b1      	b.n	8001960 <__aeabi_dmul+0x4a0>
 80015fc:	4642      	mov	r2, r8
 80015fe:	0752      	lsls	r2, r2, #29
 8001600:	d00b      	beq.n	800161a <__aeabi_dmul+0x15a>
 8001602:	220f      	movs	r2, #15
 8001604:	4641      	mov	r1, r8
 8001606:	400a      	ands	r2, r1
 8001608:	2a04      	cmp	r2, #4
 800160a:	d006      	beq.n	800161a <__aeabi_dmul+0x15a>
 800160c:	4642      	mov	r2, r8
 800160e:	1d11      	adds	r1, r2, #4
 8001610:	4541      	cmp	r1, r8
 8001612:	4192      	sbcs	r2, r2
 8001614:	4688      	mov	r8, r1
 8001616:	4252      	negs	r2, r2
 8001618:	4492      	add	sl, r2
 800161a:	4652      	mov	r2, sl
 800161c:	01d2      	lsls	r2, r2, #7
 800161e:	d506      	bpl.n	800162e <__aeabi_dmul+0x16e>
 8001620:	4652      	mov	r2, sl
 8001622:	4b80      	ldr	r3, [pc, #512]	@ (8001824 <__aeabi_dmul+0x364>)
 8001624:	401a      	ands	r2, r3
 8001626:	2380      	movs	r3, #128	@ 0x80
 8001628:	4692      	mov	sl, r2
 800162a:	00db      	lsls	r3, r3, #3
 800162c:	18c3      	adds	r3, r0, r3
 800162e:	4a7e      	ldr	r2, [pc, #504]	@ (8001828 <__aeabi_dmul+0x368>)
 8001630:	4293      	cmp	r3, r2
 8001632:	dd00      	ble.n	8001636 <__aeabi_dmul+0x176>
 8001634:	e18f      	b.n	8001956 <__aeabi_dmul+0x496>
 8001636:	4642      	mov	r2, r8
 8001638:	08d1      	lsrs	r1, r2, #3
 800163a:	4652      	mov	r2, sl
 800163c:	0752      	lsls	r2, r2, #29
 800163e:	430a      	orrs	r2, r1
 8001640:	4651      	mov	r1, sl
 8001642:	055b      	lsls	r3, r3, #21
 8001644:	024c      	lsls	r4, r1, #9
 8001646:	0b24      	lsrs	r4, r4, #12
 8001648:	0d5b      	lsrs	r3, r3, #21
 800164a:	e797      	b.n	800157c <__aeabi_dmul+0xbc>
 800164c:	4b73      	ldr	r3, [pc, #460]	@ (800181c <__aeabi_dmul+0x35c>)
 800164e:	4326      	orrs	r6, r4
 8001650:	469c      	mov	ip, r3
 8001652:	44e3      	add	fp, ip
 8001654:	2e00      	cmp	r6, #0
 8001656:	d100      	bne.n	800165a <__aeabi_dmul+0x19a>
 8001658:	e16f      	b.n	800193a <__aeabi_dmul+0x47a>
 800165a:	2303      	movs	r3, #3
 800165c:	4649      	mov	r1, r9
 800165e:	431d      	orrs	r5, r3
 8001660:	9b00      	ldr	r3, [sp, #0]
 8001662:	4059      	eors	r1, r3
 8001664:	b2cb      	uxtb	r3, r1
 8001666:	9303      	str	r3, [sp, #12]
 8001668:	2d0a      	cmp	r5, #10
 800166a:	dd00      	ble.n	800166e <__aeabi_dmul+0x1ae>
 800166c:	e133      	b.n	80018d6 <__aeabi_dmul+0x416>
 800166e:	2301      	movs	r3, #1
 8001670:	40ab      	lsls	r3, r5
 8001672:	001d      	movs	r5, r3
 8001674:	2303      	movs	r3, #3
 8001676:	9302      	str	r3, [sp, #8]
 8001678:	2288      	movs	r2, #136	@ 0x88
 800167a:	422a      	tst	r2, r5
 800167c:	d197      	bne.n	80015ae <__aeabi_dmul+0xee>
 800167e:	4642      	mov	r2, r8
 8001680:	4643      	mov	r3, r8
 8001682:	0412      	lsls	r2, r2, #16
 8001684:	0c12      	lsrs	r2, r2, #16
 8001686:	0016      	movs	r6, r2
 8001688:	9801      	ldr	r0, [sp, #4]
 800168a:	0c1d      	lsrs	r5, r3, #16
 800168c:	0c03      	lsrs	r3, r0, #16
 800168e:	0400      	lsls	r0, r0, #16
 8001690:	0c00      	lsrs	r0, r0, #16
 8001692:	4346      	muls	r6, r0
 8001694:	46b4      	mov	ip, r6
 8001696:	001e      	movs	r6, r3
 8001698:	436e      	muls	r6, r5
 800169a:	9600      	str	r6, [sp, #0]
 800169c:	0016      	movs	r6, r2
 800169e:	0007      	movs	r7, r0
 80016a0:	435e      	muls	r6, r3
 80016a2:	4661      	mov	r1, ip
 80016a4:	46b0      	mov	r8, r6
 80016a6:	436f      	muls	r7, r5
 80016a8:	0c0e      	lsrs	r6, r1, #16
 80016aa:	44b8      	add	r8, r7
 80016ac:	4446      	add	r6, r8
 80016ae:	42b7      	cmp	r7, r6
 80016b0:	d905      	bls.n	80016be <__aeabi_dmul+0x1fe>
 80016b2:	2180      	movs	r1, #128	@ 0x80
 80016b4:	0249      	lsls	r1, r1, #9
 80016b6:	4688      	mov	r8, r1
 80016b8:	9f00      	ldr	r7, [sp, #0]
 80016ba:	4447      	add	r7, r8
 80016bc:	9700      	str	r7, [sp, #0]
 80016be:	4661      	mov	r1, ip
 80016c0:	0409      	lsls	r1, r1, #16
 80016c2:	0c09      	lsrs	r1, r1, #16
 80016c4:	0c37      	lsrs	r7, r6, #16
 80016c6:	0436      	lsls	r6, r6, #16
 80016c8:	468c      	mov	ip, r1
 80016ca:	0031      	movs	r1, r6
 80016cc:	4461      	add	r1, ip
 80016ce:	9101      	str	r1, [sp, #4]
 80016d0:	0011      	movs	r1, r2
 80016d2:	0c26      	lsrs	r6, r4, #16
 80016d4:	0424      	lsls	r4, r4, #16
 80016d6:	0c24      	lsrs	r4, r4, #16
 80016d8:	4361      	muls	r1, r4
 80016da:	468c      	mov	ip, r1
 80016dc:	0021      	movs	r1, r4
 80016de:	4369      	muls	r1, r5
 80016e0:	4689      	mov	r9, r1
 80016e2:	4661      	mov	r1, ip
 80016e4:	0c09      	lsrs	r1, r1, #16
 80016e6:	4688      	mov	r8, r1
 80016e8:	4372      	muls	r2, r6
 80016ea:	444a      	add	r2, r9
 80016ec:	4442      	add	r2, r8
 80016ee:	4375      	muls	r5, r6
 80016f0:	4591      	cmp	r9, r2
 80016f2:	d903      	bls.n	80016fc <__aeabi_dmul+0x23c>
 80016f4:	2180      	movs	r1, #128	@ 0x80
 80016f6:	0249      	lsls	r1, r1, #9
 80016f8:	4688      	mov	r8, r1
 80016fa:	4445      	add	r5, r8
 80016fc:	0c11      	lsrs	r1, r2, #16
 80016fe:	4688      	mov	r8, r1
 8001700:	4661      	mov	r1, ip
 8001702:	0409      	lsls	r1, r1, #16
 8001704:	0c09      	lsrs	r1, r1, #16
 8001706:	468c      	mov	ip, r1
 8001708:	0412      	lsls	r2, r2, #16
 800170a:	4462      	add	r2, ip
 800170c:	18b9      	adds	r1, r7, r2
 800170e:	9102      	str	r1, [sp, #8]
 8001710:	4651      	mov	r1, sl
 8001712:	0c09      	lsrs	r1, r1, #16
 8001714:	468c      	mov	ip, r1
 8001716:	4651      	mov	r1, sl
 8001718:	040f      	lsls	r7, r1, #16
 800171a:	0c3f      	lsrs	r7, r7, #16
 800171c:	0039      	movs	r1, r7
 800171e:	4341      	muls	r1, r0
 8001720:	4445      	add	r5, r8
 8001722:	4688      	mov	r8, r1
 8001724:	4661      	mov	r1, ip
 8001726:	4341      	muls	r1, r0
 8001728:	468a      	mov	sl, r1
 800172a:	4641      	mov	r1, r8
 800172c:	4660      	mov	r0, ip
 800172e:	0c09      	lsrs	r1, r1, #16
 8001730:	4689      	mov	r9, r1
 8001732:	4358      	muls	r0, r3
 8001734:	437b      	muls	r3, r7
 8001736:	4453      	add	r3, sl
 8001738:	444b      	add	r3, r9
 800173a:	459a      	cmp	sl, r3
 800173c:	d903      	bls.n	8001746 <__aeabi_dmul+0x286>
 800173e:	2180      	movs	r1, #128	@ 0x80
 8001740:	0249      	lsls	r1, r1, #9
 8001742:	4689      	mov	r9, r1
 8001744:	4448      	add	r0, r9
 8001746:	0c19      	lsrs	r1, r3, #16
 8001748:	4689      	mov	r9, r1
 800174a:	4641      	mov	r1, r8
 800174c:	0409      	lsls	r1, r1, #16
 800174e:	0c09      	lsrs	r1, r1, #16
 8001750:	4688      	mov	r8, r1
 8001752:	0039      	movs	r1, r7
 8001754:	4361      	muls	r1, r4
 8001756:	041b      	lsls	r3, r3, #16
 8001758:	4443      	add	r3, r8
 800175a:	4688      	mov	r8, r1
 800175c:	4661      	mov	r1, ip
 800175e:	434c      	muls	r4, r1
 8001760:	4371      	muls	r1, r6
 8001762:	468c      	mov	ip, r1
 8001764:	4641      	mov	r1, r8
 8001766:	4377      	muls	r7, r6
 8001768:	0c0e      	lsrs	r6, r1, #16
 800176a:	193f      	adds	r7, r7, r4
 800176c:	19f6      	adds	r6, r6, r7
 800176e:	4448      	add	r0, r9
 8001770:	42b4      	cmp	r4, r6
 8001772:	d903      	bls.n	800177c <__aeabi_dmul+0x2bc>
 8001774:	2180      	movs	r1, #128	@ 0x80
 8001776:	0249      	lsls	r1, r1, #9
 8001778:	4689      	mov	r9, r1
 800177a:	44cc      	add	ip, r9
 800177c:	9902      	ldr	r1, [sp, #8]
 800177e:	9f00      	ldr	r7, [sp, #0]
 8001780:	4689      	mov	r9, r1
 8001782:	0431      	lsls	r1, r6, #16
 8001784:	444f      	add	r7, r9
 8001786:	4689      	mov	r9, r1
 8001788:	4641      	mov	r1, r8
 800178a:	4297      	cmp	r7, r2
 800178c:	4192      	sbcs	r2, r2
 800178e:	040c      	lsls	r4, r1, #16
 8001790:	0c24      	lsrs	r4, r4, #16
 8001792:	444c      	add	r4, r9
 8001794:	18ff      	adds	r7, r7, r3
 8001796:	4252      	negs	r2, r2
 8001798:	1964      	adds	r4, r4, r5
 800179a:	18a1      	adds	r1, r4, r2
 800179c:	429f      	cmp	r7, r3
 800179e:	419b      	sbcs	r3, r3
 80017a0:	4688      	mov	r8, r1
 80017a2:	4682      	mov	sl, r0
 80017a4:	425b      	negs	r3, r3
 80017a6:	4699      	mov	r9, r3
 80017a8:	4590      	cmp	r8, r2
 80017aa:	4192      	sbcs	r2, r2
 80017ac:	42ac      	cmp	r4, r5
 80017ae:	41a4      	sbcs	r4, r4
 80017b0:	44c2      	add	sl, r8
 80017b2:	44d1      	add	r9, sl
 80017b4:	4252      	negs	r2, r2
 80017b6:	4264      	negs	r4, r4
 80017b8:	4314      	orrs	r4, r2
 80017ba:	4599      	cmp	r9, r3
 80017bc:	419b      	sbcs	r3, r3
 80017be:	4582      	cmp	sl, r0
 80017c0:	4192      	sbcs	r2, r2
 80017c2:	425b      	negs	r3, r3
 80017c4:	4252      	negs	r2, r2
 80017c6:	4313      	orrs	r3, r2
 80017c8:	464a      	mov	r2, r9
 80017ca:	0c36      	lsrs	r6, r6, #16
 80017cc:	19a4      	adds	r4, r4, r6
 80017ce:	18e3      	adds	r3, r4, r3
 80017d0:	4463      	add	r3, ip
 80017d2:	025b      	lsls	r3, r3, #9
 80017d4:	0dd2      	lsrs	r2, r2, #23
 80017d6:	431a      	orrs	r2, r3
 80017d8:	9901      	ldr	r1, [sp, #4]
 80017da:	4692      	mov	sl, r2
 80017dc:	027a      	lsls	r2, r7, #9
 80017de:	430a      	orrs	r2, r1
 80017e0:	1e50      	subs	r0, r2, #1
 80017e2:	4182      	sbcs	r2, r0
 80017e4:	0dff      	lsrs	r7, r7, #23
 80017e6:	4317      	orrs	r7, r2
 80017e8:	464a      	mov	r2, r9
 80017ea:	0252      	lsls	r2, r2, #9
 80017ec:	4317      	orrs	r7, r2
 80017ee:	46b8      	mov	r8, r7
 80017f0:	01db      	lsls	r3, r3, #7
 80017f2:	d500      	bpl.n	80017f6 <__aeabi_dmul+0x336>
 80017f4:	e6ed      	b.n	80015d2 <__aeabi_dmul+0x112>
 80017f6:	4b0d      	ldr	r3, [pc, #52]	@ (800182c <__aeabi_dmul+0x36c>)
 80017f8:	9a03      	ldr	r2, [sp, #12]
 80017fa:	445b      	add	r3, fp
 80017fc:	4691      	mov	r9, r2
 80017fe:	2b00      	cmp	r3, #0
 8001800:	dc00      	bgt.n	8001804 <__aeabi_dmul+0x344>
 8001802:	e0ac      	b.n	800195e <__aeabi_dmul+0x49e>
 8001804:	003a      	movs	r2, r7
 8001806:	0752      	lsls	r2, r2, #29
 8001808:	d100      	bne.n	800180c <__aeabi_dmul+0x34c>
 800180a:	e710      	b.n	800162e <__aeabi_dmul+0x16e>
 800180c:	220f      	movs	r2, #15
 800180e:	4658      	mov	r0, fp
 8001810:	403a      	ands	r2, r7
 8001812:	2a04      	cmp	r2, #4
 8001814:	d000      	beq.n	8001818 <__aeabi_dmul+0x358>
 8001816:	e6f9      	b.n	800160c <__aeabi_dmul+0x14c>
 8001818:	e709      	b.n	800162e <__aeabi_dmul+0x16e>
 800181a:	46c0      	nop			@ (mov r8, r8)
 800181c:	000007ff 	.word	0x000007ff
 8001820:	fffffc01 	.word	0xfffffc01
 8001824:	feffffff 	.word	0xfeffffff
 8001828:	000007fe 	.word	0x000007fe
 800182c:	000003ff 	.word	0x000003ff
 8001830:	0022      	movs	r2, r4
 8001832:	4332      	orrs	r2, r6
 8001834:	d06f      	beq.n	8001916 <__aeabi_dmul+0x456>
 8001836:	2c00      	cmp	r4, #0
 8001838:	d100      	bne.n	800183c <__aeabi_dmul+0x37c>
 800183a:	e0c2      	b.n	80019c2 <__aeabi_dmul+0x502>
 800183c:	0020      	movs	r0, r4
 800183e:	f000 fdbd 	bl	80023bc <__clzsi2>
 8001842:	0002      	movs	r2, r0
 8001844:	0003      	movs	r3, r0
 8001846:	3a0b      	subs	r2, #11
 8001848:	201d      	movs	r0, #29
 800184a:	1a82      	subs	r2, r0, r2
 800184c:	0030      	movs	r0, r6
 800184e:	0019      	movs	r1, r3
 8001850:	40d0      	lsrs	r0, r2
 8001852:	3908      	subs	r1, #8
 8001854:	408c      	lsls	r4, r1
 8001856:	0002      	movs	r2, r0
 8001858:	4322      	orrs	r2, r4
 800185a:	0034      	movs	r4, r6
 800185c:	408c      	lsls	r4, r1
 800185e:	4659      	mov	r1, fp
 8001860:	1acb      	subs	r3, r1, r3
 8001862:	4986      	ldr	r1, [pc, #536]	@ (8001a7c <__aeabi_dmul+0x5bc>)
 8001864:	468b      	mov	fp, r1
 8001866:	449b      	add	fp, r3
 8001868:	2d0a      	cmp	r5, #10
 800186a:	dd00      	ble.n	800186e <__aeabi_dmul+0x3ae>
 800186c:	e6a4      	b.n	80015b8 <__aeabi_dmul+0xf8>
 800186e:	4649      	mov	r1, r9
 8001870:	9b00      	ldr	r3, [sp, #0]
 8001872:	9401      	str	r4, [sp, #4]
 8001874:	4059      	eors	r1, r3
 8001876:	b2cb      	uxtb	r3, r1
 8001878:	0014      	movs	r4, r2
 800187a:	2000      	movs	r0, #0
 800187c:	9303      	str	r3, [sp, #12]
 800187e:	2d02      	cmp	r5, #2
 8001880:	dd00      	ble.n	8001884 <__aeabi_dmul+0x3c4>
 8001882:	e667      	b.n	8001554 <__aeabi_dmul+0x94>
 8001884:	e6fb      	b.n	800167e <__aeabi_dmul+0x1be>
 8001886:	4653      	mov	r3, sl
 8001888:	4303      	orrs	r3, r0
 800188a:	4698      	mov	r8, r3
 800188c:	d03c      	beq.n	8001908 <__aeabi_dmul+0x448>
 800188e:	4653      	mov	r3, sl
 8001890:	2b00      	cmp	r3, #0
 8001892:	d100      	bne.n	8001896 <__aeabi_dmul+0x3d6>
 8001894:	e0a3      	b.n	80019de <__aeabi_dmul+0x51e>
 8001896:	4650      	mov	r0, sl
 8001898:	f000 fd90 	bl	80023bc <__clzsi2>
 800189c:	230b      	movs	r3, #11
 800189e:	425b      	negs	r3, r3
 80018a0:	469c      	mov	ip, r3
 80018a2:	0002      	movs	r2, r0
 80018a4:	4484      	add	ip, r0
 80018a6:	0011      	movs	r1, r2
 80018a8:	4650      	mov	r0, sl
 80018aa:	3908      	subs	r1, #8
 80018ac:	4088      	lsls	r0, r1
 80018ae:	231d      	movs	r3, #29
 80018b0:	4680      	mov	r8, r0
 80018b2:	4660      	mov	r0, ip
 80018b4:	1a1b      	subs	r3, r3, r0
 80018b6:	0020      	movs	r0, r4
 80018b8:	40d8      	lsrs	r0, r3
 80018ba:	0003      	movs	r3, r0
 80018bc:	4640      	mov	r0, r8
 80018be:	4303      	orrs	r3, r0
 80018c0:	469a      	mov	sl, r3
 80018c2:	0023      	movs	r3, r4
 80018c4:	408b      	lsls	r3, r1
 80018c6:	4698      	mov	r8, r3
 80018c8:	4b6c      	ldr	r3, [pc, #432]	@ (8001a7c <__aeabi_dmul+0x5bc>)
 80018ca:	2500      	movs	r5, #0
 80018cc:	1a9b      	subs	r3, r3, r2
 80018ce:	469b      	mov	fp, r3
 80018d0:	2300      	movs	r3, #0
 80018d2:	9302      	str	r3, [sp, #8]
 80018d4:	e61a      	b.n	800150c <__aeabi_dmul+0x4c>
 80018d6:	2d0f      	cmp	r5, #15
 80018d8:	d000      	beq.n	80018dc <__aeabi_dmul+0x41c>
 80018da:	e0c9      	b.n	8001a70 <__aeabi_dmul+0x5b0>
 80018dc:	2380      	movs	r3, #128	@ 0x80
 80018de:	4652      	mov	r2, sl
 80018e0:	031b      	lsls	r3, r3, #12
 80018e2:	421a      	tst	r2, r3
 80018e4:	d002      	beq.n	80018ec <__aeabi_dmul+0x42c>
 80018e6:	421c      	tst	r4, r3
 80018e8:	d100      	bne.n	80018ec <__aeabi_dmul+0x42c>
 80018ea:	e092      	b.n	8001a12 <__aeabi_dmul+0x552>
 80018ec:	2480      	movs	r4, #128	@ 0x80
 80018ee:	4653      	mov	r3, sl
 80018f0:	0324      	lsls	r4, r4, #12
 80018f2:	431c      	orrs	r4, r3
 80018f4:	0324      	lsls	r4, r4, #12
 80018f6:	4642      	mov	r2, r8
 80018f8:	0b24      	lsrs	r4, r4, #12
 80018fa:	e63e      	b.n	800157a <__aeabi_dmul+0xba>
 80018fc:	469b      	mov	fp, r3
 80018fe:	2303      	movs	r3, #3
 8001900:	4680      	mov	r8, r0
 8001902:	250c      	movs	r5, #12
 8001904:	9302      	str	r3, [sp, #8]
 8001906:	e601      	b.n	800150c <__aeabi_dmul+0x4c>
 8001908:	2300      	movs	r3, #0
 800190a:	469a      	mov	sl, r3
 800190c:	469b      	mov	fp, r3
 800190e:	3301      	adds	r3, #1
 8001910:	2504      	movs	r5, #4
 8001912:	9302      	str	r3, [sp, #8]
 8001914:	e5fa      	b.n	800150c <__aeabi_dmul+0x4c>
 8001916:	2101      	movs	r1, #1
 8001918:	430d      	orrs	r5, r1
 800191a:	2d0a      	cmp	r5, #10
 800191c:	dd00      	ble.n	8001920 <__aeabi_dmul+0x460>
 800191e:	e64b      	b.n	80015b8 <__aeabi_dmul+0xf8>
 8001920:	4649      	mov	r1, r9
 8001922:	9800      	ldr	r0, [sp, #0]
 8001924:	4041      	eors	r1, r0
 8001926:	b2c9      	uxtb	r1, r1
 8001928:	9103      	str	r1, [sp, #12]
 800192a:	2d02      	cmp	r5, #2
 800192c:	dc00      	bgt.n	8001930 <__aeabi_dmul+0x470>
 800192e:	e096      	b.n	8001a5e <__aeabi_dmul+0x59e>
 8001930:	2300      	movs	r3, #0
 8001932:	2400      	movs	r4, #0
 8001934:	2001      	movs	r0, #1
 8001936:	9301      	str	r3, [sp, #4]
 8001938:	e60c      	b.n	8001554 <__aeabi_dmul+0x94>
 800193a:	4649      	mov	r1, r9
 800193c:	2302      	movs	r3, #2
 800193e:	9a00      	ldr	r2, [sp, #0]
 8001940:	432b      	orrs	r3, r5
 8001942:	4051      	eors	r1, r2
 8001944:	b2ca      	uxtb	r2, r1
 8001946:	9203      	str	r2, [sp, #12]
 8001948:	2b0a      	cmp	r3, #10
 800194a:	dd00      	ble.n	800194e <__aeabi_dmul+0x48e>
 800194c:	e634      	b.n	80015b8 <__aeabi_dmul+0xf8>
 800194e:	2d00      	cmp	r5, #0
 8001950:	d157      	bne.n	8001a02 <__aeabi_dmul+0x542>
 8001952:	9b03      	ldr	r3, [sp, #12]
 8001954:	4699      	mov	r9, r3
 8001956:	2400      	movs	r4, #0
 8001958:	2200      	movs	r2, #0
 800195a:	4b49      	ldr	r3, [pc, #292]	@ (8001a80 <__aeabi_dmul+0x5c0>)
 800195c:	e60e      	b.n	800157c <__aeabi_dmul+0xbc>
 800195e:	4658      	mov	r0, fp
 8001960:	2101      	movs	r1, #1
 8001962:	1ac9      	subs	r1, r1, r3
 8001964:	2938      	cmp	r1, #56	@ 0x38
 8001966:	dd00      	ble.n	800196a <__aeabi_dmul+0x4aa>
 8001968:	e62f      	b.n	80015ca <__aeabi_dmul+0x10a>
 800196a:	291f      	cmp	r1, #31
 800196c:	dd56      	ble.n	8001a1c <__aeabi_dmul+0x55c>
 800196e:	221f      	movs	r2, #31
 8001970:	4654      	mov	r4, sl
 8001972:	4252      	negs	r2, r2
 8001974:	1ad3      	subs	r3, r2, r3
 8001976:	40dc      	lsrs	r4, r3
 8001978:	2920      	cmp	r1, #32
 800197a:	d007      	beq.n	800198c <__aeabi_dmul+0x4cc>
 800197c:	4b41      	ldr	r3, [pc, #260]	@ (8001a84 <__aeabi_dmul+0x5c4>)
 800197e:	4642      	mov	r2, r8
 8001980:	469c      	mov	ip, r3
 8001982:	4653      	mov	r3, sl
 8001984:	4460      	add	r0, ip
 8001986:	4083      	lsls	r3, r0
 8001988:	431a      	orrs	r2, r3
 800198a:	4690      	mov	r8, r2
 800198c:	4642      	mov	r2, r8
 800198e:	2107      	movs	r1, #7
 8001990:	1e53      	subs	r3, r2, #1
 8001992:	419a      	sbcs	r2, r3
 8001994:	000b      	movs	r3, r1
 8001996:	4322      	orrs	r2, r4
 8001998:	4013      	ands	r3, r2
 800199a:	2400      	movs	r4, #0
 800199c:	4211      	tst	r1, r2
 800199e:	d009      	beq.n	80019b4 <__aeabi_dmul+0x4f4>
 80019a0:	230f      	movs	r3, #15
 80019a2:	4013      	ands	r3, r2
 80019a4:	2b04      	cmp	r3, #4
 80019a6:	d05d      	beq.n	8001a64 <__aeabi_dmul+0x5a4>
 80019a8:	1d11      	adds	r1, r2, #4
 80019aa:	4291      	cmp	r1, r2
 80019ac:	419b      	sbcs	r3, r3
 80019ae:	000a      	movs	r2, r1
 80019b0:	425b      	negs	r3, r3
 80019b2:	075b      	lsls	r3, r3, #29
 80019b4:	08d2      	lsrs	r2, r2, #3
 80019b6:	431a      	orrs	r2, r3
 80019b8:	2300      	movs	r3, #0
 80019ba:	e5df      	b.n	800157c <__aeabi_dmul+0xbc>
 80019bc:	9b03      	ldr	r3, [sp, #12]
 80019be:	4699      	mov	r9, r3
 80019c0:	e5fa      	b.n	80015b8 <__aeabi_dmul+0xf8>
 80019c2:	9801      	ldr	r0, [sp, #4]
 80019c4:	f000 fcfa 	bl	80023bc <__clzsi2>
 80019c8:	0002      	movs	r2, r0
 80019ca:	0003      	movs	r3, r0
 80019cc:	3215      	adds	r2, #21
 80019ce:	3320      	adds	r3, #32
 80019d0:	2a1c      	cmp	r2, #28
 80019d2:	dc00      	bgt.n	80019d6 <__aeabi_dmul+0x516>
 80019d4:	e738      	b.n	8001848 <__aeabi_dmul+0x388>
 80019d6:	9a01      	ldr	r2, [sp, #4]
 80019d8:	3808      	subs	r0, #8
 80019da:	4082      	lsls	r2, r0
 80019dc:	e73f      	b.n	800185e <__aeabi_dmul+0x39e>
 80019de:	f000 fced 	bl	80023bc <__clzsi2>
 80019e2:	2315      	movs	r3, #21
 80019e4:	469c      	mov	ip, r3
 80019e6:	4484      	add	ip, r0
 80019e8:	0002      	movs	r2, r0
 80019ea:	4663      	mov	r3, ip
 80019ec:	3220      	adds	r2, #32
 80019ee:	2b1c      	cmp	r3, #28
 80019f0:	dc00      	bgt.n	80019f4 <__aeabi_dmul+0x534>
 80019f2:	e758      	b.n	80018a6 <__aeabi_dmul+0x3e6>
 80019f4:	2300      	movs	r3, #0
 80019f6:	4698      	mov	r8, r3
 80019f8:	0023      	movs	r3, r4
 80019fa:	3808      	subs	r0, #8
 80019fc:	4083      	lsls	r3, r0
 80019fe:	469a      	mov	sl, r3
 8001a00:	e762      	b.n	80018c8 <__aeabi_dmul+0x408>
 8001a02:	001d      	movs	r5, r3
 8001a04:	2300      	movs	r3, #0
 8001a06:	2400      	movs	r4, #0
 8001a08:	2002      	movs	r0, #2
 8001a0a:	9301      	str	r3, [sp, #4]
 8001a0c:	e5a2      	b.n	8001554 <__aeabi_dmul+0x94>
 8001a0e:	9002      	str	r0, [sp, #8]
 8001a10:	e632      	b.n	8001678 <__aeabi_dmul+0x1b8>
 8001a12:	431c      	orrs	r4, r3
 8001a14:	9b00      	ldr	r3, [sp, #0]
 8001a16:	9a01      	ldr	r2, [sp, #4]
 8001a18:	4699      	mov	r9, r3
 8001a1a:	e5ae      	b.n	800157a <__aeabi_dmul+0xba>
 8001a1c:	4b1a      	ldr	r3, [pc, #104]	@ (8001a88 <__aeabi_dmul+0x5c8>)
 8001a1e:	4652      	mov	r2, sl
 8001a20:	18c3      	adds	r3, r0, r3
 8001a22:	4640      	mov	r0, r8
 8001a24:	409a      	lsls	r2, r3
 8001a26:	40c8      	lsrs	r0, r1
 8001a28:	4302      	orrs	r2, r0
 8001a2a:	4640      	mov	r0, r8
 8001a2c:	4098      	lsls	r0, r3
 8001a2e:	0003      	movs	r3, r0
 8001a30:	1e58      	subs	r0, r3, #1
 8001a32:	4183      	sbcs	r3, r0
 8001a34:	4654      	mov	r4, sl
 8001a36:	431a      	orrs	r2, r3
 8001a38:	40cc      	lsrs	r4, r1
 8001a3a:	0753      	lsls	r3, r2, #29
 8001a3c:	d009      	beq.n	8001a52 <__aeabi_dmul+0x592>
 8001a3e:	230f      	movs	r3, #15
 8001a40:	4013      	ands	r3, r2
 8001a42:	2b04      	cmp	r3, #4
 8001a44:	d005      	beq.n	8001a52 <__aeabi_dmul+0x592>
 8001a46:	1d13      	adds	r3, r2, #4
 8001a48:	4293      	cmp	r3, r2
 8001a4a:	4192      	sbcs	r2, r2
 8001a4c:	4252      	negs	r2, r2
 8001a4e:	18a4      	adds	r4, r4, r2
 8001a50:	001a      	movs	r2, r3
 8001a52:	0223      	lsls	r3, r4, #8
 8001a54:	d508      	bpl.n	8001a68 <__aeabi_dmul+0x5a8>
 8001a56:	2301      	movs	r3, #1
 8001a58:	2400      	movs	r4, #0
 8001a5a:	2200      	movs	r2, #0
 8001a5c:	e58e      	b.n	800157c <__aeabi_dmul+0xbc>
 8001a5e:	4689      	mov	r9, r1
 8001a60:	2400      	movs	r4, #0
 8001a62:	e58b      	b.n	800157c <__aeabi_dmul+0xbc>
 8001a64:	2300      	movs	r3, #0
 8001a66:	e7a5      	b.n	80019b4 <__aeabi_dmul+0x4f4>
 8001a68:	0763      	lsls	r3, r4, #29
 8001a6a:	0264      	lsls	r4, r4, #9
 8001a6c:	0b24      	lsrs	r4, r4, #12
 8001a6e:	e7a1      	b.n	80019b4 <__aeabi_dmul+0x4f4>
 8001a70:	9b00      	ldr	r3, [sp, #0]
 8001a72:	46a2      	mov	sl, r4
 8001a74:	4699      	mov	r9, r3
 8001a76:	9b01      	ldr	r3, [sp, #4]
 8001a78:	4698      	mov	r8, r3
 8001a7a:	e737      	b.n	80018ec <__aeabi_dmul+0x42c>
 8001a7c:	fffffc0d 	.word	0xfffffc0d
 8001a80:	000007ff 	.word	0x000007ff
 8001a84:	0000043e 	.word	0x0000043e
 8001a88:	0000041e 	.word	0x0000041e

08001a8c <__aeabi_dsub>:
 8001a8c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001a8e:	4657      	mov	r7, sl
 8001a90:	464e      	mov	r6, r9
 8001a92:	4645      	mov	r5, r8
 8001a94:	46de      	mov	lr, fp
 8001a96:	b5e0      	push	{r5, r6, r7, lr}
 8001a98:	b083      	sub	sp, #12
 8001a9a:	9000      	str	r0, [sp, #0]
 8001a9c:	9101      	str	r1, [sp, #4]
 8001a9e:	030c      	lsls	r4, r1, #12
 8001aa0:	004d      	lsls	r5, r1, #1
 8001aa2:	0fce      	lsrs	r6, r1, #31
 8001aa4:	0a61      	lsrs	r1, r4, #9
 8001aa6:	9c00      	ldr	r4, [sp, #0]
 8001aa8:	005f      	lsls	r7, r3, #1
 8001aaa:	0f64      	lsrs	r4, r4, #29
 8001aac:	430c      	orrs	r4, r1
 8001aae:	9900      	ldr	r1, [sp, #0]
 8001ab0:	9200      	str	r2, [sp, #0]
 8001ab2:	9301      	str	r3, [sp, #4]
 8001ab4:	00c8      	lsls	r0, r1, #3
 8001ab6:	0319      	lsls	r1, r3, #12
 8001ab8:	0d7b      	lsrs	r3, r7, #21
 8001aba:	4699      	mov	r9, r3
 8001abc:	9b01      	ldr	r3, [sp, #4]
 8001abe:	4fcc      	ldr	r7, [pc, #816]	@ (8001df0 <__aeabi_dsub+0x364>)
 8001ac0:	0fdb      	lsrs	r3, r3, #31
 8001ac2:	469c      	mov	ip, r3
 8001ac4:	0a4b      	lsrs	r3, r1, #9
 8001ac6:	9900      	ldr	r1, [sp, #0]
 8001ac8:	4680      	mov	r8, r0
 8001aca:	0f49      	lsrs	r1, r1, #29
 8001acc:	4319      	orrs	r1, r3
 8001ace:	9b00      	ldr	r3, [sp, #0]
 8001ad0:	468b      	mov	fp, r1
 8001ad2:	00da      	lsls	r2, r3, #3
 8001ad4:	4692      	mov	sl, r2
 8001ad6:	0d6d      	lsrs	r5, r5, #21
 8001ad8:	45b9      	cmp	r9, r7
 8001ada:	d100      	bne.n	8001ade <__aeabi_dsub+0x52>
 8001adc:	e0bf      	b.n	8001c5e <__aeabi_dsub+0x1d2>
 8001ade:	2301      	movs	r3, #1
 8001ae0:	4661      	mov	r1, ip
 8001ae2:	4059      	eors	r1, r3
 8001ae4:	464b      	mov	r3, r9
 8001ae6:	468c      	mov	ip, r1
 8001ae8:	1aeb      	subs	r3, r5, r3
 8001aea:	428e      	cmp	r6, r1
 8001aec:	d075      	beq.n	8001bda <__aeabi_dsub+0x14e>
 8001aee:	2b00      	cmp	r3, #0
 8001af0:	dc00      	bgt.n	8001af4 <__aeabi_dsub+0x68>
 8001af2:	e2a3      	b.n	800203c <__aeabi_dsub+0x5b0>
 8001af4:	4649      	mov	r1, r9
 8001af6:	2900      	cmp	r1, #0
 8001af8:	d100      	bne.n	8001afc <__aeabi_dsub+0x70>
 8001afa:	e0ce      	b.n	8001c9a <__aeabi_dsub+0x20e>
 8001afc:	42bd      	cmp	r5, r7
 8001afe:	d100      	bne.n	8001b02 <__aeabi_dsub+0x76>
 8001b00:	e200      	b.n	8001f04 <__aeabi_dsub+0x478>
 8001b02:	2701      	movs	r7, #1
 8001b04:	2b38      	cmp	r3, #56	@ 0x38
 8001b06:	dc19      	bgt.n	8001b3c <__aeabi_dsub+0xb0>
 8001b08:	2780      	movs	r7, #128	@ 0x80
 8001b0a:	4659      	mov	r1, fp
 8001b0c:	043f      	lsls	r7, r7, #16
 8001b0e:	4339      	orrs	r1, r7
 8001b10:	468b      	mov	fp, r1
 8001b12:	2b1f      	cmp	r3, #31
 8001b14:	dd00      	ble.n	8001b18 <__aeabi_dsub+0x8c>
 8001b16:	e1fa      	b.n	8001f0e <__aeabi_dsub+0x482>
 8001b18:	2720      	movs	r7, #32
 8001b1a:	1af9      	subs	r1, r7, r3
 8001b1c:	468c      	mov	ip, r1
 8001b1e:	4659      	mov	r1, fp
 8001b20:	4667      	mov	r7, ip
 8001b22:	40b9      	lsls	r1, r7
 8001b24:	000f      	movs	r7, r1
 8001b26:	0011      	movs	r1, r2
 8001b28:	40d9      	lsrs	r1, r3
 8001b2a:	430f      	orrs	r7, r1
 8001b2c:	4661      	mov	r1, ip
 8001b2e:	408a      	lsls	r2, r1
 8001b30:	1e51      	subs	r1, r2, #1
 8001b32:	418a      	sbcs	r2, r1
 8001b34:	4659      	mov	r1, fp
 8001b36:	40d9      	lsrs	r1, r3
 8001b38:	4317      	orrs	r7, r2
 8001b3a:	1a64      	subs	r4, r4, r1
 8001b3c:	1bc7      	subs	r7, r0, r7
 8001b3e:	42b8      	cmp	r0, r7
 8001b40:	4180      	sbcs	r0, r0
 8001b42:	4240      	negs	r0, r0
 8001b44:	1a24      	subs	r4, r4, r0
 8001b46:	0223      	lsls	r3, r4, #8
 8001b48:	d400      	bmi.n	8001b4c <__aeabi_dsub+0xc0>
 8001b4a:	e140      	b.n	8001dce <__aeabi_dsub+0x342>
 8001b4c:	0264      	lsls	r4, r4, #9
 8001b4e:	0a64      	lsrs	r4, r4, #9
 8001b50:	2c00      	cmp	r4, #0
 8001b52:	d100      	bne.n	8001b56 <__aeabi_dsub+0xca>
 8001b54:	e154      	b.n	8001e00 <__aeabi_dsub+0x374>
 8001b56:	0020      	movs	r0, r4
 8001b58:	f000 fc30 	bl	80023bc <__clzsi2>
 8001b5c:	0003      	movs	r3, r0
 8001b5e:	3b08      	subs	r3, #8
 8001b60:	2120      	movs	r1, #32
 8001b62:	0038      	movs	r0, r7
 8001b64:	1aca      	subs	r2, r1, r3
 8001b66:	40d0      	lsrs	r0, r2
 8001b68:	409c      	lsls	r4, r3
 8001b6a:	0002      	movs	r2, r0
 8001b6c:	409f      	lsls	r7, r3
 8001b6e:	4322      	orrs	r2, r4
 8001b70:	429d      	cmp	r5, r3
 8001b72:	dd00      	ble.n	8001b76 <__aeabi_dsub+0xea>
 8001b74:	e1a6      	b.n	8001ec4 <__aeabi_dsub+0x438>
 8001b76:	1b58      	subs	r0, r3, r5
 8001b78:	3001      	adds	r0, #1
 8001b7a:	1a09      	subs	r1, r1, r0
 8001b7c:	003c      	movs	r4, r7
 8001b7e:	408f      	lsls	r7, r1
 8001b80:	40c4      	lsrs	r4, r0
 8001b82:	1e7b      	subs	r3, r7, #1
 8001b84:	419f      	sbcs	r7, r3
 8001b86:	0013      	movs	r3, r2
 8001b88:	408b      	lsls	r3, r1
 8001b8a:	4327      	orrs	r7, r4
 8001b8c:	431f      	orrs	r7, r3
 8001b8e:	40c2      	lsrs	r2, r0
 8001b90:	003b      	movs	r3, r7
 8001b92:	0014      	movs	r4, r2
 8001b94:	2500      	movs	r5, #0
 8001b96:	4313      	orrs	r3, r2
 8001b98:	d100      	bne.n	8001b9c <__aeabi_dsub+0x110>
 8001b9a:	e1f7      	b.n	8001f8c <__aeabi_dsub+0x500>
 8001b9c:	077b      	lsls	r3, r7, #29
 8001b9e:	d100      	bne.n	8001ba2 <__aeabi_dsub+0x116>
 8001ba0:	e377      	b.n	8002292 <__aeabi_dsub+0x806>
 8001ba2:	230f      	movs	r3, #15
 8001ba4:	0038      	movs	r0, r7
 8001ba6:	403b      	ands	r3, r7
 8001ba8:	2b04      	cmp	r3, #4
 8001baa:	d004      	beq.n	8001bb6 <__aeabi_dsub+0x12a>
 8001bac:	1d38      	adds	r0, r7, #4
 8001bae:	42b8      	cmp	r0, r7
 8001bb0:	41bf      	sbcs	r7, r7
 8001bb2:	427f      	negs	r7, r7
 8001bb4:	19e4      	adds	r4, r4, r7
 8001bb6:	0223      	lsls	r3, r4, #8
 8001bb8:	d400      	bmi.n	8001bbc <__aeabi_dsub+0x130>
 8001bba:	e368      	b.n	800228e <__aeabi_dsub+0x802>
 8001bbc:	4b8c      	ldr	r3, [pc, #560]	@ (8001df0 <__aeabi_dsub+0x364>)
 8001bbe:	3501      	adds	r5, #1
 8001bc0:	429d      	cmp	r5, r3
 8001bc2:	d100      	bne.n	8001bc6 <__aeabi_dsub+0x13a>
 8001bc4:	e0f4      	b.n	8001db0 <__aeabi_dsub+0x324>
 8001bc6:	4b8b      	ldr	r3, [pc, #556]	@ (8001df4 <__aeabi_dsub+0x368>)
 8001bc8:	056d      	lsls	r5, r5, #21
 8001bca:	401c      	ands	r4, r3
 8001bcc:	0d6d      	lsrs	r5, r5, #21
 8001bce:	0767      	lsls	r7, r4, #29
 8001bd0:	08c0      	lsrs	r0, r0, #3
 8001bd2:	0264      	lsls	r4, r4, #9
 8001bd4:	4307      	orrs	r7, r0
 8001bd6:	0b24      	lsrs	r4, r4, #12
 8001bd8:	e0ec      	b.n	8001db4 <__aeabi_dsub+0x328>
 8001bda:	2b00      	cmp	r3, #0
 8001bdc:	dc00      	bgt.n	8001be0 <__aeabi_dsub+0x154>
 8001bde:	e329      	b.n	8002234 <__aeabi_dsub+0x7a8>
 8001be0:	4649      	mov	r1, r9
 8001be2:	2900      	cmp	r1, #0
 8001be4:	d000      	beq.n	8001be8 <__aeabi_dsub+0x15c>
 8001be6:	e0d6      	b.n	8001d96 <__aeabi_dsub+0x30a>
 8001be8:	4659      	mov	r1, fp
 8001bea:	4311      	orrs	r1, r2
 8001bec:	d100      	bne.n	8001bf0 <__aeabi_dsub+0x164>
 8001bee:	e12e      	b.n	8001e4e <__aeabi_dsub+0x3c2>
 8001bf0:	1e59      	subs	r1, r3, #1
 8001bf2:	2b01      	cmp	r3, #1
 8001bf4:	d100      	bne.n	8001bf8 <__aeabi_dsub+0x16c>
 8001bf6:	e1e6      	b.n	8001fc6 <__aeabi_dsub+0x53a>
 8001bf8:	42bb      	cmp	r3, r7
 8001bfa:	d100      	bne.n	8001bfe <__aeabi_dsub+0x172>
 8001bfc:	e182      	b.n	8001f04 <__aeabi_dsub+0x478>
 8001bfe:	2701      	movs	r7, #1
 8001c00:	000b      	movs	r3, r1
 8001c02:	2938      	cmp	r1, #56	@ 0x38
 8001c04:	dc14      	bgt.n	8001c30 <__aeabi_dsub+0x1a4>
 8001c06:	2b1f      	cmp	r3, #31
 8001c08:	dd00      	ble.n	8001c0c <__aeabi_dsub+0x180>
 8001c0a:	e23c      	b.n	8002086 <__aeabi_dsub+0x5fa>
 8001c0c:	2720      	movs	r7, #32
 8001c0e:	1af9      	subs	r1, r7, r3
 8001c10:	468c      	mov	ip, r1
 8001c12:	4659      	mov	r1, fp
 8001c14:	4667      	mov	r7, ip
 8001c16:	40b9      	lsls	r1, r7
 8001c18:	000f      	movs	r7, r1
 8001c1a:	0011      	movs	r1, r2
 8001c1c:	40d9      	lsrs	r1, r3
 8001c1e:	430f      	orrs	r7, r1
 8001c20:	4661      	mov	r1, ip
 8001c22:	408a      	lsls	r2, r1
 8001c24:	1e51      	subs	r1, r2, #1
 8001c26:	418a      	sbcs	r2, r1
 8001c28:	4659      	mov	r1, fp
 8001c2a:	40d9      	lsrs	r1, r3
 8001c2c:	4317      	orrs	r7, r2
 8001c2e:	1864      	adds	r4, r4, r1
 8001c30:	183f      	adds	r7, r7, r0
 8001c32:	4287      	cmp	r7, r0
 8001c34:	4180      	sbcs	r0, r0
 8001c36:	4240      	negs	r0, r0
 8001c38:	1824      	adds	r4, r4, r0
 8001c3a:	0223      	lsls	r3, r4, #8
 8001c3c:	d400      	bmi.n	8001c40 <__aeabi_dsub+0x1b4>
 8001c3e:	e0c6      	b.n	8001dce <__aeabi_dsub+0x342>
 8001c40:	4b6b      	ldr	r3, [pc, #428]	@ (8001df0 <__aeabi_dsub+0x364>)
 8001c42:	3501      	adds	r5, #1
 8001c44:	429d      	cmp	r5, r3
 8001c46:	d100      	bne.n	8001c4a <__aeabi_dsub+0x1be>
 8001c48:	e0b2      	b.n	8001db0 <__aeabi_dsub+0x324>
 8001c4a:	2101      	movs	r1, #1
 8001c4c:	4b69      	ldr	r3, [pc, #420]	@ (8001df4 <__aeabi_dsub+0x368>)
 8001c4e:	087a      	lsrs	r2, r7, #1
 8001c50:	401c      	ands	r4, r3
 8001c52:	4039      	ands	r1, r7
 8001c54:	430a      	orrs	r2, r1
 8001c56:	07e7      	lsls	r7, r4, #31
 8001c58:	4317      	orrs	r7, r2
 8001c5a:	0864      	lsrs	r4, r4, #1
 8001c5c:	e79e      	b.n	8001b9c <__aeabi_dsub+0x110>
 8001c5e:	4b66      	ldr	r3, [pc, #408]	@ (8001df8 <__aeabi_dsub+0x36c>)
 8001c60:	4311      	orrs	r1, r2
 8001c62:	468a      	mov	sl, r1
 8001c64:	18eb      	adds	r3, r5, r3
 8001c66:	2900      	cmp	r1, #0
 8001c68:	d028      	beq.n	8001cbc <__aeabi_dsub+0x230>
 8001c6a:	4566      	cmp	r6, ip
 8001c6c:	d02c      	beq.n	8001cc8 <__aeabi_dsub+0x23c>
 8001c6e:	2b00      	cmp	r3, #0
 8001c70:	d05b      	beq.n	8001d2a <__aeabi_dsub+0x29e>
 8001c72:	2d00      	cmp	r5, #0
 8001c74:	d100      	bne.n	8001c78 <__aeabi_dsub+0x1ec>
 8001c76:	e12c      	b.n	8001ed2 <__aeabi_dsub+0x446>
 8001c78:	465b      	mov	r3, fp
 8001c7a:	4666      	mov	r6, ip
 8001c7c:	075f      	lsls	r7, r3, #29
 8001c7e:	08d2      	lsrs	r2, r2, #3
 8001c80:	4317      	orrs	r7, r2
 8001c82:	08dd      	lsrs	r5, r3, #3
 8001c84:	003b      	movs	r3, r7
 8001c86:	432b      	orrs	r3, r5
 8001c88:	d100      	bne.n	8001c8c <__aeabi_dsub+0x200>
 8001c8a:	e0e2      	b.n	8001e52 <__aeabi_dsub+0x3c6>
 8001c8c:	2480      	movs	r4, #128	@ 0x80
 8001c8e:	0324      	lsls	r4, r4, #12
 8001c90:	432c      	orrs	r4, r5
 8001c92:	0324      	lsls	r4, r4, #12
 8001c94:	4d56      	ldr	r5, [pc, #344]	@ (8001df0 <__aeabi_dsub+0x364>)
 8001c96:	0b24      	lsrs	r4, r4, #12
 8001c98:	e08c      	b.n	8001db4 <__aeabi_dsub+0x328>
 8001c9a:	4659      	mov	r1, fp
 8001c9c:	4311      	orrs	r1, r2
 8001c9e:	d100      	bne.n	8001ca2 <__aeabi_dsub+0x216>
 8001ca0:	e0d5      	b.n	8001e4e <__aeabi_dsub+0x3c2>
 8001ca2:	1e59      	subs	r1, r3, #1
 8001ca4:	2b01      	cmp	r3, #1
 8001ca6:	d100      	bne.n	8001caa <__aeabi_dsub+0x21e>
 8001ca8:	e1b9      	b.n	800201e <__aeabi_dsub+0x592>
 8001caa:	42bb      	cmp	r3, r7
 8001cac:	d100      	bne.n	8001cb0 <__aeabi_dsub+0x224>
 8001cae:	e1b1      	b.n	8002014 <__aeabi_dsub+0x588>
 8001cb0:	2701      	movs	r7, #1
 8001cb2:	000b      	movs	r3, r1
 8001cb4:	2938      	cmp	r1, #56	@ 0x38
 8001cb6:	dd00      	ble.n	8001cba <__aeabi_dsub+0x22e>
 8001cb8:	e740      	b.n	8001b3c <__aeabi_dsub+0xb0>
 8001cba:	e72a      	b.n	8001b12 <__aeabi_dsub+0x86>
 8001cbc:	4661      	mov	r1, ip
 8001cbe:	2701      	movs	r7, #1
 8001cc0:	4079      	eors	r1, r7
 8001cc2:	468c      	mov	ip, r1
 8001cc4:	4566      	cmp	r6, ip
 8001cc6:	d1d2      	bne.n	8001c6e <__aeabi_dsub+0x1e2>
 8001cc8:	2b00      	cmp	r3, #0
 8001cca:	d100      	bne.n	8001cce <__aeabi_dsub+0x242>
 8001ccc:	e0c5      	b.n	8001e5a <__aeabi_dsub+0x3ce>
 8001cce:	2d00      	cmp	r5, #0
 8001cd0:	d000      	beq.n	8001cd4 <__aeabi_dsub+0x248>
 8001cd2:	e155      	b.n	8001f80 <__aeabi_dsub+0x4f4>
 8001cd4:	464b      	mov	r3, r9
 8001cd6:	0025      	movs	r5, r4
 8001cd8:	4305      	orrs	r5, r0
 8001cda:	d100      	bne.n	8001cde <__aeabi_dsub+0x252>
 8001cdc:	e212      	b.n	8002104 <__aeabi_dsub+0x678>
 8001cde:	1e59      	subs	r1, r3, #1
 8001ce0:	468c      	mov	ip, r1
 8001ce2:	2b01      	cmp	r3, #1
 8001ce4:	d100      	bne.n	8001ce8 <__aeabi_dsub+0x25c>
 8001ce6:	e249      	b.n	800217c <__aeabi_dsub+0x6f0>
 8001ce8:	4d41      	ldr	r5, [pc, #260]	@ (8001df0 <__aeabi_dsub+0x364>)
 8001cea:	42ab      	cmp	r3, r5
 8001cec:	d100      	bne.n	8001cf0 <__aeabi_dsub+0x264>
 8001cee:	e28f      	b.n	8002210 <__aeabi_dsub+0x784>
 8001cf0:	2701      	movs	r7, #1
 8001cf2:	2938      	cmp	r1, #56	@ 0x38
 8001cf4:	dc11      	bgt.n	8001d1a <__aeabi_dsub+0x28e>
 8001cf6:	4663      	mov	r3, ip
 8001cf8:	2b1f      	cmp	r3, #31
 8001cfa:	dd00      	ble.n	8001cfe <__aeabi_dsub+0x272>
 8001cfc:	e25b      	b.n	80021b6 <__aeabi_dsub+0x72a>
 8001cfe:	4661      	mov	r1, ip
 8001d00:	2320      	movs	r3, #32
 8001d02:	0027      	movs	r7, r4
 8001d04:	1a5b      	subs	r3, r3, r1
 8001d06:	0005      	movs	r5, r0
 8001d08:	4098      	lsls	r0, r3
 8001d0a:	409f      	lsls	r7, r3
 8001d0c:	40cd      	lsrs	r5, r1
 8001d0e:	1e43      	subs	r3, r0, #1
 8001d10:	4198      	sbcs	r0, r3
 8001d12:	40cc      	lsrs	r4, r1
 8001d14:	432f      	orrs	r7, r5
 8001d16:	4307      	orrs	r7, r0
 8001d18:	44a3      	add	fp, r4
 8001d1a:	18bf      	adds	r7, r7, r2
 8001d1c:	4297      	cmp	r7, r2
 8001d1e:	4192      	sbcs	r2, r2
 8001d20:	4252      	negs	r2, r2
 8001d22:	445a      	add	r2, fp
 8001d24:	0014      	movs	r4, r2
 8001d26:	464d      	mov	r5, r9
 8001d28:	e787      	b.n	8001c3a <__aeabi_dsub+0x1ae>
 8001d2a:	4f34      	ldr	r7, [pc, #208]	@ (8001dfc <__aeabi_dsub+0x370>)
 8001d2c:	1c6b      	adds	r3, r5, #1
 8001d2e:	423b      	tst	r3, r7
 8001d30:	d000      	beq.n	8001d34 <__aeabi_dsub+0x2a8>
 8001d32:	e0b6      	b.n	8001ea2 <__aeabi_dsub+0x416>
 8001d34:	4659      	mov	r1, fp
 8001d36:	0023      	movs	r3, r4
 8001d38:	4311      	orrs	r1, r2
 8001d3a:	000f      	movs	r7, r1
 8001d3c:	4303      	orrs	r3, r0
 8001d3e:	2d00      	cmp	r5, #0
 8001d40:	d000      	beq.n	8001d44 <__aeabi_dsub+0x2b8>
 8001d42:	e126      	b.n	8001f92 <__aeabi_dsub+0x506>
 8001d44:	2b00      	cmp	r3, #0
 8001d46:	d100      	bne.n	8001d4a <__aeabi_dsub+0x2be>
 8001d48:	e1c0      	b.n	80020cc <__aeabi_dsub+0x640>
 8001d4a:	2900      	cmp	r1, #0
 8001d4c:	d100      	bne.n	8001d50 <__aeabi_dsub+0x2c4>
 8001d4e:	e0a1      	b.n	8001e94 <__aeabi_dsub+0x408>
 8001d50:	1a83      	subs	r3, r0, r2
 8001d52:	4698      	mov	r8, r3
 8001d54:	465b      	mov	r3, fp
 8001d56:	4540      	cmp	r0, r8
 8001d58:	41ad      	sbcs	r5, r5
 8001d5a:	1ae3      	subs	r3, r4, r3
 8001d5c:	426d      	negs	r5, r5
 8001d5e:	1b5b      	subs	r3, r3, r5
 8001d60:	2580      	movs	r5, #128	@ 0x80
 8001d62:	042d      	lsls	r5, r5, #16
 8001d64:	422b      	tst	r3, r5
 8001d66:	d100      	bne.n	8001d6a <__aeabi_dsub+0x2de>
 8001d68:	e14b      	b.n	8002002 <__aeabi_dsub+0x576>
 8001d6a:	465b      	mov	r3, fp
 8001d6c:	1a10      	subs	r0, r2, r0
 8001d6e:	4282      	cmp	r2, r0
 8001d70:	4192      	sbcs	r2, r2
 8001d72:	1b1c      	subs	r4, r3, r4
 8001d74:	0007      	movs	r7, r0
 8001d76:	2601      	movs	r6, #1
 8001d78:	4663      	mov	r3, ip
 8001d7a:	4252      	negs	r2, r2
 8001d7c:	1aa4      	subs	r4, r4, r2
 8001d7e:	4327      	orrs	r7, r4
 8001d80:	401e      	ands	r6, r3
 8001d82:	2f00      	cmp	r7, #0
 8001d84:	d100      	bne.n	8001d88 <__aeabi_dsub+0x2fc>
 8001d86:	e142      	b.n	800200e <__aeabi_dsub+0x582>
 8001d88:	422c      	tst	r4, r5
 8001d8a:	d100      	bne.n	8001d8e <__aeabi_dsub+0x302>
 8001d8c:	e26d      	b.n	800226a <__aeabi_dsub+0x7de>
 8001d8e:	4b19      	ldr	r3, [pc, #100]	@ (8001df4 <__aeabi_dsub+0x368>)
 8001d90:	2501      	movs	r5, #1
 8001d92:	401c      	ands	r4, r3
 8001d94:	e71b      	b.n	8001bce <__aeabi_dsub+0x142>
 8001d96:	42bd      	cmp	r5, r7
 8001d98:	d100      	bne.n	8001d9c <__aeabi_dsub+0x310>
 8001d9a:	e13b      	b.n	8002014 <__aeabi_dsub+0x588>
 8001d9c:	2701      	movs	r7, #1
 8001d9e:	2b38      	cmp	r3, #56	@ 0x38
 8001da0:	dd00      	ble.n	8001da4 <__aeabi_dsub+0x318>
 8001da2:	e745      	b.n	8001c30 <__aeabi_dsub+0x1a4>
 8001da4:	2780      	movs	r7, #128	@ 0x80
 8001da6:	4659      	mov	r1, fp
 8001da8:	043f      	lsls	r7, r7, #16
 8001daa:	4339      	orrs	r1, r7
 8001dac:	468b      	mov	fp, r1
 8001dae:	e72a      	b.n	8001c06 <__aeabi_dsub+0x17a>
 8001db0:	2400      	movs	r4, #0
 8001db2:	2700      	movs	r7, #0
 8001db4:	052d      	lsls	r5, r5, #20
 8001db6:	4325      	orrs	r5, r4
 8001db8:	07f6      	lsls	r6, r6, #31
 8001dba:	4335      	orrs	r5, r6
 8001dbc:	0038      	movs	r0, r7
 8001dbe:	0029      	movs	r1, r5
 8001dc0:	b003      	add	sp, #12
 8001dc2:	bcf0      	pop	{r4, r5, r6, r7}
 8001dc4:	46bb      	mov	fp, r7
 8001dc6:	46b2      	mov	sl, r6
 8001dc8:	46a9      	mov	r9, r5
 8001dca:	46a0      	mov	r8, r4
 8001dcc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001dce:	077b      	lsls	r3, r7, #29
 8001dd0:	d004      	beq.n	8001ddc <__aeabi_dsub+0x350>
 8001dd2:	230f      	movs	r3, #15
 8001dd4:	403b      	ands	r3, r7
 8001dd6:	2b04      	cmp	r3, #4
 8001dd8:	d000      	beq.n	8001ddc <__aeabi_dsub+0x350>
 8001dda:	e6e7      	b.n	8001bac <__aeabi_dsub+0x120>
 8001ddc:	002b      	movs	r3, r5
 8001dde:	08f8      	lsrs	r0, r7, #3
 8001de0:	4a03      	ldr	r2, [pc, #12]	@ (8001df0 <__aeabi_dsub+0x364>)
 8001de2:	0767      	lsls	r7, r4, #29
 8001de4:	4307      	orrs	r7, r0
 8001de6:	08e5      	lsrs	r5, r4, #3
 8001de8:	4293      	cmp	r3, r2
 8001dea:	d100      	bne.n	8001dee <__aeabi_dsub+0x362>
 8001dec:	e74a      	b.n	8001c84 <__aeabi_dsub+0x1f8>
 8001dee:	e0a5      	b.n	8001f3c <__aeabi_dsub+0x4b0>
 8001df0:	000007ff 	.word	0x000007ff
 8001df4:	ff7fffff 	.word	0xff7fffff
 8001df8:	fffff801 	.word	0xfffff801
 8001dfc:	000007fe 	.word	0x000007fe
 8001e00:	0038      	movs	r0, r7
 8001e02:	f000 fadb 	bl	80023bc <__clzsi2>
 8001e06:	0003      	movs	r3, r0
 8001e08:	3318      	adds	r3, #24
 8001e0a:	2b1f      	cmp	r3, #31
 8001e0c:	dc00      	bgt.n	8001e10 <__aeabi_dsub+0x384>
 8001e0e:	e6a7      	b.n	8001b60 <__aeabi_dsub+0xd4>
 8001e10:	003a      	movs	r2, r7
 8001e12:	3808      	subs	r0, #8
 8001e14:	4082      	lsls	r2, r0
 8001e16:	429d      	cmp	r5, r3
 8001e18:	dd00      	ble.n	8001e1c <__aeabi_dsub+0x390>
 8001e1a:	e08a      	b.n	8001f32 <__aeabi_dsub+0x4a6>
 8001e1c:	1b5b      	subs	r3, r3, r5
 8001e1e:	1c58      	adds	r0, r3, #1
 8001e20:	281f      	cmp	r0, #31
 8001e22:	dc00      	bgt.n	8001e26 <__aeabi_dsub+0x39a>
 8001e24:	e1d8      	b.n	80021d8 <__aeabi_dsub+0x74c>
 8001e26:	0017      	movs	r7, r2
 8001e28:	3b1f      	subs	r3, #31
 8001e2a:	40df      	lsrs	r7, r3
 8001e2c:	2820      	cmp	r0, #32
 8001e2e:	d005      	beq.n	8001e3c <__aeabi_dsub+0x3b0>
 8001e30:	2340      	movs	r3, #64	@ 0x40
 8001e32:	1a1b      	subs	r3, r3, r0
 8001e34:	409a      	lsls	r2, r3
 8001e36:	1e53      	subs	r3, r2, #1
 8001e38:	419a      	sbcs	r2, r3
 8001e3a:	4317      	orrs	r7, r2
 8001e3c:	2500      	movs	r5, #0
 8001e3e:	2f00      	cmp	r7, #0
 8001e40:	d100      	bne.n	8001e44 <__aeabi_dsub+0x3b8>
 8001e42:	e0e5      	b.n	8002010 <__aeabi_dsub+0x584>
 8001e44:	077b      	lsls	r3, r7, #29
 8001e46:	d000      	beq.n	8001e4a <__aeabi_dsub+0x3be>
 8001e48:	e6ab      	b.n	8001ba2 <__aeabi_dsub+0x116>
 8001e4a:	002c      	movs	r4, r5
 8001e4c:	e7c6      	b.n	8001ddc <__aeabi_dsub+0x350>
 8001e4e:	08c0      	lsrs	r0, r0, #3
 8001e50:	e7c6      	b.n	8001de0 <__aeabi_dsub+0x354>
 8001e52:	2700      	movs	r7, #0
 8001e54:	2400      	movs	r4, #0
 8001e56:	4dd1      	ldr	r5, [pc, #836]	@ (800219c <__aeabi_dsub+0x710>)
 8001e58:	e7ac      	b.n	8001db4 <__aeabi_dsub+0x328>
 8001e5a:	4fd1      	ldr	r7, [pc, #836]	@ (80021a0 <__aeabi_dsub+0x714>)
 8001e5c:	1c6b      	adds	r3, r5, #1
 8001e5e:	423b      	tst	r3, r7
 8001e60:	d171      	bne.n	8001f46 <__aeabi_dsub+0x4ba>
 8001e62:	0023      	movs	r3, r4
 8001e64:	4303      	orrs	r3, r0
 8001e66:	2d00      	cmp	r5, #0
 8001e68:	d000      	beq.n	8001e6c <__aeabi_dsub+0x3e0>
 8001e6a:	e14e      	b.n	800210a <__aeabi_dsub+0x67e>
 8001e6c:	4657      	mov	r7, sl
 8001e6e:	2b00      	cmp	r3, #0
 8001e70:	d100      	bne.n	8001e74 <__aeabi_dsub+0x3e8>
 8001e72:	e1b5      	b.n	80021e0 <__aeabi_dsub+0x754>
 8001e74:	2f00      	cmp	r7, #0
 8001e76:	d00d      	beq.n	8001e94 <__aeabi_dsub+0x408>
 8001e78:	1883      	adds	r3, r0, r2
 8001e7a:	4283      	cmp	r3, r0
 8001e7c:	4180      	sbcs	r0, r0
 8001e7e:	445c      	add	r4, fp
 8001e80:	4240      	negs	r0, r0
 8001e82:	1824      	adds	r4, r4, r0
 8001e84:	0222      	lsls	r2, r4, #8
 8001e86:	d500      	bpl.n	8001e8a <__aeabi_dsub+0x3fe>
 8001e88:	e1c8      	b.n	800221c <__aeabi_dsub+0x790>
 8001e8a:	001f      	movs	r7, r3
 8001e8c:	4698      	mov	r8, r3
 8001e8e:	4327      	orrs	r7, r4
 8001e90:	d100      	bne.n	8001e94 <__aeabi_dsub+0x408>
 8001e92:	e0bc      	b.n	800200e <__aeabi_dsub+0x582>
 8001e94:	4643      	mov	r3, r8
 8001e96:	0767      	lsls	r7, r4, #29
 8001e98:	08db      	lsrs	r3, r3, #3
 8001e9a:	431f      	orrs	r7, r3
 8001e9c:	08e5      	lsrs	r5, r4, #3
 8001e9e:	2300      	movs	r3, #0
 8001ea0:	e04c      	b.n	8001f3c <__aeabi_dsub+0x4b0>
 8001ea2:	1a83      	subs	r3, r0, r2
 8001ea4:	4698      	mov	r8, r3
 8001ea6:	465b      	mov	r3, fp
 8001ea8:	4540      	cmp	r0, r8
 8001eaa:	41bf      	sbcs	r7, r7
 8001eac:	1ae3      	subs	r3, r4, r3
 8001eae:	427f      	negs	r7, r7
 8001eb0:	1bdb      	subs	r3, r3, r7
 8001eb2:	021f      	lsls	r7, r3, #8
 8001eb4:	d47c      	bmi.n	8001fb0 <__aeabi_dsub+0x524>
 8001eb6:	4647      	mov	r7, r8
 8001eb8:	431f      	orrs	r7, r3
 8001eba:	d100      	bne.n	8001ebe <__aeabi_dsub+0x432>
 8001ebc:	e0a6      	b.n	800200c <__aeabi_dsub+0x580>
 8001ebe:	001c      	movs	r4, r3
 8001ec0:	4647      	mov	r7, r8
 8001ec2:	e645      	b.n	8001b50 <__aeabi_dsub+0xc4>
 8001ec4:	4cb7      	ldr	r4, [pc, #732]	@ (80021a4 <__aeabi_dsub+0x718>)
 8001ec6:	1aed      	subs	r5, r5, r3
 8001ec8:	4014      	ands	r4, r2
 8001eca:	077b      	lsls	r3, r7, #29
 8001ecc:	d000      	beq.n	8001ed0 <__aeabi_dsub+0x444>
 8001ece:	e780      	b.n	8001dd2 <__aeabi_dsub+0x346>
 8001ed0:	e784      	b.n	8001ddc <__aeabi_dsub+0x350>
 8001ed2:	464b      	mov	r3, r9
 8001ed4:	0025      	movs	r5, r4
 8001ed6:	4305      	orrs	r5, r0
 8001ed8:	d066      	beq.n	8001fa8 <__aeabi_dsub+0x51c>
 8001eda:	1e5f      	subs	r7, r3, #1
 8001edc:	2b01      	cmp	r3, #1
 8001ede:	d100      	bne.n	8001ee2 <__aeabi_dsub+0x456>
 8001ee0:	e0fc      	b.n	80020dc <__aeabi_dsub+0x650>
 8001ee2:	4dae      	ldr	r5, [pc, #696]	@ (800219c <__aeabi_dsub+0x710>)
 8001ee4:	42ab      	cmp	r3, r5
 8001ee6:	d100      	bne.n	8001eea <__aeabi_dsub+0x45e>
 8001ee8:	e15e      	b.n	80021a8 <__aeabi_dsub+0x71c>
 8001eea:	4666      	mov	r6, ip
 8001eec:	2f38      	cmp	r7, #56	@ 0x38
 8001eee:	dc00      	bgt.n	8001ef2 <__aeabi_dsub+0x466>
 8001ef0:	e0b4      	b.n	800205c <__aeabi_dsub+0x5d0>
 8001ef2:	2001      	movs	r0, #1
 8001ef4:	1a17      	subs	r7, r2, r0
 8001ef6:	42ba      	cmp	r2, r7
 8001ef8:	4192      	sbcs	r2, r2
 8001efa:	465b      	mov	r3, fp
 8001efc:	4252      	negs	r2, r2
 8001efe:	464d      	mov	r5, r9
 8001f00:	1a9c      	subs	r4, r3, r2
 8001f02:	e620      	b.n	8001b46 <__aeabi_dsub+0xba>
 8001f04:	0767      	lsls	r7, r4, #29
 8001f06:	08c0      	lsrs	r0, r0, #3
 8001f08:	4307      	orrs	r7, r0
 8001f0a:	08e5      	lsrs	r5, r4, #3
 8001f0c:	e6ba      	b.n	8001c84 <__aeabi_dsub+0x1f8>
 8001f0e:	001f      	movs	r7, r3
 8001f10:	4659      	mov	r1, fp
 8001f12:	3f20      	subs	r7, #32
 8001f14:	40f9      	lsrs	r1, r7
 8001f16:	000f      	movs	r7, r1
 8001f18:	2b20      	cmp	r3, #32
 8001f1a:	d005      	beq.n	8001f28 <__aeabi_dsub+0x49c>
 8001f1c:	2140      	movs	r1, #64	@ 0x40
 8001f1e:	1acb      	subs	r3, r1, r3
 8001f20:	4659      	mov	r1, fp
 8001f22:	4099      	lsls	r1, r3
 8001f24:	430a      	orrs	r2, r1
 8001f26:	4692      	mov	sl, r2
 8001f28:	4653      	mov	r3, sl
 8001f2a:	1e5a      	subs	r2, r3, #1
 8001f2c:	4193      	sbcs	r3, r2
 8001f2e:	431f      	orrs	r7, r3
 8001f30:	e604      	b.n	8001b3c <__aeabi_dsub+0xb0>
 8001f32:	1aeb      	subs	r3, r5, r3
 8001f34:	4d9b      	ldr	r5, [pc, #620]	@ (80021a4 <__aeabi_dsub+0x718>)
 8001f36:	4015      	ands	r5, r2
 8001f38:	076f      	lsls	r7, r5, #29
 8001f3a:	08ed      	lsrs	r5, r5, #3
 8001f3c:	032c      	lsls	r4, r5, #12
 8001f3e:	055d      	lsls	r5, r3, #21
 8001f40:	0b24      	lsrs	r4, r4, #12
 8001f42:	0d6d      	lsrs	r5, r5, #21
 8001f44:	e736      	b.n	8001db4 <__aeabi_dsub+0x328>
 8001f46:	4d95      	ldr	r5, [pc, #596]	@ (800219c <__aeabi_dsub+0x710>)
 8001f48:	42ab      	cmp	r3, r5
 8001f4a:	d100      	bne.n	8001f4e <__aeabi_dsub+0x4c2>
 8001f4c:	e0d6      	b.n	80020fc <__aeabi_dsub+0x670>
 8001f4e:	1882      	adds	r2, r0, r2
 8001f50:	0021      	movs	r1, r4
 8001f52:	4282      	cmp	r2, r0
 8001f54:	4180      	sbcs	r0, r0
 8001f56:	4459      	add	r1, fp
 8001f58:	4240      	negs	r0, r0
 8001f5a:	1808      	adds	r0, r1, r0
 8001f5c:	07c7      	lsls	r7, r0, #31
 8001f5e:	0852      	lsrs	r2, r2, #1
 8001f60:	4317      	orrs	r7, r2
 8001f62:	0844      	lsrs	r4, r0, #1
 8001f64:	0752      	lsls	r2, r2, #29
 8001f66:	d400      	bmi.n	8001f6a <__aeabi_dsub+0x4de>
 8001f68:	e185      	b.n	8002276 <__aeabi_dsub+0x7ea>
 8001f6a:	220f      	movs	r2, #15
 8001f6c:	001d      	movs	r5, r3
 8001f6e:	403a      	ands	r2, r7
 8001f70:	2a04      	cmp	r2, #4
 8001f72:	d000      	beq.n	8001f76 <__aeabi_dsub+0x4ea>
 8001f74:	e61a      	b.n	8001bac <__aeabi_dsub+0x120>
 8001f76:	08ff      	lsrs	r7, r7, #3
 8001f78:	0764      	lsls	r4, r4, #29
 8001f7a:	4327      	orrs	r7, r4
 8001f7c:	0905      	lsrs	r5, r0, #4
 8001f7e:	e7dd      	b.n	8001f3c <__aeabi_dsub+0x4b0>
 8001f80:	465b      	mov	r3, fp
 8001f82:	08d2      	lsrs	r2, r2, #3
 8001f84:	075f      	lsls	r7, r3, #29
 8001f86:	4317      	orrs	r7, r2
 8001f88:	08dd      	lsrs	r5, r3, #3
 8001f8a:	e67b      	b.n	8001c84 <__aeabi_dsub+0x1f8>
 8001f8c:	2700      	movs	r7, #0
 8001f8e:	2400      	movs	r4, #0
 8001f90:	e710      	b.n	8001db4 <__aeabi_dsub+0x328>
 8001f92:	2b00      	cmp	r3, #0
 8001f94:	d000      	beq.n	8001f98 <__aeabi_dsub+0x50c>
 8001f96:	e0d6      	b.n	8002146 <__aeabi_dsub+0x6ba>
 8001f98:	2900      	cmp	r1, #0
 8001f9a:	d000      	beq.n	8001f9e <__aeabi_dsub+0x512>
 8001f9c:	e12f      	b.n	80021fe <__aeabi_dsub+0x772>
 8001f9e:	2480      	movs	r4, #128	@ 0x80
 8001fa0:	2600      	movs	r6, #0
 8001fa2:	4d7e      	ldr	r5, [pc, #504]	@ (800219c <__aeabi_dsub+0x710>)
 8001fa4:	0324      	lsls	r4, r4, #12
 8001fa6:	e705      	b.n	8001db4 <__aeabi_dsub+0x328>
 8001fa8:	4666      	mov	r6, ip
 8001faa:	465c      	mov	r4, fp
 8001fac:	08d0      	lsrs	r0, r2, #3
 8001fae:	e717      	b.n	8001de0 <__aeabi_dsub+0x354>
 8001fb0:	465b      	mov	r3, fp
 8001fb2:	1a17      	subs	r7, r2, r0
 8001fb4:	42ba      	cmp	r2, r7
 8001fb6:	4192      	sbcs	r2, r2
 8001fb8:	1b1c      	subs	r4, r3, r4
 8001fba:	2601      	movs	r6, #1
 8001fbc:	4663      	mov	r3, ip
 8001fbe:	4252      	negs	r2, r2
 8001fc0:	1aa4      	subs	r4, r4, r2
 8001fc2:	401e      	ands	r6, r3
 8001fc4:	e5c4      	b.n	8001b50 <__aeabi_dsub+0xc4>
 8001fc6:	1883      	adds	r3, r0, r2
 8001fc8:	4283      	cmp	r3, r0
 8001fca:	4180      	sbcs	r0, r0
 8001fcc:	445c      	add	r4, fp
 8001fce:	4240      	negs	r0, r0
 8001fd0:	1825      	adds	r5, r4, r0
 8001fd2:	022a      	lsls	r2, r5, #8
 8001fd4:	d400      	bmi.n	8001fd8 <__aeabi_dsub+0x54c>
 8001fd6:	e0da      	b.n	800218e <__aeabi_dsub+0x702>
 8001fd8:	4a72      	ldr	r2, [pc, #456]	@ (80021a4 <__aeabi_dsub+0x718>)
 8001fda:	085b      	lsrs	r3, r3, #1
 8001fdc:	4015      	ands	r5, r2
 8001fde:	07ea      	lsls	r2, r5, #31
 8001fe0:	431a      	orrs	r2, r3
 8001fe2:	0869      	lsrs	r1, r5, #1
 8001fe4:	075b      	lsls	r3, r3, #29
 8001fe6:	d400      	bmi.n	8001fea <__aeabi_dsub+0x55e>
 8001fe8:	e14a      	b.n	8002280 <__aeabi_dsub+0x7f4>
 8001fea:	230f      	movs	r3, #15
 8001fec:	4013      	ands	r3, r2
 8001fee:	2b04      	cmp	r3, #4
 8001ff0:	d100      	bne.n	8001ff4 <__aeabi_dsub+0x568>
 8001ff2:	e0fc      	b.n	80021ee <__aeabi_dsub+0x762>
 8001ff4:	1d17      	adds	r7, r2, #4
 8001ff6:	4297      	cmp	r7, r2
 8001ff8:	41a4      	sbcs	r4, r4
 8001ffa:	4264      	negs	r4, r4
 8001ffc:	2502      	movs	r5, #2
 8001ffe:	1864      	adds	r4, r4, r1
 8002000:	e6ec      	b.n	8001ddc <__aeabi_dsub+0x350>
 8002002:	4647      	mov	r7, r8
 8002004:	001c      	movs	r4, r3
 8002006:	431f      	orrs	r7, r3
 8002008:	d000      	beq.n	800200c <__aeabi_dsub+0x580>
 800200a:	e743      	b.n	8001e94 <__aeabi_dsub+0x408>
 800200c:	2600      	movs	r6, #0
 800200e:	2500      	movs	r5, #0
 8002010:	2400      	movs	r4, #0
 8002012:	e6cf      	b.n	8001db4 <__aeabi_dsub+0x328>
 8002014:	08c0      	lsrs	r0, r0, #3
 8002016:	0767      	lsls	r7, r4, #29
 8002018:	4307      	orrs	r7, r0
 800201a:	08e5      	lsrs	r5, r4, #3
 800201c:	e632      	b.n	8001c84 <__aeabi_dsub+0x1f8>
 800201e:	1a87      	subs	r7, r0, r2
 8002020:	465b      	mov	r3, fp
 8002022:	42b8      	cmp	r0, r7
 8002024:	4180      	sbcs	r0, r0
 8002026:	1ae4      	subs	r4, r4, r3
 8002028:	4240      	negs	r0, r0
 800202a:	1a24      	subs	r4, r4, r0
 800202c:	0223      	lsls	r3, r4, #8
 800202e:	d428      	bmi.n	8002082 <__aeabi_dsub+0x5f6>
 8002030:	0763      	lsls	r3, r4, #29
 8002032:	08ff      	lsrs	r7, r7, #3
 8002034:	431f      	orrs	r7, r3
 8002036:	08e5      	lsrs	r5, r4, #3
 8002038:	2301      	movs	r3, #1
 800203a:	e77f      	b.n	8001f3c <__aeabi_dsub+0x4b0>
 800203c:	2b00      	cmp	r3, #0
 800203e:	d100      	bne.n	8002042 <__aeabi_dsub+0x5b6>
 8002040:	e673      	b.n	8001d2a <__aeabi_dsub+0x29e>
 8002042:	464b      	mov	r3, r9
 8002044:	1b5f      	subs	r7, r3, r5
 8002046:	003b      	movs	r3, r7
 8002048:	2d00      	cmp	r5, #0
 800204a:	d100      	bne.n	800204e <__aeabi_dsub+0x5c2>
 800204c:	e742      	b.n	8001ed4 <__aeabi_dsub+0x448>
 800204e:	2f38      	cmp	r7, #56	@ 0x38
 8002050:	dd00      	ble.n	8002054 <__aeabi_dsub+0x5c8>
 8002052:	e0ec      	b.n	800222e <__aeabi_dsub+0x7a2>
 8002054:	2380      	movs	r3, #128	@ 0x80
 8002056:	000e      	movs	r6, r1
 8002058:	041b      	lsls	r3, r3, #16
 800205a:	431c      	orrs	r4, r3
 800205c:	2f1f      	cmp	r7, #31
 800205e:	dc25      	bgt.n	80020ac <__aeabi_dsub+0x620>
 8002060:	2520      	movs	r5, #32
 8002062:	0023      	movs	r3, r4
 8002064:	1bed      	subs	r5, r5, r7
 8002066:	0001      	movs	r1, r0
 8002068:	40a8      	lsls	r0, r5
 800206a:	40ab      	lsls	r3, r5
 800206c:	40f9      	lsrs	r1, r7
 800206e:	1e45      	subs	r5, r0, #1
 8002070:	41a8      	sbcs	r0, r5
 8002072:	430b      	orrs	r3, r1
 8002074:	40fc      	lsrs	r4, r7
 8002076:	4318      	orrs	r0, r3
 8002078:	465b      	mov	r3, fp
 800207a:	1b1b      	subs	r3, r3, r4
 800207c:	469b      	mov	fp, r3
 800207e:	e739      	b.n	8001ef4 <__aeabi_dsub+0x468>
 8002080:	4666      	mov	r6, ip
 8002082:	2501      	movs	r5, #1
 8002084:	e562      	b.n	8001b4c <__aeabi_dsub+0xc0>
 8002086:	001f      	movs	r7, r3
 8002088:	4659      	mov	r1, fp
 800208a:	3f20      	subs	r7, #32
 800208c:	40f9      	lsrs	r1, r7
 800208e:	468c      	mov	ip, r1
 8002090:	2b20      	cmp	r3, #32
 8002092:	d005      	beq.n	80020a0 <__aeabi_dsub+0x614>
 8002094:	2740      	movs	r7, #64	@ 0x40
 8002096:	4659      	mov	r1, fp
 8002098:	1afb      	subs	r3, r7, r3
 800209a:	4099      	lsls	r1, r3
 800209c:	430a      	orrs	r2, r1
 800209e:	4692      	mov	sl, r2
 80020a0:	4657      	mov	r7, sl
 80020a2:	1e7b      	subs	r3, r7, #1
 80020a4:	419f      	sbcs	r7, r3
 80020a6:	4663      	mov	r3, ip
 80020a8:	431f      	orrs	r7, r3
 80020aa:	e5c1      	b.n	8001c30 <__aeabi_dsub+0x1a4>
 80020ac:	003b      	movs	r3, r7
 80020ae:	0025      	movs	r5, r4
 80020b0:	3b20      	subs	r3, #32
 80020b2:	40dd      	lsrs	r5, r3
 80020b4:	2f20      	cmp	r7, #32
 80020b6:	d004      	beq.n	80020c2 <__aeabi_dsub+0x636>
 80020b8:	2340      	movs	r3, #64	@ 0x40
 80020ba:	1bdb      	subs	r3, r3, r7
 80020bc:	409c      	lsls	r4, r3
 80020be:	4320      	orrs	r0, r4
 80020c0:	4680      	mov	r8, r0
 80020c2:	4640      	mov	r0, r8
 80020c4:	1e43      	subs	r3, r0, #1
 80020c6:	4198      	sbcs	r0, r3
 80020c8:	4328      	orrs	r0, r5
 80020ca:	e713      	b.n	8001ef4 <__aeabi_dsub+0x468>
 80020cc:	2900      	cmp	r1, #0
 80020ce:	d09d      	beq.n	800200c <__aeabi_dsub+0x580>
 80020d0:	2601      	movs	r6, #1
 80020d2:	4663      	mov	r3, ip
 80020d4:	465c      	mov	r4, fp
 80020d6:	4690      	mov	r8, r2
 80020d8:	401e      	ands	r6, r3
 80020da:	e6db      	b.n	8001e94 <__aeabi_dsub+0x408>
 80020dc:	1a17      	subs	r7, r2, r0
 80020de:	465b      	mov	r3, fp
 80020e0:	42ba      	cmp	r2, r7
 80020e2:	4192      	sbcs	r2, r2
 80020e4:	1b1c      	subs	r4, r3, r4
 80020e6:	4252      	negs	r2, r2
 80020e8:	1aa4      	subs	r4, r4, r2
 80020ea:	0223      	lsls	r3, r4, #8
 80020ec:	d4c8      	bmi.n	8002080 <__aeabi_dsub+0x5f4>
 80020ee:	0763      	lsls	r3, r4, #29
 80020f0:	08ff      	lsrs	r7, r7, #3
 80020f2:	431f      	orrs	r7, r3
 80020f4:	4666      	mov	r6, ip
 80020f6:	2301      	movs	r3, #1
 80020f8:	08e5      	lsrs	r5, r4, #3
 80020fa:	e71f      	b.n	8001f3c <__aeabi_dsub+0x4b0>
 80020fc:	001d      	movs	r5, r3
 80020fe:	2400      	movs	r4, #0
 8002100:	2700      	movs	r7, #0
 8002102:	e657      	b.n	8001db4 <__aeabi_dsub+0x328>
 8002104:	465c      	mov	r4, fp
 8002106:	08d0      	lsrs	r0, r2, #3
 8002108:	e66a      	b.n	8001de0 <__aeabi_dsub+0x354>
 800210a:	2b00      	cmp	r3, #0
 800210c:	d100      	bne.n	8002110 <__aeabi_dsub+0x684>
 800210e:	e737      	b.n	8001f80 <__aeabi_dsub+0x4f4>
 8002110:	4653      	mov	r3, sl
 8002112:	08c0      	lsrs	r0, r0, #3
 8002114:	0767      	lsls	r7, r4, #29
 8002116:	4307      	orrs	r7, r0
 8002118:	08e5      	lsrs	r5, r4, #3
 800211a:	2b00      	cmp	r3, #0
 800211c:	d100      	bne.n	8002120 <__aeabi_dsub+0x694>
 800211e:	e5b1      	b.n	8001c84 <__aeabi_dsub+0x1f8>
 8002120:	2380      	movs	r3, #128	@ 0x80
 8002122:	031b      	lsls	r3, r3, #12
 8002124:	421d      	tst	r5, r3
 8002126:	d008      	beq.n	800213a <__aeabi_dsub+0x6ae>
 8002128:	4659      	mov	r1, fp
 800212a:	08c8      	lsrs	r0, r1, #3
 800212c:	4218      	tst	r0, r3
 800212e:	d104      	bne.n	800213a <__aeabi_dsub+0x6ae>
 8002130:	08d2      	lsrs	r2, r2, #3
 8002132:	0749      	lsls	r1, r1, #29
 8002134:	430a      	orrs	r2, r1
 8002136:	0017      	movs	r7, r2
 8002138:	0005      	movs	r5, r0
 800213a:	0f7b      	lsrs	r3, r7, #29
 800213c:	00ff      	lsls	r7, r7, #3
 800213e:	08ff      	lsrs	r7, r7, #3
 8002140:	075b      	lsls	r3, r3, #29
 8002142:	431f      	orrs	r7, r3
 8002144:	e59e      	b.n	8001c84 <__aeabi_dsub+0x1f8>
 8002146:	08c0      	lsrs	r0, r0, #3
 8002148:	0763      	lsls	r3, r4, #29
 800214a:	4318      	orrs	r0, r3
 800214c:	08e5      	lsrs	r5, r4, #3
 800214e:	2900      	cmp	r1, #0
 8002150:	d053      	beq.n	80021fa <__aeabi_dsub+0x76e>
 8002152:	2380      	movs	r3, #128	@ 0x80
 8002154:	031b      	lsls	r3, r3, #12
 8002156:	421d      	tst	r5, r3
 8002158:	d00a      	beq.n	8002170 <__aeabi_dsub+0x6e4>
 800215a:	4659      	mov	r1, fp
 800215c:	08cc      	lsrs	r4, r1, #3
 800215e:	421c      	tst	r4, r3
 8002160:	d106      	bne.n	8002170 <__aeabi_dsub+0x6e4>
 8002162:	2601      	movs	r6, #1
 8002164:	4663      	mov	r3, ip
 8002166:	0025      	movs	r5, r4
 8002168:	08d0      	lsrs	r0, r2, #3
 800216a:	0749      	lsls	r1, r1, #29
 800216c:	4308      	orrs	r0, r1
 800216e:	401e      	ands	r6, r3
 8002170:	0f47      	lsrs	r7, r0, #29
 8002172:	00c0      	lsls	r0, r0, #3
 8002174:	08c0      	lsrs	r0, r0, #3
 8002176:	077f      	lsls	r7, r7, #29
 8002178:	4307      	orrs	r7, r0
 800217a:	e583      	b.n	8001c84 <__aeabi_dsub+0x1f8>
 800217c:	1883      	adds	r3, r0, r2
 800217e:	4293      	cmp	r3, r2
 8002180:	4192      	sbcs	r2, r2
 8002182:	445c      	add	r4, fp
 8002184:	4252      	negs	r2, r2
 8002186:	18a5      	adds	r5, r4, r2
 8002188:	022a      	lsls	r2, r5, #8
 800218a:	d500      	bpl.n	800218e <__aeabi_dsub+0x702>
 800218c:	e724      	b.n	8001fd8 <__aeabi_dsub+0x54c>
 800218e:	076f      	lsls	r7, r5, #29
 8002190:	08db      	lsrs	r3, r3, #3
 8002192:	431f      	orrs	r7, r3
 8002194:	08ed      	lsrs	r5, r5, #3
 8002196:	2301      	movs	r3, #1
 8002198:	e6d0      	b.n	8001f3c <__aeabi_dsub+0x4b0>
 800219a:	46c0      	nop			@ (mov r8, r8)
 800219c:	000007ff 	.word	0x000007ff
 80021a0:	000007fe 	.word	0x000007fe
 80021a4:	ff7fffff 	.word	0xff7fffff
 80021a8:	465b      	mov	r3, fp
 80021aa:	08d2      	lsrs	r2, r2, #3
 80021ac:	075f      	lsls	r7, r3, #29
 80021ae:	4666      	mov	r6, ip
 80021b0:	4317      	orrs	r7, r2
 80021b2:	08dd      	lsrs	r5, r3, #3
 80021b4:	e566      	b.n	8001c84 <__aeabi_dsub+0x1f8>
 80021b6:	0025      	movs	r5, r4
 80021b8:	3b20      	subs	r3, #32
 80021ba:	40dd      	lsrs	r5, r3
 80021bc:	4663      	mov	r3, ip
 80021be:	2b20      	cmp	r3, #32
 80021c0:	d005      	beq.n	80021ce <__aeabi_dsub+0x742>
 80021c2:	2340      	movs	r3, #64	@ 0x40
 80021c4:	4661      	mov	r1, ip
 80021c6:	1a5b      	subs	r3, r3, r1
 80021c8:	409c      	lsls	r4, r3
 80021ca:	4320      	orrs	r0, r4
 80021cc:	4680      	mov	r8, r0
 80021ce:	4647      	mov	r7, r8
 80021d0:	1e7b      	subs	r3, r7, #1
 80021d2:	419f      	sbcs	r7, r3
 80021d4:	432f      	orrs	r7, r5
 80021d6:	e5a0      	b.n	8001d1a <__aeabi_dsub+0x28e>
 80021d8:	2120      	movs	r1, #32
 80021da:	2700      	movs	r7, #0
 80021dc:	1a09      	subs	r1, r1, r0
 80021de:	e4d2      	b.n	8001b86 <__aeabi_dsub+0xfa>
 80021e0:	2f00      	cmp	r7, #0
 80021e2:	d100      	bne.n	80021e6 <__aeabi_dsub+0x75a>
 80021e4:	e713      	b.n	800200e <__aeabi_dsub+0x582>
 80021e6:	465c      	mov	r4, fp
 80021e8:	0017      	movs	r7, r2
 80021ea:	2500      	movs	r5, #0
 80021ec:	e5f6      	b.n	8001ddc <__aeabi_dsub+0x350>
 80021ee:	08d7      	lsrs	r7, r2, #3
 80021f0:	0749      	lsls	r1, r1, #29
 80021f2:	2302      	movs	r3, #2
 80021f4:	430f      	orrs	r7, r1
 80021f6:	092d      	lsrs	r5, r5, #4
 80021f8:	e6a0      	b.n	8001f3c <__aeabi_dsub+0x4b0>
 80021fa:	0007      	movs	r7, r0
 80021fc:	e542      	b.n	8001c84 <__aeabi_dsub+0x1f8>
 80021fe:	465b      	mov	r3, fp
 8002200:	2601      	movs	r6, #1
 8002202:	075f      	lsls	r7, r3, #29
 8002204:	08dd      	lsrs	r5, r3, #3
 8002206:	4663      	mov	r3, ip
 8002208:	08d2      	lsrs	r2, r2, #3
 800220a:	4317      	orrs	r7, r2
 800220c:	401e      	ands	r6, r3
 800220e:	e539      	b.n	8001c84 <__aeabi_dsub+0x1f8>
 8002210:	465b      	mov	r3, fp
 8002212:	08d2      	lsrs	r2, r2, #3
 8002214:	075f      	lsls	r7, r3, #29
 8002216:	4317      	orrs	r7, r2
 8002218:	08dd      	lsrs	r5, r3, #3
 800221a:	e533      	b.n	8001c84 <__aeabi_dsub+0x1f8>
 800221c:	4a1e      	ldr	r2, [pc, #120]	@ (8002298 <__aeabi_dsub+0x80c>)
 800221e:	08db      	lsrs	r3, r3, #3
 8002220:	4022      	ands	r2, r4
 8002222:	0757      	lsls	r7, r2, #29
 8002224:	0252      	lsls	r2, r2, #9
 8002226:	2501      	movs	r5, #1
 8002228:	431f      	orrs	r7, r3
 800222a:	0b14      	lsrs	r4, r2, #12
 800222c:	e5c2      	b.n	8001db4 <__aeabi_dsub+0x328>
 800222e:	000e      	movs	r6, r1
 8002230:	2001      	movs	r0, #1
 8002232:	e65f      	b.n	8001ef4 <__aeabi_dsub+0x468>
 8002234:	2b00      	cmp	r3, #0
 8002236:	d00d      	beq.n	8002254 <__aeabi_dsub+0x7c8>
 8002238:	464b      	mov	r3, r9
 800223a:	1b5b      	subs	r3, r3, r5
 800223c:	469c      	mov	ip, r3
 800223e:	2d00      	cmp	r5, #0
 8002240:	d100      	bne.n	8002244 <__aeabi_dsub+0x7b8>
 8002242:	e548      	b.n	8001cd6 <__aeabi_dsub+0x24a>
 8002244:	2701      	movs	r7, #1
 8002246:	2b38      	cmp	r3, #56	@ 0x38
 8002248:	dd00      	ble.n	800224c <__aeabi_dsub+0x7c0>
 800224a:	e566      	b.n	8001d1a <__aeabi_dsub+0x28e>
 800224c:	2380      	movs	r3, #128	@ 0x80
 800224e:	041b      	lsls	r3, r3, #16
 8002250:	431c      	orrs	r4, r3
 8002252:	e550      	b.n	8001cf6 <__aeabi_dsub+0x26a>
 8002254:	1c6b      	adds	r3, r5, #1
 8002256:	4d11      	ldr	r5, [pc, #68]	@ (800229c <__aeabi_dsub+0x810>)
 8002258:	422b      	tst	r3, r5
 800225a:	d000      	beq.n	800225e <__aeabi_dsub+0x7d2>
 800225c:	e673      	b.n	8001f46 <__aeabi_dsub+0x4ba>
 800225e:	4659      	mov	r1, fp
 8002260:	0023      	movs	r3, r4
 8002262:	4311      	orrs	r1, r2
 8002264:	468a      	mov	sl, r1
 8002266:	4303      	orrs	r3, r0
 8002268:	e600      	b.n	8001e6c <__aeabi_dsub+0x3e0>
 800226a:	0767      	lsls	r7, r4, #29
 800226c:	08c0      	lsrs	r0, r0, #3
 800226e:	2300      	movs	r3, #0
 8002270:	4307      	orrs	r7, r0
 8002272:	08e5      	lsrs	r5, r4, #3
 8002274:	e662      	b.n	8001f3c <__aeabi_dsub+0x4b0>
 8002276:	0764      	lsls	r4, r4, #29
 8002278:	08ff      	lsrs	r7, r7, #3
 800227a:	4327      	orrs	r7, r4
 800227c:	0905      	lsrs	r5, r0, #4
 800227e:	e65d      	b.n	8001f3c <__aeabi_dsub+0x4b0>
 8002280:	08d2      	lsrs	r2, r2, #3
 8002282:	0749      	lsls	r1, r1, #29
 8002284:	4311      	orrs	r1, r2
 8002286:	000f      	movs	r7, r1
 8002288:	2302      	movs	r3, #2
 800228a:	092d      	lsrs	r5, r5, #4
 800228c:	e656      	b.n	8001f3c <__aeabi_dsub+0x4b0>
 800228e:	0007      	movs	r7, r0
 8002290:	e5a4      	b.n	8001ddc <__aeabi_dsub+0x350>
 8002292:	0038      	movs	r0, r7
 8002294:	e48f      	b.n	8001bb6 <__aeabi_dsub+0x12a>
 8002296:	46c0      	nop			@ (mov r8, r8)
 8002298:	ff7fffff 	.word	0xff7fffff
 800229c:	000007fe 	.word	0x000007fe

080022a0 <__aeabi_d2iz>:
 80022a0:	000b      	movs	r3, r1
 80022a2:	0002      	movs	r2, r0
 80022a4:	b570      	push	{r4, r5, r6, lr}
 80022a6:	4d16      	ldr	r5, [pc, #88]	@ (8002300 <__aeabi_d2iz+0x60>)
 80022a8:	030c      	lsls	r4, r1, #12
 80022aa:	b082      	sub	sp, #8
 80022ac:	0049      	lsls	r1, r1, #1
 80022ae:	2000      	movs	r0, #0
 80022b0:	9200      	str	r2, [sp, #0]
 80022b2:	9301      	str	r3, [sp, #4]
 80022b4:	0b24      	lsrs	r4, r4, #12
 80022b6:	0d49      	lsrs	r1, r1, #21
 80022b8:	0fde      	lsrs	r6, r3, #31
 80022ba:	42a9      	cmp	r1, r5
 80022bc:	dd04      	ble.n	80022c8 <__aeabi_d2iz+0x28>
 80022be:	4811      	ldr	r0, [pc, #68]	@ (8002304 <__aeabi_d2iz+0x64>)
 80022c0:	4281      	cmp	r1, r0
 80022c2:	dd03      	ble.n	80022cc <__aeabi_d2iz+0x2c>
 80022c4:	4b10      	ldr	r3, [pc, #64]	@ (8002308 <__aeabi_d2iz+0x68>)
 80022c6:	18f0      	adds	r0, r6, r3
 80022c8:	b002      	add	sp, #8
 80022ca:	bd70      	pop	{r4, r5, r6, pc}
 80022cc:	2080      	movs	r0, #128	@ 0x80
 80022ce:	0340      	lsls	r0, r0, #13
 80022d0:	4320      	orrs	r0, r4
 80022d2:	4c0e      	ldr	r4, [pc, #56]	@ (800230c <__aeabi_d2iz+0x6c>)
 80022d4:	1a64      	subs	r4, r4, r1
 80022d6:	2c1f      	cmp	r4, #31
 80022d8:	dd08      	ble.n	80022ec <__aeabi_d2iz+0x4c>
 80022da:	4b0d      	ldr	r3, [pc, #52]	@ (8002310 <__aeabi_d2iz+0x70>)
 80022dc:	1a5b      	subs	r3, r3, r1
 80022de:	40d8      	lsrs	r0, r3
 80022e0:	0003      	movs	r3, r0
 80022e2:	4258      	negs	r0, r3
 80022e4:	2e00      	cmp	r6, #0
 80022e6:	d1ef      	bne.n	80022c8 <__aeabi_d2iz+0x28>
 80022e8:	0018      	movs	r0, r3
 80022ea:	e7ed      	b.n	80022c8 <__aeabi_d2iz+0x28>
 80022ec:	4b09      	ldr	r3, [pc, #36]	@ (8002314 <__aeabi_d2iz+0x74>)
 80022ee:	9a00      	ldr	r2, [sp, #0]
 80022f0:	469c      	mov	ip, r3
 80022f2:	0003      	movs	r3, r0
 80022f4:	4461      	add	r1, ip
 80022f6:	408b      	lsls	r3, r1
 80022f8:	40e2      	lsrs	r2, r4
 80022fa:	4313      	orrs	r3, r2
 80022fc:	e7f1      	b.n	80022e2 <__aeabi_d2iz+0x42>
 80022fe:	46c0      	nop			@ (mov r8, r8)
 8002300:	000003fe 	.word	0x000003fe
 8002304:	0000041d 	.word	0x0000041d
 8002308:	7fffffff 	.word	0x7fffffff
 800230c:	00000433 	.word	0x00000433
 8002310:	00000413 	.word	0x00000413
 8002314:	fffffbed 	.word	0xfffffbed

08002318 <__aeabi_i2d>:
 8002318:	b570      	push	{r4, r5, r6, lr}
 800231a:	2800      	cmp	r0, #0
 800231c:	d016      	beq.n	800234c <__aeabi_i2d+0x34>
 800231e:	17c3      	asrs	r3, r0, #31
 8002320:	18c5      	adds	r5, r0, r3
 8002322:	405d      	eors	r5, r3
 8002324:	0fc4      	lsrs	r4, r0, #31
 8002326:	0028      	movs	r0, r5
 8002328:	f000 f848 	bl	80023bc <__clzsi2>
 800232c:	4b10      	ldr	r3, [pc, #64]	@ (8002370 <__aeabi_i2d+0x58>)
 800232e:	1a1b      	subs	r3, r3, r0
 8002330:	055b      	lsls	r3, r3, #21
 8002332:	0d5b      	lsrs	r3, r3, #21
 8002334:	280a      	cmp	r0, #10
 8002336:	dc14      	bgt.n	8002362 <__aeabi_i2d+0x4a>
 8002338:	0002      	movs	r2, r0
 800233a:	002e      	movs	r6, r5
 800233c:	3215      	adds	r2, #21
 800233e:	4096      	lsls	r6, r2
 8002340:	220b      	movs	r2, #11
 8002342:	1a12      	subs	r2, r2, r0
 8002344:	40d5      	lsrs	r5, r2
 8002346:	032d      	lsls	r5, r5, #12
 8002348:	0b2d      	lsrs	r5, r5, #12
 800234a:	e003      	b.n	8002354 <__aeabi_i2d+0x3c>
 800234c:	2400      	movs	r4, #0
 800234e:	2300      	movs	r3, #0
 8002350:	2500      	movs	r5, #0
 8002352:	2600      	movs	r6, #0
 8002354:	051b      	lsls	r3, r3, #20
 8002356:	432b      	orrs	r3, r5
 8002358:	07e4      	lsls	r4, r4, #31
 800235a:	4323      	orrs	r3, r4
 800235c:	0030      	movs	r0, r6
 800235e:	0019      	movs	r1, r3
 8002360:	bd70      	pop	{r4, r5, r6, pc}
 8002362:	380b      	subs	r0, #11
 8002364:	4085      	lsls	r5, r0
 8002366:	032d      	lsls	r5, r5, #12
 8002368:	2600      	movs	r6, #0
 800236a:	0b2d      	lsrs	r5, r5, #12
 800236c:	e7f2      	b.n	8002354 <__aeabi_i2d+0x3c>
 800236e:	46c0      	nop			@ (mov r8, r8)
 8002370:	0000041e 	.word	0x0000041e

08002374 <__aeabi_ui2d>:
 8002374:	b510      	push	{r4, lr}
 8002376:	1e04      	subs	r4, r0, #0
 8002378:	d010      	beq.n	800239c <__aeabi_ui2d+0x28>
 800237a:	f000 f81f 	bl	80023bc <__clzsi2>
 800237e:	4b0e      	ldr	r3, [pc, #56]	@ (80023b8 <__aeabi_ui2d+0x44>)
 8002380:	1a1b      	subs	r3, r3, r0
 8002382:	055b      	lsls	r3, r3, #21
 8002384:	0d5b      	lsrs	r3, r3, #21
 8002386:	280a      	cmp	r0, #10
 8002388:	dc0f      	bgt.n	80023aa <__aeabi_ui2d+0x36>
 800238a:	220b      	movs	r2, #11
 800238c:	0021      	movs	r1, r4
 800238e:	1a12      	subs	r2, r2, r0
 8002390:	40d1      	lsrs	r1, r2
 8002392:	3015      	adds	r0, #21
 8002394:	030a      	lsls	r2, r1, #12
 8002396:	4084      	lsls	r4, r0
 8002398:	0b12      	lsrs	r2, r2, #12
 800239a:	e001      	b.n	80023a0 <__aeabi_ui2d+0x2c>
 800239c:	2300      	movs	r3, #0
 800239e:	2200      	movs	r2, #0
 80023a0:	051b      	lsls	r3, r3, #20
 80023a2:	4313      	orrs	r3, r2
 80023a4:	0020      	movs	r0, r4
 80023a6:	0019      	movs	r1, r3
 80023a8:	bd10      	pop	{r4, pc}
 80023aa:	0022      	movs	r2, r4
 80023ac:	380b      	subs	r0, #11
 80023ae:	4082      	lsls	r2, r0
 80023b0:	0312      	lsls	r2, r2, #12
 80023b2:	2400      	movs	r4, #0
 80023b4:	0b12      	lsrs	r2, r2, #12
 80023b6:	e7f3      	b.n	80023a0 <__aeabi_ui2d+0x2c>
 80023b8:	0000041e 	.word	0x0000041e

080023bc <__clzsi2>:
 80023bc:	211c      	movs	r1, #28
 80023be:	2301      	movs	r3, #1
 80023c0:	041b      	lsls	r3, r3, #16
 80023c2:	4298      	cmp	r0, r3
 80023c4:	d301      	bcc.n	80023ca <__clzsi2+0xe>
 80023c6:	0c00      	lsrs	r0, r0, #16
 80023c8:	3910      	subs	r1, #16
 80023ca:	0a1b      	lsrs	r3, r3, #8
 80023cc:	4298      	cmp	r0, r3
 80023ce:	d301      	bcc.n	80023d4 <__clzsi2+0x18>
 80023d0:	0a00      	lsrs	r0, r0, #8
 80023d2:	3908      	subs	r1, #8
 80023d4:	091b      	lsrs	r3, r3, #4
 80023d6:	4298      	cmp	r0, r3
 80023d8:	d301      	bcc.n	80023de <__clzsi2+0x22>
 80023da:	0900      	lsrs	r0, r0, #4
 80023dc:	3904      	subs	r1, #4
 80023de:	a202      	add	r2, pc, #8	@ (adr r2, 80023e8 <__clzsi2+0x2c>)
 80023e0:	5c10      	ldrb	r0, [r2, r0]
 80023e2:	1840      	adds	r0, r0, r1
 80023e4:	4770      	bx	lr
 80023e6:	46c0      	nop			@ (mov r8, r8)
 80023e8:	02020304 	.word	0x02020304
 80023ec:	01010101 	.word	0x01010101
	...

080023f8 <AdaptiveController_step>:
static RT_MODEL rtM_;
RT_MODEL *const rtM = &rtM_;

/* Model step function */
void AdaptiveController_step(void)
{
 80023f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80023fa:	b09d      	sub	sp, #116	@ 0x74
 80023fc:	af00      	add	r7, sp, #0
  real_T rtb_DiscreteTimeIntegrator2;
  real_T rtb_SineWaveFunction;
  int32_T i;

  /* DiscreteIntegrator: '<Root>/Discrete-Time Integrator2' */
  rtb_DiscreteTimeIntegrator2 = rtDW.DiscreteTimeIntegrator2_DSTATE;
 80023fe:	4bd2      	ldr	r3, [pc, #840]	@ (8002748 <AdaptiveController_step+0x350>)
 8002400:	681a      	ldr	r2, [r3, #0]
 8002402:	685b      	ldr	r3, [r3, #4]
 8002404:	663a      	str	r2, [r7, #96]	@ 0x60
 8002406:	667b      	str	r3, [r7, #100]	@ 0x64

  /* Sum: '<Root>/Add2' incorporates:
   *  DiscreteIntegrator: '<Root>/Discrete-Time Integrator2'
   *  Inport: '<Root>/thetaDot'
   */
  rtb_Add2 = rtU.thetaDot - rtDW.DiscreteTimeIntegrator2_DSTATE;
 8002408:	4bd0      	ldr	r3, [pc, #832]	@ (800274c <AdaptiveController_step+0x354>)
 800240a:	6898      	ldr	r0, [r3, #8]
 800240c:	68d9      	ldr	r1, [r3, #12]
 800240e:	4bce      	ldr	r3, [pc, #824]	@ (8002748 <AdaptiveController_step+0x350>)
 8002410:	681a      	ldr	r2, [r3, #0]
 8002412:	685b      	ldr	r3, [r3, #4]
 8002414:	f7ff fb3a 	bl	8001a8c <__aeabi_dsub>
 8002418:	0002      	movs	r2, r0
 800241a:	000b      	movs	r3, r1
 800241c:	65ba      	str	r2, [r7, #88]	@ 0x58
 800241e:	65fb      	str	r3, [r7, #92]	@ 0x5c

  /* Sum: '<Root>/Add1' incorporates:
   *  DiscreteIntegrator: '<Root>/Discrete-Time Integrator3'
   *  Inport: '<Root>/theta'
   */
  rtb_Add1 = rtU.theta - rtDW.DiscreteTimeIntegrator3_DSTATE;
 8002420:	4bca      	ldr	r3, [pc, #808]	@ (800274c <AdaptiveController_step+0x354>)
 8002422:	6818      	ldr	r0, [r3, #0]
 8002424:	6859      	ldr	r1, [r3, #4]
 8002426:	4bc8      	ldr	r3, [pc, #800]	@ (8002748 <AdaptiveController_step+0x350>)
 8002428:	689a      	ldr	r2, [r3, #8]
 800242a:	68db      	ldr	r3, [r3, #12]
 800242c:	f7ff fb2e 	bl	8001a8c <__aeabi_dsub>
 8002430:	0002      	movs	r2, r0
 8002432:	000b      	movs	r3, r1
 8002434:	653a      	str	r2, [r7, #80]	@ 0x50
 8002436:	657b      	str	r3, [r7, #84]	@ 0x54

  /* Sin: '<Root>/Sine Wave Function' incorporates:
   *  Inport: '<Root>/theta'
   */
  rtb_SineWaveFunction = sin(rtU.theta);
 8002438:	4bc4      	ldr	r3, [pc, #784]	@ (800274c <AdaptiveController_step+0x354>)
 800243a:	681a      	ldr	r2, [r3, #0]
 800243c:	685b      	ldr	r3, [r3, #4]
 800243e:	0010      	movs	r0, r2
 8002440:	0019      	movs	r1, r3
 8002442:	f001 fa77 	bl	8003934 <sin>
 8002446:	0002      	movs	r2, r0
 8002448:	000b      	movs	r3, r1
 800244a:	64ba      	str	r2, [r7, #72]	@ 0x48
 800244c:	64fb      	str	r3, [r7, #76]	@ 0x4c
   *  Product: '<Root>/Product'
   *  Product: '<Root>/Product1'
   *  Sum: '<Root>/Add'
   *  Sum: '<Root>/Add3'
   */
  rtY.control = ((rtU.referenceThetaDoubleDot - 8.0 * rtb_Add2) - 16.0 *
 800244e:	4bbf      	ldr	r3, [pc, #764]	@ (800274c <AdaptiveController_step+0x354>)
 8002450:	699c      	ldr	r4, [r3, #24]
 8002452:	69dd      	ldr	r5, [r3, #28]
 8002454:	2200      	movs	r2, #0
 8002456:	4bbe      	ldr	r3, [pc, #760]	@ (8002750 <AdaptiveController_step+0x358>)
 8002458:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 800245a:	6df9      	ldr	r1, [r7, #92]	@ 0x5c
 800245c:	f7ff f830 	bl	80014c0 <__aeabi_dmul>
 8002460:	0002      	movs	r2, r0
 8002462:	000b      	movs	r3, r1
 8002464:	0020      	movs	r0, r4
 8002466:	0029      	movs	r1, r5
 8002468:	f7ff fb10 	bl	8001a8c <__aeabi_dsub>
 800246c:	0002      	movs	r2, r0
 800246e:	000b      	movs	r3, r1
 8002470:	0014      	movs	r4, r2
 8002472:	001d      	movs	r5, r3
 8002474:	2200      	movs	r2, #0
 8002476:	4bb7      	ldr	r3, [pc, #732]	@ (8002754 <AdaptiveController_step+0x35c>)
 8002478:	6d38      	ldr	r0, [r7, #80]	@ 0x50
 800247a:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 800247c:	f7ff f820 	bl	80014c0 <__aeabi_dmul>
 8002480:	0002      	movs	r2, r0
 8002482:	000b      	movs	r3, r1
 8002484:	0020      	movs	r0, r4
 8002486:	0029      	movs	r1, r5
 8002488:	f7ff fb00 	bl	8001a8c <__aeabi_dsub>
 800248c:	0002      	movs	r2, r0
 800248e:	000b      	movs	r3, r1
 8002490:	0010      	movs	r0, r2
 8002492:	0019      	movs	r1, r3
                 rtb_Add1) * rtDW.DiscreteTimeIntegrator_DSTATE +
 8002494:	4bac      	ldr	r3, [pc, #688]	@ (8002748 <AdaptiveController_step+0x350>)
 8002496:	691a      	ldr	r2, [r3, #16]
 8002498:	695b      	ldr	r3, [r3, #20]
 800249a:	f7ff f811 	bl	80014c0 <__aeabi_dmul>
 800249e:	0002      	movs	r2, r0
 80024a0:	000b      	movs	r3, r1
 80024a2:	0014      	movs	r4, r2
 80024a4:	001d      	movs	r5, r3
    rtDW.DiscreteTimeIntegrator1_DSTATE * rtb_SineWaveFunction;
 80024a6:	4ba8      	ldr	r3, [pc, #672]	@ (8002748 <AdaptiveController_step+0x350>)
 80024a8:	6998      	ldr	r0, [r3, #24]
 80024aa:	69d9      	ldr	r1, [r3, #28]
 80024ac:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 80024ae:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 80024b0:	f7ff f806 	bl	80014c0 <__aeabi_dmul>
 80024b4:	0002      	movs	r2, r0
 80024b6:	000b      	movs	r3, r1
                 rtb_Add1) * rtDW.DiscreteTimeIntegrator_DSTATE +
 80024b8:	0020      	movs	r0, r4
 80024ba:	0029      	movs	r1, r5
 80024bc:	f7fe f800 	bl	80004c0 <__aeabi_dadd>
 80024c0:	0002      	movs	r2, r0
 80024c2:	000b      	movs	r3, r1
  rtY.control = ((rtU.referenceThetaDoubleDot - 8.0 * rtb_Add2) - 16.0 *
 80024c4:	49a4      	ldr	r1, [pc, #656]	@ (8002758 <AdaptiveController_step+0x360>)
 80024c6:	600a      	str	r2, [r1, #0]
 80024c8:	604b      	str	r3, [r1, #4]

  /* MATLAB Function: '<Root>/MATLAB Function' incorporates:
   *  DiscreteIntegrator: '<Root>/Discrete-Time Integrator'
   *  Inport: '<Root>/thetaDoubleDot'
   */
  a = 1.0 / rtDW.DiscreteTimeIntegrator_DSTATE;
 80024ca:	4b9f      	ldr	r3, [pc, #636]	@ (8002748 <AdaptiveController_step+0x350>)
 80024cc:	691a      	ldr	r2, [r3, #16]
 80024ce:	695b      	ldr	r3, [r3, #20]
 80024d0:	2000      	movs	r0, #0
 80024d2:	49a2      	ldr	r1, [pc, #648]	@ (800275c <AdaptiveController_step+0x364>)
 80024d4:	f7fe fbba 	bl	8000c4c <__aeabi_ddiv>
 80024d8:	0002      	movs	r2, r0
 80024da:	000b      	movs	r3, r1
 80024dc:	643a      	str	r2, [r7, #64]	@ 0x40
 80024de:	647b      	str	r3, [r7, #68]	@ 0x44
  a_idx_0 = a * rtU.thetaDoubleDot;
 80024e0:	4b9a      	ldr	r3, [pc, #616]	@ (800274c <AdaptiveController_step+0x354>)
 80024e2:	691a      	ldr	r2, [r3, #16]
 80024e4:	695b      	ldr	r3, [r3, #20]
 80024e6:	6c38      	ldr	r0, [r7, #64]	@ 0x40
 80024e8:	6c79      	ldr	r1, [r7, #68]	@ 0x44
 80024ea:	f7fe ffe9 	bl	80014c0 <__aeabi_dmul>
 80024ee:	0002      	movs	r2, r0
 80024f0:	000b      	movs	r3, r1
 80024f2:	63ba      	str	r2, [r7, #56]	@ 0x38
 80024f4:	63fb      	str	r3, [r7, #60]	@ 0x3c
  a *= rtb_SineWaveFunction;
 80024f6:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 80024f8:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 80024fa:	6c38      	ldr	r0, [r7, #64]	@ 0x40
 80024fc:	6c79      	ldr	r1, [r7, #68]	@ 0x44
 80024fe:	f7fe ffdf 	bl	80014c0 <__aeabi_dmul>
 8002502:	0002      	movs	r2, r0
 8002504:	000b      	movs	r3, r1
 8002506:	643a      	str	r2, [r7, #64]	@ 0x40
 8002508:	647b      	str	r3, [r7, #68]	@ 0x44
  rtb_SineWaveFunction = -90000.0 * a_idx_0 + 0.0 * a;
 800250a:	2200      	movs	r2, #0
 800250c:	4b94      	ldr	r3, [pc, #592]	@ (8002760 <AdaptiveController_step+0x368>)
 800250e:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 8002510:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8002512:	f7fe ffd5 	bl	80014c0 <__aeabi_dmul>
 8002516:	0002      	movs	r2, r0
 8002518:	000b      	movs	r3, r1
 800251a:	0014      	movs	r4, r2
 800251c:	001d      	movs	r5, r3
 800251e:	2200      	movs	r2, #0
 8002520:	2300      	movs	r3, #0
 8002522:	6c38      	ldr	r0, [r7, #64]	@ 0x40
 8002524:	6c79      	ldr	r1, [r7, #68]	@ 0x44
 8002526:	f7fe ffcb 	bl	80014c0 <__aeabi_dmul>
 800252a:	0002      	movs	r2, r0
 800252c:	000b      	movs	r3, r1
 800252e:	0020      	movs	r0, r4
 8002530:	0029      	movs	r1, r5
 8002532:	f7fd ffc5 	bl	80004c0 <__aeabi_dadd>
 8002536:	0002      	movs	r2, r0
 8002538:	000b      	movs	r3, r1
 800253a:	64ba      	str	r2, [r7, #72]	@ 0x48
 800253c:	64fb      	str	r3, [r7, #76]	@ 0x4c
  a_idx_0 = 0.0 * a_idx_0 + -90000.0 * a;
 800253e:	2200      	movs	r2, #0
 8002540:	2300      	movs	r3, #0
 8002542:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 8002544:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8002546:	f7fe ffbb 	bl	80014c0 <__aeabi_dmul>
 800254a:	0002      	movs	r2, r0
 800254c:	000b      	movs	r3, r1
 800254e:	0014      	movs	r4, r2
 8002550:	001d      	movs	r5, r3
 8002552:	2200      	movs	r2, #0
 8002554:	4b82      	ldr	r3, [pc, #520]	@ (8002760 <AdaptiveController_step+0x368>)
 8002556:	6c38      	ldr	r0, [r7, #64]	@ 0x40
 8002558:	6c79      	ldr	r1, [r7, #68]	@ 0x44
 800255a:	f7fe ffb1 	bl	80014c0 <__aeabi_dmul>
 800255e:	0002      	movs	r2, r0
 8002560:	000b      	movs	r3, r1
 8002562:	0020      	movs	r0, r4
 8002564:	0029      	movs	r1, r5
 8002566:	f7fd ffab 	bl	80004c0 <__aeabi_dadd>
 800256a:	0002      	movs	r2, r0
 800256c:	000b      	movs	r3, r1
 800256e:	63ba      	str	r2, [r7, #56]	@ 0x38
 8002570:	63fb      	str	r3, [r7, #60]	@ 0x3c
  y[0] = rtb_SineWaveFunction * 0.0;
 8002572:	2200      	movs	r2, #0
 8002574:	2300      	movs	r3, #0
 8002576:	6cb8      	ldr	r0, [r7, #72]	@ 0x48
 8002578:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
 800257a:	f7fe ffa1 	bl	80014c0 <__aeabi_dmul>
 800257e:	0002      	movs	r2, r0
 8002580:	000b      	movs	r3, r1
 8002582:	2410      	movs	r4, #16
 8002584:	2508      	movs	r5, #8
 8002586:	1961      	adds	r1, r4, r5
 8002588:	19c9      	adds	r1, r1, r7
 800258a:	600a      	str	r2, [r1, #0]
 800258c:	604b      	str	r3, [r1, #4]
  y[1] = a_idx_0 * 0.0;
 800258e:	2200      	movs	r2, #0
 8002590:	2300      	movs	r3, #0
 8002592:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 8002594:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8002596:	f7fe ff93 	bl	80014c0 <__aeabi_dmul>
 800259a:	0002      	movs	r2, r0
 800259c:	000b      	movs	r3, r1
 800259e:	1961      	adds	r1, r4, r5
 80025a0:	19c9      	adds	r1, r1, r7
 80025a2:	608a      	str	r2, [r1, #8]
 80025a4:	60cb      	str	r3, [r1, #12]
  y[2] = rtb_SineWaveFunction;
 80025a6:	1963      	adds	r3, r4, r5
 80025a8:	19d9      	adds	r1, r3, r7
 80025aa:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 80025ac:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 80025ae:	610a      	str	r2, [r1, #16]
 80025b0:	614b      	str	r3, [r1, #20]
  y[3] = a_idx_0;
 80025b2:	1963      	adds	r3, r4, r5
 80025b4:	19d9      	adds	r1, r3, r7
 80025b6:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 80025b8:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80025ba:	618a      	str	r2, [r1, #24]
 80025bc:	61cb      	str	r3, [r1, #28]
  for (i = 0; i < 2; i++) {
 80025be:	2300      	movs	r3, #0
 80025c0:	66fb      	str	r3, [r7, #108]	@ 0x6c
 80025c2:	e065      	b.n	8002690 <AdaptiveController_step+0x298>
    rtb_SineWaveFunction = y[i + 2];
 80025c4:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80025c6:	3302      	adds	r3, #2
 80025c8:	2110      	movs	r1, #16
 80025ca:	2608      	movs	r6, #8
 80025cc:	198a      	adds	r2, r1, r6
 80025ce:	19d2      	adds	r2, r2, r7
 80025d0:	00db      	lsls	r3, r3, #3
 80025d2:	18d3      	adds	r3, r2, r3
 80025d4:	681a      	ldr	r2, [r3, #0]
 80025d6:	685b      	ldr	r3, [r3, #4]
 80025d8:	64ba      	str	r2, [r7, #72]	@ 0x48
 80025da:	64fb      	str	r3, [r7, #76]	@ 0x4c
    a_idx_0 = y[i];
 80025dc:	198b      	adds	r3, r1, r6
 80025de:	19da      	adds	r2, r3, r7
 80025e0:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80025e2:	00db      	lsls	r3, r3, #3
 80025e4:	18d3      	adds	r3, r2, r3
 80025e6:	681a      	ldr	r2, [r3, #0]
 80025e8:	685b      	ldr	r3, [r3, #4]
 80025ea:	63ba      	str	r2, [r7, #56]	@ 0x38
 80025ec:	63fb      	str	r3, [r7, #60]	@ 0x3c
    p_dot[i] = (rtb_SineWaveFunction * 0.0664 + a_idx_0 * 0.0312) * rtb_Add2 +
 80025ee:	4a5d      	ldr	r2, [pc, #372]	@ (8002764 <AdaptiveController_step+0x36c>)
 80025f0:	4b5d      	ldr	r3, [pc, #372]	@ (8002768 <AdaptiveController_step+0x370>)
 80025f2:	6cb8      	ldr	r0, [r7, #72]	@ 0x48
 80025f4:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
 80025f6:	f7fe ff63 	bl	80014c0 <__aeabi_dmul>
 80025fa:	0002      	movs	r2, r0
 80025fc:	000b      	movs	r3, r1
 80025fe:	0014      	movs	r4, r2
 8002600:	001d      	movs	r5, r3
 8002602:	4a5a      	ldr	r2, [pc, #360]	@ (800276c <AdaptiveController_step+0x374>)
 8002604:	4b5a      	ldr	r3, [pc, #360]	@ (8002770 <AdaptiveController_step+0x378>)
 8002606:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 8002608:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 800260a:	f7fe ff59 	bl	80014c0 <__aeabi_dmul>
 800260e:	0002      	movs	r2, r0
 8002610:	000b      	movs	r3, r1
 8002612:	0020      	movs	r0, r4
 8002614:	0029      	movs	r1, r5
 8002616:	f7fd ff53 	bl	80004c0 <__aeabi_dadd>
 800261a:	0002      	movs	r2, r0
 800261c:	000b      	movs	r3, r1
 800261e:	0010      	movs	r0, r2
 8002620:	0019      	movs	r1, r3
 8002622:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8002624:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8002626:	f7fe ff4b 	bl	80014c0 <__aeabi_dmul>
 800262a:	0002      	movs	r2, r0
 800262c:	000b      	movs	r3, r1
 800262e:	0014      	movs	r4, r2
 8002630:	001d      	movs	r5, r3
      (rtb_SineWaveFunction * 0.0312 + a_idx_0 * 1.3125) * rtb_Add1;
 8002632:	4a4e      	ldr	r2, [pc, #312]	@ (800276c <AdaptiveController_step+0x374>)
 8002634:	4b4e      	ldr	r3, [pc, #312]	@ (8002770 <AdaptiveController_step+0x378>)
 8002636:	6cb8      	ldr	r0, [r7, #72]	@ 0x48
 8002638:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
 800263a:	f7fe ff41 	bl	80014c0 <__aeabi_dmul>
 800263e:	0002      	movs	r2, r0
 8002640:	000b      	movs	r3, r1
 8002642:	603a      	str	r2, [r7, #0]
 8002644:	607b      	str	r3, [r7, #4]
 8002646:	2200      	movs	r2, #0
 8002648:	4b4a      	ldr	r3, [pc, #296]	@ (8002774 <AdaptiveController_step+0x37c>)
 800264a:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 800264c:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 800264e:	f7fe ff37 	bl	80014c0 <__aeabi_dmul>
 8002652:	0002      	movs	r2, r0
 8002654:	000b      	movs	r3, r1
 8002656:	6838      	ldr	r0, [r7, #0]
 8002658:	6879      	ldr	r1, [r7, #4]
 800265a:	f7fd ff31 	bl	80004c0 <__aeabi_dadd>
 800265e:	0002      	movs	r2, r0
 8002660:	000b      	movs	r3, r1
 8002662:	0010      	movs	r0, r2
 8002664:	0019      	movs	r1, r3
 8002666:	6d3a      	ldr	r2, [r7, #80]	@ 0x50
 8002668:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800266a:	f7fe ff29 	bl	80014c0 <__aeabi_dmul>
 800266e:	0002      	movs	r2, r0
 8002670:	000b      	movs	r3, r1
    p_dot[i] = (rtb_SineWaveFunction * 0.0664 + a_idx_0 * 0.0312) * rtb_Add2 +
 8002672:	0020      	movs	r0, r4
 8002674:	0029      	movs	r1, r5
 8002676:	f7fd ff23 	bl	80004c0 <__aeabi_dadd>
 800267a:	0002      	movs	r2, r0
 800267c:	000b      	movs	r3, r1
 800267e:	19b8      	adds	r0, r7, r6
 8002680:	6ef9      	ldr	r1, [r7, #108]	@ 0x6c
 8002682:	00c9      	lsls	r1, r1, #3
 8002684:	1841      	adds	r1, r0, r1
 8002686:	600a      	str	r2, [r1, #0]
 8002688:	604b      	str	r3, [r1, #4]
  for (i = 0; i < 2; i++) {
 800268a:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800268c:	3301      	adds	r3, #1
 800268e:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8002690:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8002692:	2b01      	cmp	r3, #1
 8002694:	dd96      	ble.n	80025c4 <AdaptiveController_step+0x1cc>
  }

  /* Update for DiscreteIntegrator: '<Root>/Discrete-Time Integrator2' incorporates:
   *  Inport: '<Root>/referenceThetaDoubleDot'
   */
  rtDW.DiscreteTimeIntegrator2_DSTATE += 0.001 * rtU.referenceThetaDoubleDot;
 8002696:	4b2c      	ldr	r3, [pc, #176]	@ (8002748 <AdaptiveController_step+0x350>)
 8002698:	681c      	ldr	r4, [r3, #0]
 800269a:	685d      	ldr	r5, [r3, #4]
 800269c:	4b2b      	ldr	r3, [pc, #172]	@ (800274c <AdaptiveController_step+0x354>)
 800269e:	6998      	ldr	r0, [r3, #24]
 80026a0:	69d9      	ldr	r1, [r3, #28]
 80026a2:	4a35      	ldr	r2, [pc, #212]	@ (8002778 <AdaptiveController_step+0x380>)
 80026a4:	4b35      	ldr	r3, [pc, #212]	@ (800277c <AdaptiveController_step+0x384>)
 80026a6:	f7fe ff0b 	bl	80014c0 <__aeabi_dmul>
 80026aa:	0002      	movs	r2, r0
 80026ac:	000b      	movs	r3, r1
 80026ae:	0020      	movs	r0, r4
 80026b0:	0029      	movs	r1, r5
 80026b2:	f7fd ff05 	bl	80004c0 <__aeabi_dadd>
 80026b6:	0002      	movs	r2, r0
 80026b8:	000b      	movs	r3, r1
 80026ba:	4923      	ldr	r1, [pc, #140]	@ (8002748 <AdaptiveController_step+0x350>)
 80026bc:	600a      	str	r2, [r1, #0]
 80026be:	604b      	str	r3, [r1, #4]

  /* Update for DiscreteIntegrator: '<Root>/Discrete-Time Integrator3' */
  rtDW.DiscreteTimeIntegrator3_DSTATE += 0.001 * rtb_DiscreteTimeIntegrator2;
 80026c0:	4b21      	ldr	r3, [pc, #132]	@ (8002748 <AdaptiveController_step+0x350>)
 80026c2:	689c      	ldr	r4, [r3, #8]
 80026c4:	68dd      	ldr	r5, [r3, #12]
 80026c6:	4a2c      	ldr	r2, [pc, #176]	@ (8002778 <AdaptiveController_step+0x380>)
 80026c8:	4b2c      	ldr	r3, [pc, #176]	@ (800277c <AdaptiveController_step+0x384>)
 80026ca:	6e38      	ldr	r0, [r7, #96]	@ 0x60
 80026cc:	6e79      	ldr	r1, [r7, #100]	@ 0x64
 80026ce:	f7fe fef7 	bl	80014c0 <__aeabi_dmul>
 80026d2:	0002      	movs	r2, r0
 80026d4:	000b      	movs	r3, r1
 80026d6:	0020      	movs	r0, r4
 80026d8:	0029      	movs	r1, r5
 80026da:	f7fd fef1 	bl	80004c0 <__aeabi_dadd>
 80026de:	0002      	movs	r2, r0
 80026e0:	000b      	movs	r3, r1
 80026e2:	4919      	ldr	r1, [pc, #100]	@ (8002748 <AdaptiveController_step+0x350>)
 80026e4:	608a      	str	r2, [r1, #8]
 80026e6:	60cb      	str	r3, [r1, #12]

  /* Update for DiscreteIntegrator: '<Root>/Discrete-Time Integrator' incorporates:
   *  MATLAB Function: '<Root>/MATLAB Function'
   */
  rtDW.DiscreteTimeIntegrator_DSTATE += 0.001 * p_dot[0];
 80026e8:	4b17      	ldr	r3, [pc, #92]	@ (8002748 <AdaptiveController_step+0x350>)
 80026ea:	691c      	ldr	r4, [r3, #16]
 80026ec:	695d      	ldr	r5, [r3, #20]
 80026ee:	2608      	movs	r6, #8
 80026f0:	19bb      	adds	r3, r7, r6
 80026f2:	6818      	ldr	r0, [r3, #0]
 80026f4:	6859      	ldr	r1, [r3, #4]
 80026f6:	4a20      	ldr	r2, [pc, #128]	@ (8002778 <AdaptiveController_step+0x380>)
 80026f8:	4b20      	ldr	r3, [pc, #128]	@ (800277c <AdaptiveController_step+0x384>)
 80026fa:	f7fe fee1 	bl	80014c0 <__aeabi_dmul>
 80026fe:	0002      	movs	r2, r0
 8002700:	000b      	movs	r3, r1
 8002702:	0020      	movs	r0, r4
 8002704:	0029      	movs	r1, r5
 8002706:	f7fd fedb 	bl	80004c0 <__aeabi_dadd>
 800270a:	0002      	movs	r2, r0
 800270c:	000b      	movs	r3, r1
 800270e:	490e      	ldr	r1, [pc, #56]	@ (8002748 <AdaptiveController_step+0x350>)
 8002710:	610a      	str	r2, [r1, #16]
 8002712:	614b      	str	r3, [r1, #20]

  /* Update for DiscreteIntegrator: '<Root>/Discrete-Time Integrator1' incorporates:
   *  MATLAB Function: '<Root>/MATLAB Function'
   */
  rtDW.DiscreteTimeIntegrator1_DSTATE += 0.001 * p_dot[1];
 8002714:	4b0c      	ldr	r3, [pc, #48]	@ (8002748 <AdaptiveController_step+0x350>)
 8002716:	699c      	ldr	r4, [r3, #24]
 8002718:	69dd      	ldr	r5, [r3, #28]
 800271a:	19bb      	adds	r3, r7, r6
 800271c:	6898      	ldr	r0, [r3, #8]
 800271e:	68d9      	ldr	r1, [r3, #12]
 8002720:	4a15      	ldr	r2, [pc, #84]	@ (8002778 <AdaptiveController_step+0x380>)
 8002722:	4b16      	ldr	r3, [pc, #88]	@ (800277c <AdaptiveController_step+0x384>)
 8002724:	f7fe fecc 	bl	80014c0 <__aeabi_dmul>
 8002728:	0002      	movs	r2, r0
 800272a:	000b      	movs	r3, r1
 800272c:	0020      	movs	r0, r4
 800272e:	0029      	movs	r1, r5
 8002730:	f7fd fec6 	bl	80004c0 <__aeabi_dadd>
 8002734:	0002      	movs	r2, r0
 8002736:	000b      	movs	r3, r1
 8002738:	4903      	ldr	r1, [pc, #12]	@ (8002748 <AdaptiveController_step+0x350>)
 800273a:	618a      	str	r2, [r1, #24]
 800273c:	61cb      	str	r3, [r1, #28]
}
 800273e:	46c0      	nop			@ (mov r8, r8)
 8002740:	46bd      	mov	sp, r7
 8002742:	b01d      	add	sp, #116	@ 0x74
 8002744:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002746:	46c0      	nop			@ (mov r8, r8)
 8002748:	20000028 	.word	0x20000028
 800274c:	20000048 	.word	0x20000048
 8002750:	40200000 	.word	0x40200000
 8002754:	40300000 	.word	0x40300000
 8002758:	20000068 	.word	0x20000068
 800275c:	3ff00000 	.word	0x3ff00000
 8002760:	c0f5f900 	.word	0xc0f5f900
 8002764:	2474538f 	.word	0x2474538f
 8002768:	3fb0ff97 	.word	0x3fb0ff97
 800276c:	8e8a71de 	.word	0x8e8a71de
 8002770:	3f9ff2e4 	.word	0x3f9ff2e4
 8002774:	3ff50000 	.word	0x3ff50000
 8002778:	d2f1a9fc 	.word	0xd2f1a9fc
 800277c:	3f50624d 	.word	0x3f50624d

08002780 <AdaptiveController_initialize>:

/* Model initialize function */
void AdaptiveController_initialize(void)
{
 8002780:	b580      	push	{r7, lr}
 8002782:	af00      	add	r7, sp, #0
  /* InitializeConditions for DiscreteIntegrator: '<Root>/Discrete-Time Integrator' */
  rtDW.DiscreteTimeIntegrator_DSTATE = 8.0;
 8002784:	4906      	ldr	r1, [pc, #24]	@ (80027a0 <AdaptiveController_initialize+0x20>)
 8002786:	2200      	movs	r2, #0
 8002788:	4b06      	ldr	r3, [pc, #24]	@ (80027a4 <AdaptiveController_initialize+0x24>)
 800278a:	610a      	str	r2, [r1, #16]
 800278c:	614b      	str	r3, [r1, #20]

  /* InitializeConditions for DiscreteIntegrator: '<Root>/Discrete-Time Integrator1' */
  rtDW.DiscreteTimeIntegrator1_DSTATE = 5.0;
 800278e:	4904      	ldr	r1, [pc, #16]	@ (80027a0 <AdaptiveController_initialize+0x20>)
 8002790:	2200      	movs	r2, #0
 8002792:	4b05      	ldr	r3, [pc, #20]	@ (80027a8 <AdaptiveController_initialize+0x28>)
 8002794:	618a      	str	r2, [r1, #24]
 8002796:	61cb      	str	r3, [r1, #28]
}
 8002798:	46c0      	nop			@ (mov r8, r8)
 800279a:	46bd      	mov	sp, r7
 800279c:	bd80      	pop	{r7, pc}
 800279e:	46c0      	nop			@ (mov r8, r8)
 80027a0:	20000028 	.word	0x20000028
 80027a4:	40200000 	.word	0x40200000
 80027a8:	40140000 	.word	0x40140000

080027ac <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80027ac:	b580      	push	{r7, lr}
 80027ae:	b082      	sub	sp, #8
 80027b0:	af00      	add	r7, sp, #0
 80027b2:	0002      	movs	r2, r0
 80027b4:	1dfb      	adds	r3, r7, #7
 80027b6:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 80027b8:	1dfb      	adds	r3, r7, #7
 80027ba:	781b      	ldrb	r3, [r3, #0]
 80027bc:	2b7f      	cmp	r3, #127	@ 0x7f
 80027be:	d809      	bhi.n	80027d4 <__NVIC_EnableIRQ+0x28>
  {
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80027c0:	1dfb      	adds	r3, r7, #7
 80027c2:	781b      	ldrb	r3, [r3, #0]
 80027c4:	001a      	movs	r2, r3
 80027c6:	231f      	movs	r3, #31
 80027c8:	401a      	ands	r2, r3
 80027ca:	4b04      	ldr	r3, [pc, #16]	@ (80027dc <__NVIC_EnableIRQ+0x30>)
 80027cc:	2101      	movs	r1, #1
 80027ce:	4091      	lsls	r1, r2
 80027d0:	000a      	movs	r2, r1
 80027d2:	601a      	str	r2, [r3, #0]
  }
}
 80027d4:	46c0      	nop			@ (mov r8, r8)
 80027d6:	46bd      	mov	sp, r7
 80027d8:	b002      	add	sp, #8
 80027da:	bd80      	pop	{r7, pc}
 80027dc:	e000e100 	.word	0xe000e100

080027e0 <__NVIC_DisableIRQ>:
  \details Disables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
 80027e0:	b580      	push	{r7, lr}
 80027e2:	b082      	sub	sp, #8
 80027e4:	af00      	add	r7, sp, #0
 80027e6:	0002      	movs	r2, r0
 80027e8:	1dfb      	adds	r3, r7, #7
 80027ea:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 80027ec:	1dfb      	adds	r3, r7, #7
 80027ee:	781b      	ldrb	r3, [r3, #0]
 80027f0:	2b7f      	cmp	r3, #127	@ 0x7f
 80027f2:	d810      	bhi.n	8002816 <__NVIC_DisableIRQ+0x36>
  {
    NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80027f4:	1dfb      	adds	r3, r7, #7
 80027f6:	781b      	ldrb	r3, [r3, #0]
 80027f8:	001a      	movs	r2, r3
 80027fa:	231f      	movs	r3, #31
 80027fc:	4013      	ands	r3, r2
 80027fe:	4908      	ldr	r1, [pc, #32]	@ (8002820 <__NVIC_DisableIRQ+0x40>)
 8002800:	2201      	movs	r2, #1
 8002802:	409a      	lsls	r2, r3
 8002804:	0013      	movs	r3, r2
 8002806:	2280      	movs	r2, #128	@ 0x80
 8002808:	508b      	str	r3, [r1, r2]
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 800280a:	f3bf 8f4f 	dsb	sy
}
 800280e:	46c0      	nop			@ (mov r8, r8)
  __ASM volatile ("isb 0xF":::"memory");
 8002810:	f3bf 8f6f 	isb	sy
}
 8002814:	46c0      	nop			@ (mov r8, r8)
    __DSB();
    __ISB();
  }
}
 8002816:	46c0      	nop			@ (mov r8, r8)
 8002818:	46bd      	mov	sp, r7
 800281a:	b002      	add	sp, #8
 800281c:	bd80      	pop	{r7, pc}
 800281e:	46c0      	nop			@ (mov r8, r8)
 8002820:	e000e100 	.word	0xe000e100

08002824 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8002824:	b590      	push	{r4, r7, lr}
 8002826:	b083      	sub	sp, #12
 8002828:	af00      	add	r7, sp, #0
 800282a:	0002      	movs	r2, r0
 800282c:	6039      	str	r1, [r7, #0]
 800282e:	1dfb      	adds	r3, r7, #7
 8002830:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 8002832:	1dfb      	adds	r3, r7, #7
 8002834:	781b      	ldrb	r3, [r3, #0]
 8002836:	2b7f      	cmp	r3, #127	@ 0x7f
 8002838:	d828      	bhi.n	800288c <__NVIC_SetPriority+0x68>
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 800283a:	4a2f      	ldr	r2, [pc, #188]	@ (80028f8 <__NVIC_SetPriority+0xd4>)
 800283c:	1dfb      	adds	r3, r7, #7
 800283e:	781b      	ldrb	r3, [r3, #0]
 8002840:	b25b      	sxtb	r3, r3
 8002842:	089b      	lsrs	r3, r3, #2
 8002844:	33c0      	adds	r3, #192	@ 0xc0
 8002846:	009b      	lsls	r3, r3, #2
 8002848:	589b      	ldr	r3, [r3, r2]
 800284a:	1dfa      	adds	r2, r7, #7
 800284c:	7812      	ldrb	r2, [r2, #0]
 800284e:	0011      	movs	r1, r2
 8002850:	2203      	movs	r2, #3
 8002852:	400a      	ands	r2, r1
 8002854:	00d2      	lsls	r2, r2, #3
 8002856:	21ff      	movs	r1, #255	@ 0xff
 8002858:	4091      	lsls	r1, r2
 800285a:	000a      	movs	r2, r1
 800285c:	43d2      	mvns	r2, r2
 800285e:	401a      	ands	r2, r3
 8002860:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8002862:	683b      	ldr	r3, [r7, #0]
 8002864:	019b      	lsls	r3, r3, #6
 8002866:	22ff      	movs	r2, #255	@ 0xff
 8002868:	401a      	ands	r2, r3
 800286a:	1dfb      	adds	r3, r7, #7
 800286c:	781b      	ldrb	r3, [r3, #0]
 800286e:	0018      	movs	r0, r3
 8002870:	2303      	movs	r3, #3
 8002872:	4003      	ands	r3, r0
 8002874:	00db      	lsls	r3, r3, #3
 8002876:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002878:	481f      	ldr	r0, [pc, #124]	@ (80028f8 <__NVIC_SetPriority+0xd4>)
 800287a:	1dfb      	adds	r3, r7, #7
 800287c:	781b      	ldrb	r3, [r3, #0]
 800287e:	b25b      	sxtb	r3, r3
 8002880:	089b      	lsrs	r3, r3, #2
 8002882:	430a      	orrs	r2, r1
 8002884:	33c0      	adds	r3, #192	@ 0xc0
 8002886:	009b      	lsls	r3, r3, #2
 8002888:	501a      	str	r2, [r3, r0]
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
}
 800288a:	e031      	b.n	80028f0 <__NVIC_SetPriority+0xcc>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 800288c:	4a1b      	ldr	r2, [pc, #108]	@ (80028fc <__NVIC_SetPriority+0xd8>)
 800288e:	1dfb      	adds	r3, r7, #7
 8002890:	781b      	ldrb	r3, [r3, #0]
 8002892:	0019      	movs	r1, r3
 8002894:	230f      	movs	r3, #15
 8002896:	400b      	ands	r3, r1
 8002898:	3b08      	subs	r3, #8
 800289a:	089b      	lsrs	r3, r3, #2
 800289c:	3306      	adds	r3, #6
 800289e:	009b      	lsls	r3, r3, #2
 80028a0:	18d3      	adds	r3, r2, r3
 80028a2:	3304      	adds	r3, #4
 80028a4:	681b      	ldr	r3, [r3, #0]
 80028a6:	1dfa      	adds	r2, r7, #7
 80028a8:	7812      	ldrb	r2, [r2, #0]
 80028aa:	0011      	movs	r1, r2
 80028ac:	2203      	movs	r2, #3
 80028ae:	400a      	ands	r2, r1
 80028b0:	00d2      	lsls	r2, r2, #3
 80028b2:	21ff      	movs	r1, #255	@ 0xff
 80028b4:	4091      	lsls	r1, r2
 80028b6:	000a      	movs	r2, r1
 80028b8:	43d2      	mvns	r2, r2
 80028ba:	401a      	ands	r2, r3
 80028bc:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 80028be:	683b      	ldr	r3, [r7, #0]
 80028c0:	019b      	lsls	r3, r3, #6
 80028c2:	22ff      	movs	r2, #255	@ 0xff
 80028c4:	401a      	ands	r2, r3
 80028c6:	1dfb      	adds	r3, r7, #7
 80028c8:	781b      	ldrb	r3, [r3, #0]
 80028ca:	0018      	movs	r0, r3
 80028cc:	2303      	movs	r3, #3
 80028ce:	4003      	ands	r3, r0
 80028d0:	00db      	lsls	r3, r3, #3
 80028d2:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80028d4:	4809      	ldr	r0, [pc, #36]	@ (80028fc <__NVIC_SetPriority+0xd8>)
 80028d6:	1dfb      	adds	r3, r7, #7
 80028d8:	781b      	ldrb	r3, [r3, #0]
 80028da:	001c      	movs	r4, r3
 80028dc:	230f      	movs	r3, #15
 80028de:	4023      	ands	r3, r4
 80028e0:	3b08      	subs	r3, #8
 80028e2:	089b      	lsrs	r3, r3, #2
 80028e4:	430a      	orrs	r2, r1
 80028e6:	3306      	adds	r3, #6
 80028e8:	009b      	lsls	r3, r3, #2
 80028ea:	18c3      	adds	r3, r0, r3
 80028ec:	3304      	adds	r3, #4
 80028ee:	601a      	str	r2, [r3, #0]
}
 80028f0:	46c0      	nop			@ (mov r8, r8)
 80028f2:	46bd      	mov	sp, r7
 80028f4:	b003      	add	sp, #12
 80028f6:	bd90      	pop	{r4, r7, pc}
 80028f8:	e000e100 	.word	0xe000e100
 80028fc:	e000ed00 	.word	0xe000ed00

08002900 <Configure_CNI>:
           - configures the CNI
 * Param   None
 * Retval  None
 */
inline void Configure_CNI(void)
{
 8002900:	b580      	push	{r7, lr}
 8002902:	af00      	add	r7, sp, #0
	ConfigureGPIO_UART1();
 8002904:	f000 f8b6 	bl	8002a74 <ConfigureGPIO_UART1>
	Configure_UART1();
 8002908:	f000 f8dc 	bl	8002ac4 <Configure_UART1>
}
 800290c:	46c0      	nop			@ (mov r8, r8)
 800290e:	46bd      	mov	sp, r7
 8002910:	bd80      	pop	{r7, pc}

08002912 <TransmitMessage_CNI>:

void TransmitMessage_CNI(const observation_t *obs)
{
 8002912:	b580      	push	{r7, lr}
 8002914:	b084      	sub	sp, #16
 8002916:	af00      	add	r7, sp, #0
 8002918:	6078      	str	r0, [r7, #4]
	char *p = (char *)obs;
 800291a:	687b      	ldr	r3, [r7, #4]
 800291c:	60fb      	str	r3, [r7, #12]

	// Transmit the observation message
	for(uint32_t i = 0; i < sizeof(observation_t); i++)
 800291e:	2300      	movs	r3, #0
 8002920:	60bb      	str	r3, [r7, #8]
 8002922:	e009      	b.n	8002938 <TransmitMessage_CNI+0x26>
	{
		TransmitByte_CNI(*(p++));
 8002924:	68fb      	ldr	r3, [r7, #12]
 8002926:	1c5a      	adds	r2, r3, #1
 8002928:	60fa      	str	r2, [r7, #12]
 800292a:	781b      	ldrb	r3, [r3, #0]
 800292c:	0018      	movs	r0, r3
 800292e:	f000 f915 	bl	8002b5c <TransmitByte_CNI>
	for(uint32_t i = 0; i < sizeof(observation_t); i++)
 8002932:	68bb      	ldr	r3, [r7, #8]
 8002934:	3301      	adds	r3, #1
 8002936:	60bb      	str	r3, [r7, #8]
 8002938:	68bb      	ldr	r3, [r7, #8]
 800293a:	2b1f      	cmp	r3, #31
 800293c:	d9f2      	bls.n	8002924 <TransmitMessage_CNI+0x12>
	}
}
 800293e:	46c0      	nop			@ (mov r8, r8)
 8002940:	46c0      	nop			@ (mov r8, r8)
 8002942:	46bd      	mov	sp, r7
 8002944:	b004      	add	sp, #16
 8002946:	bd80      	pop	{r7, pc}

08002948 <IncomingMessageHandler_CNI>:

void IncomingMessageHandler_CNI(void)
{
 8002948:	b580      	push	{r7, lr}
 800294a:	b088      	sub	sp, #32
 800294c:	af00      	add	r7, sp, #0
	observation_t obs = {};
 800294e:	003b      	movs	r3, r7
 8002950:	0018      	movs	r0, r3
 8002952:	2320      	movs	r3, #32
 8002954:	001a      	movs	r2, r3
 8002956:	2100      	movs	r1, #0
 8002958:	f000 ffbf 	bl	80038da <memset>

	// Receive an observation message
	if(ReceiveMessage_CNI(&obs))
 800295c:	003b      	movs	r3, r7
 800295e:	0018      	movs	r0, r3
 8002960:	f000 f84e 	bl	8002a00 <ReceiveMessage_CNI>
 8002964:	1e03      	subs	r3, r0, #0
 8002966:	d03c      	beq.n	80029e2 <IncomingMessageHandler_CNI+0x9a>
	{
		if(strcmp(obs.name, "reference clock") == 0)
 8002968:	4a20      	ldr	r2, [pc, #128]	@ (80029ec <IncomingMessageHandler_CNI+0xa4>)
 800296a:	003b      	movs	r3, r7
 800296c:	0011      	movs	r1, r2
 800296e:	0018      	movs	r0, r3
 8002970:	f7fd fbca 	bl	8000108 <strcmp>
 8002974:	1e03      	subs	r3, r0, #0
 8002976:	d10a      	bne.n	800298e <IncomingMessageHandler_CNI+0x46>
			//
			// WCCOM = 0s (calculated by sender)
			// WCETrec = discarded

			// Write the RT image of the global clock
			Set_GlobalClock(obs.val); // Time of use
 8002978:	003b      	movs	r3, r7
 800297a:	699a      	ldr	r2, [r3, #24]
 800297c:	69db      	ldr	r3, [r3, #28]
 800297e:	0010      	movs	r0, r2
 8002980:	0019      	movs	r1, r3
 8002982:	f7fd fd7f 	bl	8000484 <__aeabi_d2uiz>
 8002986:	0003      	movs	r3, r0
 8002988:	0018      	movs	r0, r3
 800298a:	f000 f9f7 	bl	8002d7c <Set_GlobalClock>
		}

		if(strcmp(obs.name, "acceleration") == 0)
 800298e:	4a18      	ldr	r2, [pc, #96]	@ (80029f0 <IncomingMessageHandler_CNI+0xa8>)
 8002990:	003b      	movs	r3, r7
 8002992:	0011      	movs	r1, r2
 8002994:	0018      	movs	r0, r3
 8002996:	f7fd fbb7 	bl	8000108 <strcmp>
 800299a:	1e03      	subs	r3, r0, #0
 800299c:	d105      	bne.n	80029aa <IncomingMessageHandler_CNI+0x62>
		{
			rtU.thetaDoubleDot = (real_T)obs.val;
 800299e:	003b      	movs	r3, r7
 80029a0:	699a      	ldr	r2, [r3, #24]
 80029a2:	69db      	ldr	r3, [r3, #28]
 80029a4:	4913      	ldr	r1, [pc, #76]	@ (80029f4 <IncomingMessageHandler_CNI+0xac>)
 80029a6:	610a      	str	r2, [r1, #16]
 80029a8:	614b      	str	r3, [r1, #20]
		}
		if(strcmp(obs.name, "velocity") == 0)
 80029aa:	4a13      	ldr	r2, [pc, #76]	@ (80029f8 <IncomingMessageHandler_CNI+0xb0>)
 80029ac:	003b      	movs	r3, r7
 80029ae:	0011      	movs	r1, r2
 80029b0:	0018      	movs	r0, r3
 80029b2:	f7fd fba9 	bl	8000108 <strcmp>
 80029b6:	1e03      	subs	r3, r0, #0
 80029b8:	d105      	bne.n	80029c6 <IncomingMessageHandler_CNI+0x7e>
		{
			rtU.thetaDot = (real_T)obs.val;
 80029ba:	003b      	movs	r3, r7
 80029bc:	699a      	ldr	r2, [r3, #24]
 80029be:	69db      	ldr	r3, [r3, #28]
 80029c0:	490c      	ldr	r1, [pc, #48]	@ (80029f4 <IncomingMessageHandler_CNI+0xac>)
 80029c2:	608a      	str	r2, [r1, #8]
 80029c4:	60cb      	str	r3, [r1, #12]
		}
		if(strcmp(obs.name, "angle") == 0)
 80029c6:	4a0d      	ldr	r2, [pc, #52]	@ (80029fc <IncomingMessageHandler_CNI+0xb4>)
 80029c8:	003b      	movs	r3, r7
 80029ca:	0011      	movs	r1, r2
 80029cc:	0018      	movs	r0, r3
 80029ce:	f7fd fb9b 	bl	8000108 <strcmp>
 80029d2:	1e03      	subs	r3, r0, #0
 80029d4:	d105      	bne.n	80029e2 <IncomingMessageHandler_CNI+0x9a>
		{
			rtU.theta = (real_T)obs.val;
 80029d6:	003b      	movs	r3, r7
 80029d8:	699a      	ldr	r2, [r3, #24]
 80029da:	69db      	ldr	r3, [r3, #28]
 80029dc:	4905      	ldr	r1, [pc, #20]	@ (80029f4 <IncomingMessageHandler_CNI+0xac>)
 80029de:	600a      	str	r2, [r1, #0]
 80029e0:	604b      	str	r3, [r1, #4]
		}

	}
}
 80029e2:	46c0      	nop			@ (mov r8, r8)
 80029e4:	46bd      	mov	sp, r7
 80029e6:	b008      	add	sp, #32
 80029e8:	bd80      	pop	{r7, pc}
 80029ea:	46c0      	nop			@ (mov r8, r8)
 80029ec:	08004950 	.word	0x08004950
 80029f0:	08004960 	.word	0x08004960
 80029f4:	20000048 	.word	0x20000048
 80029f8:	08004970 	.word	0x08004970
 80029fc:	0800497c 	.word	0x0800497c

08002a00 <ReceiveMessage_CNI>:

uint8_t ReceiveMessage_CNI(observation_t *obs)
{
 8002a00:	b590      	push	{r4, r7, lr}
 8002a02:	b087      	sub	sp, #28
 8002a04:	af00      	add	r7, sp, #0
 8002a06:	6078      	str	r0, [r7, #4]
	// Data available?
	if(nUnreadBytes_CNI() > 0)
 8002a08:	f000 f8f2 	bl	8002bf0 <nUnreadBytes_CNI>
 8002a0c:	1e03      	subs	r3, r0, #0
 8002a0e:	d02c      	beq.n	8002a6a <ReceiveMessage_CNI+0x6a>
	{
		// Wait for approximately 40ms, making sure an entire message must have
		// arrived
		uint32_t clock_stop = Get_GlobalClock() + 4;
 8002a10:	f000 f9aa 	bl	8002d68 <Get_GlobalClock>
 8002a14:	0003      	movs	r3, r0
 8002a16:	3304      	adds	r3, #4
 8002a18:	60fb      	str	r3, [r7, #12]
		while(Get_GlobalClock() < clock_stop)
 8002a1a:	46c0      	nop			@ (mov r8, r8)
 8002a1c:	f000 f9a4 	bl	8002d68 <Get_GlobalClock>
 8002a20:	0002      	movs	r2, r0
 8002a22:	68fb      	ldr	r3, [r7, #12]
 8002a24:	4293      	cmp	r3, r2
 8002a26:	d8f9      	bhi.n	8002a1c <ReceiveMessage_CNI+0x1c>
		{;}

		// Received at least an entire message?
		if(nUnreadBytes_CNI() >= sizeof(observation_t))
 8002a28:	f000 f8e2 	bl	8002bf0 <nUnreadBytes_CNI>
 8002a2c:	0003      	movs	r3, r0
 8002a2e:	2b1f      	cmp	r3, #31
 8002a30:	d915      	bls.n	8002a5e <ReceiveMessage_CNI+0x5e>
		{
			char *p = (char *)obs;
 8002a32:	687b      	ldr	r3, [r7, #4]
 8002a34:	617b      	str	r3, [r7, #20]

			for(uint32_t i = 0; i < sizeof(observation_t); i++)
 8002a36:	2300      	movs	r3, #0
 8002a38:	613b      	str	r3, [r7, #16]
 8002a3a:	e009      	b.n	8002a50 <ReceiveMessage_CNI+0x50>
			{
				*(p++) = ReceiveByte_CNI();
 8002a3c:	697c      	ldr	r4, [r7, #20]
 8002a3e:	1c63      	adds	r3, r4, #1
 8002a40:	617b      	str	r3, [r7, #20]
 8002a42:	f000 f865 	bl	8002b10 <ReceiveByte_CNI>
 8002a46:	0003      	movs	r3, r0
 8002a48:	7023      	strb	r3, [r4, #0]
			for(uint32_t i = 0; i < sizeof(observation_t); i++)
 8002a4a:	693b      	ldr	r3, [r7, #16]
 8002a4c:	3301      	adds	r3, #1
 8002a4e:	613b      	str	r3, [r7, #16]
 8002a50:	693b      	ldr	r3, [r7, #16]
 8002a52:	2b1f      	cmp	r3, #31
 8002a54:	d9f2      	bls.n	8002a3c <ReceiveMessage_CNI+0x3c>
			}

			return 1; // Successfully received a message
 8002a56:	2301      	movs	r3, #1
 8002a58:	e008      	b.n	8002a6c <ReceiveMessage_CNI+0x6c>
		else // Invalid message length
		{
			// Flush the data
			while(nUnreadBytes_CNI() != 0)
			{
				(void)ReceiveByte_CNI();
 8002a5a:	f000 f859 	bl	8002b10 <ReceiveByte_CNI>
			while(nUnreadBytes_CNI() != 0)
 8002a5e:	f000 f8c7 	bl	8002bf0 <nUnreadBytes_CNI>
 8002a62:	1e03      	subs	r3, r0, #0
 8002a64:	d1f9      	bne.n	8002a5a <ReceiveMessage_CNI+0x5a>
			}

			return 0;
 8002a66:	2300      	movs	r3, #0
 8002a68:	e000      	b.n	8002a6c <ReceiveMessage_CNI+0x6c>
		}
	}

	// No data available
	return 0;
 8002a6a:	2300      	movs	r3, #0
}
 8002a6c:	0018      	movs	r0, r3
 8002a6e:	46bd      	mov	sp, r7
 8002a70:	b007      	add	sp, #28
 8002a72:	bd90      	pop	{r4, r7, pc}

08002a74 <ConfigureGPIO_UART1>:
           - Configures the UART pins on GPIO PA2 PA3
 * Param   None
 * Retval  None
 */
inline void ConfigureGPIO_UART1(void)
{
 8002a74:	b580      	push	{r7, lr}
 8002a76:	af00      	add	r7, sp, #0
    // Enable the peripheral clock of GPIOA
    RCC->AHBENR |= RCC_AHBENR_GPIOAEN;
 8002a78:	4b0f      	ldr	r3, [pc, #60]	@ (8002ab8 <ConfigureGPIO_UART1+0x44>)
 8002a7a:	695a      	ldr	r2, [r3, #20]
 8002a7c:	4b0e      	ldr	r3, [pc, #56]	@ (8002ab8 <ConfigureGPIO_UART1+0x44>)
 8002a7e:	2180      	movs	r1, #128	@ 0x80
 8002a80:	0289      	lsls	r1, r1, #10
 8002a82:	430a      	orrs	r2, r1
 8002a84:	615a      	str	r2, [r3, #20]

    // GPIO configuration for UART signals
    // 1. Select AF mode (10) on PA9 and PA10
    // 2. AF1 for UART signals
    GPIOA->MODER = (GPIOA->MODER & ~(GPIO_MODER_MODER9 | GPIO_MODER_MODER10))
 8002a86:	2390      	movs	r3, #144	@ 0x90
 8002a88:	05db      	lsls	r3, r3, #23
 8002a8a:	681b      	ldr	r3, [r3, #0]
 8002a8c:	4a0b      	ldr	r2, [pc, #44]	@ (8002abc <ConfigureGPIO_UART1+0x48>)
 8002a8e:	401a      	ands	r2, r3
 8002a90:	2390      	movs	r3, #144	@ 0x90
 8002a92:	05db      	lsls	r3, r3, #23
            | (GPIO_MODER_MODER9_1 | GPIO_MODER_MODER10_1);
 8002a94:	21a0      	movs	r1, #160	@ 0xa0
 8002a96:	0389      	lsls	r1, r1, #14
 8002a98:	430a      	orrs	r2, r1
    GPIOA->MODER = (GPIOA->MODER & ~(GPIO_MODER_MODER9 | GPIO_MODER_MODER10))
 8002a9a:	601a      	str	r2, [r3, #0]
    GPIOA->AFR[1] = (GPIOA->AFR[1] & ~(GPIO_AFRH_AFRH1 | GPIO_AFRH_AFRH2))
 8002a9c:	2390      	movs	r3, #144	@ 0x90
 8002a9e:	05db      	lsls	r3, r3, #23
 8002aa0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002aa2:	4a07      	ldr	r2, [pc, #28]	@ (8002ac0 <ConfigureGPIO_UART1+0x4c>)
 8002aa4:	401a      	ands	r2, r3
 8002aa6:	2390      	movs	r3, #144	@ 0x90
 8002aa8:	05db      	lsls	r3, r3, #23
            | (1 << (1 * 4)) | (1 << (2 * 4));
 8002aaa:	2188      	movs	r1, #136	@ 0x88
 8002aac:	0049      	lsls	r1, r1, #1
 8002aae:	430a      	orrs	r2, r1
    GPIOA->AFR[1] = (GPIOA->AFR[1] & ~(GPIO_AFRH_AFRH1 | GPIO_AFRH_AFRH2))
 8002ab0:	625a      	str	r2, [r3, #36]	@ 0x24
}
 8002ab2:	46c0      	nop			@ (mov r8, r8)
 8002ab4:	46bd      	mov	sp, r7
 8002ab6:	bd80      	pop	{r7, pc}
 8002ab8:	40021000 	.word	0x40021000
 8002abc:	ffc3ffff 	.word	0xffc3ffff
 8002ac0:	fffff00f 	.word	0xfffff00f

08002ac4 <Configure_UART1>:
 *         - 9600,8,n,1
 * Param   None
 * Retval  None
 */
inline void Configure_UART1(void)
{
 8002ac4:	b580      	push	{r7, lr}
 8002ac6:	af00      	add	r7, sp, #0
    // Enable the peripheral clock UART
    RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 8002ac8:	4b0e      	ldr	r3, [pc, #56]	@ (8002b04 <Configure_UART1+0x40>)
 8002aca:	699a      	ldr	r2, [r3, #24]
 8002acc:	4b0d      	ldr	r3, [pc, #52]	@ (8002b04 <Configure_UART1+0x40>)
 8002ace:	2180      	movs	r1, #128	@ 0x80
 8002ad0:	01c9      	lsls	r1, r1, #7
 8002ad2:	430a      	orrs	r2, r1
 8002ad4:	619a      	str	r2, [r3, #24]
    // Configure UART
    // 1. Oversampling by 16, 9600 baud
    // 2. 8 data bit, 1 start bit, 1 stop bit, no parity,
    //     transmitter enable, receiver enable
//    USART1->BRR = 480000 / 96;
    USART1->BRR = 480000 / 96;
 8002ad6:	4b0c      	ldr	r3, [pc, #48]	@ (8002b08 <Configure_UART1+0x44>)
 8002ad8:	4a0c      	ldr	r2, [pc, #48]	@ (8002b0c <Configure_UART1+0x48>)
 8002ada:	60da      	str	r2, [r3, #12]
    USART1->CR1 = USART_CR1_TE | USART_CR1_UE | USART_CR1_RXNEIE | USART_CR1_RE;
 8002adc:	4b0a      	ldr	r3, [pc, #40]	@ (8002b08 <Configure_UART1+0x44>)
 8002ade:	222d      	movs	r2, #45	@ 0x2d
 8002ae0:	601a      	str	r2, [r3, #0]

    // 3. Polling idle frame Transmission
    while ((USART1->ISR & USART_ISR_TC) != USART_ISR_TC)
 8002ae2:	46c0      	nop			@ (mov r8, r8)
 8002ae4:	4b08      	ldr	r3, [pc, #32]	@ (8002b08 <Configure_UART1+0x44>)
 8002ae6:	69db      	ldr	r3, [r3, #28]
 8002ae8:	2240      	movs	r2, #64	@ 0x40
 8002aea:	4013      	ands	r3, r2
 8002aec:	2b40      	cmp	r3, #64	@ 0x40
 8002aee:	d1f9      	bne.n	8002ae4 <Configure_UART1+0x20>
    }

    // Configure IT
    // 4. Set priority for UART1_IRQn
    // 5. Enable UART1_IRQn
    NVIC_SetPriority(USART1_IRQn, 0);
 8002af0:	2100      	movs	r1, #0
 8002af2:	201b      	movs	r0, #27
 8002af4:	f7ff fe96 	bl	8002824 <__NVIC_SetPriority>
    NVIC_EnableIRQ(USART1_IRQn);
 8002af8:	201b      	movs	r0, #27
 8002afa:	f7ff fe57 	bl	80027ac <__NVIC_EnableIRQ>
}
 8002afe:	46c0      	nop			@ (mov r8, r8)
 8002b00:	46bd      	mov	sp, r7
 8002b02:	bd80      	pop	{r7, pc}
 8002b04:	40021000 	.word	0x40021000
 8002b08:	40013800 	.word	0x40013800
 8002b0c:	00001388 	.word	0x00001388

08002b10 <ReceiveByte_CNI>:

char ReceiveByte_CNI(void)
{
 8002b10:	b580      	push	{r7, lr}
 8002b12:	b082      	sub	sp, #8
 8002b14:	af00      	add	r7, sp, #0
    uint32_t tmptail;

    // Wait for incoming data
    while (UART1_RxHead == UART1_RxTail){;}
 8002b16:	46c0      	nop			@ (mov r8, r8)
 8002b18:	4b0d      	ldr	r3, [pc, #52]	@ (8002b50 <ReceiveByte_CNI+0x40>)
 8002b1a:	781b      	ldrb	r3, [r3, #0]
 8002b1c:	b2da      	uxtb	r2, r3
 8002b1e:	4b0d      	ldr	r3, [pc, #52]	@ (8002b54 <ReceiveByte_CNI+0x44>)
 8002b20:	781b      	ldrb	r3, [r3, #0]
 8002b22:	b2db      	uxtb	r3, r3
 8002b24:	429a      	cmp	r2, r3
 8002b26:	d0f7      	beq.n	8002b18 <ReceiveByte_CNI+0x8>

    // Calculate buffer index
    tmptail = (UART1_RxTail + 1) & UART1_RX_BUFFER_MASK;
 8002b28:	4b0a      	ldr	r3, [pc, #40]	@ (8002b54 <ReceiveByte_CNI+0x44>)
 8002b2a:	781b      	ldrb	r3, [r3, #0]
 8002b2c:	b2db      	uxtb	r3, r3
 8002b2e:	3301      	adds	r3, #1
 8002b30:	001a      	movs	r2, r3
 8002b32:	23ff      	movs	r3, #255	@ 0xff
 8002b34:	4013      	ands	r3, r2
 8002b36:	607b      	str	r3, [r7, #4]

    // Store new index
    UART1_RxTail = tmptail;
 8002b38:	687b      	ldr	r3, [r7, #4]
 8002b3a:	b2da      	uxtb	r2, r3
 8002b3c:	4b05      	ldr	r3, [pc, #20]	@ (8002b54 <ReceiveByte_CNI+0x44>)
 8002b3e:	701a      	strb	r2, [r3, #0]

    // Return data
    return UART1_RxBuf[tmptail];
 8002b40:	4a05      	ldr	r2, [pc, #20]	@ (8002b58 <ReceiveByte_CNI+0x48>)
 8002b42:	687b      	ldr	r3, [r7, #4]
 8002b44:	18d3      	adds	r3, r2, r3
 8002b46:	781b      	ldrb	r3, [r3, #0]
}
 8002b48:	0018      	movs	r0, r3
 8002b4a:	46bd      	mov	sp, r7
 8002b4c:	b002      	add	sp, #8
 8002b4e:	bd80      	pop	{r7, pc}
 8002b50:	20000170 	.word	0x20000170
 8002b54:	20000171 	.word	0x20000171
 8002b58:	20000070 	.word	0x20000070

08002b5c <TransmitByte_CNI>:

void TransmitByte_CNI(char data)
{
 8002b5c:	b580      	push	{r7, lr}
 8002b5e:	b084      	sub	sp, #16
 8002b60:	af00      	add	r7, sp, #0
 8002b62:	0002      	movs	r2, r0
 8002b64:	1dfb      	adds	r3, r7, #7
 8002b66:	701a      	strb	r2, [r3, #0]
    uint32_t tmphead;

    // Calculate buffer index
    tmphead = (UART1_TxHead + 1) & UART1_TX_BUFFER_MASK;
 8002b68:	4b1d      	ldr	r3, [pc, #116]	@ (8002be0 <TransmitByte_CNI+0x84>)
 8002b6a:	781b      	ldrb	r3, [r3, #0]
 8002b6c:	b2db      	uxtb	r3, r3
 8002b6e:	3301      	adds	r3, #1
 8002b70:	001a      	movs	r2, r3
 8002b72:	23ff      	movs	r3, #255	@ 0xff
 8002b74:	4013      	ands	r3, r2
 8002b76:	60fb      	str	r3, [r7, #12]

    // Wait for free space in buffer
    while (tmphead == UART1_TxTail)
 8002b78:	46c0      	nop			@ (mov r8, r8)
 8002b7a:	4b1a      	ldr	r3, [pc, #104]	@ (8002be4 <TransmitByte_CNI+0x88>)
 8002b7c:	781b      	ldrb	r3, [r3, #0]
 8002b7e:	b2db      	uxtb	r3, r3
 8002b80:	001a      	movs	r2, r3
 8002b82:	68fb      	ldr	r3, [r7, #12]
 8002b84:	4293      	cmp	r3, r2
 8002b86:	d0f8      	beq.n	8002b7a <TransmitByte_CNI+0x1e>
    {
        ;
    }

    // Store data in buffer
    UART1_TxBuf[tmphead] = data;
 8002b88:	4a17      	ldr	r2, [pc, #92]	@ (8002be8 <TransmitByte_CNI+0x8c>)
 8002b8a:	68fb      	ldr	r3, [r7, #12]
 8002b8c:	18d3      	adds	r3, r2, r3
 8002b8e:	1dfa      	adds	r2, r7, #7
 8002b90:	7812      	ldrb	r2, [r2, #0]
 8002b92:	701a      	strb	r2, [r3, #0]

    // Store new index
    UART1_TxHead = tmphead;
 8002b94:	68fb      	ldr	r3, [r7, #12]
 8002b96:	b2da      	uxtb	r2, r3
 8002b98:	4b11      	ldr	r3, [pc, #68]	@ (8002be0 <TransmitByte_CNI+0x84>)
 8002b9a:	701a      	strb	r2, [r3, #0]

    // Initiate a new transfer if this is not ongoing
    if((USART1->CR1 & USART_CR1_TCIE) == 0)
 8002b9c:	4b13      	ldr	r3, [pc, #76]	@ (8002bec <TransmitByte_CNI+0x90>)
 8002b9e:	681b      	ldr	r3, [r3, #0]
 8002ba0:	2240      	movs	r2, #64	@ 0x40
 8002ba2:	4013      	ands	r3, r2
 8002ba4:	d117      	bne.n	8002bd6 <TransmitByte_CNI+0x7a>
    {
        // Calculate buffer index
        uint32_t tmptail = (UART1_TxTail + 1) & UART1_TX_BUFFER_MASK;
 8002ba6:	4b0f      	ldr	r3, [pc, #60]	@ (8002be4 <TransmitByte_CNI+0x88>)
 8002ba8:	781b      	ldrb	r3, [r3, #0]
 8002baa:	b2db      	uxtb	r3, r3
 8002bac:	3301      	adds	r3, #1
 8002bae:	001a      	movs	r2, r3
 8002bb0:	23ff      	movs	r3, #255	@ 0xff
 8002bb2:	4013      	ands	r3, r2
 8002bb4:	60bb      	str	r3, [r7, #8]

        // Store new index
        UART1_TxTail = tmptail;
 8002bb6:	68bb      	ldr	r3, [r7, #8]
 8002bb8:	b2da      	uxtb	r2, r3
 8002bba:	4b0a      	ldr	r3, [pc, #40]	@ (8002be4 <TransmitByte_CNI+0x88>)
 8002bbc:	701a      	strb	r2, [r3, #0]

        // Start transmission
        USART1->TDR = UART1_TxBuf[tmptail];
 8002bbe:	4a0a      	ldr	r2, [pc, #40]	@ (8002be8 <TransmitByte_CNI+0x8c>)
 8002bc0:	68bb      	ldr	r3, [r7, #8]
 8002bc2:	18d3      	adds	r3, r2, r3
 8002bc4:	781a      	ldrb	r2, [r3, #0]
 8002bc6:	4b09      	ldr	r3, [pc, #36]	@ (8002bec <TransmitByte_CNI+0x90>)
 8002bc8:	851a      	strh	r2, [r3, #40]	@ 0x28

        // enable TC interrupt
        USART1->CR1 |= USART_CR1_TCIE;
 8002bca:	4b08      	ldr	r3, [pc, #32]	@ (8002bec <TransmitByte_CNI+0x90>)
 8002bcc:	681a      	ldr	r2, [r3, #0]
 8002bce:	4b07      	ldr	r3, [pc, #28]	@ (8002bec <TransmitByte_CNI+0x90>)
 8002bd0:	2140      	movs	r1, #64	@ 0x40
 8002bd2:	430a      	orrs	r2, r1
 8002bd4:	601a      	str	r2, [r3, #0]
    }
}
 8002bd6:	46c0      	nop			@ (mov r8, r8)
 8002bd8:	46bd      	mov	sp, r7
 8002bda:	b004      	add	sp, #16
 8002bdc:	bd80      	pop	{r7, pc}
 8002bde:	46c0      	nop			@ (mov r8, r8)
 8002be0:	20000274 	.word	0x20000274
 8002be4:	20000275 	.word	0x20000275
 8002be8:	20000174 	.word	0x20000174
 8002bec:	40013800 	.word	0x40013800

08002bf0 <nUnreadBytes_CNI>:

/*
 * This function returns the number of unread bytes in the receive buffer
 */
unsigned char nUnreadBytes_CNI(void)
{
 8002bf0:	b580      	push	{r7, lr}
 8002bf2:	af00      	add	r7, sp, #0
    if(UART1_RxHead == UART1_RxTail)
 8002bf4:	4b12      	ldr	r3, [pc, #72]	@ (8002c40 <nUnreadBytes_CNI+0x50>)
 8002bf6:	781b      	ldrb	r3, [r3, #0]
 8002bf8:	b2da      	uxtb	r2, r3
 8002bfa:	4b12      	ldr	r3, [pc, #72]	@ (8002c44 <nUnreadBytes_CNI+0x54>)
 8002bfc:	781b      	ldrb	r3, [r3, #0]
 8002bfe:	b2db      	uxtb	r3, r3
 8002c00:	429a      	cmp	r2, r3
 8002c02:	d101      	bne.n	8002c08 <nUnreadBytes_CNI+0x18>
        return 0;
 8002c04:	2300      	movs	r3, #0
 8002c06:	e018      	b.n	8002c3a <nUnreadBytes_CNI+0x4a>
    else if(UART1_RxHead > UART1_RxTail)
 8002c08:	4b0d      	ldr	r3, [pc, #52]	@ (8002c40 <nUnreadBytes_CNI+0x50>)
 8002c0a:	781b      	ldrb	r3, [r3, #0]
 8002c0c:	b2da      	uxtb	r2, r3
 8002c0e:	4b0d      	ldr	r3, [pc, #52]	@ (8002c44 <nUnreadBytes_CNI+0x54>)
 8002c10:	781b      	ldrb	r3, [r3, #0]
 8002c12:	b2db      	uxtb	r3, r3
 8002c14:	429a      	cmp	r2, r3
 8002c16:	d908      	bls.n	8002c2a <nUnreadBytes_CNI+0x3a>
        return (UART1_RxHead - UART1_RxTail);
 8002c18:	4b09      	ldr	r3, [pc, #36]	@ (8002c40 <nUnreadBytes_CNI+0x50>)
 8002c1a:	781b      	ldrb	r3, [r3, #0]
 8002c1c:	b2da      	uxtb	r2, r3
 8002c1e:	4b09      	ldr	r3, [pc, #36]	@ (8002c44 <nUnreadBytes_CNI+0x54>)
 8002c20:	781b      	ldrb	r3, [r3, #0]
 8002c22:	b2db      	uxtb	r3, r3
 8002c24:	1ad3      	subs	r3, r2, r3
 8002c26:	b2db      	uxtb	r3, r3
 8002c28:	e007      	b.n	8002c3a <nUnreadBytes_CNI+0x4a>
    else
        return (UART1_RX_BUFFER_SIZE - UART1_RxTail + UART1_RxHead);
 8002c2a:	4b05      	ldr	r3, [pc, #20]	@ (8002c40 <nUnreadBytes_CNI+0x50>)
 8002c2c:	781b      	ldrb	r3, [r3, #0]
 8002c2e:	b2da      	uxtb	r2, r3
 8002c30:	4b04      	ldr	r3, [pc, #16]	@ (8002c44 <nUnreadBytes_CNI+0x54>)
 8002c32:	781b      	ldrb	r3, [r3, #0]
 8002c34:	b2db      	uxtb	r3, r3
 8002c36:	1ad3      	subs	r3, r2, r3
 8002c38:	b2db      	uxtb	r3, r3
}
 8002c3a:	0018      	movs	r0, r3
 8002c3c:	46bd      	mov	sp, r7
 8002c3e:	bd80      	pop	{r7, pc}
 8002c40:	20000170 	.word	0x20000170
 8002c44:	20000171 	.word	0x20000171

08002c48 <USART1_IRQHandler>:
 * Brief   This function handles UART interrupt request.
 * Param   None
 * Retval  None
 */
void USART1_IRQHandler(void)
{
 8002c48:	b580      	push	{r7, lr}
 8002c4a:	b082      	sub	sp, #8
 8002c4c:	af00      	add	r7, sp, #0
    if ((USART1->ISR & USART_ISR_TC) == USART_ISR_TC)
 8002c4e:	4b30      	ldr	r3, [pc, #192]	@ (8002d10 <USART1_IRQHandler+0xc8>)
 8002c50:	69db      	ldr	r3, [r3, #28]
 8002c52:	2240      	movs	r2, #64	@ 0x40
 8002c54:	4013      	ands	r3, r2
 8002c56:	2b40      	cmp	r3, #64	@ 0x40
 8002c58:	d127      	bne.n	8002caa <USART1_IRQHandler+0x62>
    {
        uint32_t tmptail;

        // Check if all data is transmitted
        if (UART1_TxHead != UART1_TxTail)
 8002c5a:	4b2e      	ldr	r3, [pc, #184]	@ (8002d14 <USART1_IRQHandler+0xcc>)
 8002c5c:	781b      	ldrb	r3, [r3, #0]
 8002c5e:	b2da      	uxtb	r2, r3
 8002c60:	4b2d      	ldr	r3, [pc, #180]	@ (8002d18 <USART1_IRQHandler+0xd0>)
 8002c62:	781b      	ldrb	r3, [r3, #0]
 8002c64:	b2db      	uxtb	r3, r3
 8002c66:	429a      	cmp	r2, r3
 8002c68:	d012      	beq.n	8002c90 <USART1_IRQHandler+0x48>
        {
            // Calculate buffer index
            tmptail = (UART1_TxTail + 1) & UART1_TX_BUFFER_MASK;
 8002c6a:	4b2b      	ldr	r3, [pc, #172]	@ (8002d18 <USART1_IRQHandler+0xd0>)
 8002c6c:	781b      	ldrb	r3, [r3, #0]
 8002c6e:	b2db      	uxtb	r3, r3
 8002c70:	3301      	adds	r3, #1
 8002c72:	001a      	movs	r2, r3
 8002c74:	23ff      	movs	r3, #255	@ 0xff
 8002c76:	4013      	ands	r3, r2
 8002c78:	603b      	str	r3, [r7, #0]

            // Store new index
            UART1_TxTail = tmptail;
 8002c7a:	683b      	ldr	r3, [r7, #0]
 8002c7c:	b2da      	uxtb	r2, r3
 8002c7e:	4b26      	ldr	r3, [pc, #152]	@ (8002d18 <USART1_IRQHandler+0xd0>)
 8002c80:	701a      	strb	r2, [r3, #0]

            // Start transmission
            USART1->TDR = UART1_TxBuf[tmptail];
 8002c82:	4a26      	ldr	r2, [pc, #152]	@ (8002d1c <USART1_IRQHandler+0xd4>)
 8002c84:	683b      	ldr	r3, [r7, #0]
 8002c86:	18d3      	adds	r3, r2, r3
 8002c88:	781a      	ldrb	r2, [r3, #0]
 8002c8a:	4b21      	ldr	r3, [pc, #132]	@ (8002d10 <USART1_IRQHandler+0xc8>)
 8002c8c:	851a      	strh	r2, [r3, #40]	@ 0x28
    }
    else
    {
        NVIC_DisableIRQ(USART1_IRQn); // Disable UART_IRQn
    }
}
 8002c8e:	e03a      	b.n	8002d06 <USART1_IRQHandler+0xbe>
            USART1->ICR |= USART_ICR_TCCF; // Clear TC flag
 8002c90:	4b1f      	ldr	r3, [pc, #124]	@ (8002d10 <USART1_IRQHandler+0xc8>)
 8002c92:	6a1a      	ldr	r2, [r3, #32]
 8002c94:	4b1e      	ldr	r3, [pc, #120]	@ (8002d10 <USART1_IRQHandler+0xc8>)
 8002c96:	2140      	movs	r1, #64	@ 0x40
 8002c98:	430a      	orrs	r2, r1
 8002c9a:	621a      	str	r2, [r3, #32]
            USART1->CR1 &= ~USART_CR1_TCIE; // Disable TC interrupt
 8002c9c:	4b1c      	ldr	r3, [pc, #112]	@ (8002d10 <USART1_IRQHandler+0xc8>)
 8002c9e:	681a      	ldr	r2, [r3, #0]
 8002ca0:	4b1b      	ldr	r3, [pc, #108]	@ (8002d10 <USART1_IRQHandler+0xc8>)
 8002ca2:	2140      	movs	r1, #64	@ 0x40
 8002ca4:	438a      	bics	r2, r1
 8002ca6:	601a      	str	r2, [r3, #0]
}
 8002ca8:	e02d      	b.n	8002d06 <USART1_IRQHandler+0xbe>
    else if ((USART1->ISR & USART_ISR_RXNE) == USART_ISR_RXNE)
 8002caa:	4b19      	ldr	r3, [pc, #100]	@ (8002d10 <USART1_IRQHandler+0xc8>)
 8002cac:	69db      	ldr	r3, [r3, #28]
 8002cae:	2220      	movs	r2, #32
 8002cb0:	4013      	ands	r3, r2
 8002cb2:	2b20      	cmp	r3, #32
 8002cb4:	d117      	bne.n	8002ce6 <USART1_IRQHandler+0x9e>
        uint8_t data = (uint8_t)(USART1->RDR); // Receive data, clear flag
 8002cb6:	4b16      	ldr	r3, [pc, #88]	@ (8002d10 <USART1_IRQHandler+0xc8>)
 8002cb8:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 8002cba:	b29a      	uxth	r2, r3
 8002cbc:	1dfb      	adds	r3, r7, #7
 8002cbe:	701a      	strb	r2, [r3, #0]
        uint8_t tmphead = (UART1_RxHead + 1) & UART1_RX_BUFFER_MASK;
 8002cc0:	4b17      	ldr	r3, [pc, #92]	@ (8002d20 <USART1_IRQHandler+0xd8>)
 8002cc2:	781b      	ldrb	r3, [r3, #0]
 8002cc4:	b2da      	uxtb	r2, r3
 8002cc6:	1dbb      	adds	r3, r7, #6
 8002cc8:	3201      	adds	r2, #1
 8002cca:	701a      	strb	r2, [r3, #0]
        UART1_RxHead = tmphead;
 8002ccc:	4b14      	ldr	r3, [pc, #80]	@ (8002d20 <USART1_IRQHandler+0xd8>)
 8002cce:	1dba      	adds	r2, r7, #6
 8002cd0:	7812      	ldrb	r2, [r2, #0]
 8002cd2:	701a      	strb	r2, [r3, #0]
        if (tmphead == UART1_RxTail)
 8002cd4:	4b13      	ldr	r3, [pc, #76]	@ (8002d24 <USART1_IRQHandler+0xdc>)
 8002cd6:	781b      	ldrb	r3, [r3, #0]
        UART1_RxBuf[tmphead] = data;
 8002cd8:	1dbb      	adds	r3, r7, #6
 8002cda:	781b      	ldrb	r3, [r3, #0]
 8002cdc:	4a12      	ldr	r2, [pc, #72]	@ (8002d28 <USART1_IRQHandler+0xe0>)
 8002cde:	1df9      	adds	r1, r7, #7
 8002ce0:	7809      	ldrb	r1, [r1, #0]
 8002ce2:	54d1      	strb	r1, [r2, r3]
}
 8002ce4:	e00f      	b.n	8002d06 <USART1_IRQHandler+0xbe>
    else if ((USART1->ISR & USART_ISR_ORE) == USART_ISR_ORE)
 8002ce6:	4b0a      	ldr	r3, [pc, #40]	@ (8002d10 <USART1_IRQHandler+0xc8>)
 8002ce8:	69db      	ldr	r3, [r3, #28]
 8002cea:	2208      	movs	r2, #8
 8002cec:	4013      	ands	r3, r2
 8002cee:	2b08      	cmp	r3, #8
 8002cf0:	d106      	bne.n	8002d00 <USART1_IRQHandler+0xb8>
    	USART1->ICR |= USART_ICR_ORECF; // Clear ORE flag
 8002cf2:	4b07      	ldr	r3, [pc, #28]	@ (8002d10 <USART1_IRQHandler+0xc8>)
 8002cf4:	6a1a      	ldr	r2, [r3, #32]
 8002cf6:	4b06      	ldr	r3, [pc, #24]	@ (8002d10 <USART1_IRQHandler+0xc8>)
 8002cf8:	2108      	movs	r1, #8
 8002cfa:	430a      	orrs	r2, r1
 8002cfc:	621a      	str	r2, [r3, #32]
}
 8002cfe:	e002      	b.n	8002d06 <USART1_IRQHandler+0xbe>
        NVIC_DisableIRQ(USART1_IRQn); // Disable UART_IRQn
 8002d00:	201b      	movs	r0, #27
 8002d02:	f7ff fd6d 	bl	80027e0 <__NVIC_DisableIRQ>
}
 8002d06:	46c0      	nop			@ (mov r8, r8)
 8002d08:	46bd      	mov	sp, r7
 8002d0a:	b002      	add	sp, #8
 8002d0c:	bd80      	pop	{r7, pc}
 8002d0e:	46c0      	nop			@ (mov r8, r8)
 8002d10:	40013800 	.word	0x40013800
 8002d14:	20000274 	.word	0x20000274
 8002d18:	20000275 	.word	0x20000275
 8002d1c:	20000174 	.word	0x20000174
 8002d20:	20000170 	.word	0x20000170
 8002d24:	20000171 	.word	0x20000171
 8002d28:	20000070 	.word	0x20000070

08002d2c <Configure_FakeSensor>:
           -
 * Param   None
 * Retval  None
 */
void Configure_FakeSensor(void)
{
 8002d2c:	b580      	push	{r7, lr}
 8002d2e:	af00      	add	r7, sp, #0
	value = 0;
 8002d30:	4b02      	ldr	r3, [pc, #8]	@ (8002d3c <Configure_FakeSensor+0x10>)
 8002d32:	2200      	movs	r2, #0
 8002d34:	701a      	strb	r2, [r3, #0]
}
 8002d36:	46c0      	nop			@ (mov r8, r8)
 8002d38:	46bd      	mov	sp, r7
 8002d3a:	bd80      	pop	{r7, pc}
 8002d3c:	20000276 	.word	0x20000276

08002d40 <Get_FakeSensorValue>:

char Get_FakeSensorValue(void)
{
 8002d40:	b580      	push	{r7, lr}
 8002d42:	af00      	add	r7, sp, #0
	return value;
 8002d44:	4b02      	ldr	r3, [pc, #8]	@ (8002d50 <Get_FakeSensorValue+0x10>)
 8002d46:	781b      	ldrb	r3, [r3, #0]
 8002d48:	b2db      	uxtb	r3, r3
}
 8002d4a:	0018      	movs	r0, r3
 8002d4c:	46bd      	mov	sp, r7
 8002d4e:	bd80      	pop	{r7, pc}
 8002d50:	20000276 	.word	0x20000276

08002d54 <Configure_GlobalClock>:
           -
 * Param   None
 * Retval  None
 */
void Configure_GlobalClock(void)
{
 8002d54:	b580      	push	{r7, lr}
 8002d56:	af00      	add	r7, sp, #0
	global_tick = 0;
 8002d58:	4b02      	ldr	r3, [pc, #8]	@ (8002d64 <Configure_GlobalClock+0x10>)
 8002d5a:	2200      	movs	r2, #0
 8002d5c:	601a      	str	r2, [r3, #0]
}
 8002d5e:	46c0      	nop			@ (mov r8, r8)
 8002d60:	46bd      	mov	sp, r7
 8002d62:	bd80      	pop	{r7, pc}
 8002d64:	20000278 	.word	0x20000278

08002d68 <Get_GlobalClock>:

uint32_t Get_GlobalClock(void)
{
 8002d68:	b580      	push	{r7, lr}
 8002d6a:	af00      	add	r7, sp, #0
	return global_tick;
 8002d6c:	4b02      	ldr	r3, [pc, #8]	@ (8002d78 <Get_GlobalClock+0x10>)
 8002d6e:	681b      	ldr	r3, [r3, #0]
}
 8002d70:	0018      	movs	r0, r3
 8002d72:	46bd      	mov	sp, r7
 8002d74:	bd80      	pop	{r7, pc}
 8002d76:	46c0      	nop			@ (mov r8, r8)
 8002d78:	20000278 	.word	0x20000278

08002d7c <Set_GlobalClock>:

void Set_GlobalClock(uint32_t t)
{
 8002d7c:	b580      	push	{r7, lr}
 8002d7e:	b082      	sub	sp, #8
 8002d80:	af00      	add	r7, sp, #0
 8002d82:	6078      	str	r0, [r7, #4]
	global_tick = t;
 8002d84:	4b10      	ldr	r3, [pc, #64]	@ (8002dc8 <Set_GlobalClock+0x4c>)
 8002d86:	687a      	ldr	r2, [r7, #4]
 8002d88:	601a      	str	r2, [r3, #0]

	// For debugging purpose: show the synchronization of the global clocks
	// by toggling an LED
	if((global_tick % 20) == 0)
 8002d8a:	4b0f      	ldr	r3, [pc, #60]	@ (8002dc8 <Set_GlobalClock+0x4c>)
 8002d8c:	681b      	ldr	r3, [r3, #0]
 8002d8e:	2114      	movs	r1, #20
 8002d90:	0018      	movs	r0, r3
 8002d92:	f7fd fa49 	bl	8000228 <__aeabi_uidivmod>
 8002d96:	1e0b      	subs	r3, r1, #0
 8002d98:	d105      	bne.n	8002da6 <Set_GlobalClock+0x2a>
	{
		GPIOA->BSRR = GPIO_BSRR_BR_5;
 8002d9a:	2390      	movs	r3, #144	@ 0x90
 8002d9c:	05db      	lsls	r3, r3, #23
 8002d9e:	2280      	movs	r2, #128	@ 0x80
 8002da0:	0392      	lsls	r2, r2, #14
 8002da2:	619a      	str	r2, [r3, #24]
	}
	else if((global_tick % 10) == 0)
	{
		GPIOA->BSRR = GPIO_BSRR_BS_5;
	}
}
 8002da4:	e00b      	b.n	8002dbe <Set_GlobalClock+0x42>
	else if((global_tick % 10) == 0)
 8002da6:	4b08      	ldr	r3, [pc, #32]	@ (8002dc8 <Set_GlobalClock+0x4c>)
 8002da8:	681b      	ldr	r3, [r3, #0]
 8002daa:	210a      	movs	r1, #10
 8002dac:	0018      	movs	r0, r3
 8002dae:	f7fd fa3b 	bl	8000228 <__aeabi_uidivmod>
 8002db2:	1e0b      	subs	r3, r1, #0
 8002db4:	d103      	bne.n	8002dbe <Set_GlobalClock+0x42>
		GPIOA->BSRR = GPIO_BSRR_BS_5;
 8002db6:	2390      	movs	r3, #144	@ 0x90
 8002db8:	05db      	lsls	r3, r3, #23
 8002dba:	2220      	movs	r2, #32
 8002dbc:	619a      	str	r2, [r3, #24]
}
 8002dbe:	46c0      	nop			@ (mov r8, r8)
 8002dc0:	46bd      	mov	sp, r7
 8002dc2:	b002      	add	sp, #8
 8002dc4:	bd80      	pop	{r7, pc}
 8002dc6:	46c0      	nop			@ (mov r8, r8)
 8002dc8:	20000278 	.word	0x20000278

08002dcc <Inc_GlobalClock>:

void Inc_GlobalClock(void)
{
 8002dcc:	b580      	push	{r7, lr}
 8002dce:	af00      	add	r7, sp, #0
	global_tick++;
 8002dd0:	4b10      	ldr	r3, [pc, #64]	@ (8002e14 <Inc_GlobalClock+0x48>)
 8002dd2:	681b      	ldr	r3, [r3, #0]
 8002dd4:	1c5a      	adds	r2, r3, #1
 8002dd6:	4b0f      	ldr	r3, [pc, #60]	@ (8002e14 <Inc_GlobalClock+0x48>)
 8002dd8:	601a      	str	r2, [r3, #0]

	// For debugging purpose: show the synchronization of the global clocks
	// by toggling an LED
	if((global_tick % 20) == 0)
 8002dda:	4b0e      	ldr	r3, [pc, #56]	@ (8002e14 <Inc_GlobalClock+0x48>)
 8002ddc:	681b      	ldr	r3, [r3, #0]
 8002dde:	2114      	movs	r1, #20
 8002de0:	0018      	movs	r0, r3
 8002de2:	f7fd fa21 	bl	8000228 <__aeabi_uidivmod>
 8002de6:	1e0b      	subs	r3, r1, #0
 8002de8:	d105      	bne.n	8002df6 <Inc_GlobalClock+0x2a>
	{
		GPIOA->BSRR = GPIO_BSRR_BR_5;
 8002dea:	2390      	movs	r3, #144	@ 0x90
 8002dec:	05db      	lsls	r3, r3, #23
 8002dee:	2280      	movs	r2, #128	@ 0x80
 8002df0:	0392      	lsls	r2, r2, #14
 8002df2:	619a      	str	r2, [r3, #24]
	}
	else if((global_tick % 10) == 0)
	{
		GPIOA->BSRR = GPIO_BSRR_BS_5;
	}
}
 8002df4:	e00b      	b.n	8002e0e <Inc_GlobalClock+0x42>
	else if((global_tick % 10) == 0)
 8002df6:	4b07      	ldr	r3, [pc, #28]	@ (8002e14 <Inc_GlobalClock+0x48>)
 8002df8:	681b      	ldr	r3, [r3, #0]
 8002dfa:	210a      	movs	r1, #10
 8002dfc:	0018      	movs	r0, r3
 8002dfe:	f7fd fa13 	bl	8000228 <__aeabi_uidivmod>
 8002e02:	1e0b      	subs	r3, r1, #0
 8002e04:	d103      	bne.n	8002e0e <Inc_GlobalClock+0x42>
		GPIOA->BSRR = GPIO_BSRR_BS_5;
 8002e06:	2390      	movs	r3, #144	@ 0x90
 8002e08:	05db      	lsls	r3, r3, #23
 8002e0a:	2220      	movs	r2, #32
 8002e0c:	619a      	str	r2, [r3, #24]
}
 8002e0e:	46c0      	nop			@ (mov r8, r8)
 8002e10:	46bd      	mov	sp, r7
 8002e12:	bd80      	pop	{r7, pc}
 8002e14:	20000278 	.word	0x20000278

08002e18 <__NVIC_EnableIRQ>:
{
 8002e18:	b580      	push	{r7, lr}
 8002e1a:	b082      	sub	sp, #8
 8002e1c:	af00      	add	r7, sp, #0
 8002e1e:	0002      	movs	r2, r0
 8002e20:	1dfb      	adds	r3, r7, #7
 8002e22:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 8002e24:	1dfb      	adds	r3, r7, #7
 8002e26:	781b      	ldrb	r3, [r3, #0]
 8002e28:	2b7f      	cmp	r3, #127	@ 0x7f
 8002e2a:	d809      	bhi.n	8002e40 <__NVIC_EnableIRQ+0x28>
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002e2c:	1dfb      	adds	r3, r7, #7
 8002e2e:	781b      	ldrb	r3, [r3, #0]
 8002e30:	001a      	movs	r2, r3
 8002e32:	231f      	movs	r3, #31
 8002e34:	401a      	ands	r2, r3
 8002e36:	4b04      	ldr	r3, [pc, #16]	@ (8002e48 <__NVIC_EnableIRQ+0x30>)
 8002e38:	2101      	movs	r1, #1
 8002e3a:	4091      	lsls	r1, r2
 8002e3c:	000a      	movs	r2, r1
 8002e3e:	601a      	str	r2, [r3, #0]
}
 8002e40:	46c0      	nop			@ (mov r8, r8)
 8002e42:	46bd      	mov	sp, r7
 8002e44:	b002      	add	sp, #8
 8002e46:	bd80      	pop	{r7, pc}
 8002e48:	e000e100 	.word	0xe000e100

08002e4c <__NVIC_SetPriority>:
{
 8002e4c:	b590      	push	{r4, r7, lr}
 8002e4e:	b083      	sub	sp, #12
 8002e50:	af00      	add	r7, sp, #0
 8002e52:	0002      	movs	r2, r0
 8002e54:	6039      	str	r1, [r7, #0]
 8002e56:	1dfb      	adds	r3, r7, #7
 8002e58:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 8002e5a:	1dfb      	adds	r3, r7, #7
 8002e5c:	781b      	ldrb	r3, [r3, #0]
 8002e5e:	2b7f      	cmp	r3, #127	@ 0x7f
 8002e60:	d828      	bhi.n	8002eb4 <__NVIC_SetPriority+0x68>
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002e62:	4a2f      	ldr	r2, [pc, #188]	@ (8002f20 <__NVIC_SetPriority+0xd4>)
 8002e64:	1dfb      	adds	r3, r7, #7
 8002e66:	781b      	ldrb	r3, [r3, #0]
 8002e68:	b25b      	sxtb	r3, r3
 8002e6a:	089b      	lsrs	r3, r3, #2
 8002e6c:	33c0      	adds	r3, #192	@ 0xc0
 8002e6e:	009b      	lsls	r3, r3, #2
 8002e70:	589b      	ldr	r3, [r3, r2]
 8002e72:	1dfa      	adds	r2, r7, #7
 8002e74:	7812      	ldrb	r2, [r2, #0]
 8002e76:	0011      	movs	r1, r2
 8002e78:	2203      	movs	r2, #3
 8002e7a:	400a      	ands	r2, r1
 8002e7c:	00d2      	lsls	r2, r2, #3
 8002e7e:	21ff      	movs	r1, #255	@ 0xff
 8002e80:	4091      	lsls	r1, r2
 8002e82:	000a      	movs	r2, r1
 8002e84:	43d2      	mvns	r2, r2
 8002e86:	401a      	ands	r2, r3
 8002e88:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8002e8a:	683b      	ldr	r3, [r7, #0]
 8002e8c:	019b      	lsls	r3, r3, #6
 8002e8e:	22ff      	movs	r2, #255	@ 0xff
 8002e90:	401a      	ands	r2, r3
 8002e92:	1dfb      	adds	r3, r7, #7
 8002e94:	781b      	ldrb	r3, [r3, #0]
 8002e96:	0018      	movs	r0, r3
 8002e98:	2303      	movs	r3, #3
 8002e9a:	4003      	ands	r3, r0
 8002e9c:	00db      	lsls	r3, r3, #3
 8002e9e:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002ea0:	481f      	ldr	r0, [pc, #124]	@ (8002f20 <__NVIC_SetPriority+0xd4>)
 8002ea2:	1dfb      	adds	r3, r7, #7
 8002ea4:	781b      	ldrb	r3, [r3, #0]
 8002ea6:	b25b      	sxtb	r3, r3
 8002ea8:	089b      	lsrs	r3, r3, #2
 8002eaa:	430a      	orrs	r2, r1
 8002eac:	33c0      	adds	r3, #192	@ 0xc0
 8002eae:	009b      	lsls	r3, r3, #2
 8002eb0:	501a      	str	r2, [r3, r0]
}
 8002eb2:	e031      	b.n	8002f18 <__NVIC_SetPriority+0xcc>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002eb4:	4a1b      	ldr	r2, [pc, #108]	@ (8002f24 <__NVIC_SetPriority+0xd8>)
 8002eb6:	1dfb      	adds	r3, r7, #7
 8002eb8:	781b      	ldrb	r3, [r3, #0]
 8002eba:	0019      	movs	r1, r3
 8002ebc:	230f      	movs	r3, #15
 8002ebe:	400b      	ands	r3, r1
 8002ec0:	3b08      	subs	r3, #8
 8002ec2:	089b      	lsrs	r3, r3, #2
 8002ec4:	3306      	adds	r3, #6
 8002ec6:	009b      	lsls	r3, r3, #2
 8002ec8:	18d3      	adds	r3, r2, r3
 8002eca:	3304      	adds	r3, #4
 8002ecc:	681b      	ldr	r3, [r3, #0]
 8002ece:	1dfa      	adds	r2, r7, #7
 8002ed0:	7812      	ldrb	r2, [r2, #0]
 8002ed2:	0011      	movs	r1, r2
 8002ed4:	2203      	movs	r2, #3
 8002ed6:	400a      	ands	r2, r1
 8002ed8:	00d2      	lsls	r2, r2, #3
 8002eda:	21ff      	movs	r1, #255	@ 0xff
 8002edc:	4091      	lsls	r1, r2
 8002ede:	000a      	movs	r2, r1
 8002ee0:	43d2      	mvns	r2, r2
 8002ee2:	401a      	ands	r2, r3
 8002ee4:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8002ee6:	683b      	ldr	r3, [r7, #0]
 8002ee8:	019b      	lsls	r3, r3, #6
 8002eea:	22ff      	movs	r2, #255	@ 0xff
 8002eec:	401a      	ands	r2, r3
 8002eee:	1dfb      	adds	r3, r7, #7
 8002ef0:	781b      	ldrb	r3, [r3, #0]
 8002ef2:	0018      	movs	r0, r3
 8002ef4:	2303      	movs	r3, #3
 8002ef6:	4003      	ands	r3, r0
 8002ef8:	00db      	lsls	r3, r3, #3
 8002efa:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002efc:	4809      	ldr	r0, [pc, #36]	@ (8002f24 <__NVIC_SetPriority+0xd8>)
 8002efe:	1dfb      	adds	r3, r7, #7
 8002f00:	781b      	ldrb	r3, [r3, #0]
 8002f02:	001c      	movs	r4, r3
 8002f04:	230f      	movs	r3, #15
 8002f06:	4023      	ands	r3, r4
 8002f08:	3b08      	subs	r3, #8
 8002f0a:	089b      	lsrs	r3, r3, #2
 8002f0c:	430a      	orrs	r2, r1
 8002f0e:	3306      	adds	r3, #6
 8002f10:	009b      	lsls	r3, r3, #2
 8002f12:	18c3      	adds	r3, r0, r3
 8002f14:	3304      	adds	r3, #4
 8002f16:	601a      	str	r2, [r3, #0]
}
 8002f18:	46c0      	nop			@ (mov r8, r8)
 8002f1a:	46bd      	mov	sp, r7
 8002f1c:	b003      	add	sp, #12
 8002f1e:	bd90      	pop	{r4, r7, pc}
 8002f20:	e000e100 	.word	0xe000e100
 8002f24:	e000ed00 	.word	0xe000ed00

08002f28 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8002f28:	b580      	push	{r7, lr}
 8002f2a:	b082      	sub	sp, #8
 8002f2c:	af00      	add	r7, sp, #0
 8002f2e:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8002f30:	687b      	ldr	r3, [r7, #4]
 8002f32:	1e5a      	subs	r2, r3, #1
 8002f34:	2380      	movs	r3, #128	@ 0x80
 8002f36:	045b      	lsls	r3, r3, #17
 8002f38:	429a      	cmp	r2, r3
 8002f3a:	d301      	bcc.n	8002f40 <SysTick_Config+0x18>
  {
    return (1UL);                                                   /* Reload value impossible */
 8002f3c:	2301      	movs	r3, #1
 8002f3e:	e010      	b.n	8002f62 <SysTick_Config+0x3a>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8002f40:	4b0a      	ldr	r3, [pc, #40]	@ (8002f6c <SysTick_Config+0x44>)
 8002f42:	687a      	ldr	r2, [r7, #4]
 8002f44:	3a01      	subs	r2, #1
 8002f46:	605a      	str	r2, [r3, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8002f48:	2301      	movs	r3, #1
 8002f4a:	425b      	negs	r3, r3
 8002f4c:	2103      	movs	r1, #3
 8002f4e:	0018      	movs	r0, r3
 8002f50:	f7ff ff7c 	bl	8002e4c <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8002f54:	4b05      	ldr	r3, [pc, #20]	@ (8002f6c <SysTick_Config+0x44>)
 8002f56:	2200      	movs	r2, #0
 8002f58:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8002f5a:	4b04      	ldr	r3, [pc, #16]	@ (8002f6c <SysTick_Config+0x44>)
 8002f5c:	2207      	movs	r2, #7
 8002f5e:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8002f60:	2300      	movs	r3, #0
}
 8002f62:	0018      	movs	r0, r3
 8002f64:	46bd      	mov	sp, r7
 8002f66:	b002      	add	sp, #8
 8002f68:	bd80      	pop	{r7, pc}
 8002f6a:	46c0      	nop			@ (mov r8, r8)
 8002f6c:	e000e010 	.word	0xe000e010

08002f70 <statesToInt>:
void Inc_LocalClock(void);
uint32_t Get_LocalClock(void);

// Private functions -----------------------------------------------------------
void statesToInt(double x)
{
 8002f70:	b5b0      	push	{r4, r5, r7, lr}
 8002f72:	b08c      	sub	sp, #48	@ 0x30
 8002f74:	af00      	add	r7, sp, #0
 8002f76:	6038      	str	r0, [r7, #0]
 8002f78:	6079      	str	r1, [r7, #4]
	char *tmpSign = (x < 0) ? "-" : "";
 8002f7a:	2200      	movs	r2, #0
 8002f7c:	2300      	movs	r3, #0
 8002f7e:	6838      	ldr	r0, [r7, #0]
 8002f80:	6879      	ldr	r1, [r7, #4]
 8002f82:	f7fd fa57 	bl	8000434 <__aeabi_dcmplt>
 8002f86:	1e03      	subs	r3, r0, #0
 8002f88:	d001      	beq.n	8002f8e <statesToInt+0x1e>
 8002f8a:	4b29      	ldr	r3, [pc, #164]	@ (8003030 <statesToInt+0xc0>)
 8002f8c:	e000      	b.n	8002f90 <statesToInt+0x20>
 8002f8e:	4b29      	ldr	r3, [pc, #164]	@ (8003034 <statesToInt+0xc4>)
 8002f90:	62fb      	str	r3, [r7, #44]	@ 0x2c
	double tmpVal = (x < 0) ? -x : x;
 8002f92:	2200      	movs	r2, #0
 8002f94:	2300      	movs	r3, #0
 8002f96:	6838      	ldr	r0, [r7, #0]
 8002f98:	6879      	ldr	r1, [r7, #4]
 8002f9a:	f7fd fa4b 	bl	8000434 <__aeabi_dcmplt>
 8002f9e:	1e03      	subs	r3, r0, #0
 8002fa0:	d007      	beq.n	8002fb2 <statesToInt+0x42>
 8002fa2:	683b      	ldr	r3, [r7, #0]
 8002fa4:	001c      	movs	r4, r3
 8002fa6:	687b      	ldr	r3, [r7, #4]
 8002fa8:	2280      	movs	r2, #128	@ 0x80
 8002faa:	0612      	lsls	r2, r2, #24
 8002fac:	405a      	eors	r2, r3
 8002fae:	0015      	movs	r5, r2
 8002fb0:	e001      	b.n	8002fb6 <statesToInt+0x46>
 8002fb2:	683c      	ldr	r4, [r7, #0]
 8002fb4:	687d      	ldr	r5, [r7, #4]
 8002fb6:	623c      	str	r4, [r7, #32]
 8002fb8:	627d      	str	r5, [r7, #36]	@ 0x24

	int tmpInt1 = tmpVal;                  // Get the integer (678).
 8002fba:	6a38      	ldr	r0, [r7, #32]
 8002fbc:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8002fbe:	f7ff f96f 	bl	80022a0 <__aeabi_d2iz>
 8002fc2:	0003      	movs	r3, r0
 8002fc4:	61fb      	str	r3, [r7, #28]
	double tmpFrac = tmpVal - tmpInt1;      // Get fraction (0.0123).
 8002fc6:	69f8      	ldr	r0, [r7, #28]
 8002fc8:	f7ff f9a6 	bl	8002318 <__aeabi_i2d>
 8002fcc:	0002      	movs	r2, r0
 8002fce:	000b      	movs	r3, r1
 8002fd0:	6a38      	ldr	r0, [r7, #32]
 8002fd2:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8002fd4:	f7fe fd5a 	bl	8001a8c <__aeabi_dsub>
 8002fd8:	0002      	movs	r2, r0
 8002fda:	000b      	movs	r3, r1
 8002fdc:	613a      	str	r2, [r7, #16]
 8002fde:	617b      	str	r3, [r7, #20]
	int tmpInt2 = trunc(tmpFrac * 10000);  // Turn into integer (123).
 8002fe0:	2200      	movs	r2, #0
 8002fe2:	4b15      	ldr	r3, [pc, #84]	@ (8003038 <statesToInt+0xc8>)
 8002fe4:	6938      	ldr	r0, [r7, #16]
 8002fe6:	6979      	ldr	r1, [r7, #20]
 8002fe8:	f7fe fa6a 	bl	80014c0 <__aeabi_dmul>
 8002fec:	0002      	movs	r2, r0
 8002fee:	000b      	movs	r3, r1
 8002ff0:	0010      	movs	r0, r2
 8002ff2:	0019      	movs	r1, r3
 8002ff4:	f000 fce2 	bl	80039bc <trunc>
 8002ff8:	0002      	movs	r2, r0
 8002ffa:	000b      	movs	r3, r1
 8002ffc:	0010      	movs	r0, r2
 8002ffe:	0019      	movs	r1, r3
 8003000:	f7ff f94e 	bl	80022a0 <__aeabi_d2iz>
 8003004:	0003      	movs	r3, r0
 8003006:	60fb      	str	r3, [r7, #12]
	TransmitString_TII(tmpSign);
 8003008:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800300a:	0018      	movs	r0, r3
 800300c:	f000 fbb2 	bl	8003774 <TransmitString_TII>
	printStates(tmpInt1);
 8003010:	69fb      	ldr	r3, [r7, #28]
 8003012:	0018      	movs	r0, r3
 8003014:	f000 f814 	bl	8003040 <printStates>
	TransmitString_TII(".");
 8003018:	4b08      	ldr	r3, [pc, #32]	@ (800303c <statesToInt+0xcc>)
 800301a:	0018      	movs	r0, r3
 800301c:	f000 fbaa 	bl	8003774 <TransmitString_TII>
	printStates(tmpInt2);
 8003020:	68fb      	ldr	r3, [r7, #12]
 8003022:	0018      	movs	r0, r3
 8003024:	f000 f80c 	bl	8003040 <printStates>
}
 8003028:	46c0      	nop			@ (mov r8, r8)
 800302a:	46bd      	mov	sp, r7
 800302c:	b00c      	add	sp, #48	@ 0x30
 800302e:	bdb0      	pop	{r4, r5, r7, pc}
 8003030:	08004984 	.word	0x08004984
 8003034:	08004988 	.word	0x08004988
 8003038:	40c38800 	.word	0x40c38800
 800303c:	0800498c 	.word	0x0800498c

08003040 <printStates>:
void printStates(int number)
{
 8003040:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003042:	b08f      	sub	sp, #60	@ 0x3c
 8003044:	af00      	add	r7, sp, #0
 8003046:	6078      	str	r0, [r7, #4]
	int16_t base_val = 10, digit, i = 0, n = 0;
 8003048:	2332      	movs	r3, #50	@ 0x32
 800304a:	18fb      	adds	r3, r7, r3
 800304c:	220a      	movs	r2, #10
 800304e:	801a      	strh	r2, [r3, #0]
 8003050:	2336      	movs	r3, #54	@ 0x36
 8003052:	18fb      	adds	r3, r7, r3
 8003054:	2200      	movs	r2, #0
 8003056:	801a      	strh	r2, [r3, #0]
 8003058:	2334      	movs	r3, #52	@ 0x34
 800305a:	18fb      	adds	r3, r7, r3
 800305c:	2200      	movs	r2, #0
 800305e:	801a      	strh	r2, [r3, #0]
		char x_str[32], t;
		while (number)
 8003060:	e041      	b.n	80030e6 <printStates+0xa6>
		{
			digit = number % base_val;
 8003062:	2532      	movs	r5, #50	@ 0x32
 8003064:	197b      	adds	r3, r7, r5
 8003066:	2200      	movs	r2, #0
 8003068:	5e9a      	ldrsh	r2, [r3, r2]
 800306a:	687b      	ldr	r3, [r7, #4]
 800306c:	0011      	movs	r1, r2
 800306e:	0018      	movs	r0, r3
 8003070:	f7fd f9c4 	bl	80003fc <__aeabi_idivmod>
 8003074:	000b      	movs	r3, r1
 8003076:	001a      	movs	r2, r3
 8003078:	242e      	movs	r4, #46	@ 0x2e
 800307a:	193b      	adds	r3, r7, r4
 800307c:	801a      	strh	r2, [r3, #0]
			number /= base_val;
 800307e:	197b      	adds	r3, r7, r5
 8003080:	2200      	movs	r2, #0
 8003082:	5e9b      	ldrsh	r3, [r3, r2]
 8003084:	0019      	movs	r1, r3
 8003086:	6878      	ldr	r0, [r7, #4]
 8003088:	f7fd f8d2 	bl	8000230 <__divsi3>
 800308c:	0003      	movs	r3, r0
 800308e:	607b      	str	r3, [r7, #4]
			if (digit < 10)
 8003090:	193b      	adds	r3, r7, r4
 8003092:	2200      	movs	r2, #0
 8003094:	5e9b      	ldrsh	r3, [r3, r2]
 8003096:	2b09      	cmp	r3, #9
 8003098:	dc12      	bgt.n	80030c0 <printStates+0x80>
			x_str[n++] = digit + '0';
 800309a:	193b      	adds	r3, r7, r4
 800309c:	881b      	ldrh	r3, [r3, #0]
 800309e:	b2db      	uxtb	r3, r3
 80030a0:	2434      	movs	r4, #52	@ 0x34
 80030a2:	193a      	adds	r2, r7, r4
 80030a4:	2100      	movs	r1, #0
 80030a6:	5e51      	ldrsh	r1, [r2, r1]
 80030a8:	b28a      	uxth	r2, r1
 80030aa:	3201      	adds	r2, #1
 80030ac:	b290      	uxth	r0, r2
 80030ae:	193a      	adds	r2, r7, r4
 80030b0:	8010      	strh	r0, [r2, #0]
 80030b2:	000a      	movs	r2, r1
 80030b4:	3330      	adds	r3, #48	@ 0x30
 80030b6:	b2d9      	uxtb	r1, r3
 80030b8:	230c      	movs	r3, #12
 80030ba:	18fb      	adds	r3, r7, r3
 80030bc:	5499      	strb	r1, [r3, r2]
 80030be:	e012      	b.n	80030e6 <printStates+0xa6>
		    else
			 x_str[n++] = digit + 'A' - 10;   /*handle base > 9 */
 80030c0:	232e      	movs	r3, #46	@ 0x2e
 80030c2:	18fb      	adds	r3, r7, r3
 80030c4:	881b      	ldrh	r3, [r3, #0]
 80030c6:	b2db      	uxtb	r3, r3
 80030c8:	2434      	movs	r4, #52	@ 0x34
 80030ca:	193a      	adds	r2, r7, r4
 80030cc:	2100      	movs	r1, #0
 80030ce:	5e51      	ldrsh	r1, [r2, r1]
 80030d0:	b28a      	uxth	r2, r1
 80030d2:	3201      	adds	r2, #1
 80030d4:	b290      	uxth	r0, r2
 80030d6:	193a      	adds	r2, r7, r4
 80030d8:	8010      	strh	r0, [r2, #0]
 80030da:	000a      	movs	r2, r1
 80030dc:	3337      	adds	r3, #55	@ 0x37
 80030de:	b2d9      	uxtb	r1, r3
 80030e0:	230c      	movs	r3, #12
 80030e2:	18fb      	adds	r3, r7, r3
 80030e4:	5499      	strb	r1, [r3, r2]
		while (number)
 80030e6:	687b      	ldr	r3, [r7, #4]
 80030e8:	2b00      	cmp	r3, #0
 80030ea:	d1ba      	bne.n	8003062 <printStates+0x22>
		}
		/* Terminate string */
		x_str[n] = '\0';
 80030ec:	2334      	movs	r3, #52	@ 0x34
 80030ee:	18fb      	adds	r3, r7, r3
 80030f0:	2200      	movs	r2, #0
 80030f2:	5e9b      	ldrsh	r3, [r3, r2]
 80030f4:	220c      	movs	r2, #12
 80030f6:	18ba      	adds	r2, r7, r2
 80030f8:	2100      	movs	r1, #0
 80030fa:	54d1      	strb	r1, [r2, r3]
		/* Reverse string */
		for (i=0; i<n/2; i++)
 80030fc:	2336      	movs	r3, #54	@ 0x36
 80030fe:	18fb      	adds	r3, r7, r3
 8003100:	2200      	movs	r2, #0
 8003102:	801a      	strh	r2, [r3, #0]
 8003104:	e02d      	b.n	8003162 <printStates+0x122>
		{
			t = x_str[i];
 8003106:	2036      	movs	r0, #54	@ 0x36
 8003108:	183b      	adds	r3, r7, r0
 800310a:	2200      	movs	r2, #0
 800310c:	5e9a      	ldrsh	r2, [r3, r2]
 800310e:	2531      	movs	r5, #49	@ 0x31
 8003110:	197b      	adds	r3, r7, r5
 8003112:	240c      	movs	r4, #12
 8003114:	1939      	adds	r1, r7, r4
 8003116:	5c8a      	ldrb	r2, [r1, r2]
 8003118:	701a      	strb	r2, [r3, #0]
			x_str[i] = x_str[n-i-1];
 800311a:	2634      	movs	r6, #52	@ 0x34
 800311c:	19bb      	adds	r3, r7, r6
 800311e:	2200      	movs	r2, #0
 8003120:	5e9a      	ldrsh	r2, [r3, r2]
 8003122:	183b      	adds	r3, r7, r0
 8003124:	2100      	movs	r1, #0
 8003126:	5e5b      	ldrsh	r3, [r3, r1]
 8003128:	1ad3      	subs	r3, r2, r3
 800312a:	1e5a      	subs	r2, r3, #1
 800312c:	183b      	adds	r3, r7, r0
 800312e:	2100      	movs	r1, #0
 8003130:	5e5b      	ldrsh	r3, [r3, r1]
 8003132:	1939      	adds	r1, r7, r4
 8003134:	5c89      	ldrb	r1, [r1, r2]
 8003136:	193a      	adds	r2, r7, r4
 8003138:	54d1      	strb	r1, [r2, r3]
			x_str[n-i-1] = t;
 800313a:	19bb      	adds	r3, r7, r6
 800313c:	2200      	movs	r2, #0
 800313e:	5e9a      	ldrsh	r2, [r3, r2]
 8003140:	183b      	adds	r3, r7, r0
 8003142:	2100      	movs	r1, #0
 8003144:	5e5b      	ldrsh	r3, [r3, r1]
 8003146:	1ad3      	subs	r3, r2, r3
 8003148:	3b01      	subs	r3, #1
 800314a:	193a      	adds	r2, r7, r4
 800314c:	1979      	adds	r1, r7, r5
 800314e:	7809      	ldrb	r1, [r1, #0]
 8003150:	54d1      	strb	r1, [r2, r3]
		for (i=0; i<n/2; i++)
 8003152:	183b      	adds	r3, r7, r0
 8003154:	2200      	movs	r2, #0
 8003156:	5e9b      	ldrsh	r3, [r3, r2]
 8003158:	b29b      	uxth	r3, r3
 800315a:	3301      	adds	r3, #1
 800315c:	b29a      	uxth	r2, r3
 800315e:	183b      	adds	r3, r7, r0
 8003160:	801a      	strh	r2, [r3, #0]
 8003162:	2334      	movs	r3, #52	@ 0x34
 8003164:	18fb      	adds	r3, r7, r3
 8003166:	2200      	movs	r2, #0
 8003168:	5e9b      	ldrsh	r3, [r3, r2]
 800316a:	2b00      	cmp	r3, #0
 800316c:	da00      	bge.n	8003170 <printStates+0x130>
 800316e:	3301      	adds	r3, #1
 8003170:	105b      	asrs	r3, r3, #1
 8003172:	b21b      	sxth	r3, r3
 8003174:	2236      	movs	r2, #54	@ 0x36
 8003176:	18ba      	adds	r2, r7, r2
 8003178:	2100      	movs	r1, #0
 800317a:	5e52      	ldrsh	r2, [r2, r1]
 800317c:	429a      	cmp	r2, r3
 800317e:	dbc2      	blt.n	8003106 <printStates+0xc6>
	    }
		if (x_str[0]=='\0')
 8003180:	230c      	movs	r3, #12
 8003182:	18fb      	adds	r3, r7, r3
 8003184:	781b      	ldrb	r3, [r3, #0]
 8003186:	2b00      	cmp	r3, #0
 8003188:	d104      	bne.n	8003194 <printStates+0x154>
		{
			TransmitString_TII("0");
 800318a:	4b07      	ldr	r3, [pc, #28]	@ (80031a8 <printStates+0x168>)
 800318c:	0018      	movs	r0, r3
 800318e:	f000 faf1 	bl	8003774 <TransmitString_TII>
		}
		else
		{
			TransmitString_TII(x_str);
		}
}
 8003192:	e004      	b.n	800319e <printStates+0x15e>
			TransmitString_TII(x_str);
 8003194:	230c      	movs	r3, #12
 8003196:	18fb      	adds	r3, r7, r3
 8003198:	0018      	movs	r0, r3
 800319a:	f000 faeb 	bl	8003774 <TransmitString_TII>
}
 800319e:	46c0      	nop			@ (mov r8, r8)
 80031a0:	46bd      	mov	sp, r7
 80031a2:	b00f      	add	sp, #60	@ 0x3c
 80031a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80031a6:	46c0      	nop			@ (mov r8, r8)
 80031a8:	08004990 	.word	0x08004990

080031ac <main>:
  * Brief  Main program.
  * Param  None
  * Return None
  */
int main(void)
{
 80031ac:	b590      	push	{r4, r7, lr}
 80031ae:	b091      	sub	sp, #68	@ 0x44
 80031b0:	af00      	add	r7, sp, #0
     * file (startup_stm32f072xb.s) before to branch to application main.
     * To reconfigure the default setting of SystemInit() function, refer to
     * system_stm32f0xx.c file
     */

	SysTick_Config(80000); // 8MHz / 8000 = 1000 Hz = 1ms, SysTick interrupt every 1ms(System runs on 8MHz)
 80031b2:	4b67      	ldr	r3, [pc, #412]	@ (8003350 <main+0x1a4>)
 80031b4:	0018      	movs	r0, r3
 80031b6:	f7ff feb7 	bl	8002f28 <SysTick_Config>

	Configure_GlobalClock();
 80031ba:	f7ff fdcb 	bl	8002d54 <Configure_GlobalClock>

    ConfigureGPIO();
 80031be:	f000 f8df 	bl	8003380 <ConfigureGPIO>
    ConfigureExternalIT();
 80031c2:	f000 f8f5 	bl	80033b0 <ConfigureExternalIT>
    ConfigureGPIO_TII(); // Used for monitoring the component
 80031c6:	f000 fa3f 	bl	8003648 <ConfigureGPIO_TII>
    Configure_TII();
 80031ca:	f000 fa63 	bl	8003694 <Configure_TII>
    Configure_CNI(); // For master-node communication
 80031ce:	f7ff fb97 	bl	8002900 <Configure_CNI>
    Configure_FakeSensor();
 80031d2:	f7ff fdab 	bl	8002d2c <Configure_FakeSensor>

    AdaptiveController_initialize();
 80031d6:	f7ff fad3 	bl	8002780 <AdaptiveController_initialize>

    TransmitString_TII("Controller\r\n");
 80031da:	4b5e      	ldr	r3, [pc, #376]	@ (8003354 <main+0x1a8>)
 80031dc:	0018      	movs	r0, r3
 80031de:	f000 fac9 	bl	8003774 <TransmitString_TII>

    while(1) // Infinite loop
    {
    	if(mode == MASTER)
 80031e2:	4b5d      	ldr	r3, [pc, #372]	@ (8003358 <main+0x1ac>)
 80031e4:	781b      	ldrb	r3, [r3, #0]
 80031e6:	b2db      	uxtb	r3, r3
 80031e8:	2b01      	cmp	r3, #1
 80031ea:	d000      	beq.n	80031ee <main+0x42>
 80031ec:	e0a4      	b.n	8003338 <main+0x18c>
    	{
    		IncomingMessageHandler_CNI();
 80031ee:	f7ff fbab 	bl	8002948 <IncomingMessageHandler_CNI>
    		AdaptiveController_step();
 80031f2:	f7ff f901 	bl	80023f8 <AdaptiveController_step>
    		observation_t obs =
 80031f6:	003b      	movs	r3, r7
 80031f8:	4a58      	ldr	r2, [pc, #352]	@ (800335c <main+0x1b0>)
 80031fa:	ca13      	ldmia	r2!, {r0, r1, r4}
 80031fc:	c313      	stmia	r3!, {r0, r1, r4}
 80031fe:	6812      	ldr	r2, [r2, #0]
 8003200:	601a      	str	r2, [r3, #0]
    			{"reference clock", Get_GlobalClock(), Get_GlobalClock()};
 8003202:	f7ff fdb1 	bl	8002d68 <Get_GlobalClock>
 8003206:	0002      	movs	r2, r0
    		observation_t obs =
 8003208:	003b      	movs	r3, r7
 800320a:	611a      	str	r2, [r3, #16]
    			{"reference clock", Get_GlobalClock(), Get_GlobalClock()};
 800320c:	f7ff fdac 	bl	8002d68 <Get_GlobalClock>
 8003210:	0003      	movs	r3, r0
    		observation_t obs =
 8003212:	0018      	movs	r0, r3
 8003214:	f7ff f8ae 	bl	8002374 <__aeabi_ui2d>
 8003218:	0002      	movs	r2, r0
 800321a:	000b      	movs	r3, r1
 800321c:	0039      	movs	r1, r7
 800321e:	618a      	str	r2, [r1, #24]
 8003220:	61cb      	str	r3, [r1, #28]
    		// WCCOM = 1/9600 * nof bits in frame * sizeof(observation_t)
    		//       = 1/9600 * (1 + 8 + 1) * (16 + 4 + 4)
    		//       = 1/9600 * (10) * (24)
    		//       = 25ms
    		// ----------------------------------------------------------- STOP
    		obs.time += 1;
 8003222:	003b      	movs	r3, r7
 8003224:	691b      	ldr	r3, [r3, #16]
 8003226:	1c5a      	adds	r2, r3, #1
 8003228:	003b      	movs	r3, r7
 800322a:	611a      	str	r2, [r3, #16]
    		obs.val += 1;
 800322c:	003b      	movs	r3, r7
 800322e:	6998      	ldr	r0, [r3, #24]
 8003230:	69d9      	ldr	r1, [r3, #28]
 8003232:	2200      	movs	r2, #0
 8003234:	4b4a      	ldr	r3, [pc, #296]	@ (8003360 <main+0x1b4>)
 8003236:	f7fd f943 	bl	80004c0 <__aeabi_dadd>
 800323a:	0002      	movs	r2, r0
 800323c:	000b      	movs	r3, r1
 800323e:	0039      	movs	r1, r7
 8003240:	618a      	str	r2, [r1, #24]
 8003242:	61cb      	str	r3, [r1, #28]

    		// Transmit the observation message
    		TransmitMessage_CNI(&obs);
 8003244:	003b      	movs	r3, r7
 8003246:	0018      	movs	r0, r3
 8003248:	f7ff fb63 	bl	8002912 <TransmitMessage_CNI>

			statesToInt(rtU.referenceThetaDoubleDot);        // Show set point
 800324c:	4b45      	ldr	r3, [pc, #276]	@ (8003364 <main+0x1b8>)
 800324e:	699a      	ldr	r2, [r3, #24]
 8003250:	69db      	ldr	r3, [r3, #28]
 8003252:	0010      	movs	r0, r2
 8003254:	0019      	movs	r1, r3
 8003256:	f7ff fe8b 	bl	8002f70 <statesToInt>
			TransmitString_TII(" ");
 800325a:	4b43      	ldr	r3, [pc, #268]	@ (8003368 <main+0x1bc>)
 800325c:	0018      	movs	r0, r3
 800325e:	f000 fa89 	bl	8003774 <TransmitString_TII>
			statesToInt(rtY.control);     		 // torque
 8003262:	4b42      	ldr	r3, [pc, #264]	@ (800336c <main+0x1c0>)
 8003264:	681a      	ldr	r2, [r3, #0]
 8003266:	685b      	ldr	r3, [r3, #4]
 8003268:	0010      	movs	r0, r2
 800326a:	0019      	movs	r1, r3
 800326c:	f7ff fe80 	bl	8002f70 <statesToInt>
			TransmitString_TII(" ");
 8003270:	4b3d      	ldr	r3, [pc, #244]	@ (8003368 <main+0x1bc>)
 8003272:	0018      	movs	r0, r3
 8003274:	f000 fa7e 	bl	8003774 <TransmitString_TII>
    		statesToInt(rtU.thetaDoubleDot);     // Angular acceleration
 8003278:	4b3a      	ldr	r3, [pc, #232]	@ (8003364 <main+0x1b8>)
 800327a:	691a      	ldr	r2, [r3, #16]
 800327c:	695b      	ldr	r3, [r3, #20]
 800327e:	0010      	movs	r0, r2
 8003280:	0019      	movs	r1, r3
 8003282:	f7ff fe75 	bl	8002f70 <statesToInt>
    		TransmitString_TII(" ");
 8003286:	4b38      	ldr	r3, [pc, #224]	@ (8003368 <main+0x1bc>)
 8003288:	0018      	movs	r0, r3
 800328a:	f000 fa73 	bl	8003774 <TransmitString_TII>
    		statesToInt(rtU.thetaDot);           // Angular velocity
 800328e:	4b35      	ldr	r3, [pc, #212]	@ (8003364 <main+0x1b8>)
 8003290:	689a      	ldr	r2, [r3, #8]
 8003292:	68db      	ldr	r3, [r3, #12]
 8003294:	0010      	movs	r0, r2
 8003296:	0019      	movs	r1, r3
 8003298:	f7ff fe6a 	bl	8002f70 <statesToInt>
    		TransmitString_TII(" ");
 800329c:	4b32      	ldr	r3, [pc, #200]	@ (8003368 <main+0x1bc>)
 800329e:	0018      	movs	r0, r3
 80032a0:	f000 fa68 	bl	8003774 <TransmitString_TII>
    		statesToInt(rtU.theta);              // Angular position
 80032a4:	4b2f      	ldr	r3, [pc, #188]	@ (8003364 <main+0x1b8>)
 80032a6:	681a      	ldr	r2, [r3, #0]
 80032a8:	685b      	ldr	r3, [r3, #4]
 80032aa:	0010      	movs	r0, r2
 80032ac:	0019      	movs	r1, r3
 80032ae:	f7ff fe5f 	bl	8002f70 <statesToInt>
    		TransmitString_TII(" ");
 80032b2:	4b2d      	ldr	r3, [pc, #180]	@ (8003368 <main+0x1bc>)
 80032b4:	0018      	movs	r0, r3
 80032b6:	f000 fa5d 	bl	8003774 <TransmitString_TII>
    		statesToInt((double)Get_GlobalClock());        // Show global clock
 80032ba:	f7ff fd55 	bl	8002d68 <Get_GlobalClock>
 80032be:	0003      	movs	r3, r0
 80032c0:	0018      	movs	r0, r3
 80032c2:	f7ff f857 	bl	8002374 <__aeabi_ui2d>
 80032c6:	0002      	movs	r2, r0
 80032c8:	000b      	movs	r3, r1
 80032ca:	0010      	movs	r0, r2
 80032cc:	0019      	movs	r1, r3
 80032ce:	f7ff fe4f 	bl	8002f70 <statesToInt>

    		TransmitString_TII("\r\n");
 80032d2:	4b27      	ldr	r3, [pc, #156]	@ (8003370 <main+0x1c4>)
 80032d4:	0018      	movs	r0, r3
 80032d6:	f000 fa4d 	bl	8003774 <TransmitString_TII>

			observation_t obss =
 80032da:	2420      	movs	r4, #32
 80032dc:	1939      	adds	r1, r7, r4
 80032de:	4a25      	ldr	r2, [pc, #148]	@ (8003374 <main+0x1c8>)
 80032e0:	000b      	movs	r3, r1
 80032e2:	6810      	ldr	r0, [r2, #0]
 80032e4:	6018      	str	r0, [r3, #0]
 80032e6:	8890      	ldrh	r0, [r2, #4]
 80032e8:	8098      	strh	r0, [r3, #4]
 80032ea:	7992      	ldrb	r2, [r2, #6]
 80032ec:	719a      	strb	r2, [r3, #6]
 80032ee:	2307      	movs	r3, #7
 80032f0:	18cb      	adds	r3, r1, r3
 80032f2:	2209      	movs	r2, #9
 80032f4:	2100      	movs	r1, #0
 80032f6:	0018      	movs	r0, r3
 80032f8:	f000 faef 	bl	80038da <memset>
				{"torque", Get_GlobalClock(), (double)rtY.control};
 80032fc:	f7ff fd34 	bl	8002d68 <Get_GlobalClock>
 8003300:	0002      	movs	r2, r0
			observation_t obss =
 8003302:	193b      	adds	r3, r7, r4
 8003304:	611a      	str	r2, [r3, #16]
				{"torque", Get_GlobalClock(), (double)rtY.control};
 8003306:	4b19      	ldr	r3, [pc, #100]	@ (800336c <main+0x1c0>)
 8003308:	681a      	ldr	r2, [r3, #0]
 800330a:	685b      	ldr	r3, [r3, #4]
			observation_t obss =
 800330c:	1939      	adds	r1, r7, r4
 800330e:	618a      	str	r2, [r1, #24]
 8003310:	61cb      	str	r3, [r1, #28]
			// State estimation is not possible, because there is no
			// mathematical relation between the global time and the fake
			// sensor's value

			// Transmit the observation message
			TransmitMessage_CNI(&obss);
 8003312:	193b      	adds	r3, r7, r4
 8003314:	0018      	movs	r0, r3
 8003316:	f7ff fafc 	bl	8002912 <TransmitMessage_CNI>
    	    if((local_tick % 1000) == 0) {
 800331a:	4b17      	ldr	r3, [pc, #92]	@ (8003378 <main+0x1cc>)
 800331c:	681b      	ldr	r3, [r3, #0]
 800331e:	22fa      	movs	r2, #250	@ 0xfa
 8003320:	0091      	lsls	r1, r2, #2
 8003322:	0018      	movs	r0, r3
 8003324:	f7fc ff80 	bl	8000228 <__aeabi_uidivmod>

        		// Send global clock observation message
        		// Read the RT image of the global clock

    	    }
    	    if((local_tick % 500) == 0){
 8003328:	4b13      	ldr	r3, [pc, #76]	@ (8003378 <main+0x1cc>)
 800332a:	681b      	ldr	r3, [r3, #0]
 800332c:	22fa      	movs	r2, #250	@ 0xfa
 800332e:	0051      	lsls	r1, r2, #1
 8003330:	0018      	movs	r0, r3
 8003332:	f7fc ff79 	bl	8000228 <__aeabi_uidivmod>
 8003336:	e754      	b.n	80031e2 <main+0x36>
    	{
			// Check if there are any messages


    		// Read the RT image of the fake sensor
    		if(Get_FakeSensorValue() == 1)
 8003338:	f7ff fd02 	bl	8002d40 <Get_FakeSensorValue>
 800333c:	0003      	movs	r3, r0
 800333e:	2b01      	cmp	r3, #1
 8003340:	d000      	beq.n	8003344 <main+0x198>
 8003342:	e74e      	b.n	80031e2 <main+0x36>
    		{
    			// Transmit message
    			TransmitString_TII("B1 clicked on master\r\n");
 8003344:	4b0d      	ldr	r3, [pc, #52]	@ (800337c <main+0x1d0>)
 8003346:	0018      	movs	r0, r3
 8003348:	f000 fa14 	bl	8003774 <TransmitString_TII>
    	if(mode == MASTER)
 800334c:	e749      	b.n	80031e2 <main+0x36>
 800334e:	46c0      	nop			@ (mov r8, r8)
 8003350:	00013880 	.word	0x00013880
 8003354:	08004994 	.word	0x08004994
 8003358:	20000000 	.word	0x20000000
 800335c:	080049c4 	.word	0x080049c4
 8003360:	3ff00000 	.word	0x3ff00000
 8003364:	20000048 	.word	0x20000048
 8003368:	080049a4 	.word	0x080049a4
 800336c:	20000068 	.word	0x20000068
 8003370:	080049a8 	.word	0x080049a8
 8003374:	080049d4 	.word	0x080049d4
 8003378:	2000027c 	.word	0x2000027c
 800337c:	080049ac 	.word	0x080049ac

08003380 <ConfigureGPIO>:
  *        - configures GPIO PA5 in output mode for the Green LED pin
  * Param  None
  * Return None
  */
inline void ConfigureGPIO(void)
{  
 8003380:	b580      	push	{r7, lr}
 8003382:	af00      	add	r7, sp, #0
    // 1. Enable the peripheral clock of GPIOA
    // 2. Select output mode (01) on PA5
    RCC->AHBENR |= RCC_AHBENR_GPIOAEN;
 8003384:	4b09      	ldr	r3, [pc, #36]	@ (80033ac <ConfigureGPIO+0x2c>)
 8003386:	695a      	ldr	r2, [r3, #20]
 8003388:	4b08      	ldr	r3, [pc, #32]	@ (80033ac <ConfigureGPIO+0x2c>)
 800338a:	2180      	movs	r1, #128	@ 0x80
 800338c:	0289      	lsls	r1, r1, #10
 800338e:	430a      	orrs	r2, r1
 8003390:	615a      	str	r2, [r3, #20]
    GPIOA->MODER |= GPIO_MODER_MODER5_0;
 8003392:	2390      	movs	r3, #144	@ 0x90
 8003394:	05db      	lsls	r3, r3, #23
 8003396:	681a      	ldr	r2, [r3, #0]
 8003398:	2390      	movs	r3, #144	@ 0x90
 800339a:	05db      	lsls	r3, r3, #23
 800339c:	2180      	movs	r1, #128	@ 0x80
 800339e:	00c9      	lsls	r1, r1, #3
 80033a0:	430a      	orrs	r2, r1
 80033a2:	601a      	str	r2, [r3, #0]
}
 80033a4:	46c0      	nop			@ (mov r8, r8)
 80033a6:	46bd      	mov	sp, r7
 80033a8:	bd80      	pop	{r7, pc}
 80033aa:	46c0      	nop			@ (mov r8, r8)
 80033ac:	40021000 	.word	0x40021000

080033b0 <ConfigureExternalIT>:
  *        - configures NVIC IRQ
  * Param  None
  * Return None
  */
inline void ConfigureExternalIT(void)
{  
 80033b0:	b580      	push	{r7, lr}
 80033b2:	af00      	add	r7, sp, #0
    // 1. Enable the peripheral clock of SYSCFG
    // 2. Enable the peripheral clock of GPIOC
    // 3. Select PORTC for EXTI13 by writing 0010 in SYSCFG_EXTICR4
    // 4. Configure the corresponding mask bit in the EXTI_IMR register
    // 5. Configure the Trigger Selection bits on falling edge
    RCC->APB2ENR |= RCC_APB2ENR_SYSCFGCOMPEN;
 80033b4:	4b15      	ldr	r3, [pc, #84]	@ (800340c <ConfigureExternalIT+0x5c>)
 80033b6:	699a      	ldr	r2, [r3, #24]
 80033b8:	4b14      	ldr	r3, [pc, #80]	@ (800340c <ConfigureExternalIT+0x5c>)
 80033ba:	2101      	movs	r1, #1
 80033bc:	430a      	orrs	r2, r1
 80033be:	619a      	str	r2, [r3, #24]
    RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 80033c0:	4b12      	ldr	r3, [pc, #72]	@ (800340c <ConfigureExternalIT+0x5c>)
 80033c2:	695a      	ldr	r2, [r3, #20]
 80033c4:	4b11      	ldr	r3, [pc, #68]	@ (800340c <ConfigureExternalIT+0x5c>)
 80033c6:	2180      	movs	r1, #128	@ 0x80
 80033c8:	0309      	lsls	r1, r1, #12
 80033ca:	430a      	orrs	r2, r1
 80033cc:	615a      	str	r2, [r3, #20]
    SYSCFG->EXTICR[3] |= SYSCFG_EXTICR4_EXTI13_PC;
 80033ce:	4b10      	ldr	r3, [pc, #64]	@ (8003410 <ConfigureExternalIT+0x60>)
 80033d0:	695a      	ldr	r2, [r3, #20]
 80033d2:	4b0f      	ldr	r3, [pc, #60]	@ (8003410 <ConfigureExternalIT+0x60>)
 80033d4:	2120      	movs	r1, #32
 80033d6:	430a      	orrs	r2, r1
 80033d8:	615a      	str	r2, [r3, #20]
    EXTI->IMR |= EXTI_IMR_MR13;
 80033da:	4b0e      	ldr	r3, [pc, #56]	@ (8003414 <ConfigureExternalIT+0x64>)
 80033dc:	681a      	ldr	r2, [r3, #0]
 80033de:	4b0d      	ldr	r3, [pc, #52]	@ (8003414 <ConfigureExternalIT+0x64>)
 80033e0:	2180      	movs	r1, #128	@ 0x80
 80033e2:	0189      	lsls	r1, r1, #6
 80033e4:	430a      	orrs	r2, r1
 80033e6:	601a      	str	r2, [r3, #0]
    EXTI->FTSR |= EXTI_FTSR_TR13;
 80033e8:	4b0a      	ldr	r3, [pc, #40]	@ (8003414 <ConfigureExternalIT+0x64>)
 80033ea:	68da      	ldr	r2, [r3, #12]
 80033ec:	4b09      	ldr	r3, [pc, #36]	@ (8003414 <ConfigureExternalIT+0x64>)
 80033ee:	2180      	movs	r1, #128	@ 0x80
 80033f0:	0189      	lsls	r1, r1, #6
 80033f2:	430a      	orrs	r2, r1
 80033f4:	60da      	str	r2, [r3, #12]

    // Configure NVIC for External Interrupt
    // 6. Set priority for EXTI4_15
    // 7. Enable Interrupt on EXTI4_15
    NVIC_SetPriority(EXTI4_15_IRQn, 3);
 80033f6:	2103      	movs	r1, #3
 80033f8:	2007      	movs	r0, #7
 80033fa:	f7ff fd27 	bl	8002e4c <__NVIC_SetPriority>
    NVIC_EnableIRQ(EXTI4_15_IRQn);
 80033fe:	2007      	movs	r0, #7
 8003400:	f7ff fd0a 	bl	8002e18 <__NVIC_EnableIRQ>
}
 8003404:	46c0      	nop			@ (mov r8, r8)
 8003406:	46bd      	mov	sp, r7
 8003408:	bd80      	pop	{r7, pc}
 800340a:	46c0      	nop			@ (mov r8, r8)
 800340c:	40021000 	.word	0x40021000
 8003410:	40010000 	.word	0x40010000
 8003414:	40010400 	.word	0x40010400

08003418 <NMI_Handler>:
  * Brief  This function handles NMI exception.
  * Param  None
  * Return None
  */
void NMI_Handler(void)
{
 8003418:	b580      	push	{r7, lr}
 800341a:	af00      	add	r7, sp, #0
}
 800341c:	46c0      	nop			@ (mov r8, r8)
 800341e:	46bd      	mov	sp, r7
 8003420:	bd80      	pop	{r7, pc}

08003422 <HardFault_Handler>:
  * Brief  This function handles Hard Fault exception.
  * Param  None
  * Return None
  */
void HardFault_Handler(void)
{
 8003422:	b580      	push	{r7, lr}
 8003424:	af00      	add	r7, sp, #0
    // Go to infinite loop when Hard Fault exception occurs
    while (1)
 8003426:	46c0      	nop			@ (mov r8, r8)
 8003428:	e7fd      	b.n	8003426 <HardFault_Handler+0x4>

0800342a <SVC_Handler>:
  * Brief  This function handles SVCall exception.
  * Param  None
  * Return None
  */
void SVC_Handler(void)
{
 800342a:	b580      	push	{r7, lr}
 800342c:	af00      	add	r7, sp, #0
}
 800342e:	46c0      	nop			@ (mov r8, r8)
 8003430:	46bd      	mov	sp, r7
 8003432:	bd80      	pop	{r7, pc}

08003434 <PendSV_Handler>:
  * Brief  This function handles PendSVC exception.
  * Param  None
  * Return None
  */
void PendSV_Handler(void)
{
 8003434:	b580      	push	{r7, lr}
 8003436:	af00      	add	r7, sp, #0
}
 8003438:	46c0      	nop			@ (mov r8, r8)
 800343a:	46bd      	mov	sp, r7
 800343c:	bd80      	pop	{r7, pc}
	...

08003440 <SysTick_Handler>:
  * Brief  This function handles SysTick exception.
  * Param  None
  * Return None
  */
void SysTick_Handler(void)
{
 8003440:	b580      	push	{r7, lr}
 8003442:	af00      	add	r7, sp, #0
	// Increment local clock every 1ms
	local_tick++;
 8003444:	4b08      	ldr	r3, [pc, #32]	@ (8003468 <SysTick_Handler+0x28>)
 8003446:	681b      	ldr	r3, [r3, #0]
 8003448:	1c5a      	adds	r2, r3, #1
 800344a:	4b07      	ldr	r3, [pc, #28]	@ (8003468 <SysTick_Handler+0x28>)
 800344c:	601a      	str	r2, [r3, #0]

	// Increment global clock every 50ms
	if((local_tick % 50) == 0)
 800344e:	4b06      	ldr	r3, [pc, #24]	@ (8003468 <SysTick_Handler+0x28>)
 8003450:	681b      	ldr	r3, [r3, #0]
 8003452:	2132      	movs	r1, #50	@ 0x32
 8003454:	0018      	movs	r0, r3
 8003456:	f7fc fee7 	bl	8000228 <__aeabi_uidivmod>
 800345a:	1e0b      	subs	r3, r1, #0
 800345c:	d101      	bne.n	8003462 <SysTick_Handler+0x22>
	{
		// Write the RT image of the global clock
		Inc_GlobalClock();
 800345e:	f7ff fcb5 	bl	8002dcc <Inc_GlobalClock>
	}
}
 8003462:	46c0      	nop			@ (mov r8, r8)
 8003464:	46bd      	mov	sp, r7
 8003466:	bd80      	pop	{r7, pc}
 8003468:	2000027c 	.word	0x2000027c

0800346c <EXTI4_15_IRQHandler>:
  * Brief  This function handles EXTI4_15 interrupt request.
  * Param  None
  * Return None
  */
void EXTI4_15_IRQHandler(void)
{
 800346c:	b580      	push	{r7, lr}
 800346e:	af00      	add	r7, sp, #0
    // Check line 13 has triggered the IT
    if ((EXTI->PR & EXTI_PR_PR13) != 0)
 8003470:	4b19      	ldr	r3, [pc, #100]	@ (80034d8 <EXTI4_15_IRQHandler+0x6c>)
 8003472:	695a      	ldr	r2, [r3, #20]
 8003474:	2380      	movs	r3, #128	@ 0x80
 8003476:	019b      	lsls	r3, r3, #6
 8003478:	4013      	ands	r3, r2
 800347a:	d029      	beq.n	80034d0 <EXTI4_15_IRQHandler+0x64>
    {
    if (setPointOn==0)
 800347c:	4b17      	ldr	r3, [pc, #92]	@ (80034dc <EXTI4_15_IRQHandler+0x70>)
 800347e:	781b      	ldrb	r3, [r3, #0]
 8003480:	b2db      	uxtb	r3, r3
 8003482:	2201      	movs	r2, #1
 8003484:	4053      	eors	r3, r2
 8003486:	b2db      	uxtb	r3, r3
 8003488:	2b00      	cmp	r3, #0
 800348a:	d008      	beq.n	800349e <EXTI4_15_IRQHandler+0x32>
    {
    	setPointOn = 1;
 800348c:	4b13      	ldr	r3, [pc, #76]	@ (80034dc <EXTI4_15_IRQHandler+0x70>)
 800348e:	2201      	movs	r2, #1
 8003490:	701a      	strb	r2, [r3, #0]
    	rtU.referenceThetaDoubleDot = 1;
 8003492:	4913      	ldr	r1, [pc, #76]	@ (80034e0 <EXTI4_15_IRQHandler+0x74>)
 8003494:	2200      	movs	r2, #0
 8003496:	4b13      	ldr	r3, [pc, #76]	@ (80034e4 <EXTI4_15_IRQHandler+0x78>)
 8003498:	618a      	str	r2, [r1, #24]
 800349a:	61cb      	str	r3, [r1, #28]
 800349c:	e00c      	b.n	80034b8 <EXTI4_15_IRQHandler+0x4c>
    }
    else if (setPointOn==1)
 800349e:	4b0f      	ldr	r3, [pc, #60]	@ (80034dc <EXTI4_15_IRQHandler+0x70>)
 80034a0:	781b      	ldrb	r3, [r3, #0]
 80034a2:	b2db      	uxtb	r3, r3
 80034a4:	2b00      	cmp	r3, #0
 80034a6:	d007      	beq.n	80034b8 <EXTI4_15_IRQHandler+0x4c>
    {
    	setPointOn=0;
 80034a8:	4b0c      	ldr	r3, [pc, #48]	@ (80034dc <EXTI4_15_IRQHandler+0x70>)
 80034aa:	2200      	movs	r2, #0
 80034ac:	701a      	strb	r2, [r3, #0]
    	rtU.referenceThetaDoubleDot = 0;
 80034ae:	490c      	ldr	r1, [pc, #48]	@ (80034e0 <EXTI4_15_IRQHandler+0x74>)
 80034b0:	2200      	movs	r2, #0
 80034b2:	2300      	movs	r3, #0
 80034b4:	618a      	str	r2, [r1, #24]
 80034b6:	61cb      	str	r3, [r1, #28]
    }

        // Toggle the green LED
        GPIOA->ODR ^= GPIO_ODR_5;
 80034b8:	2390      	movs	r3, #144	@ 0x90
 80034ba:	05db      	lsls	r3, r3, #23
 80034bc:	695a      	ldr	r2, [r3, #20]
 80034be:	2390      	movs	r3, #144	@ 0x90
 80034c0:	05db      	lsls	r3, r3, #23
 80034c2:	2120      	movs	r1, #32
 80034c4:	404a      	eors	r2, r1
 80034c6:	615a      	str	r2, [r3, #20]

        // Clear the pending bit
        EXTI->PR = EXTI_PR_PR13;
 80034c8:	4b03      	ldr	r3, [pc, #12]	@ (80034d8 <EXTI4_15_IRQHandler+0x6c>)
 80034ca:	2280      	movs	r2, #128	@ 0x80
 80034cc:	0192      	lsls	r2, r2, #6
 80034ce:	615a      	str	r2, [r3, #20]
    else // Should never occur
    {
        ;
    }

}
 80034d0:	46c0      	nop			@ (mov r8, r8)
 80034d2:	46bd      	mov	sp, r7
 80034d4:	bd80      	pop	{r7, pc}
 80034d6:	46c0      	nop			@ (mov r8, r8)
 80034d8:	40010400 	.word	0x40010400
 80034dc:	20000280 	.word	0x20000280
 80034e0:	20000048 	.word	0x20000048
 80034e4:	3ff00000 	.word	0x3ff00000

080034e8 <SystemInit>:
  * @brief  Setup the microcontroller system
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80034e8:	b580      	push	{r7, lr}
 80034ea:	af00      	add	r7, sp, #0
                         before branch to main program. This call is made inside
                         the "startup_stm32f0xx.s" file.
                         User can setups the default system clock (System clock source, PLL Multiplier
                         and Divider factors, AHB/APBx prescalers and Flash settings).
   */
}
 80034ec:	46c0      	nop			@ (mov r8, r8)
 80034ee:	46bd      	mov	sp, r7
 80034f0:	bd80      	pop	{r7, pc}
	...

080034f4 <__NVIC_EnableIRQ>:
{
 80034f4:	b580      	push	{r7, lr}
 80034f6:	b082      	sub	sp, #8
 80034f8:	af00      	add	r7, sp, #0
 80034fa:	0002      	movs	r2, r0
 80034fc:	1dfb      	adds	r3, r7, #7
 80034fe:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 8003500:	1dfb      	adds	r3, r7, #7
 8003502:	781b      	ldrb	r3, [r3, #0]
 8003504:	2b7f      	cmp	r3, #127	@ 0x7f
 8003506:	d809      	bhi.n	800351c <__NVIC_EnableIRQ+0x28>
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003508:	1dfb      	adds	r3, r7, #7
 800350a:	781b      	ldrb	r3, [r3, #0]
 800350c:	001a      	movs	r2, r3
 800350e:	231f      	movs	r3, #31
 8003510:	401a      	ands	r2, r3
 8003512:	4b04      	ldr	r3, [pc, #16]	@ (8003524 <__NVIC_EnableIRQ+0x30>)
 8003514:	2101      	movs	r1, #1
 8003516:	4091      	lsls	r1, r2
 8003518:	000a      	movs	r2, r1
 800351a:	601a      	str	r2, [r3, #0]
}
 800351c:	46c0      	nop			@ (mov r8, r8)
 800351e:	46bd      	mov	sp, r7
 8003520:	b002      	add	sp, #8
 8003522:	bd80      	pop	{r7, pc}
 8003524:	e000e100 	.word	0xe000e100

08003528 <__NVIC_DisableIRQ>:
{
 8003528:	b580      	push	{r7, lr}
 800352a:	b082      	sub	sp, #8
 800352c:	af00      	add	r7, sp, #0
 800352e:	0002      	movs	r2, r0
 8003530:	1dfb      	adds	r3, r7, #7
 8003532:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 8003534:	1dfb      	adds	r3, r7, #7
 8003536:	781b      	ldrb	r3, [r3, #0]
 8003538:	2b7f      	cmp	r3, #127	@ 0x7f
 800353a:	d810      	bhi.n	800355e <__NVIC_DisableIRQ+0x36>
    NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800353c:	1dfb      	adds	r3, r7, #7
 800353e:	781b      	ldrb	r3, [r3, #0]
 8003540:	001a      	movs	r2, r3
 8003542:	231f      	movs	r3, #31
 8003544:	4013      	ands	r3, r2
 8003546:	4908      	ldr	r1, [pc, #32]	@ (8003568 <__NVIC_DisableIRQ+0x40>)
 8003548:	2201      	movs	r2, #1
 800354a:	409a      	lsls	r2, r3
 800354c:	0013      	movs	r3, r2
 800354e:	2280      	movs	r2, #128	@ 0x80
 8003550:	508b      	str	r3, [r1, r2]
  __ASM volatile ("dsb 0xF":::"memory");
 8003552:	f3bf 8f4f 	dsb	sy
}
 8003556:	46c0      	nop			@ (mov r8, r8)
  __ASM volatile ("isb 0xF":::"memory");
 8003558:	f3bf 8f6f 	isb	sy
}
 800355c:	46c0      	nop			@ (mov r8, r8)
}
 800355e:	46c0      	nop			@ (mov r8, r8)
 8003560:	46bd      	mov	sp, r7
 8003562:	b002      	add	sp, #8
 8003564:	bd80      	pop	{r7, pc}
 8003566:	46c0      	nop			@ (mov r8, r8)
 8003568:	e000e100 	.word	0xe000e100

0800356c <__NVIC_SetPriority>:
{
 800356c:	b590      	push	{r4, r7, lr}
 800356e:	b083      	sub	sp, #12
 8003570:	af00      	add	r7, sp, #0
 8003572:	0002      	movs	r2, r0
 8003574:	6039      	str	r1, [r7, #0]
 8003576:	1dfb      	adds	r3, r7, #7
 8003578:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 800357a:	1dfb      	adds	r3, r7, #7
 800357c:	781b      	ldrb	r3, [r3, #0]
 800357e:	2b7f      	cmp	r3, #127	@ 0x7f
 8003580:	d828      	bhi.n	80035d4 <__NVIC_SetPriority+0x68>
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003582:	4a2f      	ldr	r2, [pc, #188]	@ (8003640 <__NVIC_SetPriority+0xd4>)
 8003584:	1dfb      	adds	r3, r7, #7
 8003586:	781b      	ldrb	r3, [r3, #0]
 8003588:	b25b      	sxtb	r3, r3
 800358a:	089b      	lsrs	r3, r3, #2
 800358c:	33c0      	adds	r3, #192	@ 0xc0
 800358e:	009b      	lsls	r3, r3, #2
 8003590:	589b      	ldr	r3, [r3, r2]
 8003592:	1dfa      	adds	r2, r7, #7
 8003594:	7812      	ldrb	r2, [r2, #0]
 8003596:	0011      	movs	r1, r2
 8003598:	2203      	movs	r2, #3
 800359a:	400a      	ands	r2, r1
 800359c:	00d2      	lsls	r2, r2, #3
 800359e:	21ff      	movs	r1, #255	@ 0xff
 80035a0:	4091      	lsls	r1, r2
 80035a2:	000a      	movs	r2, r1
 80035a4:	43d2      	mvns	r2, r2
 80035a6:	401a      	ands	r2, r3
 80035a8:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 80035aa:	683b      	ldr	r3, [r7, #0]
 80035ac:	019b      	lsls	r3, r3, #6
 80035ae:	22ff      	movs	r2, #255	@ 0xff
 80035b0:	401a      	ands	r2, r3
 80035b2:	1dfb      	adds	r3, r7, #7
 80035b4:	781b      	ldrb	r3, [r3, #0]
 80035b6:	0018      	movs	r0, r3
 80035b8:	2303      	movs	r3, #3
 80035ba:	4003      	ands	r3, r0
 80035bc:	00db      	lsls	r3, r3, #3
 80035be:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80035c0:	481f      	ldr	r0, [pc, #124]	@ (8003640 <__NVIC_SetPriority+0xd4>)
 80035c2:	1dfb      	adds	r3, r7, #7
 80035c4:	781b      	ldrb	r3, [r3, #0]
 80035c6:	b25b      	sxtb	r3, r3
 80035c8:	089b      	lsrs	r3, r3, #2
 80035ca:	430a      	orrs	r2, r1
 80035cc:	33c0      	adds	r3, #192	@ 0xc0
 80035ce:	009b      	lsls	r3, r3, #2
 80035d0:	501a      	str	r2, [r3, r0]
}
 80035d2:	e031      	b.n	8003638 <__NVIC_SetPriority+0xcc>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80035d4:	4a1b      	ldr	r2, [pc, #108]	@ (8003644 <__NVIC_SetPriority+0xd8>)
 80035d6:	1dfb      	adds	r3, r7, #7
 80035d8:	781b      	ldrb	r3, [r3, #0]
 80035da:	0019      	movs	r1, r3
 80035dc:	230f      	movs	r3, #15
 80035de:	400b      	ands	r3, r1
 80035e0:	3b08      	subs	r3, #8
 80035e2:	089b      	lsrs	r3, r3, #2
 80035e4:	3306      	adds	r3, #6
 80035e6:	009b      	lsls	r3, r3, #2
 80035e8:	18d3      	adds	r3, r2, r3
 80035ea:	3304      	adds	r3, #4
 80035ec:	681b      	ldr	r3, [r3, #0]
 80035ee:	1dfa      	adds	r2, r7, #7
 80035f0:	7812      	ldrb	r2, [r2, #0]
 80035f2:	0011      	movs	r1, r2
 80035f4:	2203      	movs	r2, #3
 80035f6:	400a      	ands	r2, r1
 80035f8:	00d2      	lsls	r2, r2, #3
 80035fa:	21ff      	movs	r1, #255	@ 0xff
 80035fc:	4091      	lsls	r1, r2
 80035fe:	000a      	movs	r2, r1
 8003600:	43d2      	mvns	r2, r2
 8003602:	401a      	ands	r2, r3
 8003604:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8003606:	683b      	ldr	r3, [r7, #0]
 8003608:	019b      	lsls	r3, r3, #6
 800360a:	22ff      	movs	r2, #255	@ 0xff
 800360c:	401a      	ands	r2, r3
 800360e:	1dfb      	adds	r3, r7, #7
 8003610:	781b      	ldrb	r3, [r3, #0]
 8003612:	0018      	movs	r0, r3
 8003614:	2303      	movs	r3, #3
 8003616:	4003      	ands	r3, r0
 8003618:	00db      	lsls	r3, r3, #3
 800361a:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 800361c:	4809      	ldr	r0, [pc, #36]	@ (8003644 <__NVIC_SetPriority+0xd8>)
 800361e:	1dfb      	adds	r3, r7, #7
 8003620:	781b      	ldrb	r3, [r3, #0]
 8003622:	001c      	movs	r4, r3
 8003624:	230f      	movs	r3, #15
 8003626:	4023      	ands	r3, r4
 8003628:	3b08      	subs	r3, #8
 800362a:	089b      	lsrs	r3, r3, #2
 800362c:	430a      	orrs	r2, r1
 800362e:	3306      	adds	r3, #6
 8003630:	009b      	lsls	r3, r3, #2
 8003632:	18c3      	adds	r3, r0, r3
 8003634:	3304      	adds	r3, #4
 8003636:	601a      	str	r2, [r3, #0]
}
 8003638:	46c0      	nop			@ (mov r8, r8)
 800363a:	46bd      	mov	sp, r7
 800363c:	b003      	add	sp, #12
 800363e:	bd90      	pop	{r4, r7, pc}
 8003640:	e000e100 	.word	0xe000e100
 8003644:	e000ed00 	.word	0xe000ed00

08003648 <ConfigureGPIO_TII>:
           - Configures the UART pins on GPIO PA2 PA3
 * Param   None
 * Retval  None
 */
inline void ConfigureGPIO_TII(void)
{
 8003648:	b580      	push	{r7, lr}
 800364a:	af00      	add	r7, sp, #0
    // Enable the peripheral clock of GPIOA
    RCC->AHBENR |= RCC_AHBENR_GPIOAEN;
 800364c:	4b0f      	ldr	r3, [pc, #60]	@ (800368c <ConfigureGPIO_TII+0x44>)
 800364e:	695a      	ldr	r2, [r3, #20]
 8003650:	4b0e      	ldr	r3, [pc, #56]	@ (800368c <ConfigureGPIO_TII+0x44>)
 8003652:	2180      	movs	r1, #128	@ 0x80
 8003654:	0289      	lsls	r1, r1, #10
 8003656:	430a      	orrs	r2, r1
 8003658:	615a      	str	r2, [r3, #20]

    // GPIO configuration for UART signals
    // 1. Select AF mode (10) on PA2 and PA3
    // 2. AF1 for UART signals
    GPIOA->MODER = (GPIOA->MODER & ~(GPIO_MODER_MODER2 | GPIO_MODER_MODER3))
 800365a:	2390      	movs	r3, #144	@ 0x90
 800365c:	05db      	lsls	r3, r3, #23
 800365e:	681b      	ldr	r3, [r3, #0]
 8003660:	22f0      	movs	r2, #240	@ 0xf0
 8003662:	4393      	bics	r3, r2
 8003664:	001a      	movs	r2, r3
 8003666:	2390      	movs	r3, #144	@ 0x90
 8003668:	05db      	lsls	r3, r3, #23
            | (GPIO_MODER_MODER2_1 | GPIO_MODER_MODER3_1);
 800366a:	21a0      	movs	r1, #160	@ 0xa0
 800366c:	430a      	orrs	r2, r1
    GPIOA->MODER = (GPIOA->MODER & ~(GPIO_MODER_MODER2 | GPIO_MODER_MODER3))
 800366e:	601a      	str	r2, [r3, #0]
    GPIOA->AFR[0] = (GPIOA->AFR[0] & ~(GPIO_AFRL_AFRL2 | GPIO_AFRL_AFRL3))
 8003670:	2390      	movs	r3, #144	@ 0x90
 8003672:	05db      	lsls	r3, r3, #23
 8003674:	6a1b      	ldr	r3, [r3, #32]
 8003676:	4a06      	ldr	r2, [pc, #24]	@ (8003690 <ConfigureGPIO_TII+0x48>)
 8003678:	401a      	ands	r2, r3
 800367a:	2390      	movs	r3, #144	@ 0x90
 800367c:	05db      	lsls	r3, r3, #23
            | (1 << (2 * 4)) | (1 << (3 * 4));
 800367e:	2188      	movs	r1, #136	@ 0x88
 8003680:	0149      	lsls	r1, r1, #5
 8003682:	430a      	orrs	r2, r1
    GPIOA->AFR[0] = (GPIOA->AFR[0] & ~(GPIO_AFRL_AFRL2 | GPIO_AFRL_AFRL3))
 8003684:	621a      	str	r2, [r3, #32]
}
 8003686:	46c0      	nop			@ (mov r8, r8)
 8003688:	46bd      	mov	sp, r7
 800368a:	bd80      	pop	{r7, pc}
 800368c:	40021000 	.word	0x40021000
 8003690:	ffff00ff 	.word	0xffff00ff

08003694 <Configure_TII>:
 *         - 9600,8,n,1
 * Param   None
 * Retval  None
 */
inline void Configure_TII(void)
{
 8003694:	b580      	push	{r7, lr}
 8003696:	af00      	add	r7, sp, #0
    // Enable the peripheral clock UART
    RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
 8003698:	4b0e      	ldr	r3, [pc, #56]	@ (80036d4 <Configure_TII+0x40>)
 800369a:	69da      	ldr	r2, [r3, #28]
 800369c:	4b0d      	ldr	r3, [pc, #52]	@ (80036d4 <Configure_TII+0x40>)
 800369e:	2180      	movs	r1, #128	@ 0x80
 80036a0:	0289      	lsls	r1, r1, #10
 80036a2:	430a      	orrs	r2, r1
 80036a4:	61da      	str	r2, [r3, #28]

    // Configure UART
    // 1. Oversampling by 16, 9600 baud
    // 2. 8 data bit, 1 start bit, 1 stop bit, no parity,
    //     transmitter enable, receiver enable
    USART2->BRR = 833;
 80036a6:	4b0c      	ldr	r3, [pc, #48]	@ (80036d8 <Configure_TII+0x44>)
 80036a8:	4a0c      	ldr	r2, [pc, #48]	@ (80036dc <Configure_TII+0x48>)
 80036aa:	60da      	str	r2, [r3, #12]
    USART2->CR1 = USART_CR1_TE | USART_CR1_UE | USART_CR1_RXNEIE | USART_CR1_RE;
 80036ac:	4b0a      	ldr	r3, [pc, #40]	@ (80036d8 <Configure_TII+0x44>)
 80036ae:	222d      	movs	r2, #45	@ 0x2d
 80036b0:	601a      	str	r2, [r3, #0]

    // 3. Polling idle frame Transmission
    while ((USART2->ISR & USART_ISR_TC) != USART_ISR_TC)
 80036b2:	46c0      	nop			@ (mov r8, r8)
 80036b4:	4b08      	ldr	r3, [pc, #32]	@ (80036d8 <Configure_TII+0x44>)
 80036b6:	69db      	ldr	r3, [r3, #28]
 80036b8:	2240      	movs	r2, #64	@ 0x40
 80036ba:	4013      	ands	r3, r2
 80036bc:	2b40      	cmp	r3, #64	@ 0x40
 80036be:	d1f9      	bne.n	80036b4 <Configure_TII+0x20>
    }

    // Configure IT
    // 4. Set priority for UART_IRQn
    // 5. Enable UART_IRQn
    NVIC_SetPriority(USART2_IRQn, 0);
 80036c0:	2100      	movs	r1, #0
 80036c2:	201c      	movs	r0, #28
 80036c4:	f7ff ff52 	bl	800356c <__NVIC_SetPriority>
    NVIC_EnableIRQ(USART2_IRQn);
 80036c8:	201c      	movs	r0, #28
 80036ca:	f7ff ff13 	bl	80034f4 <__NVIC_EnableIRQ>
}
 80036ce:	46c0      	nop			@ (mov r8, r8)
 80036d0:	46bd      	mov	sp, r7
 80036d2:	bd80      	pop	{r7, pc}
 80036d4:	40021000 	.word	0x40021000
 80036d8:	40004400 	.word	0x40004400
 80036dc:	00000341 	.word	0x00000341

080036e0 <TransmitByte_TII>:
    // Return data
    return UART_RxBuf[tmptail];
}

void TransmitByte_TII(char data)
{
 80036e0:	b580      	push	{r7, lr}
 80036e2:	b084      	sub	sp, #16
 80036e4:	af00      	add	r7, sp, #0
 80036e6:	0002      	movs	r2, r0
 80036e8:	1dfb      	adds	r3, r7, #7
 80036ea:	701a      	strb	r2, [r3, #0]
    uint32_t tmphead;

    // Calculate buffer index
    tmphead = (UART_TxHead + 1) & UART_TX_BUFFER_MASK;
 80036ec:	4b1d      	ldr	r3, [pc, #116]	@ (8003764 <TransmitByte_TII+0x84>)
 80036ee:	781b      	ldrb	r3, [r3, #0]
 80036f0:	b2db      	uxtb	r3, r3
 80036f2:	3301      	adds	r3, #1
 80036f4:	001a      	movs	r2, r3
 80036f6:	233f      	movs	r3, #63	@ 0x3f
 80036f8:	4013      	ands	r3, r2
 80036fa:	60fb      	str	r3, [r7, #12]

    // Wait for free space in buffer
    while (tmphead == UART_TxTail)
 80036fc:	46c0      	nop			@ (mov r8, r8)
 80036fe:	4b1a      	ldr	r3, [pc, #104]	@ (8003768 <TransmitByte_TII+0x88>)
 8003700:	781b      	ldrb	r3, [r3, #0]
 8003702:	b2db      	uxtb	r3, r3
 8003704:	001a      	movs	r2, r3
 8003706:	68fb      	ldr	r3, [r7, #12]
 8003708:	4293      	cmp	r3, r2
 800370a:	d0f8      	beq.n	80036fe <TransmitByte_TII+0x1e>
    {
        ;
    }

    // Store data in buffer
    UART_TxBuf[tmphead] = data;
 800370c:	4a17      	ldr	r2, [pc, #92]	@ (800376c <TransmitByte_TII+0x8c>)
 800370e:	68fb      	ldr	r3, [r7, #12]
 8003710:	18d3      	adds	r3, r2, r3
 8003712:	1dfa      	adds	r2, r7, #7
 8003714:	7812      	ldrb	r2, [r2, #0]
 8003716:	701a      	strb	r2, [r3, #0]

    // Store new index
    UART_TxHead = tmphead;
 8003718:	68fb      	ldr	r3, [r7, #12]
 800371a:	b2da      	uxtb	r2, r3
 800371c:	4b11      	ldr	r3, [pc, #68]	@ (8003764 <TransmitByte_TII+0x84>)
 800371e:	701a      	strb	r2, [r3, #0]

    // Initiate a new transfer if this is not ongoing
    if((USART2->CR1 & USART_CR1_TCIE) == 0)
 8003720:	4b13      	ldr	r3, [pc, #76]	@ (8003770 <TransmitByte_TII+0x90>)
 8003722:	681b      	ldr	r3, [r3, #0]
 8003724:	2240      	movs	r2, #64	@ 0x40
 8003726:	4013      	ands	r3, r2
 8003728:	d117      	bne.n	800375a <TransmitByte_TII+0x7a>
    {
        // Calculate buffer index
        uint32_t tmptail = (UART_TxTail + 1) & UART_TX_BUFFER_MASK;
 800372a:	4b0f      	ldr	r3, [pc, #60]	@ (8003768 <TransmitByte_TII+0x88>)
 800372c:	781b      	ldrb	r3, [r3, #0]
 800372e:	b2db      	uxtb	r3, r3
 8003730:	3301      	adds	r3, #1
 8003732:	001a      	movs	r2, r3
 8003734:	233f      	movs	r3, #63	@ 0x3f
 8003736:	4013      	ands	r3, r2
 8003738:	60bb      	str	r3, [r7, #8]

        // Store new index
        UART_TxTail = tmptail;
 800373a:	68bb      	ldr	r3, [r7, #8]
 800373c:	b2da      	uxtb	r2, r3
 800373e:	4b0a      	ldr	r3, [pc, #40]	@ (8003768 <TransmitByte_TII+0x88>)
 8003740:	701a      	strb	r2, [r3, #0]

        // Start transmission
        USART2->TDR = UART_TxBuf[tmptail];
 8003742:	4a0a      	ldr	r2, [pc, #40]	@ (800376c <TransmitByte_TII+0x8c>)
 8003744:	68bb      	ldr	r3, [r7, #8]
 8003746:	18d3      	adds	r3, r2, r3
 8003748:	781a      	ldrb	r2, [r3, #0]
 800374a:	4b09      	ldr	r3, [pc, #36]	@ (8003770 <TransmitByte_TII+0x90>)
 800374c:	851a      	strh	r2, [r3, #40]	@ 0x28

        // enable TC interrupt
        USART2->CR1 |= USART_CR1_TCIE;
 800374e:	4b08      	ldr	r3, [pc, #32]	@ (8003770 <TransmitByte_TII+0x90>)
 8003750:	681a      	ldr	r2, [r3, #0]
 8003752:	4b07      	ldr	r3, [pc, #28]	@ (8003770 <TransmitByte_TII+0x90>)
 8003754:	2140      	movs	r1, #64	@ 0x40
 8003756:	430a      	orrs	r2, r1
 8003758:	601a      	str	r2, [r3, #0]
    }
}
 800375a:	46c0      	nop			@ (mov r8, r8)
 800375c:	46bd      	mov	sp, r7
 800375e:	b004      	add	sp, #16
 8003760:	bd80      	pop	{r7, pc}
 8003762:	46c0      	nop			@ (mov r8, r8)
 8003764:	20000308 	.word	0x20000308
 8003768:	20000309 	.word	0x20000309
 800376c:	200002c8 	.word	0x200002c8
 8003770:	40004400 	.word	0x40004400

08003774 <TransmitString_TII>:
 *   transmit a byte via the UART
 * - Bytes are transmitted until the terminator
 *   character '\0' is detected. Then the function returns.
 */
void TransmitString_TII(char *str)
{
 8003774:	b580      	push	{r7, lr}
 8003776:	b082      	sub	sp, #8
 8003778:	af00      	add	r7, sp, #0
 800377a:	6078      	str	r0, [r7, #4]
    while(*str)
 800377c:	e006      	b.n	800378c <TransmitString_TII+0x18>
    {
        TransmitByte_TII(*str++);
 800377e:	687b      	ldr	r3, [r7, #4]
 8003780:	1c5a      	adds	r2, r3, #1
 8003782:	607a      	str	r2, [r7, #4]
 8003784:	781b      	ldrb	r3, [r3, #0]
 8003786:	0018      	movs	r0, r3
 8003788:	f7ff ffaa 	bl	80036e0 <TransmitByte_TII>
    while(*str)
 800378c:	687b      	ldr	r3, [r7, #4]
 800378e:	781b      	ldrb	r3, [r3, #0]
 8003790:	2b00      	cmp	r3, #0
 8003792:	d1f4      	bne.n	800377e <TransmitString_TII+0xa>
    }
}
 8003794:	46c0      	nop			@ (mov r8, r8)
 8003796:	46c0      	nop			@ (mov r8, r8)
 8003798:	46bd      	mov	sp, r7
 800379a:	b002      	add	sp, #8
 800379c:	bd80      	pop	{r7, pc}
	...

080037a0 <USART2_IRQHandler>:
 * Brief   This function handles UART interrupt request.
 * Param   None
 * Retval  None
 */
void USART2_IRQHandler(void)
{
 80037a0:	b580      	push	{r7, lr}
 80037a2:	b082      	sub	sp, #8
 80037a4:	af00      	add	r7, sp, #0
    if ((USART2->ISR & USART_ISR_TC) == USART_ISR_TC)
 80037a6:	4b31      	ldr	r3, [pc, #196]	@ (800386c <USART2_IRQHandler+0xcc>)
 80037a8:	69db      	ldr	r3, [r3, #28]
 80037aa:	2240      	movs	r2, #64	@ 0x40
 80037ac:	4013      	ands	r3, r2
 80037ae:	2b40      	cmp	r3, #64	@ 0x40
 80037b0:	d127      	bne.n	8003802 <USART2_IRQHandler+0x62>
    {
        uint32_t tmptail;

        // Check if all data is transmitted
        if (UART_TxHead != UART_TxTail)
 80037b2:	4b2f      	ldr	r3, [pc, #188]	@ (8003870 <USART2_IRQHandler+0xd0>)
 80037b4:	781b      	ldrb	r3, [r3, #0]
 80037b6:	b2da      	uxtb	r2, r3
 80037b8:	4b2e      	ldr	r3, [pc, #184]	@ (8003874 <USART2_IRQHandler+0xd4>)
 80037ba:	781b      	ldrb	r3, [r3, #0]
 80037bc:	b2db      	uxtb	r3, r3
 80037be:	429a      	cmp	r2, r3
 80037c0:	d012      	beq.n	80037e8 <USART2_IRQHandler+0x48>
        {
            // Calculate buffer index
            tmptail = (UART_TxTail + 1) & UART_TX_BUFFER_MASK;
 80037c2:	4b2c      	ldr	r3, [pc, #176]	@ (8003874 <USART2_IRQHandler+0xd4>)
 80037c4:	781b      	ldrb	r3, [r3, #0]
 80037c6:	b2db      	uxtb	r3, r3
 80037c8:	3301      	adds	r3, #1
 80037ca:	001a      	movs	r2, r3
 80037cc:	233f      	movs	r3, #63	@ 0x3f
 80037ce:	4013      	ands	r3, r2
 80037d0:	603b      	str	r3, [r7, #0]

            // Store new index
            UART_TxTail = tmptail;
 80037d2:	683b      	ldr	r3, [r7, #0]
 80037d4:	b2da      	uxtb	r2, r3
 80037d6:	4b27      	ldr	r3, [pc, #156]	@ (8003874 <USART2_IRQHandler+0xd4>)
 80037d8:	701a      	strb	r2, [r3, #0]

            // Start transmission
            USART2->TDR = UART_TxBuf[tmptail];
 80037da:	4a27      	ldr	r2, [pc, #156]	@ (8003878 <USART2_IRQHandler+0xd8>)
 80037dc:	683b      	ldr	r3, [r7, #0]
 80037de:	18d3      	adds	r3, r2, r3
 80037e0:	781a      	ldrb	r2, [r3, #0]
 80037e2:	4b22      	ldr	r3, [pc, #136]	@ (800386c <USART2_IRQHandler+0xcc>)
 80037e4:	851a      	strh	r2, [r3, #40]	@ 0x28
    }
    else
    {
        NVIC_DisableIRQ(USART2_IRQn); // Disable UART_IRQn
    }
}
 80037e6:	e03d      	b.n	8003864 <USART2_IRQHandler+0xc4>
            USART2->ICR |= USART_ICR_TCCF; // Clear TC flag
 80037e8:	4b20      	ldr	r3, [pc, #128]	@ (800386c <USART2_IRQHandler+0xcc>)
 80037ea:	6a1a      	ldr	r2, [r3, #32]
 80037ec:	4b1f      	ldr	r3, [pc, #124]	@ (800386c <USART2_IRQHandler+0xcc>)
 80037ee:	2140      	movs	r1, #64	@ 0x40
 80037f0:	430a      	orrs	r2, r1
 80037f2:	621a      	str	r2, [r3, #32]
            USART2->CR1 &= ~USART_CR1_TCIE; // Disable TC interrupt
 80037f4:	4b1d      	ldr	r3, [pc, #116]	@ (800386c <USART2_IRQHandler+0xcc>)
 80037f6:	681a      	ldr	r2, [r3, #0]
 80037f8:	4b1c      	ldr	r3, [pc, #112]	@ (800386c <USART2_IRQHandler+0xcc>)
 80037fa:	2140      	movs	r1, #64	@ 0x40
 80037fc:	438a      	bics	r2, r1
 80037fe:	601a      	str	r2, [r3, #0]
}
 8003800:	e030      	b.n	8003864 <USART2_IRQHandler+0xc4>
    else if ((USART2->ISR & USART_ISR_RXNE) == USART_ISR_RXNE)
 8003802:	4b1a      	ldr	r3, [pc, #104]	@ (800386c <USART2_IRQHandler+0xcc>)
 8003804:	69db      	ldr	r3, [r3, #28]
 8003806:	2220      	movs	r2, #32
 8003808:	4013      	ands	r3, r2
 800380a:	2b20      	cmp	r3, #32
 800380c:	d11a      	bne.n	8003844 <USART2_IRQHandler+0xa4>
        uint8_t data = (uint8_t)(USART2->RDR); // Receive data, clear flag
 800380e:	4b17      	ldr	r3, [pc, #92]	@ (800386c <USART2_IRQHandler+0xcc>)
 8003810:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 8003812:	b29a      	uxth	r2, r3
 8003814:	1dfb      	adds	r3, r7, #7
 8003816:	701a      	strb	r2, [r3, #0]
        uint8_t tmphead = (UART_RxHead + 1) & UART_RX_BUFFER_MASK;
 8003818:	4b18      	ldr	r3, [pc, #96]	@ (800387c <USART2_IRQHandler+0xdc>)
 800381a:	781b      	ldrb	r3, [r3, #0]
 800381c:	b2db      	uxtb	r3, r3
 800381e:	3301      	adds	r3, #1
 8003820:	b2da      	uxtb	r2, r3
 8003822:	1dbb      	adds	r3, r7, #6
 8003824:	213f      	movs	r1, #63	@ 0x3f
 8003826:	400a      	ands	r2, r1
 8003828:	701a      	strb	r2, [r3, #0]
        UART_RxHead = tmphead;
 800382a:	4b14      	ldr	r3, [pc, #80]	@ (800387c <USART2_IRQHandler+0xdc>)
 800382c:	1dba      	adds	r2, r7, #6
 800382e:	7812      	ldrb	r2, [r2, #0]
 8003830:	701a      	strb	r2, [r3, #0]
        if (tmphead == UART_RxTail)
 8003832:	4b13      	ldr	r3, [pc, #76]	@ (8003880 <USART2_IRQHandler+0xe0>)
 8003834:	781b      	ldrb	r3, [r3, #0]
        UART_RxBuf[tmphead] = data;
 8003836:	1dbb      	adds	r3, r7, #6
 8003838:	781b      	ldrb	r3, [r3, #0]
 800383a:	4a12      	ldr	r2, [pc, #72]	@ (8003884 <USART2_IRQHandler+0xe4>)
 800383c:	1df9      	adds	r1, r7, #7
 800383e:	7809      	ldrb	r1, [r1, #0]
 8003840:	54d1      	strb	r1, [r2, r3]
}
 8003842:	e00f      	b.n	8003864 <USART2_IRQHandler+0xc4>
    else if ((USART2->ISR & USART_ISR_ORE) == USART_ISR_ORE)
 8003844:	4b09      	ldr	r3, [pc, #36]	@ (800386c <USART2_IRQHandler+0xcc>)
 8003846:	69db      	ldr	r3, [r3, #28]
 8003848:	2208      	movs	r2, #8
 800384a:	4013      	ands	r3, r2
 800384c:	2b08      	cmp	r3, #8
 800384e:	d106      	bne.n	800385e <USART2_IRQHandler+0xbe>
    	USART2->ICR |= USART_ICR_ORECF; // Clear ORE flag
 8003850:	4b06      	ldr	r3, [pc, #24]	@ (800386c <USART2_IRQHandler+0xcc>)
 8003852:	6a1a      	ldr	r2, [r3, #32]
 8003854:	4b05      	ldr	r3, [pc, #20]	@ (800386c <USART2_IRQHandler+0xcc>)
 8003856:	2108      	movs	r1, #8
 8003858:	430a      	orrs	r2, r1
 800385a:	621a      	str	r2, [r3, #32]
}
 800385c:	e002      	b.n	8003864 <USART2_IRQHandler+0xc4>
        NVIC_DisableIRQ(USART2_IRQn); // Disable UART_IRQn
 800385e:	201c      	movs	r0, #28
 8003860:	f7ff fe62 	bl	8003528 <__NVIC_DisableIRQ>
}
 8003864:	46c0      	nop			@ (mov r8, r8)
 8003866:	46bd      	mov	sp, r7
 8003868:	b002      	add	sp, #8
 800386a:	bd80      	pop	{r7, pc}
 800386c:	40004400 	.word	0x40004400
 8003870:	20000308 	.word	0x20000308
 8003874:	20000309 	.word	0x20000309
 8003878:	200002c8 	.word	0x200002c8
 800387c:	200002c4 	.word	0x200002c4
 8003880:	200002c5 	.word	0x200002c5
 8003884:	20000284 	.word	0x20000284

08003888 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8003888:	480d      	ldr	r0, [pc, #52]	@ (80038c0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800388a:	4685      	mov	sp, r0
  
/* Call the clock system initialization function.*/
  bl  SystemInit
 800388c:	f7ff fe2c 	bl	80034e8 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8003890:	480c      	ldr	r0, [pc, #48]	@ (80038c4 <LoopForever+0x6>)
  ldr r1, =_edata
 8003892:	490d      	ldr	r1, [pc, #52]	@ (80038c8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8003894:	4a0d      	ldr	r2, [pc, #52]	@ (80038cc <LoopForever+0xe>)
  movs r3, #0
 8003896:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8003898:	e002      	b.n	80038a0 <LoopCopyDataInit>

0800389a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800389a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800389c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800389e:	3304      	adds	r3, #4

080038a0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80038a0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80038a2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80038a4:	d3f9      	bcc.n	800389a <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80038a6:	4a0a      	ldr	r2, [pc, #40]	@ (80038d0 <LoopForever+0x12>)
  ldr r4, =_ebss
 80038a8:	4c0a      	ldr	r4, [pc, #40]	@ (80038d4 <LoopForever+0x16>)
  movs r3, #0
 80038aa:	2300      	movs	r3, #0
  b LoopFillZerobss
 80038ac:	e001      	b.n	80038b2 <LoopFillZerobss>

080038ae <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80038ae:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80038b0:	3204      	adds	r2, #4

080038b2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80038b2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80038b4:	d3fb      	bcc.n	80038ae <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80038b6:	f000 f819 	bl	80038ec <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80038ba:	f7ff fc77 	bl	80031ac <main>

080038be <LoopForever>:

LoopForever:
    b LoopForever
 80038be:	e7fe      	b.n	80038be <LoopForever>
  ldr   r0, =_estack
 80038c0:	20004000 	.word	0x20004000
  ldr r0, =_sdata
 80038c4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80038c8:	20000004 	.word	0x20000004
  ldr r2, =_sidata
 80038cc:	08004c08 	.word	0x08004c08
  ldr r2, =_sbss
 80038d0:	20000008 	.word	0x20000008
  ldr r4, =_ebss
 80038d4:	2000030c 	.word	0x2000030c

080038d8 <ADC1_COMP_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80038d8:	e7fe      	b.n	80038d8 <ADC1_COMP_IRQHandler>

080038da <memset>:
 80038da:	0003      	movs	r3, r0
 80038dc:	1882      	adds	r2, r0, r2
 80038de:	4293      	cmp	r3, r2
 80038e0:	d100      	bne.n	80038e4 <memset+0xa>
 80038e2:	4770      	bx	lr
 80038e4:	7019      	strb	r1, [r3, #0]
 80038e6:	3301      	adds	r3, #1
 80038e8:	e7f9      	b.n	80038de <memset+0x4>
	...

080038ec <__libc_init_array>:
 80038ec:	b570      	push	{r4, r5, r6, lr}
 80038ee:	2600      	movs	r6, #0
 80038f0:	4c0c      	ldr	r4, [pc, #48]	@ (8003924 <__libc_init_array+0x38>)
 80038f2:	4d0d      	ldr	r5, [pc, #52]	@ (8003928 <__libc_init_array+0x3c>)
 80038f4:	1b64      	subs	r4, r4, r5
 80038f6:	10a4      	asrs	r4, r4, #2
 80038f8:	42a6      	cmp	r6, r4
 80038fa:	d109      	bne.n	8003910 <__libc_init_array+0x24>
 80038fc:	2600      	movs	r6, #0
 80038fe:	f001 f819 	bl	8004934 <_init>
 8003902:	4c0a      	ldr	r4, [pc, #40]	@ (800392c <__libc_init_array+0x40>)
 8003904:	4d0a      	ldr	r5, [pc, #40]	@ (8003930 <__libc_init_array+0x44>)
 8003906:	1b64      	subs	r4, r4, r5
 8003908:	10a4      	asrs	r4, r4, #2
 800390a:	42a6      	cmp	r6, r4
 800390c:	d105      	bne.n	800391a <__libc_init_array+0x2e>
 800390e:	bd70      	pop	{r4, r5, r6, pc}
 8003910:	00b3      	lsls	r3, r6, #2
 8003912:	58eb      	ldr	r3, [r5, r3]
 8003914:	4798      	blx	r3
 8003916:	3601      	adds	r6, #1
 8003918:	e7ee      	b.n	80038f8 <__libc_init_array+0xc>
 800391a:	00b3      	lsls	r3, r6, #2
 800391c:	58eb      	ldr	r3, [r5, r3]
 800391e:	4798      	blx	r3
 8003920:	3601      	adds	r6, #1
 8003922:	e7f2      	b.n	800390a <__libc_init_array+0x1e>
 8003924:	08004c00 	.word	0x08004c00
 8003928:	08004c00 	.word	0x08004c00
 800392c:	08004c04 	.word	0x08004c04
 8003930:	08004c00 	.word	0x08004c00

08003934 <sin>:
 8003934:	b530      	push	{r4, r5, lr}
 8003936:	4a1f      	ldr	r2, [pc, #124]	@ (80039b4 <sin+0x80>)
 8003938:	004b      	lsls	r3, r1, #1
 800393a:	b087      	sub	sp, #28
 800393c:	085b      	lsrs	r3, r3, #1
 800393e:	4293      	cmp	r3, r2
 8003940:	d806      	bhi.n	8003950 <sin+0x1c>
 8003942:	2300      	movs	r3, #0
 8003944:	2200      	movs	r2, #0
 8003946:	9300      	str	r3, [sp, #0]
 8003948:	2300      	movs	r3, #0
 800394a:	f000 f92b 	bl	8003ba4 <__kernel_sin>
 800394e:	e006      	b.n	800395e <sin+0x2a>
 8003950:	4a19      	ldr	r2, [pc, #100]	@ (80039b8 <sin+0x84>)
 8003952:	4293      	cmp	r3, r2
 8003954:	d905      	bls.n	8003962 <sin+0x2e>
 8003956:	0002      	movs	r2, r0
 8003958:	000b      	movs	r3, r1
 800395a:	f7fe f897 	bl	8001a8c <__aeabi_dsub>
 800395e:	b007      	add	sp, #28
 8003960:	bd30      	pop	{r4, r5, pc}
 8003962:	aa02      	add	r2, sp, #8
 8003964:	f000 f9ca 	bl	8003cfc <__ieee754_rem_pio2>
 8003968:	9c04      	ldr	r4, [sp, #16]
 800396a:	9d05      	ldr	r5, [sp, #20]
 800396c:	2303      	movs	r3, #3
 800396e:	4003      	ands	r3, r0
 8003970:	9802      	ldr	r0, [sp, #8]
 8003972:	9903      	ldr	r1, [sp, #12]
 8003974:	2b01      	cmp	r3, #1
 8003976:	d008      	beq.n	800398a <sin+0x56>
 8003978:	2b02      	cmp	r3, #2
 800397a:	d00b      	beq.n	8003994 <sin+0x60>
 800397c:	2b00      	cmp	r3, #0
 800397e:	d113      	bne.n	80039a8 <sin+0x74>
 8003980:	3301      	adds	r3, #1
 8003982:	9300      	str	r3, [sp, #0]
 8003984:	0022      	movs	r2, r4
 8003986:	002b      	movs	r3, r5
 8003988:	e7df      	b.n	800394a <sin+0x16>
 800398a:	0022      	movs	r2, r4
 800398c:	002b      	movs	r3, r5
 800398e:	f000 f849 	bl	8003a24 <__kernel_cos>
 8003992:	e7e4      	b.n	800395e <sin+0x2a>
 8003994:	2301      	movs	r3, #1
 8003996:	0022      	movs	r2, r4
 8003998:	9300      	str	r3, [sp, #0]
 800399a:	002b      	movs	r3, r5
 800399c:	f000 f902 	bl	8003ba4 <__kernel_sin>
 80039a0:	2380      	movs	r3, #128	@ 0x80
 80039a2:	061b      	lsls	r3, r3, #24
 80039a4:	18c9      	adds	r1, r1, r3
 80039a6:	e7da      	b.n	800395e <sin+0x2a>
 80039a8:	0022      	movs	r2, r4
 80039aa:	002b      	movs	r3, r5
 80039ac:	f000 f83a 	bl	8003a24 <__kernel_cos>
 80039b0:	e7f6      	b.n	80039a0 <sin+0x6c>
 80039b2:	46c0      	nop			@ (mov r8, r8)
 80039b4:	3fe921fb 	.word	0x3fe921fb
 80039b8:	7fefffff 	.word	0x7fefffff

080039bc <trunc>:
 80039bc:	4a16      	ldr	r2, [pc, #88]	@ (8003a18 <trunc+0x5c>)
 80039be:	004b      	lsls	r3, r1, #1
 80039c0:	0d5b      	lsrs	r3, r3, #21
 80039c2:	189a      	adds	r2, r3, r2
 80039c4:	b570      	push	{r4, r5, r6, lr}
 80039c6:	000e      	movs	r6, r1
 80039c8:	2a13      	cmp	r2, #19
 80039ca:	dc0f      	bgt.n	80039ec <trunc+0x30>
 80039cc:	0fc9      	lsrs	r1, r1, #31
 80039ce:	07c9      	lsls	r1, r1, #31
 80039d0:	2a00      	cmp	r2, #0
 80039d2:	da02      	bge.n	80039da <trunc+0x1e>
 80039d4:	2200      	movs	r2, #0
 80039d6:	0010      	movs	r0, r2
 80039d8:	bd70      	pop	{r4, r5, r6, pc}
 80039da:	4b10      	ldr	r3, [pc, #64]	@ (8003a1c <trunc+0x60>)
 80039dc:	2400      	movs	r4, #0
 80039de:	4113      	asrs	r3, r2
 80039e0:	4033      	ands	r3, r6
 80039e2:	430b      	orrs	r3, r1
 80039e4:	001d      	movs	r5, r3
 80039e6:	0020      	movs	r0, r4
 80039e8:	0029      	movs	r1, r5
 80039ea:	e7f5      	b.n	80039d8 <trunc+0x1c>
 80039ec:	2a33      	cmp	r2, #51	@ 0x33
 80039ee:	dd08      	ble.n	8003a02 <trunc+0x46>
 80039f0:	2380      	movs	r3, #128	@ 0x80
 80039f2:	00db      	lsls	r3, r3, #3
 80039f4:	429a      	cmp	r2, r3
 80039f6:	d1ef      	bne.n	80039d8 <trunc+0x1c>
 80039f8:	0002      	movs	r2, r0
 80039fa:	000b      	movs	r3, r1
 80039fc:	f7fc fd60 	bl	80004c0 <__aeabi_dadd>
 8003a00:	e7ea      	b.n	80039d8 <trunc+0x1c>
 8003a02:	4a07      	ldr	r2, [pc, #28]	@ (8003a20 <trunc+0x64>)
 8003a04:	000d      	movs	r5, r1
 8003a06:	189b      	adds	r3, r3, r2
 8003a08:	2201      	movs	r2, #1
 8003a0a:	4252      	negs	r2, r2
 8003a0c:	40da      	lsrs	r2, r3
 8003a0e:	0003      	movs	r3, r0
 8003a10:	4393      	bics	r3, r2
 8003a12:	001c      	movs	r4, r3
 8003a14:	e7e7      	b.n	80039e6 <trunc+0x2a>
 8003a16:	46c0      	nop			@ (mov r8, r8)
 8003a18:	fffffc01 	.word	0xfffffc01
 8003a1c:	fff00000 	.word	0xfff00000
 8003a20:	fffffbed 	.word	0xfffffbed

08003a24 <__kernel_cos>:
 8003a24:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003a26:	b087      	sub	sp, #28
 8003a28:	9204      	str	r2, [sp, #16]
 8003a2a:	9305      	str	r3, [sp, #20]
 8003a2c:	004b      	lsls	r3, r1, #1
 8003a2e:	085b      	lsrs	r3, r3, #1
 8003a30:	9301      	str	r3, [sp, #4]
 8003a32:	23f9      	movs	r3, #249	@ 0xf9
 8003a34:	9a01      	ldr	r2, [sp, #4]
 8003a36:	0004      	movs	r4, r0
 8003a38:	000d      	movs	r5, r1
 8003a3a:	059b      	lsls	r3, r3, #22
 8003a3c:	429a      	cmp	r2, r3
 8003a3e:	d204      	bcs.n	8003a4a <__kernel_cos+0x26>
 8003a40:	f7fe fc2e 	bl	80022a0 <__aeabi_d2iz>
 8003a44:	2800      	cmp	r0, #0
 8003a46:	d100      	bne.n	8003a4a <__kernel_cos+0x26>
 8003a48:	e084      	b.n	8003b54 <__kernel_cos+0x130>
 8003a4a:	0022      	movs	r2, r4
 8003a4c:	002b      	movs	r3, r5
 8003a4e:	0020      	movs	r0, r4
 8003a50:	0029      	movs	r1, r5
 8003a52:	f7fd fd35 	bl	80014c0 <__aeabi_dmul>
 8003a56:	2200      	movs	r2, #0
 8003a58:	4b40      	ldr	r3, [pc, #256]	@ (8003b5c <__kernel_cos+0x138>)
 8003a5a:	0006      	movs	r6, r0
 8003a5c:	000f      	movs	r7, r1
 8003a5e:	f7fd fd2f 	bl	80014c0 <__aeabi_dmul>
 8003a62:	4a3f      	ldr	r2, [pc, #252]	@ (8003b60 <__kernel_cos+0x13c>)
 8003a64:	9002      	str	r0, [sp, #8]
 8003a66:	9103      	str	r1, [sp, #12]
 8003a68:	4b3e      	ldr	r3, [pc, #248]	@ (8003b64 <__kernel_cos+0x140>)
 8003a6a:	0030      	movs	r0, r6
 8003a6c:	0039      	movs	r1, r7
 8003a6e:	f7fd fd27 	bl	80014c0 <__aeabi_dmul>
 8003a72:	4a3d      	ldr	r2, [pc, #244]	@ (8003b68 <__kernel_cos+0x144>)
 8003a74:	4b3d      	ldr	r3, [pc, #244]	@ (8003b6c <__kernel_cos+0x148>)
 8003a76:	f7fc fd23 	bl	80004c0 <__aeabi_dadd>
 8003a7a:	0032      	movs	r2, r6
 8003a7c:	003b      	movs	r3, r7
 8003a7e:	f7fd fd1f 	bl	80014c0 <__aeabi_dmul>
 8003a82:	4a3b      	ldr	r2, [pc, #236]	@ (8003b70 <__kernel_cos+0x14c>)
 8003a84:	4b3b      	ldr	r3, [pc, #236]	@ (8003b74 <__kernel_cos+0x150>)
 8003a86:	f7fe f801 	bl	8001a8c <__aeabi_dsub>
 8003a8a:	0032      	movs	r2, r6
 8003a8c:	003b      	movs	r3, r7
 8003a8e:	f7fd fd17 	bl	80014c0 <__aeabi_dmul>
 8003a92:	4a39      	ldr	r2, [pc, #228]	@ (8003b78 <__kernel_cos+0x154>)
 8003a94:	4b39      	ldr	r3, [pc, #228]	@ (8003b7c <__kernel_cos+0x158>)
 8003a96:	f7fc fd13 	bl	80004c0 <__aeabi_dadd>
 8003a9a:	0032      	movs	r2, r6
 8003a9c:	003b      	movs	r3, r7
 8003a9e:	f7fd fd0f 	bl	80014c0 <__aeabi_dmul>
 8003aa2:	4a37      	ldr	r2, [pc, #220]	@ (8003b80 <__kernel_cos+0x15c>)
 8003aa4:	4b37      	ldr	r3, [pc, #220]	@ (8003b84 <__kernel_cos+0x160>)
 8003aa6:	f7fd fff1 	bl	8001a8c <__aeabi_dsub>
 8003aaa:	0032      	movs	r2, r6
 8003aac:	003b      	movs	r3, r7
 8003aae:	f7fd fd07 	bl	80014c0 <__aeabi_dmul>
 8003ab2:	4a35      	ldr	r2, [pc, #212]	@ (8003b88 <__kernel_cos+0x164>)
 8003ab4:	4b35      	ldr	r3, [pc, #212]	@ (8003b8c <__kernel_cos+0x168>)
 8003ab6:	f7fc fd03 	bl	80004c0 <__aeabi_dadd>
 8003aba:	0032      	movs	r2, r6
 8003abc:	003b      	movs	r3, r7
 8003abe:	f7fd fcff 	bl	80014c0 <__aeabi_dmul>
 8003ac2:	0032      	movs	r2, r6
 8003ac4:	003b      	movs	r3, r7
 8003ac6:	f7fd fcfb 	bl	80014c0 <__aeabi_dmul>
 8003aca:	9a04      	ldr	r2, [sp, #16]
 8003acc:	9b05      	ldr	r3, [sp, #20]
 8003ace:	0006      	movs	r6, r0
 8003ad0:	000f      	movs	r7, r1
 8003ad2:	0020      	movs	r0, r4
 8003ad4:	0029      	movs	r1, r5
 8003ad6:	f7fd fcf3 	bl	80014c0 <__aeabi_dmul>
 8003ada:	0002      	movs	r2, r0
 8003adc:	000b      	movs	r3, r1
 8003ade:	0030      	movs	r0, r6
 8003ae0:	0039      	movs	r1, r7
 8003ae2:	f7fd ffd3 	bl	8001a8c <__aeabi_dsub>
 8003ae6:	4b2a      	ldr	r3, [pc, #168]	@ (8003b90 <__kernel_cos+0x16c>)
 8003ae8:	9a01      	ldr	r2, [sp, #4]
 8003aea:	9004      	str	r0, [sp, #16]
 8003aec:	9105      	str	r1, [sp, #20]
 8003aee:	429a      	cmp	r2, r3
 8003af0:	d80d      	bhi.n	8003b0e <__kernel_cos+0xea>
 8003af2:	0002      	movs	r2, r0
 8003af4:	000b      	movs	r3, r1
 8003af6:	9802      	ldr	r0, [sp, #8]
 8003af8:	9903      	ldr	r1, [sp, #12]
 8003afa:	f7fd ffc7 	bl	8001a8c <__aeabi_dsub>
 8003afe:	0002      	movs	r2, r0
 8003b00:	2000      	movs	r0, #0
 8003b02:	000b      	movs	r3, r1
 8003b04:	4923      	ldr	r1, [pc, #140]	@ (8003b94 <__kernel_cos+0x170>)
 8003b06:	f7fd ffc1 	bl	8001a8c <__aeabi_dsub>
 8003b0a:	b007      	add	sp, #28
 8003b0c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003b0e:	4b22      	ldr	r3, [pc, #136]	@ (8003b98 <__kernel_cos+0x174>)
 8003b10:	9a01      	ldr	r2, [sp, #4]
 8003b12:	2600      	movs	r6, #0
 8003b14:	429a      	cmp	r2, r3
 8003b16:	d81b      	bhi.n	8003b50 <__kernel_cos+0x12c>
 8003b18:	0013      	movs	r3, r2
 8003b1a:	4a20      	ldr	r2, [pc, #128]	@ (8003b9c <__kernel_cos+0x178>)
 8003b1c:	4694      	mov	ip, r2
 8003b1e:	4463      	add	r3, ip
 8003b20:	001f      	movs	r7, r3
 8003b22:	0032      	movs	r2, r6
 8003b24:	003b      	movs	r3, r7
 8003b26:	2000      	movs	r0, #0
 8003b28:	491a      	ldr	r1, [pc, #104]	@ (8003b94 <__kernel_cos+0x170>)
 8003b2a:	f7fd ffaf 	bl	8001a8c <__aeabi_dsub>
 8003b2e:	0032      	movs	r2, r6
 8003b30:	0004      	movs	r4, r0
 8003b32:	000d      	movs	r5, r1
 8003b34:	9802      	ldr	r0, [sp, #8]
 8003b36:	9903      	ldr	r1, [sp, #12]
 8003b38:	003b      	movs	r3, r7
 8003b3a:	f7fd ffa7 	bl	8001a8c <__aeabi_dsub>
 8003b3e:	9a04      	ldr	r2, [sp, #16]
 8003b40:	9b05      	ldr	r3, [sp, #20]
 8003b42:	f7fd ffa3 	bl	8001a8c <__aeabi_dsub>
 8003b46:	0002      	movs	r2, r0
 8003b48:	000b      	movs	r3, r1
 8003b4a:	0020      	movs	r0, r4
 8003b4c:	0029      	movs	r1, r5
 8003b4e:	e7da      	b.n	8003b06 <__kernel_cos+0xe2>
 8003b50:	4f13      	ldr	r7, [pc, #76]	@ (8003ba0 <__kernel_cos+0x17c>)
 8003b52:	e7e6      	b.n	8003b22 <__kernel_cos+0xfe>
 8003b54:	2000      	movs	r0, #0
 8003b56:	490f      	ldr	r1, [pc, #60]	@ (8003b94 <__kernel_cos+0x170>)
 8003b58:	e7d7      	b.n	8003b0a <__kernel_cos+0xe6>
 8003b5a:	46c0      	nop			@ (mov r8, r8)
 8003b5c:	3fe00000 	.word	0x3fe00000
 8003b60:	be8838d4 	.word	0xbe8838d4
 8003b64:	bda8fae9 	.word	0xbda8fae9
 8003b68:	bdb4b1c4 	.word	0xbdb4b1c4
 8003b6c:	3e21ee9e 	.word	0x3e21ee9e
 8003b70:	809c52ad 	.word	0x809c52ad
 8003b74:	3e927e4f 	.word	0x3e927e4f
 8003b78:	19cb1590 	.word	0x19cb1590
 8003b7c:	3efa01a0 	.word	0x3efa01a0
 8003b80:	16c15177 	.word	0x16c15177
 8003b84:	3f56c16c 	.word	0x3f56c16c
 8003b88:	5555554c 	.word	0x5555554c
 8003b8c:	3fa55555 	.word	0x3fa55555
 8003b90:	3fd33332 	.word	0x3fd33332
 8003b94:	3ff00000 	.word	0x3ff00000
 8003b98:	3fe90000 	.word	0x3fe90000
 8003b9c:	ffe00000 	.word	0xffe00000
 8003ba0:	3fd20000 	.word	0x3fd20000

08003ba4 <__kernel_sin>:
 8003ba4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003ba6:	b089      	sub	sp, #36	@ 0x24
 8003ba8:	9202      	str	r2, [sp, #8]
 8003baa:	9303      	str	r3, [sp, #12]
 8003bac:	22f9      	movs	r2, #249	@ 0xf9
 8003bae:	004b      	lsls	r3, r1, #1
 8003bb0:	0006      	movs	r6, r0
 8003bb2:	000f      	movs	r7, r1
 8003bb4:	085b      	lsrs	r3, r3, #1
 8003bb6:	0592      	lsls	r2, r2, #22
 8003bb8:	4293      	cmp	r3, r2
 8003bba:	d203      	bcs.n	8003bc4 <__kernel_sin+0x20>
 8003bbc:	f7fe fb70 	bl	80022a0 <__aeabi_d2iz>
 8003bc0:	2800      	cmp	r0, #0
 8003bc2:	d04c      	beq.n	8003c5e <__kernel_sin+0xba>
 8003bc4:	0032      	movs	r2, r6
 8003bc6:	003b      	movs	r3, r7
 8003bc8:	0030      	movs	r0, r6
 8003bca:	0039      	movs	r1, r7
 8003bcc:	f7fd fc78 	bl	80014c0 <__aeabi_dmul>
 8003bd0:	0004      	movs	r4, r0
 8003bd2:	000d      	movs	r5, r1
 8003bd4:	0002      	movs	r2, r0
 8003bd6:	000b      	movs	r3, r1
 8003bd8:	0030      	movs	r0, r6
 8003bda:	0039      	movs	r1, r7
 8003bdc:	f7fd fc70 	bl	80014c0 <__aeabi_dmul>
 8003be0:	4a39      	ldr	r2, [pc, #228]	@ (8003cc8 <__kernel_sin+0x124>)
 8003be2:	9000      	str	r0, [sp, #0]
 8003be4:	9101      	str	r1, [sp, #4]
 8003be6:	4b39      	ldr	r3, [pc, #228]	@ (8003ccc <__kernel_sin+0x128>)
 8003be8:	0020      	movs	r0, r4
 8003bea:	0029      	movs	r1, r5
 8003bec:	f7fd fc68 	bl	80014c0 <__aeabi_dmul>
 8003bf0:	4a37      	ldr	r2, [pc, #220]	@ (8003cd0 <__kernel_sin+0x12c>)
 8003bf2:	4b38      	ldr	r3, [pc, #224]	@ (8003cd4 <__kernel_sin+0x130>)
 8003bf4:	f7fd ff4a 	bl	8001a8c <__aeabi_dsub>
 8003bf8:	0022      	movs	r2, r4
 8003bfa:	002b      	movs	r3, r5
 8003bfc:	f7fd fc60 	bl	80014c0 <__aeabi_dmul>
 8003c00:	4a35      	ldr	r2, [pc, #212]	@ (8003cd8 <__kernel_sin+0x134>)
 8003c02:	4b36      	ldr	r3, [pc, #216]	@ (8003cdc <__kernel_sin+0x138>)
 8003c04:	f7fc fc5c 	bl	80004c0 <__aeabi_dadd>
 8003c08:	0022      	movs	r2, r4
 8003c0a:	002b      	movs	r3, r5
 8003c0c:	f7fd fc58 	bl	80014c0 <__aeabi_dmul>
 8003c10:	4a33      	ldr	r2, [pc, #204]	@ (8003ce0 <__kernel_sin+0x13c>)
 8003c12:	4b34      	ldr	r3, [pc, #208]	@ (8003ce4 <__kernel_sin+0x140>)
 8003c14:	f7fd ff3a 	bl	8001a8c <__aeabi_dsub>
 8003c18:	0022      	movs	r2, r4
 8003c1a:	002b      	movs	r3, r5
 8003c1c:	f7fd fc50 	bl	80014c0 <__aeabi_dmul>
 8003c20:	4b31      	ldr	r3, [pc, #196]	@ (8003ce8 <__kernel_sin+0x144>)
 8003c22:	4a32      	ldr	r2, [pc, #200]	@ (8003cec <__kernel_sin+0x148>)
 8003c24:	f7fc fc4c 	bl	80004c0 <__aeabi_dadd>
 8003c28:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8003c2a:	9004      	str	r0, [sp, #16]
 8003c2c:	9105      	str	r1, [sp, #20]
 8003c2e:	2b00      	cmp	r3, #0
 8003c30:	d119      	bne.n	8003c66 <__kernel_sin+0xc2>
 8003c32:	0002      	movs	r2, r0
 8003c34:	000b      	movs	r3, r1
 8003c36:	0020      	movs	r0, r4
 8003c38:	0029      	movs	r1, r5
 8003c3a:	f7fd fc41 	bl	80014c0 <__aeabi_dmul>
 8003c3e:	4a2c      	ldr	r2, [pc, #176]	@ (8003cf0 <__kernel_sin+0x14c>)
 8003c40:	4b2c      	ldr	r3, [pc, #176]	@ (8003cf4 <__kernel_sin+0x150>)
 8003c42:	f7fd ff23 	bl	8001a8c <__aeabi_dsub>
 8003c46:	9a00      	ldr	r2, [sp, #0]
 8003c48:	9b01      	ldr	r3, [sp, #4]
 8003c4a:	f7fd fc39 	bl	80014c0 <__aeabi_dmul>
 8003c4e:	0002      	movs	r2, r0
 8003c50:	000b      	movs	r3, r1
 8003c52:	0030      	movs	r0, r6
 8003c54:	0039      	movs	r1, r7
 8003c56:	f7fc fc33 	bl	80004c0 <__aeabi_dadd>
 8003c5a:	0006      	movs	r6, r0
 8003c5c:	000f      	movs	r7, r1
 8003c5e:	0030      	movs	r0, r6
 8003c60:	0039      	movs	r1, r7
 8003c62:	b009      	add	sp, #36	@ 0x24
 8003c64:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003c66:	2200      	movs	r2, #0
 8003c68:	9802      	ldr	r0, [sp, #8]
 8003c6a:	9903      	ldr	r1, [sp, #12]
 8003c6c:	4b22      	ldr	r3, [pc, #136]	@ (8003cf8 <__kernel_sin+0x154>)
 8003c6e:	f7fd fc27 	bl	80014c0 <__aeabi_dmul>
 8003c72:	9a04      	ldr	r2, [sp, #16]
 8003c74:	9b05      	ldr	r3, [sp, #20]
 8003c76:	9006      	str	r0, [sp, #24]
 8003c78:	9107      	str	r1, [sp, #28]
 8003c7a:	9800      	ldr	r0, [sp, #0]
 8003c7c:	9901      	ldr	r1, [sp, #4]
 8003c7e:	f7fd fc1f 	bl	80014c0 <__aeabi_dmul>
 8003c82:	0002      	movs	r2, r0
 8003c84:	000b      	movs	r3, r1
 8003c86:	9806      	ldr	r0, [sp, #24]
 8003c88:	9907      	ldr	r1, [sp, #28]
 8003c8a:	f7fd feff 	bl	8001a8c <__aeabi_dsub>
 8003c8e:	0022      	movs	r2, r4
 8003c90:	002b      	movs	r3, r5
 8003c92:	f7fd fc15 	bl	80014c0 <__aeabi_dmul>
 8003c96:	9a02      	ldr	r2, [sp, #8]
 8003c98:	9b03      	ldr	r3, [sp, #12]
 8003c9a:	f7fd fef7 	bl	8001a8c <__aeabi_dsub>
 8003c9e:	4a14      	ldr	r2, [pc, #80]	@ (8003cf0 <__kernel_sin+0x14c>)
 8003ca0:	0004      	movs	r4, r0
 8003ca2:	000d      	movs	r5, r1
 8003ca4:	9800      	ldr	r0, [sp, #0]
 8003ca6:	9901      	ldr	r1, [sp, #4]
 8003ca8:	4b12      	ldr	r3, [pc, #72]	@ (8003cf4 <__kernel_sin+0x150>)
 8003caa:	f7fd fc09 	bl	80014c0 <__aeabi_dmul>
 8003cae:	0002      	movs	r2, r0
 8003cb0:	000b      	movs	r3, r1
 8003cb2:	0020      	movs	r0, r4
 8003cb4:	0029      	movs	r1, r5
 8003cb6:	f7fc fc03 	bl	80004c0 <__aeabi_dadd>
 8003cba:	0002      	movs	r2, r0
 8003cbc:	000b      	movs	r3, r1
 8003cbe:	0030      	movs	r0, r6
 8003cc0:	0039      	movs	r1, r7
 8003cc2:	f7fd fee3 	bl	8001a8c <__aeabi_dsub>
 8003cc6:	e7c8      	b.n	8003c5a <__kernel_sin+0xb6>
 8003cc8:	5acfd57c 	.word	0x5acfd57c
 8003ccc:	3de5d93a 	.word	0x3de5d93a
 8003cd0:	8a2b9ceb 	.word	0x8a2b9ceb
 8003cd4:	3e5ae5e6 	.word	0x3e5ae5e6
 8003cd8:	57b1fe7d 	.word	0x57b1fe7d
 8003cdc:	3ec71de3 	.word	0x3ec71de3
 8003ce0:	19c161d5 	.word	0x19c161d5
 8003ce4:	3f2a01a0 	.word	0x3f2a01a0
 8003ce8:	3f811111 	.word	0x3f811111
 8003cec:	1110f8a6 	.word	0x1110f8a6
 8003cf0:	55555549 	.word	0x55555549
 8003cf4:	3fc55555 	.word	0x3fc55555
 8003cf8:	3fe00000 	.word	0x3fe00000

08003cfc <__ieee754_rem_pio2>:
 8003cfc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003cfe:	4baf      	ldr	r3, [pc, #700]	@ (8003fbc <__ieee754_rem_pio2+0x2c0>)
 8003d00:	b095      	sub	sp, #84	@ 0x54
 8003d02:	004d      	lsls	r5, r1, #1
 8003d04:	0017      	movs	r7, r2
 8003d06:	910d      	str	r1, [sp, #52]	@ 0x34
 8003d08:	086d      	lsrs	r5, r5, #1
 8003d0a:	429d      	cmp	r5, r3
 8003d0c:	d807      	bhi.n	8003d1e <__ieee754_rem_pio2+0x22>
 8003d0e:	6010      	str	r0, [r2, #0]
 8003d10:	6051      	str	r1, [r2, #4]
 8003d12:	2300      	movs	r3, #0
 8003d14:	2200      	movs	r2, #0
 8003d16:	60ba      	str	r2, [r7, #8]
 8003d18:	60fb      	str	r3, [r7, #12]
 8003d1a:	2300      	movs	r3, #0
 8003d1c:	e024      	b.n	8003d68 <__ieee754_rem_pio2+0x6c>
 8003d1e:	4ba8      	ldr	r3, [pc, #672]	@ (8003fc0 <__ieee754_rem_pio2+0x2c4>)
 8003d20:	429d      	cmp	r5, r3
 8003d22:	d900      	bls.n	8003d26 <__ieee754_rem_pio2+0x2a>
 8003d24:	e072      	b.n	8003e0c <__ieee754_rem_pio2+0x110>
 8003d26:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8003d28:	4ca6      	ldr	r4, [pc, #664]	@ (8003fc4 <__ieee754_rem_pio2+0x2c8>)
 8003d2a:	4aa7      	ldr	r2, [pc, #668]	@ (8003fc8 <__ieee754_rem_pio2+0x2cc>)
 8003d2c:	2b00      	cmp	r3, #0
 8003d2e:	dd37      	ble.n	8003da0 <__ieee754_rem_pio2+0xa4>
 8003d30:	4ba4      	ldr	r3, [pc, #656]	@ (8003fc4 <__ieee754_rem_pio2+0x2c8>)
 8003d32:	f7fd feab 	bl	8001a8c <__aeabi_dsub>
 8003d36:	9002      	str	r0, [sp, #8]
 8003d38:	9103      	str	r1, [sp, #12]
 8003d3a:	42a5      	cmp	r5, r4
 8003d3c:	d018      	beq.n	8003d70 <__ieee754_rem_pio2+0x74>
 8003d3e:	4aa3      	ldr	r2, [pc, #652]	@ (8003fcc <__ieee754_rem_pio2+0x2d0>)
 8003d40:	4ba3      	ldr	r3, [pc, #652]	@ (8003fd0 <__ieee754_rem_pio2+0x2d4>)
 8003d42:	f7fd fea3 	bl	8001a8c <__aeabi_dsub>
 8003d46:	0002      	movs	r2, r0
 8003d48:	000b      	movs	r3, r1
 8003d4a:	0004      	movs	r4, r0
 8003d4c:	000d      	movs	r5, r1
 8003d4e:	9802      	ldr	r0, [sp, #8]
 8003d50:	9903      	ldr	r1, [sp, #12]
 8003d52:	f7fd fe9b 	bl	8001a8c <__aeabi_dsub>
 8003d56:	4a9d      	ldr	r2, [pc, #628]	@ (8003fcc <__ieee754_rem_pio2+0x2d0>)
 8003d58:	4b9d      	ldr	r3, [pc, #628]	@ (8003fd0 <__ieee754_rem_pio2+0x2d4>)
 8003d5a:	f7fd fe97 	bl	8001a8c <__aeabi_dsub>
 8003d5e:	2301      	movs	r3, #1
 8003d60:	603c      	str	r4, [r7, #0]
 8003d62:	607d      	str	r5, [r7, #4]
 8003d64:	60b8      	str	r0, [r7, #8]
 8003d66:	60f9      	str	r1, [r7, #12]
 8003d68:	9302      	str	r3, [sp, #8]
 8003d6a:	9802      	ldr	r0, [sp, #8]
 8003d6c:	b015      	add	sp, #84	@ 0x54
 8003d6e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003d70:	22d3      	movs	r2, #211	@ 0xd3
 8003d72:	9802      	ldr	r0, [sp, #8]
 8003d74:	9903      	ldr	r1, [sp, #12]
 8003d76:	4b96      	ldr	r3, [pc, #600]	@ (8003fd0 <__ieee754_rem_pio2+0x2d4>)
 8003d78:	0552      	lsls	r2, r2, #21
 8003d7a:	f7fd fe87 	bl	8001a8c <__aeabi_dsub>
 8003d7e:	4a95      	ldr	r2, [pc, #596]	@ (8003fd4 <__ieee754_rem_pio2+0x2d8>)
 8003d80:	4b95      	ldr	r3, [pc, #596]	@ (8003fd8 <__ieee754_rem_pio2+0x2dc>)
 8003d82:	9002      	str	r0, [sp, #8]
 8003d84:	9103      	str	r1, [sp, #12]
 8003d86:	f7fd fe81 	bl	8001a8c <__aeabi_dsub>
 8003d8a:	0002      	movs	r2, r0
 8003d8c:	000b      	movs	r3, r1
 8003d8e:	0004      	movs	r4, r0
 8003d90:	000d      	movs	r5, r1
 8003d92:	9802      	ldr	r0, [sp, #8]
 8003d94:	9903      	ldr	r1, [sp, #12]
 8003d96:	f7fd fe79 	bl	8001a8c <__aeabi_dsub>
 8003d9a:	4a8e      	ldr	r2, [pc, #568]	@ (8003fd4 <__ieee754_rem_pio2+0x2d8>)
 8003d9c:	4b8e      	ldr	r3, [pc, #568]	@ (8003fd8 <__ieee754_rem_pio2+0x2dc>)
 8003d9e:	e7dc      	b.n	8003d5a <__ieee754_rem_pio2+0x5e>
 8003da0:	4b88      	ldr	r3, [pc, #544]	@ (8003fc4 <__ieee754_rem_pio2+0x2c8>)
 8003da2:	f7fc fb8d 	bl	80004c0 <__aeabi_dadd>
 8003da6:	9002      	str	r0, [sp, #8]
 8003da8:	9103      	str	r1, [sp, #12]
 8003daa:	42a5      	cmp	r5, r4
 8003dac:	d016      	beq.n	8003ddc <__ieee754_rem_pio2+0xe0>
 8003dae:	4a87      	ldr	r2, [pc, #540]	@ (8003fcc <__ieee754_rem_pio2+0x2d0>)
 8003db0:	4b87      	ldr	r3, [pc, #540]	@ (8003fd0 <__ieee754_rem_pio2+0x2d4>)
 8003db2:	f7fc fb85 	bl	80004c0 <__aeabi_dadd>
 8003db6:	0002      	movs	r2, r0
 8003db8:	000b      	movs	r3, r1
 8003dba:	0004      	movs	r4, r0
 8003dbc:	000d      	movs	r5, r1
 8003dbe:	9802      	ldr	r0, [sp, #8]
 8003dc0:	9903      	ldr	r1, [sp, #12]
 8003dc2:	f7fd fe63 	bl	8001a8c <__aeabi_dsub>
 8003dc6:	4a81      	ldr	r2, [pc, #516]	@ (8003fcc <__ieee754_rem_pio2+0x2d0>)
 8003dc8:	4b81      	ldr	r3, [pc, #516]	@ (8003fd0 <__ieee754_rem_pio2+0x2d4>)
 8003dca:	f7fc fb79 	bl	80004c0 <__aeabi_dadd>
 8003dce:	2301      	movs	r3, #1
 8003dd0:	603c      	str	r4, [r7, #0]
 8003dd2:	607d      	str	r5, [r7, #4]
 8003dd4:	60b8      	str	r0, [r7, #8]
 8003dd6:	60f9      	str	r1, [r7, #12]
 8003dd8:	425b      	negs	r3, r3
 8003dda:	e7c5      	b.n	8003d68 <__ieee754_rem_pio2+0x6c>
 8003ddc:	22d3      	movs	r2, #211	@ 0xd3
 8003dde:	9802      	ldr	r0, [sp, #8]
 8003de0:	9903      	ldr	r1, [sp, #12]
 8003de2:	4b7b      	ldr	r3, [pc, #492]	@ (8003fd0 <__ieee754_rem_pio2+0x2d4>)
 8003de4:	0552      	lsls	r2, r2, #21
 8003de6:	f7fc fb6b 	bl	80004c0 <__aeabi_dadd>
 8003dea:	4a7a      	ldr	r2, [pc, #488]	@ (8003fd4 <__ieee754_rem_pio2+0x2d8>)
 8003dec:	4b7a      	ldr	r3, [pc, #488]	@ (8003fd8 <__ieee754_rem_pio2+0x2dc>)
 8003dee:	9002      	str	r0, [sp, #8]
 8003df0:	9103      	str	r1, [sp, #12]
 8003df2:	f7fc fb65 	bl	80004c0 <__aeabi_dadd>
 8003df6:	0002      	movs	r2, r0
 8003df8:	000b      	movs	r3, r1
 8003dfa:	0004      	movs	r4, r0
 8003dfc:	000d      	movs	r5, r1
 8003dfe:	9802      	ldr	r0, [sp, #8]
 8003e00:	9903      	ldr	r1, [sp, #12]
 8003e02:	f7fd fe43 	bl	8001a8c <__aeabi_dsub>
 8003e06:	4a73      	ldr	r2, [pc, #460]	@ (8003fd4 <__ieee754_rem_pio2+0x2d8>)
 8003e08:	4b73      	ldr	r3, [pc, #460]	@ (8003fd8 <__ieee754_rem_pio2+0x2dc>)
 8003e0a:	e7de      	b.n	8003dca <__ieee754_rem_pio2+0xce>
 8003e0c:	4b73      	ldr	r3, [pc, #460]	@ (8003fdc <__ieee754_rem_pio2+0x2e0>)
 8003e0e:	429d      	cmp	r5, r3
 8003e10:	d900      	bls.n	8003e14 <__ieee754_rem_pio2+0x118>
 8003e12:	e0c6      	b.n	8003fa2 <__ieee754_rem_pio2+0x2a6>
 8003e14:	f000 f94e 	bl	80040b4 <fabs>
 8003e18:	4a71      	ldr	r2, [pc, #452]	@ (8003fe0 <__ieee754_rem_pio2+0x2e4>)
 8003e1a:	4b72      	ldr	r3, [pc, #456]	@ (8003fe4 <__ieee754_rem_pio2+0x2e8>)
 8003e1c:	9004      	str	r0, [sp, #16]
 8003e1e:	9105      	str	r1, [sp, #20]
 8003e20:	f7fd fb4e 	bl	80014c0 <__aeabi_dmul>
 8003e24:	2200      	movs	r2, #0
 8003e26:	4b70      	ldr	r3, [pc, #448]	@ (8003fe8 <__ieee754_rem_pio2+0x2ec>)
 8003e28:	f7fc fb4a 	bl	80004c0 <__aeabi_dadd>
 8003e2c:	f7fe fa38 	bl	80022a0 <__aeabi_d2iz>
 8003e30:	9002      	str	r0, [sp, #8]
 8003e32:	f7fe fa71 	bl	8002318 <__aeabi_i2d>
 8003e36:	4a64      	ldr	r2, [pc, #400]	@ (8003fc8 <__ieee754_rem_pio2+0x2cc>)
 8003e38:	4b62      	ldr	r3, [pc, #392]	@ (8003fc4 <__ieee754_rem_pio2+0x2c8>)
 8003e3a:	9008      	str	r0, [sp, #32]
 8003e3c:	9109      	str	r1, [sp, #36]	@ 0x24
 8003e3e:	f7fd fb3f 	bl	80014c0 <__aeabi_dmul>
 8003e42:	0002      	movs	r2, r0
 8003e44:	000b      	movs	r3, r1
 8003e46:	9804      	ldr	r0, [sp, #16]
 8003e48:	9905      	ldr	r1, [sp, #20]
 8003e4a:	f7fd fe1f 	bl	8001a8c <__aeabi_dsub>
 8003e4e:	4b60      	ldr	r3, [pc, #384]	@ (8003fd0 <__ieee754_rem_pio2+0x2d4>)
 8003e50:	9004      	str	r0, [sp, #16]
 8003e52:	9105      	str	r1, [sp, #20]
 8003e54:	9808      	ldr	r0, [sp, #32]
 8003e56:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8003e58:	4a5c      	ldr	r2, [pc, #368]	@ (8003fcc <__ieee754_rem_pio2+0x2d0>)
 8003e5a:	f7fd fb31 	bl	80014c0 <__aeabi_dmul>
 8003e5e:	9b02      	ldr	r3, [sp, #8]
 8003e60:	9006      	str	r0, [sp, #24]
 8003e62:	9107      	str	r1, [sp, #28]
 8003e64:	2b1f      	cmp	r3, #31
 8003e66:	dc0d      	bgt.n	8003e84 <__ieee754_rem_pio2+0x188>
 8003e68:	9a02      	ldr	r2, [sp, #8]
 8003e6a:	4b60      	ldr	r3, [pc, #384]	@ (8003fec <__ieee754_rem_pio2+0x2f0>)
 8003e6c:	3a01      	subs	r2, #1
 8003e6e:	0092      	lsls	r2, r2, #2
 8003e70:	58d3      	ldr	r3, [r2, r3]
 8003e72:	42ab      	cmp	r3, r5
 8003e74:	d006      	beq.n	8003e84 <__ieee754_rem_pio2+0x188>
 8003e76:	0002      	movs	r2, r0
 8003e78:	000b      	movs	r3, r1
 8003e7a:	9804      	ldr	r0, [sp, #16]
 8003e7c:	9905      	ldr	r1, [sp, #20]
 8003e7e:	f7fd fe05 	bl	8001a8c <__aeabi_dsub>
 8003e82:	e00b      	b.n	8003e9c <__ieee754_rem_pio2+0x1a0>
 8003e84:	9a06      	ldr	r2, [sp, #24]
 8003e86:	9b07      	ldr	r3, [sp, #28]
 8003e88:	9804      	ldr	r0, [sp, #16]
 8003e8a:	9905      	ldr	r1, [sp, #20]
 8003e8c:	f7fd fdfe 	bl	8001a8c <__aeabi_dsub>
 8003e90:	004b      	lsls	r3, r1, #1
 8003e92:	152e      	asrs	r6, r5, #20
 8003e94:	0d5b      	lsrs	r3, r3, #21
 8003e96:	1af3      	subs	r3, r6, r3
 8003e98:	2b10      	cmp	r3, #16
 8003e9a:	dc02      	bgt.n	8003ea2 <__ieee754_rem_pio2+0x1a6>
 8003e9c:	6038      	str	r0, [r7, #0]
 8003e9e:	6079      	str	r1, [r7, #4]
 8003ea0:	e039      	b.n	8003f16 <__ieee754_rem_pio2+0x21a>
 8003ea2:	22d3      	movs	r2, #211	@ 0xd3
 8003ea4:	9808      	ldr	r0, [sp, #32]
 8003ea6:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8003ea8:	4b49      	ldr	r3, [pc, #292]	@ (8003fd0 <__ieee754_rem_pio2+0x2d4>)
 8003eaa:	0552      	lsls	r2, r2, #21
 8003eac:	f7fd fb08 	bl	80014c0 <__aeabi_dmul>
 8003eb0:	0004      	movs	r4, r0
 8003eb2:	000d      	movs	r5, r1
 8003eb4:	0002      	movs	r2, r0
 8003eb6:	000b      	movs	r3, r1
 8003eb8:	9804      	ldr	r0, [sp, #16]
 8003eba:	9905      	ldr	r1, [sp, #20]
 8003ebc:	f7fd fde6 	bl	8001a8c <__aeabi_dsub>
 8003ec0:	0002      	movs	r2, r0
 8003ec2:	000b      	movs	r3, r1
 8003ec4:	900a      	str	r0, [sp, #40]	@ 0x28
 8003ec6:	910b      	str	r1, [sp, #44]	@ 0x2c
 8003ec8:	9804      	ldr	r0, [sp, #16]
 8003eca:	9905      	ldr	r1, [sp, #20]
 8003ecc:	f7fd fdde 	bl	8001a8c <__aeabi_dsub>
 8003ed0:	0022      	movs	r2, r4
 8003ed2:	002b      	movs	r3, r5
 8003ed4:	f7fd fdda 	bl	8001a8c <__aeabi_dsub>
 8003ed8:	0004      	movs	r4, r0
 8003eda:	000d      	movs	r5, r1
 8003edc:	9808      	ldr	r0, [sp, #32]
 8003ede:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8003ee0:	4a3c      	ldr	r2, [pc, #240]	@ (8003fd4 <__ieee754_rem_pio2+0x2d8>)
 8003ee2:	4b3d      	ldr	r3, [pc, #244]	@ (8003fd8 <__ieee754_rem_pio2+0x2dc>)
 8003ee4:	f7fd faec 	bl	80014c0 <__aeabi_dmul>
 8003ee8:	0022      	movs	r2, r4
 8003eea:	002b      	movs	r3, r5
 8003eec:	f7fd fdce 	bl	8001a8c <__aeabi_dsub>
 8003ef0:	000b      	movs	r3, r1
 8003ef2:	0002      	movs	r2, r0
 8003ef4:	9006      	str	r0, [sp, #24]
 8003ef6:	9107      	str	r1, [sp, #28]
 8003ef8:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8003efa:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8003efc:	f7fd fdc6 	bl	8001a8c <__aeabi_dsub>
 8003f00:	004b      	lsls	r3, r1, #1
 8003f02:	0d5b      	lsrs	r3, r3, #21
 8003f04:	1af3      	subs	r3, r6, r3
 8003f06:	2b31      	cmp	r3, #49	@ 0x31
 8003f08:	dc21      	bgt.n	8003f4e <__ieee754_rem_pio2+0x252>
 8003f0a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003f0c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8003f0e:	6038      	str	r0, [r7, #0]
 8003f10:	6079      	str	r1, [r7, #4]
 8003f12:	9304      	str	r3, [sp, #16]
 8003f14:	9405      	str	r4, [sp, #20]
 8003f16:	683c      	ldr	r4, [r7, #0]
 8003f18:	687d      	ldr	r5, [r7, #4]
 8003f1a:	9804      	ldr	r0, [sp, #16]
 8003f1c:	9905      	ldr	r1, [sp, #20]
 8003f1e:	0022      	movs	r2, r4
 8003f20:	002b      	movs	r3, r5
 8003f22:	f7fd fdb3 	bl	8001a8c <__aeabi_dsub>
 8003f26:	9a06      	ldr	r2, [sp, #24]
 8003f28:	9b07      	ldr	r3, [sp, #28]
 8003f2a:	f7fd fdaf 	bl	8001a8c <__aeabi_dsub>
 8003f2e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8003f30:	60b8      	str	r0, [r7, #8]
 8003f32:	60f9      	str	r1, [r7, #12]
 8003f34:	2b00      	cmp	r3, #0
 8003f36:	db00      	blt.n	8003f3a <__ieee754_rem_pio2+0x23e>
 8003f38:	e717      	b.n	8003d6a <__ieee754_rem_pio2+0x6e>
 8003f3a:	2280      	movs	r2, #128	@ 0x80
 8003f3c:	0612      	lsls	r2, r2, #24
 8003f3e:	18ab      	adds	r3, r5, r2
 8003f40:	607b      	str	r3, [r7, #4]
 8003f42:	188b      	adds	r3, r1, r2
 8003f44:	603c      	str	r4, [r7, #0]
 8003f46:	60b8      	str	r0, [r7, #8]
 8003f48:	60fb      	str	r3, [r7, #12]
 8003f4a:	9b02      	ldr	r3, [sp, #8]
 8003f4c:	e744      	b.n	8003dd8 <__ieee754_rem_pio2+0xdc>
 8003f4e:	22b8      	movs	r2, #184	@ 0xb8
 8003f50:	9808      	ldr	r0, [sp, #32]
 8003f52:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8003f54:	4b20      	ldr	r3, [pc, #128]	@ (8003fd8 <__ieee754_rem_pio2+0x2dc>)
 8003f56:	0592      	lsls	r2, r2, #22
 8003f58:	f7fd fab2 	bl	80014c0 <__aeabi_dmul>
 8003f5c:	0004      	movs	r4, r0
 8003f5e:	000d      	movs	r5, r1
 8003f60:	0002      	movs	r2, r0
 8003f62:	000b      	movs	r3, r1
 8003f64:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8003f66:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8003f68:	f7fd fd90 	bl	8001a8c <__aeabi_dsub>
 8003f6c:	0002      	movs	r2, r0
 8003f6e:	000b      	movs	r3, r1
 8003f70:	9004      	str	r0, [sp, #16]
 8003f72:	9105      	str	r1, [sp, #20]
 8003f74:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8003f76:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8003f78:	f7fd fd88 	bl	8001a8c <__aeabi_dsub>
 8003f7c:	0022      	movs	r2, r4
 8003f7e:	002b      	movs	r3, r5
 8003f80:	f7fd fd84 	bl	8001a8c <__aeabi_dsub>
 8003f84:	0004      	movs	r4, r0
 8003f86:	000d      	movs	r5, r1
 8003f88:	9808      	ldr	r0, [sp, #32]
 8003f8a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8003f8c:	4a18      	ldr	r2, [pc, #96]	@ (8003ff0 <__ieee754_rem_pio2+0x2f4>)
 8003f8e:	4b19      	ldr	r3, [pc, #100]	@ (8003ff4 <__ieee754_rem_pio2+0x2f8>)
 8003f90:	f7fd fa96 	bl	80014c0 <__aeabi_dmul>
 8003f94:	0022      	movs	r2, r4
 8003f96:	002b      	movs	r3, r5
 8003f98:	f7fd fd78 	bl	8001a8c <__aeabi_dsub>
 8003f9c:	9006      	str	r0, [sp, #24]
 8003f9e:	9107      	str	r1, [sp, #28]
 8003fa0:	e769      	b.n	8003e76 <__ieee754_rem_pio2+0x17a>
 8003fa2:	4b15      	ldr	r3, [pc, #84]	@ (8003ff8 <__ieee754_rem_pio2+0x2fc>)
 8003fa4:	429d      	cmp	r5, r3
 8003fa6:	d929      	bls.n	8003ffc <__ieee754_rem_pio2+0x300>
 8003fa8:	0002      	movs	r2, r0
 8003faa:	000b      	movs	r3, r1
 8003fac:	f7fd fd6e 	bl	8001a8c <__aeabi_dsub>
 8003fb0:	60b8      	str	r0, [r7, #8]
 8003fb2:	60f9      	str	r1, [r7, #12]
 8003fb4:	6038      	str	r0, [r7, #0]
 8003fb6:	6079      	str	r1, [r7, #4]
 8003fb8:	e6af      	b.n	8003d1a <__ieee754_rem_pio2+0x1e>
 8003fba:	46c0      	nop			@ (mov r8, r8)
 8003fbc:	3fe921fb 	.word	0x3fe921fb
 8003fc0:	4002d97b 	.word	0x4002d97b
 8003fc4:	3ff921fb 	.word	0x3ff921fb
 8003fc8:	54400000 	.word	0x54400000
 8003fcc:	1a626331 	.word	0x1a626331
 8003fd0:	3dd0b461 	.word	0x3dd0b461
 8003fd4:	2e037073 	.word	0x2e037073
 8003fd8:	3ba3198a 	.word	0x3ba3198a
 8003fdc:	413921fb 	.word	0x413921fb
 8003fe0:	6dc9c883 	.word	0x6dc9c883
 8003fe4:	3fe45f30 	.word	0x3fe45f30
 8003fe8:	3fe00000 	.word	0x3fe00000
 8003fec:	08004a24 	.word	0x08004a24
 8003ff0:	252049c1 	.word	0x252049c1
 8003ff4:	397b839a 	.word	0x397b839a
 8003ff8:	7fefffff 	.word	0x7fefffff
 8003ffc:	4b2a      	ldr	r3, [pc, #168]	@ (80040a8 <__ieee754_rem_pio2+0x3ac>)
 8003ffe:	152e      	asrs	r6, r5, #20
 8004000:	18f6      	adds	r6, r6, r3
 8004002:	0531      	lsls	r1, r6, #20
 8004004:	1a6b      	subs	r3, r5, r1
 8004006:	0019      	movs	r1, r3
 8004008:	001d      	movs	r5, r3
 800400a:	0004      	movs	r4, r0
 800400c:	f7fe f948 	bl	80022a0 <__aeabi_d2iz>
 8004010:	f7fe f982 	bl	8002318 <__aeabi_i2d>
 8004014:	0002      	movs	r2, r0
 8004016:	000b      	movs	r3, r1
 8004018:	0020      	movs	r0, r4
 800401a:	0029      	movs	r1, r5
 800401c:	920e      	str	r2, [sp, #56]	@ 0x38
 800401e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8004020:	f7fd fd34 	bl	8001a8c <__aeabi_dsub>
 8004024:	2200      	movs	r2, #0
 8004026:	4b21      	ldr	r3, [pc, #132]	@ (80040ac <__ieee754_rem_pio2+0x3b0>)
 8004028:	f7fd fa4a 	bl	80014c0 <__aeabi_dmul>
 800402c:	000d      	movs	r5, r1
 800402e:	0004      	movs	r4, r0
 8004030:	f7fe f936 	bl	80022a0 <__aeabi_d2iz>
 8004034:	f7fe f970 	bl	8002318 <__aeabi_i2d>
 8004038:	0002      	movs	r2, r0
 800403a:	000b      	movs	r3, r1
 800403c:	0020      	movs	r0, r4
 800403e:	0029      	movs	r1, r5
 8004040:	9210      	str	r2, [sp, #64]	@ 0x40
 8004042:	9311      	str	r3, [sp, #68]	@ 0x44
 8004044:	f7fd fd22 	bl	8001a8c <__aeabi_dsub>
 8004048:	2200      	movs	r2, #0
 800404a:	4b18      	ldr	r3, [pc, #96]	@ (80040ac <__ieee754_rem_pio2+0x3b0>)
 800404c:	f7fd fa38 	bl	80014c0 <__aeabi_dmul>
 8004050:	2503      	movs	r5, #3
 8004052:	9012      	str	r0, [sp, #72]	@ 0x48
 8004054:	9113      	str	r1, [sp, #76]	@ 0x4c
 8004056:	ac0e      	add	r4, sp, #56	@ 0x38
 8004058:	2200      	movs	r2, #0
 800405a:	6920      	ldr	r0, [r4, #16]
 800405c:	6961      	ldr	r1, [r4, #20]
 800405e:	2300      	movs	r3, #0
 8004060:	9502      	str	r5, [sp, #8]
 8004062:	3c08      	subs	r4, #8
 8004064:	3d01      	subs	r5, #1
 8004066:	f7fc f9df 	bl	8000428 <__aeabi_dcmpeq>
 800406a:	2800      	cmp	r0, #0
 800406c:	d1f4      	bne.n	8004058 <__ieee754_rem_pio2+0x35c>
 800406e:	4b10      	ldr	r3, [pc, #64]	@ (80040b0 <__ieee754_rem_pio2+0x3b4>)
 8004070:	0032      	movs	r2, r6
 8004072:	9301      	str	r3, [sp, #4]
 8004074:	2302      	movs	r3, #2
 8004076:	0039      	movs	r1, r7
 8004078:	9300      	str	r3, [sp, #0]
 800407a:	a80e      	add	r0, sp, #56	@ 0x38
 800407c:	9b02      	ldr	r3, [sp, #8]
 800407e:	f000 f81d 	bl	80040bc <__kernel_rem_pio2>
 8004082:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8004084:	9002      	str	r0, [sp, #8]
 8004086:	2b00      	cmp	r3, #0
 8004088:	db00      	blt.n	800408c <__ieee754_rem_pio2+0x390>
 800408a:	e66e      	b.n	8003d6a <__ieee754_rem_pio2+0x6e>
 800408c:	2080      	movs	r0, #128	@ 0x80
 800408e:	6879      	ldr	r1, [r7, #4]
 8004090:	683a      	ldr	r2, [r7, #0]
 8004092:	0600      	lsls	r0, r0, #24
 8004094:	180b      	adds	r3, r1, r0
 8004096:	68f9      	ldr	r1, [r7, #12]
 8004098:	603a      	str	r2, [r7, #0]
 800409a:	607b      	str	r3, [r7, #4]
 800409c:	68ba      	ldr	r2, [r7, #8]
 800409e:	180b      	adds	r3, r1, r0
 80040a0:	60ba      	str	r2, [r7, #8]
 80040a2:	60fb      	str	r3, [r7, #12]
 80040a4:	e751      	b.n	8003f4a <__ieee754_rem_pio2+0x24e>
 80040a6:	46c0      	nop			@ (mov r8, r8)
 80040a8:	fffffbea 	.word	0xfffffbea
 80040ac:	41700000 	.word	0x41700000
 80040b0:	08004aa4 	.word	0x08004aa4

080040b4 <fabs>:
 80040b4:	0049      	lsls	r1, r1, #1
 80040b6:	084b      	lsrs	r3, r1, #1
 80040b8:	0019      	movs	r1, r3
 80040ba:	4770      	bx	lr

080040bc <__kernel_rem_pio2>:
 80040bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80040be:	4cc6      	ldr	r4, [pc, #792]	@ (80043d8 <__kernel_rem_pio2+0x31c>)
 80040c0:	44a5      	add	sp, r4
 80040c2:	0014      	movs	r4, r2
 80040c4:	9aa4      	ldr	r2, [sp, #656]	@ 0x290
 80040c6:	930e      	str	r3, [sp, #56]	@ 0x38
 80040c8:	4bc4      	ldr	r3, [pc, #784]	@ (80043dc <__kernel_rem_pio2+0x320>)
 80040ca:	0092      	lsls	r2, r2, #2
 80040cc:	58d3      	ldr	r3, [r2, r3]
 80040ce:	900f      	str	r0, [sp, #60]	@ 0x3c
 80040d0:	9308      	str	r3, [sp, #32]
 80040d2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80040d4:	9105      	str	r1, [sp, #20]
 80040d6:	3b01      	subs	r3, #1
 80040d8:	930d      	str	r3, [sp, #52]	@ 0x34
 80040da:	2300      	movs	r3, #0
 80040dc:	9300      	str	r3, [sp, #0]
 80040de:	0023      	movs	r3, r4
 80040e0:	3314      	adds	r3, #20
 80040e2:	db04      	blt.n	80040ee <__kernel_rem_pio2+0x32>
 80040e4:	2118      	movs	r1, #24
 80040e6:	1ee0      	subs	r0, r4, #3
 80040e8:	f7fc f8a2 	bl	8000230 <__divsi3>
 80040ec:	9000      	str	r0, [sp, #0]
 80040ee:	9b00      	ldr	r3, [sp, #0]
 80040f0:	ae26      	add	r6, sp, #152	@ 0x98
 80040f2:	1c5a      	adds	r2, r3, #1
 80040f4:	2318      	movs	r3, #24
 80040f6:	425b      	negs	r3, r3
 80040f8:	4353      	muls	r3, r2
 80040fa:	191b      	adds	r3, r3, r4
 80040fc:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80040fe:	9302      	str	r3, [sp, #8]
 8004100:	9b00      	ldr	r3, [sp, #0]
 8004102:	1a9d      	subs	r5, r3, r2
 8004104:	002c      	movs	r4, r5
 8004106:	9b08      	ldr	r3, [sp, #32]
 8004108:	189f      	adds	r7, r3, r2
 800410a:	1b63      	subs	r3, r4, r5
 800410c:	429f      	cmp	r7, r3
 800410e:	da0f      	bge.n	8004130 <__kernel_rem_pio2+0x74>
 8004110:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8004112:	af76      	add	r7, sp, #472	@ 0x1d8
 8004114:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8004116:	9a08      	ldr	r2, [sp, #32]
 8004118:	1aeb      	subs	r3, r5, r3
 800411a:	429a      	cmp	r2, r3
 800411c:	db30      	blt.n	8004180 <__kernel_rem_pio2+0xc4>
 800411e:	00eb      	lsls	r3, r5, #3
 8004120:	aa26      	add	r2, sp, #152	@ 0x98
 8004122:	2400      	movs	r4, #0
 8004124:	189e      	adds	r6, r3, r2
 8004126:	2300      	movs	r3, #0
 8004128:	9306      	str	r3, [sp, #24]
 800412a:	9407      	str	r4, [sp, #28]
 800412c:	2400      	movs	r4, #0
 800412e:	e01e      	b.n	800416e <__kernel_rem_pio2+0xb2>
 8004130:	2c00      	cmp	r4, #0
 8004132:	db07      	blt.n	8004144 <__kernel_rem_pio2+0x88>
 8004134:	9aa5      	ldr	r2, [sp, #660]	@ 0x294
 8004136:	00a3      	lsls	r3, r4, #2
 8004138:	58d0      	ldr	r0, [r2, r3]
 800413a:	f7fe f8ed 	bl	8002318 <__aeabi_i2d>
 800413e:	c603      	stmia	r6!, {r0, r1}
 8004140:	3401      	adds	r4, #1
 8004142:	e7e2      	b.n	800410a <__kernel_rem_pio2+0x4e>
 8004144:	2000      	movs	r0, #0
 8004146:	2100      	movs	r1, #0
 8004148:	e7f9      	b.n	800413e <__kernel_rem_pio2+0x82>
 800414a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800414c:	00e1      	lsls	r1, r4, #3
 800414e:	1859      	adds	r1, r3, r1
 8004150:	6808      	ldr	r0, [r1, #0]
 8004152:	6849      	ldr	r1, [r1, #4]
 8004154:	6832      	ldr	r2, [r6, #0]
 8004156:	6873      	ldr	r3, [r6, #4]
 8004158:	f7fd f9b2 	bl	80014c0 <__aeabi_dmul>
 800415c:	0002      	movs	r2, r0
 800415e:	000b      	movs	r3, r1
 8004160:	9806      	ldr	r0, [sp, #24]
 8004162:	9907      	ldr	r1, [sp, #28]
 8004164:	f7fc f9ac 	bl	80004c0 <__aeabi_dadd>
 8004168:	9006      	str	r0, [sp, #24]
 800416a:	9107      	str	r1, [sp, #28]
 800416c:	3401      	adds	r4, #1
 800416e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8004170:	3e08      	subs	r6, #8
 8004172:	429c      	cmp	r4, r3
 8004174:	dde9      	ble.n	800414a <__kernel_rem_pio2+0x8e>
 8004176:	9b06      	ldr	r3, [sp, #24]
 8004178:	9c07      	ldr	r4, [sp, #28]
 800417a:	3501      	adds	r5, #1
 800417c:	c718      	stmia	r7!, {r3, r4}
 800417e:	e7c9      	b.n	8004114 <__kernel_rem_pio2+0x58>
 8004180:	9b08      	ldr	r3, [sp, #32]
 8004182:	aa12      	add	r2, sp, #72	@ 0x48
 8004184:	009b      	lsls	r3, r3, #2
 8004186:	189b      	adds	r3, r3, r2
 8004188:	9311      	str	r3, [sp, #68]	@ 0x44
 800418a:	9b00      	ldr	r3, [sp, #0]
 800418c:	9aa5      	ldr	r2, [sp, #660]	@ 0x294
 800418e:	009b      	lsls	r3, r3, #2
 8004190:	18d3      	adds	r3, r2, r3
 8004192:	9310      	str	r3, [sp, #64]	@ 0x40
 8004194:	9b08      	ldr	r3, [sp, #32]
 8004196:	9300      	str	r3, [sp, #0]
 8004198:	9b00      	ldr	r3, [sp, #0]
 800419a:	aa76      	add	r2, sp, #472	@ 0x1d8
 800419c:	00db      	lsls	r3, r3, #3
 800419e:	18d3      	adds	r3, r2, r3
 80041a0:	681e      	ldr	r6, [r3, #0]
 80041a2:	685f      	ldr	r7, [r3, #4]
 80041a4:	ab12      	add	r3, sp, #72	@ 0x48
 80041a6:	001d      	movs	r5, r3
 80041a8:	9c00      	ldr	r4, [sp, #0]
 80041aa:	930a      	str	r3, [sp, #40]	@ 0x28
 80041ac:	2c00      	cmp	r4, #0
 80041ae:	dc73      	bgt.n	8004298 <__kernel_rem_pio2+0x1dc>
 80041b0:	0030      	movs	r0, r6
 80041b2:	0039      	movs	r1, r7
 80041b4:	9a02      	ldr	r2, [sp, #8]
 80041b6:	f000 fad5 	bl	8004764 <scalbn>
 80041ba:	23ff      	movs	r3, #255	@ 0xff
 80041bc:	2200      	movs	r2, #0
 80041be:	059b      	lsls	r3, r3, #22
 80041c0:	0004      	movs	r4, r0
 80041c2:	000d      	movs	r5, r1
 80041c4:	f7fd f97c 	bl	80014c0 <__aeabi_dmul>
 80041c8:	f000 fb38 	bl	800483c <floor>
 80041cc:	2200      	movs	r2, #0
 80041ce:	4b84      	ldr	r3, [pc, #528]	@ (80043e0 <__kernel_rem_pio2+0x324>)
 80041d0:	f7fd f976 	bl	80014c0 <__aeabi_dmul>
 80041d4:	0002      	movs	r2, r0
 80041d6:	000b      	movs	r3, r1
 80041d8:	0020      	movs	r0, r4
 80041da:	0029      	movs	r1, r5
 80041dc:	f7fd fc56 	bl	8001a8c <__aeabi_dsub>
 80041e0:	000d      	movs	r5, r1
 80041e2:	0004      	movs	r4, r0
 80041e4:	f7fe f85c 	bl	80022a0 <__aeabi_d2iz>
 80041e8:	900c      	str	r0, [sp, #48]	@ 0x30
 80041ea:	f7fe f895 	bl	8002318 <__aeabi_i2d>
 80041ee:	000b      	movs	r3, r1
 80041f0:	0002      	movs	r2, r0
 80041f2:	0029      	movs	r1, r5
 80041f4:	0020      	movs	r0, r4
 80041f6:	f7fd fc49 	bl	8001a8c <__aeabi_dsub>
 80041fa:	9b02      	ldr	r3, [sp, #8]
 80041fc:	0006      	movs	r6, r0
 80041fe:	000f      	movs	r7, r1
 8004200:	2b00      	cmp	r3, #0
 8004202:	dd6f      	ble.n	80042e4 <__kernel_rem_pio2+0x228>
 8004204:	2018      	movs	r0, #24
 8004206:	9b00      	ldr	r3, [sp, #0]
 8004208:	aa12      	add	r2, sp, #72	@ 0x48
 800420a:	3b01      	subs	r3, #1
 800420c:	009b      	lsls	r3, r3, #2
 800420e:	589a      	ldr	r2, [r3, r2]
 8004210:	9902      	ldr	r1, [sp, #8]
 8004212:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8004214:	1a40      	subs	r0, r0, r1
 8004216:	0011      	movs	r1, r2
 8004218:	4101      	asrs	r1, r0
 800421a:	1864      	adds	r4, r4, r1
 800421c:	4081      	lsls	r1, r0
 800421e:	1a52      	subs	r2, r2, r1
 8004220:	a912      	add	r1, sp, #72	@ 0x48
 8004222:	505a      	str	r2, [r3, r1]
 8004224:	2317      	movs	r3, #23
 8004226:	9902      	ldr	r1, [sp, #8]
 8004228:	940c      	str	r4, [sp, #48]	@ 0x30
 800422a:	1a5b      	subs	r3, r3, r1
 800422c:	411a      	asrs	r2, r3
 800422e:	9206      	str	r2, [sp, #24]
 8004230:	9b06      	ldr	r3, [sp, #24]
 8004232:	2b00      	cmp	r3, #0
 8004234:	dd68      	ble.n	8004308 <__kernel_rem_pio2+0x24c>
 8004236:	2200      	movs	r2, #0
 8004238:	2580      	movs	r5, #128	@ 0x80
 800423a:	0014      	movs	r4, r2
 800423c:	2101      	movs	r1, #1
 800423e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8004240:	4868      	ldr	r0, [pc, #416]	@ (80043e4 <__kernel_rem_pio2+0x328>)
 8004242:	3301      	adds	r3, #1
 8004244:	930c      	str	r3, [sp, #48]	@ 0x30
 8004246:	046d      	lsls	r5, r5, #17
 8004248:	9b00      	ldr	r3, [sp, #0]
 800424a:	4293      	cmp	r3, r2
 800424c:	dd00      	ble.n	8004250 <__kernel_rem_pio2+0x194>
 800424e:	e098      	b.n	8004382 <__kernel_rem_pio2+0x2c6>
 8004250:	9b02      	ldr	r3, [sp, #8]
 8004252:	2b00      	cmp	r3, #0
 8004254:	dd05      	ble.n	8004262 <__kernel_rem_pio2+0x1a6>
 8004256:	2b01      	cmp	r3, #1
 8004258:	d100      	bne.n	800425c <__kernel_rem_pio2+0x1a0>
 800425a:	e0a4      	b.n	80043a6 <__kernel_rem_pio2+0x2ea>
 800425c:	2b02      	cmp	r3, #2
 800425e:	d100      	bne.n	8004262 <__kernel_rem_pio2+0x1a6>
 8004260:	e0ab      	b.n	80043ba <__kernel_rem_pio2+0x2fe>
 8004262:	9b06      	ldr	r3, [sp, #24]
 8004264:	2b02      	cmp	r3, #2
 8004266:	d14f      	bne.n	8004308 <__kernel_rem_pio2+0x24c>
 8004268:	0032      	movs	r2, r6
 800426a:	003b      	movs	r3, r7
 800426c:	2000      	movs	r0, #0
 800426e:	495e      	ldr	r1, [pc, #376]	@ (80043e8 <__kernel_rem_pio2+0x32c>)
 8004270:	f7fd fc0c 	bl	8001a8c <__aeabi_dsub>
 8004274:	0006      	movs	r6, r0
 8004276:	000f      	movs	r7, r1
 8004278:	2c00      	cmp	r4, #0
 800427a:	d045      	beq.n	8004308 <__kernel_rem_pio2+0x24c>
 800427c:	9a02      	ldr	r2, [sp, #8]
 800427e:	2000      	movs	r0, #0
 8004280:	4959      	ldr	r1, [pc, #356]	@ (80043e8 <__kernel_rem_pio2+0x32c>)
 8004282:	f000 fa6f 	bl	8004764 <scalbn>
 8004286:	0002      	movs	r2, r0
 8004288:	000b      	movs	r3, r1
 800428a:	0030      	movs	r0, r6
 800428c:	0039      	movs	r1, r7
 800428e:	f7fd fbfd 	bl	8001a8c <__aeabi_dsub>
 8004292:	0006      	movs	r6, r0
 8004294:	000f      	movs	r7, r1
 8004296:	e037      	b.n	8004308 <__kernel_rem_pio2+0x24c>
 8004298:	2200      	movs	r2, #0
 800429a:	4b54      	ldr	r3, [pc, #336]	@ (80043ec <__kernel_rem_pio2+0x330>)
 800429c:	0030      	movs	r0, r6
 800429e:	0039      	movs	r1, r7
 80042a0:	f7fd f90e 	bl	80014c0 <__aeabi_dmul>
 80042a4:	f7fd fffc 	bl	80022a0 <__aeabi_d2iz>
 80042a8:	f7fe f836 	bl	8002318 <__aeabi_i2d>
 80042ac:	2200      	movs	r2, #0
 80042ae:	4b50      	ldr	r3, [pc, #320]	@ (80043f0 <__kernel_rem_pio2+0x334>)
 80042b0:	9006      	str	r0, [sp, #24]
 80042b2:	9107      	str	r1, [sp, #28]
 80042b4:	f7fd f904 	bl	80014c0 <__aeabi_dmul>
 80042b8:	0002      	movs	r2, r0
 80042ba:	000b      	movs	r3, r1
 80042bc:	0030      	movs	r0, r6
 80042be:	0039      	movs	r1, r7
 80042c0:	f7fd fbe4 	bl	8001a8c <__aeabi_dsub>
 80042c4:	f7fd ffec 	bl	80022a0 <__aeabi_d2iz>
 80042c8:	3c01      	subs	r4, #1
 80042ca:	aa76      	add	r2, sp, #472	@ 0x1d8
 80042cc:	00e3      	lsls	r3, r4, #3
 80042ce:	18d3      	adds	r3, r2, r3
 80042d0:	c501      	stmia	r5!, {r0}
 80042d2:	681a      	ldr	r2, [r3, #0]
 80042d4:	685b      	ldr	r3, [r3, #4]
 80042d6:	9806      	ldr	r0, [sp, #24]
 80042d8:	9907      	ldr	r1, [sp, #28]
 80042da:	f7fc f8f1 	bl	80004c0 <__aeabi_dadd>
 80042de:	0006      	movs	r6, r0
 80042e0:	000f      	movs	r7, r1
 80042e2:	e763      	b.n	80041ac <__kernel_rem_pio2+0xf0>
 80042e4:	9b02      	ldr	r3, [sp, #8]
 80042e6:	2b00      	cmp	r3, #0
 80042e8:	d107      	bne.n	80042fa <__kernel_rem_pio2+0x23e>
 80042ea:	9b00      	ldr	r3, [sp, #0]
 80042ec:	aa12      	add	r2, sp, #72	@ 0x48
 80042ee:	3b01      	subs	r3, #1
 80042f0:	009b      	lsls	r3, r3, #2
 80042f2:	589b      	ldr	r3, [r3, r2]
 80042f4:	15db      	asrs	r3, r3, #23
 80042f6:	9306      	str	r3, [sp, #24]
 80042f8:	e79a      	b.n	8004230 <__kernel_rem_pio2+0x174>
 80042fa:	2200      	movs	r2, #0
 80042fc:	4b3d      	ldr	r3, [pc, #244]	@ (80043f4 <__kernel_rem_pio2+0x338>)
 80042fe:	f7fc f8b7 	bl	8000470 <__aeabi_dcmpge>
 8004302:	2800      	cmp	r0, #0
 8004304:	d13a      	bne.n	800437c <__kernel_rem_pio2+0x2c0>
 8004306:	9006      	str	r0, [sp, #24]
 8004308:	2200      	movs	r2, #0
 800430a:	2300      	movs	r3, #0
 800430c:	0030      	movs	r0, r6
 800430e:	0039      	movs	r1, r7
 8004310:	f7fc f88a 	bl	8000428 <__aeabi_dcmpeq>
 8004314:	2800      	cmp	r0, #0
 8004316:	d100      	bne.n	800431a <__kernel_rem_pio2+0x25e>
 8004318:	e0b5      	b.n	8004486 <__kernel_rem_pio2+0x3ca>
 800431a:	2200      	movs	r2, #0
 800431c:	9b00      	ldr	r3, [sp, #0]
 800431e:	3b01      	subs	r3, #1
 8004320:	9908      	ldr	r1, [sp, #32]
 8004322:	428b      	cmp	r3, r1
 8004324:	da51      	bge.n	80043ca <__kernel_rem_pio2+0x30e>
 8004326:	2a00      	cmp	r2, #0
 8004328:	d100      	bne.n	800432c <__kernel_rem_pio2+0x270>
 800432a:	e096      	b.n	800445a <__kernel_rem_pio2+0x39e>
 800432c:	9b00      	ldr	r3, [sp, #0]
 800432e:	aa12      	add	r2, sp, #72	@ 0x48
 8004330:	3b01      	subs	r3, #1
 8004332:	9300      	str	r3, [sp, #0]
 8004334:	9b02      	ldr	r3, [sp, #8]
 8004336:	3b18      	subs	r3, #24
 8004338:	9302      	str	r3, [sp, #8]
 800433a:	9b00      	ldr	r3, [sp, #0]
 800433c:	009b      	lsls	r3, r3, #2
 800433e:	589b      	ldr	r3, [r3, r2]
 8004340:	2b00      	cmp	r3, #0
 8004342:	d0f3      	beq.n	800432c <__kernel_rem_pio2+0x270>
 8004344:	2000      	movs	r0, #0
 8004346:	9a02      	ldr	r2, [sp, #8]
 8004348:	4927      	ldr	r1, [pc, #156]	@ (80043e8 <__kernel_rem_pio2+0x32c>)
 800434a:	f000 fa0b 	bl	8004764 <scalbn>
 800434e:	0004      	movs	r4, r0
 8004350:	000d      	movs	r5, r1
 8004352:	9e00      	ldr	r6, [sp, #0]
 8004354:	2e00      	cmp	r6, #0
 8004356:	db00      	blt.n	800435a <__kernel_rem_pio2+0x29e>
 8004358:	e0d2      	b.n	8004500 <__kernel_rem_pio2+0x444>
 800435a:	4b27      	ldr	r3, [pc, #156]	@ (80043f8 <__kernel_rem_pio2+0x33c>)
 800435c:	9c00      	ldr	r4, [sp, #0]
 800435e:	930a      	str	r3, [sp, #40]	@ 0x28
 8004360:	2c00      	cmp	r4, #0
 8004362:	da00      	bge.n	8004366 <__kernel_rem_pio2+0x2aa>
 8004364:	e103      	b.n	800456e <__kernel_rem_pio2+0x4b2>
 8004366:	00e3      	lsls	r3, r4, #3
 8004368:	aa76      	add	r2, sp, #472	@ 0x1d8
 800436a:	189f      	adds	r7, r3, r2
 800436c:	2300      	movs	r3, #0
 800436e:	2200      	movs	r2, #0
 8004370:	9202      	str	r2, [sp, #8]
 8004372:	9303      	str	r3, [sp, #12]
 8004374:	9b00      	ldr	r3, [sp, #0]
 8004376:	2500      	movs	r5, #0
 8004378:	1b1e      	subs	r6, r3, r4
 800437a:	e0ea      	b.n	8004552 <__kernel_rem_pio2+0x496>
 800437c:	2302      	movs	r3, #2
 800437e:	9306      	str	r3, [sp, #24]
 8004380:	e759      	b.n	8004236 <__kernel_rem_pio2+0x17a>
 8004382:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004384:	681b      	ldr	r3, [r3, #0]
 8004386:	2c00      	cmp	r4, #0
 8004388:	d10b      	bne.n	80043a2 <__kernel_rem_pio2+0x2e6>
 800438a:	2b00      	cmp	r3, #0
 800438c:	d003      	beq.n	8004396 <__kernel_rem_pio2+0x2da>
 800438e:	1aeb      	subs	r3, r5, r3
 8004390:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8004392:	6023      	str	r3, [r4, #0]
 8004394:	000b      	movs	r3, r1
 8004396:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8004398:	3201      	adds	r2, #1
 800439a:	3404      	adds	r4, #4
 800439c:	940a      	str	r4, [sp, #40]	@ 0x28
 800439e:	001c      	movs	r4, r3
 80043a0:	e752      	b.n	8004248 <__kernel_rem_pio2+0x18c>
 80043a2:	1ac3      	subs	r3, r0, r3
 80043a4:	e7f4      	b.n	8004390 <__kernel_rem_pio2+0x2d4>
 80043a6:	9b00      	ldr	r3, [sp, #0]
 80043a8:	aa12      	add	r2, sp, #72	@ 0x48
 80043aa:	3b01      	subs	r3, #1
 80043ac:	009b      	lsls	r3, r3, #2
 80043ae:	589a      	ldr	r2, [r3, r2]
 80043b0:	0252      	lsls	r2, r2, #9
 80043b2:	0a52      	lsrs	r2, r2, #9
 80043b4:	a912      	add	r1, sp, #72	@ 0x48
 80043b6:	505a      	str	r2, [r3, r1]
 80043b8:	e753      	b.n	8004262 <__kernel_rem_pio2+0x1a6>
 80043ba:	9b00      	ldr	r3, [sp, #0]
 80043bc:	aa12      	add	r2, sp, #72	@ 0x48
 80043be:	3b01      	subs	r3, #1
 80043c0:	009b      	lsls	r3, r3, #2
 80043c2:	589a      	ldr	r2, [r3, r2]
 80043c4:	0292      	lsls	r2, r2, #10
 80043c6:	0a92      	lsrs	r2, r2, #10
 80043c8:	e7f4      	b.n	80043b4 <__kernel_rem_pio2+0x2f8>
 80043ca:	0099      	lsls	r1, r3, #2
 80043cc:	a812      	add	r0, sp, #72	@ 0x48
 80043ce:	5809      	ldr	r1, [r1, r0]
 80043d0:	3b01      	subs	r3, #1
 80043d2:	430a      	orrs	r2, r1
 80043d4:	e7a4      	b.n	8004320 <__kernel_rem_pio2+0x264>
 80043d6:	46c0      	nop			@ (mov r8, r8)
 80043d8:	fffffd84 	.word	0xfffffd84
 80043dc:	08004bf0 	.word	0x08004bf0
 80043e0:	40200000 	.word	0x40200000
 80043e4:	00ffffff 	.word	0x00ffffff
 80043e8:	3ff00000 	.word	0x3ff00000
 80043ec:	3e700000 	.word	0x3e700000
 80043f0:	41700000 	.word	0x41700000
 80043f4:	3fe00000 	.word	0x3fe00000
 80043f8:	08004bb0 	.word	0x08004bb0
 80043fc:	3301      	adds	r3, #1
 80043fe:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8004400:	009a      	lsls	r2, r3, #2
 8004402:	4252      	negs	r2, r2
 8004404:	588a      	ldr	r2, [r1, r2]
 8004406:	2a00      	cmp	r2, #0
 8004408:	d0f8      	beq.n	80043fc <__kernel_rem_pio2+0x340>
 800440a:	9a00      	ldr	r2, [sp, #0]
 800440c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 800440e:	1c55      	adds	r5, r2, #1
 8004410:	1852      	adds	r2, r2, r1
 8004412:	00d2      	lsls	r2, r2, #3
 8004414:	a926      	add	r1, sp, #152	@ 0x98
 8004416:	188c      	adds	r4, r1, r2
 8004418:	9a00      	ldr	r2, [sp, #0]
 800441a:	18d3      	adds	r3, r2, r3
 800441c:	9306      	str	r3, [sp, #24]
 800441e:	9b06      	ldr	r3, [sp, #24]
 8004420:	42ab      	cmp	r3, r5
 8004422:	da00      	bge.n	8004426 <__kernel_rem_pio2+0x36a>
 8004424:	e6b7      	b.n	8004196 <__kernel_rem_pio2+0xda>
 8004426:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8004428:	00ab      	lsls	r3, r5, #2
 800442a:	58d0      	ldr	r0, [r2, r3]
 800442c:	f7fd ff74 	bl	8002318 <__aeabi_i2d>
 8004430:	2200      	movs	r2, #0
 8004432:	2300      	movs	r3, #0
 8004434:	0027      	movs	r7, r4
 8004436:	2600      	movs	r6, #0
 8004438:	6020      	str	r0, [r4, #0]
 800443a:	6061      	str	r1, [r4, #4]
 800443c:	9200      	str	r2, [sp, #0]
 800443e:	9301      	str	r3, [sp, #4]
 8004440:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8004442:	429e      	cmp	r6, r3
 8004444:	dd0b      	ble.n	800445e <__kernel_rem_pio2+0x3a2>
 8004446:	00eb      	lsls	r3, r5, #3
 8004448:	aa76      	add	r2, sp, #472	@ 0x1d8
 800444a:	18d3      	adds	r3, r2, r3
 800444c:	3501      	adds	r5, #1
 800444e:	9900      	ldr	r1, [sp, #0]
 8004450:	9a01      	ldr	r2, [sp, #4]
 8004452:	3408      	adds	r4, #8
 8004454:	6019      	str	r1, [r3, #0]
 8004456:	605a      	str	r2, [r3, #4]
 8004458:	e7e1      	b.n	800441e <__kernel_rem_pio2+0x362>
 800445a:	2301      	movs	r3, #1
 800445c:	e7cf      	b.n	80043fe <__kernel_rem_pio2+0x342>
 800445e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004460:	00f1      	lsls	r1, r6, #3
 8004462:	1859      	adds	r1, r3, r1
 8004464:	6808      	ldr	r0, [r1, #0]
 8004466:	6849      	ldr	r1, [r1, #4]
 8004468:	683a      	ldr	r2, [r7, #0]
 800446a:	687b      	ldr	r3, [r7, #4]
 800446c:	f7fd f828 	bl	80014c0 <__aeabi_dmul>
 8004470:	0002      	movs	r2, r0
 8004472:	000b      	movs	r3, r1
 8004474:	9800      	ldr	r0, [sp, #0]
 8004476:	9901      	ldr	r1, [sp, #4]
 8004478:	f7fc f822 	bl	80004c0 <__aeabi_dadd>
 800447c:	3601      	adds	r6, #1
 800447e:	9000      	str	r0, [sp, #0]
 8004480:	9101      	str	r1, [sp, #4]
 8004482:	3f08      	subs	r7, #8
 8004484:	e7dc      	b.n	8004440 <__kernel_rem_pio2+0x384>
 8004486:	9b02      	ldr	r3, [sp, #8]
 8004488:	0030      	movs	r0, r6
 800448a:	425a      	negs	r2, r3
 800448c:	0039      	movs	r1, r7
 800448e:	f000 f969 	bl	8004764 <scalbn>
 8004492:	2200      	movs	r2, #0
 8004494:	4bb1      	ldr	r3, [pc, #708]	@ (800475c <__kernel_rem_pio2+0x6a0>)
 8004496:	0006      	movs	r6, r0
 8004498:	000f      	movs	r7, r1
 800449a:	f7fb ffe9 	bl	8000470 <__aeabi_dcmpge>
 800449e:	2800      	cmp	r0, #0
 80044a0:	d025      	beq.n	80044ee <__kernel_rem_pio2+0x432>
 80044a2:	2200      	movs	r2, #0
 80044a4:	4bae      	ldr	r3, [pc, #696]	@ (8004760 <__kernel_rem_pio2+0x6a4>)
 80044a6:	0030      	movs	r0, r6
 80044a8:	0039      	movs	r1, r7
 80044aa:	f7fd f809 	bl	80014c0 <__aeabi_dmul>
 80044ae:	f7fd fef7 	bl	80022a0 <__aeabi_d2iz>
 80044b2:	9b00      	ldr	r3, [sp, #0]
 80044b4:	0004      	movs	r4, r0
 80044b6:	009d      	lsls	r5, r3, #2
 80044b8:	f7fd ff2e 	bl	8002318 <__aeabi_i2d>
 80044bc:	2200      	movs	r2, #0
 80044be:	4ba7      	ldr	r3, [pc, #668]	@ (800475c <__kernel_rem_pio2+0x6a0>)
 80044c0:	f7fc fffe 	bl	80014c0 <__aeabi_dmul>
 80044c4:	0002      	movs	r2, r0
 80044c6:	000b      	movs	r3, r1
 80044c8:	0030      	movs	r0, r6
 80044ca:	0039      	movs	r1, r7
 80044cc:	f7fd fade 	bl	8001a8c <__aeabi_dsub>
 80044d0:	f7fd fee6 	bl	80022a0 <__aeabi_d2iz>
 80044d4:	ab12      	add	r3, sp, #72	@ 0x48
 80044d6:	5158      	str	r0, [r3, r5]
 80044d8:	9b00      	ldr	r3, [sp, #0]
 80044da:	aa12      	add	r2, sp, #72	@ 0x48
 80044dc:	3301      	adds	r3, #1
 80044de:	9300      	str	r3, [sp, #0]
 80044e0:	9b02      	ldr	r3, [sp, #8]
 80044e2:	3318      	adds	r3, #24
 80044e4:	9302      	str	r3, [sp, #8]
 80044e6:	9b00      	ldr	r3, [sp, #0]
 80044e8:	009b      	lsls	r3, r3, #2
 80044ea:	509c      	str	r4, [r3, r2]
 80044ec:	e72a      	b.n	8004344 <__kernel_rem_pio2+0x288>
 80044ee:	9b00      	ldr	r3, [sp, #0]
 80044f0:	0030      	movs	r0, r6
 80044f2:	0039      	movs	r1, r7
 80044f4:	009c      	lsls	r4, r3, #2
 80044f6:	f7fd fed3 	bl	80022a0 <__aeabi_d2iz>
 80044fa:	ab12      	add	r3, sp, #72	@ 0x48
 80044fc:	5118      	str	r0, [r3, r4]
 80044fe:	e721      	b.n	8004344 <__kernel_rem_pio2+0x288>
 8004500:	00f3      	lsls	r3, r6, #3
 8004502:	aa76      	add	r2, sp, #472	@ 0x1d8
 8004504:	18d7      	adds	r7, r2, r3
 8004506:	00b3      	lsls	r3, r6, #2
 8004508:	aa12      	add	r2, sp, #72	@ 0x48
 800450a:	5898      	ldr	r0, [r3, r2]
 800450c:	f7fd ff04 	bl	8002318 <__aeabi_i2d>
 8004510:	0022      	movs	r2, r4
 8004512:	002b      	movs	r3, r5
 8004514:	f7fc ffd4 	bl	80014c0 <__aeabi_dmul>
 8004518:	2200      	movs	r2, #0
 800451a:	6038      	str	r0, [r7, #0]
 800451c:	6079      	str	r1, [r7, #4]
 800451e:	4b90      	ldr	r3, [pc, #576]	@ (8004760 <__kernel_rem_pio2+0x6a4>)
 8004520:	0020      	movs	r0, r4
 8004522:	0029      	movs	r1, r5
 8004524:	f7fc ffcc 	bl	80014c0 <__aeabi_dmul>
 8004528:	3e01      	subs	r6, #1
 800452a:	0004      	movs	r4, r0
 800452c:	000d      	movs	r5, r1
 800452e:	e711      	b.n	8004354 <__kernel_rem_pio2+0x298>
 8004530:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004532:	00e9      	lsls	r1, r5, #3
 8004534:	18c9      	adds	r1, r1, r3
 8004536:	6808      	ldr	r0, [r1, #0]
 8004538:	6849      	ldr	r1, [r1, #4]
 800453a:	cf0c      	ldmia	r7!, {r2, r3}
 800453c:	f7fc ffc0 	bl	80014c0 <__aeabi_dmul>
 8004540:	0002      	movs	r2, r0
 8004542:	000b      	movs	r3, r1
 8004544:	9802      	ldr	r0, [sp, #8]
 8004546:	9903      	ldr	r1, [sp, #12]
 8004548:	f7fb ffba 	bl	80004c0 <__aeabi_dadd>
 800454c:	9002      	str	r0, [sp, #8]
 800454e:	9103      	str	r1, [sp, #12]
 8004550:	3501      	adds	r5, #1
 8004552:	9b08      	ldr	r3, [sp, #32]
 8004554:	429d      	cmp	r5, r3
 8004556:	dc01      	bgt.n	800455c <__kernel_rem_pio2+0x4a0>
 8004558:	42b5      	cmp	r5, r6
 800455a:	dde9      	ble.n	8004530 <__kernel_rem_pio2+0x474>
 800455c:	00f6      	lsls	r6, r6, #3
 800455e:	ab4e      	add	r3, sp, #312	@ 0x138
 8004560:	199b      	adds	r3, r3, r6
 8004562:	9902      	ldr	r1, [sp, #8]
 8004564:	9a03      	ldr	r2, [sp, #12]
 8004566:	3c01      	subs	r4, #1
 8004568:	6019      	str	r1, [r3, #0]
 800456a:	605a      	str	r2, [r3, #4]
 800456c:	e6f8      	b.n	8004360 <__kernel_rem_pio2+0x2a4>
 800456e:	9ba4      	ldr	r3, [sp, #656]	@ 0x290
 8004570:	2b02      	cmp	r3, #2
 8004572:	dc0b      	bgt.n	800458c <__kernel_rem_pio2+0x4d0>
 8004574:	2b00      	cmp	r3, #0
 8004576:	dd00      	ble.n	800457a <__kernel_rem_pio2+0x4be>
 8004578:	e084      	b.n	8004684 <__kernel_rem_pio2+0x5c8>
 800457a:	d052      	beq.n	8004622 <__kernel_rem_pio2+0x566>
 800457c:	2007      	movs	r0, #7
 800457e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8004580:	4003      	ands	r3, r0
 8004582:	0018      	movs	r0, r3
 8004584:	239f      	movs	r3, #159	@ 0x9f
 8004586:	009b      	lsls	r3, r3, #2
 8004588:	449d      	add	sp, r3
 800458a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800458c:	9ba4      	ldr	r3, [sp, #656]	@ 0x290
 800458e:	2b03      	cmp	r3, #3
 8004590:	d1f4      	bne.n	800457c <__kernel_rem_pio2+0x4c0>
 8004592:	9b00      	ldr	r3, [sp, #0]
 8004594:	aa4e      	add	r2, sp, #312	@ 0x138
 8004596:	00db      	lsls	r3, r3, #3
 8004598:	18d4      	adds	r4, r2, r3
 800459a:	0025      	movs	r5, r4
 800459c:	9b00      	ldr	r3, [sp, #0]
 800459e:	9302      	str	r3, [sp, #8]
 80045a0:	9b02      	ldr	r3, [sp, #8]
 80045a2:	3d08      	subs	r5, #8
 80045a4:	2b00      	cmp	r3, #0
 80045a6:	dd00      	ble.n	80045aa <__kernel_rem_pio2+0x4ee>
 80045a8:	e07a      	b.n	80046a0 <__kernel_rem_pio2+0x5e4>
 80045aa:	9d00      	ldr	r5, [sp, #0]
 80045ac:	3c08      	subs	r4, #8
 80045ae:	2d01      	cmp	r5, #1
 80045b0:	dd00      	ble.n	80045b4 <__kernel_rem_pio2+0x4f8>
 80045b2:	e095      	b.n	80046e0 <__kernel_rem_pio2+0x624>
 80045b4:	2000      	movs	r0, #0
 80045b6:	2100      	movs	r1, #0
 80045b8:	9b00      	ldr	r3, [sp, #0]
 80045ba:	2b01      	cmp	r3, #1
 80045bc:	dd00      	ble.n	80045c0 <__kernel_rem_pio2+0x504>
 80045be:	e0ad      	b.n	800471c <__kernel_rem_pio2+0x660>
 80045c0:	9b50      	ldr	r3, [sp, #320]	@ 0x140
 80045c2:	9c51      	ldr	r4, [sp, #324]	@ 0x144
 80045c4:	9d4e      	ldr	r5, [sp, #312]	@ 0x138
 80045c6:	9e4f      	ldr	r6, [sp, #316]	@ 0x13c
 80045c8:	9300      	str	r3, [sp, #0]
 80045ca:	9401      	str	r4, [sp, #4]
 80045cc:	9b06      	ldr	r3, [sp, #24]
 80045ce:	2b00      	cmp	r3, #0
 80045d0:	d000      	beq.n	80045d4 <__kernel_rem_pio2+0x518>
 80045d2:	e0af      	b.n	8004734 <__kernel_rem_pio2+0x678>
 80045d4:	9b05      	ldr	r3, [sp, #20]
 80045d6:	601d      	str	r5, [r3, #0]
 80045d8:	605e      	str	r6, [r3, #4]
 80045da:	9c00      	ldr	r4, [sp, #0]
 80045dc:	9d01      	ldr	r5, [sp, #4]
 80045de:	6118      	str	r0, [r3, #16]
 80045e0:	6159      	str	r1, [r3, #20]
 80045e2:	609c      	str	r4, [r3, #8]
 80045e4:	60dd      	str	r5, [r3, #12]
 80045e6:	e7c9      	b.n	800457c <__kernel_rem_pio2+0x4c0>
 80045e8:	9b00      	ldr	r3, [sp, #0]
 80045ea:	aa4e      	add	r2, sp, #312	@ 0x138
 80045ec:	00db      	lsls	r3, r3, #3
 80045ee:	18d3      	adds	r3, r2, r3
 80045f0:	0020      	movs	r0, r4
 80045f2:	681a      	ldr	r2, [r3, #0]
 80045f4:	685b      	ldr	r3, [r3, #4]
 80045f6:	0029      	movs	r1, r5
 80045f8:	f7fb ff62 	bl	80004c0 <__aeabi_dadd>
 80045fc:	0004      	movs	r4, r0
 80045fe:	000d      	movs	r5, r1
 8004600:	9b00      	ldr	r3, [sp, #0]
 8004602:	3b01      	subs	r3, #1
 8004604:	9300      	str	r3, [sp, #0]
 8004606:	9b00      	ldr	r3, [sp, #0]
 8004608:	2b00      	cmp	r3, #0
 800460a:	daed      	bge.n	80045e8 <__kernel_rem_pio2+0x52c>
 800460c:	9b06      	ldr	r3, [sp, #24]
 800460e:	2b00      	cmp	r3, #0
 8004610:	d003      	beq.n	800461a <__kernel_rem_pio2+0x55e>
 8004612:	2180      	movs	r1, #128	@ 0x80
 8004614:	0609      	lsls	r1, r1, #24
 8004616:	186b      	adds	r3, r5, r1
 8004618:	001d      	movs	r5, r3
 800461a:	9b05      	ldr	r3, [sp, #20]
 800461c:	601c      	str	r4, [r3, #0]
 800461e:	605d      	str	r5, [r3, #4]
 8004620:	e7ac      	b.n	800457c <__kernel_rem_pio2+0x4c0>
 8004622:	2400      	movs	r4, #0
 8004624:	2500      	movs	r5, #0
 8004626:	e7ee      	b.n	8004606 <__kernel_rem_pio2+0x54a>
 8004628:	00e3      	lsls	r3, r4, #3
 800462a:	aa4e      	add	r2, sp, #312	@ 0x138
 800462c:	18d3      	adds	r3, r2, r3
 800462e:	681a      	ldr	r2, [r3, #0]
 8004630:	685b      	ldr	r3, [r3, #4]
 8004632:	f7fb ff45 	bl	80004c0 <__aeabi_dadd>
 8004636:	3c01      	subs	r4, #1
 8004638:	2c00      	cmp	r4, #0
 800463a:	daf5      	bge.n	8004628 <__kernel_rem_pio2+0x56c>
 800463c:	9c06      	ldr	r4, [sp, #24]
 800463e:	0002      	movs	r2, r0
 8004640:	000b      	movs	r3, r1
 8004642:	2c00      	cmp	r4, #0
 8004644:	d002      	beq.n	800464c <__kernel_rem_pio2+0x590>
 8004646:	2480      	movs	r4, #128	@ 0x80
 8004648:	0624      	lsls	r4, r4, #24
 800464a:	190b      	adds	r3, r1, r4
 800464c:	9c05      	ldr	r4, [sp, #20]
 800464e:	2501      	movs	r5, #1
 8004650:	6022      	str	r2, [r4, #0]
 8004652:	6063      	str	r3, [r4, #4]
 8004654:	0002      	movs	r2, r0
 8004656:	000b      	movs	r3, r1
 8004658:	984e      	ldr	r0, [sp, #312]	@ 0x138
 800465a:	994f      	ldr	r1, [sp, #316]	@ 0x13c
 800465c:	f7fd fa16 	bl	8001a8c <__aeabi_dsub>
 8004660:	0006      	movs	r6, r0
 8004662:	000f      	movs	r7, r1
 8004664:	ac4e      	add	r4, sp, #312	@ 0x138
 8004666:	9b00      	ldr	r3, [sp, #0]
 8004668:	3408      	adds	r4, #8
 800466a:	42ab      	cmp	r3, r5
 800466c:	da0e      	bge.n	800468c <__kernel_rem_pio2+0x5d0>
 800466e:	9b06      	ldr	r3, [sp, #24]
 8004670:	2b00      	cmp	r3, #0
 8004672:	d003      	beq.n	800467c <__kernel_rem_pio2+0x5c0>
 8004674:	2180      	movs	r1, #128	@ 0x80
 8004676:	0609      	lsls	r1, r1, #24
 8004678:	187b      	adds	r3, r7, r1
 800467a:	001f      	movs	r7, r3
 800467c:	9b05      	ldr	r3, [sp, #20]
 800467e:	609e      	str	r6, [r3, #8]
 8004680:	60df      	str	r7, [r3, #12]
 8004682:	e77b      	b.n	800457c <__kernel_rem_pio2+0x4c0>
 8004684:	2000      	movs	r0, #0
 8004686:	2100      	movs	r1, #0
 8004688:	9c00      	ldr	r4, [sp, #0]
 800468a:	e7d5      	b.n	8004638 <__kernel_rem_pio2+0x57c>
 800468c:	0030      	movs	r0, r6
 800468e:	6822      	ldr	r2, [r4, #0]
 8004690:	6863      	ldr	r3, [r4, #4]
 8004692:	0039      	movs	r1, r7
 8004694:	f7fb ff14 	bl	80004c0 <__aeabi_dadd>
 8004698:	3501      	adds	r5, #1
 800469a:	0006      	movs	r6, r0
 800469c:	000f      	movs	r7, r1
 800469e:	e7e2      	b.n	8004666 <__kernel_rem_pio2+0x5aa>
 80046a0:	9b02      	ldr	r3, [sp, #8]
 80046a2:	3b01      	subs	r3, #1
 80046a4:	9302      	str	r3, [sp, #8]
 80046a6:	682a      	ldr	r2, [r5, #0]
 80046a8:	686b      	ldr	r3, [r5, #4]
 80046aa:	9208      	str	r2, [sp, #32]
 80046ac:	9309      	str	r3, [sp, #36]	@ 0x24
 80046ae:	9808      	ldr	r0, [sp, #32]
 80046b0:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80046b2:	68aa      	ldr	r2, [r5, #8]
 80046b4:	68eb      	ldr	r3, [r5, #12]
 80046b6:	920a      	str	r2, [sp, #40]	@ 0x28
 80046b8:	930b      	str	r3, [sp, #44]	@ 0x2c
 80046ba:	f7fb ff01 	bl	80004c0 <__aeabi_dadd>
 80046be:	0002      	movs	r2, r0
 80046c0:	000b      	movs	r3, r1
 80046c2:	0006      	movs	r6, r0
 80046c4:	000f      	movs	r7, r1
 80046c6:	9808      	ldr	r0, [sp, #32]
 80046c8:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80046ca:	f7fd f9df 	bl	8001a8c <__aeabi_dsub>
 80046ce:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80046d0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80046d2:	f7fb fef5 	bl	80004c0 <__aeabi_dadd>
 80046d6:	602e      	str	r6, [r5, #0]
 80046d8:	606f      	str	r7, [r5, #4]
 80046da:	60a8      	str	r0, [r5, #8]
 80046dc:	60e9      	str	r1, [r5, #12]
 80046de:	e75f      	b.n	80045a0 <__kernel_rem_pio2+0x4e4>
 80046e0:	6822      	ldr	r2, [r4, #0]
 80046e2:	6863      	ldr	r3, [r4, #4]
 80046e4:	9202      	str	r2, [sp, #8]
 80046e6:	9303      	str	r3, [sp, #12]
 80046e8:	9802      	ldr	r0, [sp, #8]
 80046ea:	9903      	ldr	r1, [sp, #12]
 80046ec:	68a2      	ldr	r2, [r4, #8]
 80046ee:	68e3      	ldr	r3, [r4, #12]
 80046f0:	9208      	str	r2, [sp, #32]
 80046f2:	9309      	str	r3, [sp, #36]	@ 0x24
 80046f4:	f7fb fee4 	bl	80004c0 <__aeabi_dadd>
 80046f8:	0002      	movs	r2, r0
 80046fa:	000b      	movs	r3, r1
 80046fc:	0006      	movs	r6, r0
 80046fe:	000f      	movs	r7, r1
 8004700:	9802      	ldr	r0, [sp, #8]
 8004702:	9903      	ldr	r1, [sp, #12]
 8004704:	f7fd f9c2 	bl	8001a8c <__aeabi_dsub>
 8004708:	9a08      	ldr	r2, [sp, #32]
 800470a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800470c:	f7fb fed8 	bl	80004c0 <__aeabi_dadd>
 8004710:	3d01      	subs	r5, #1
 8004712:	60a0      	str	r0, [r4, #8]
 8004714:	60e1      	str	r1, [r4, #12]
 8004716:	6026      	str	r6, [r4, #0]
 8004718:	6067      	str	r7, [r4, #4]
 800471a:	e747      	b.n	80045ac <__kernel_rem_pio2+0x4f0>
 800471c:	9b00      	ldr	r3, [sp, #0]
 800471e:	aa4e      	add	r2, sp, #312	@ 0x138
 8004720:	00db      	lsls	r3, r3, #3
 8004722:	18d3      	adds	r3, r2, r3
 8004724:	681a      	ldr	r2, [r3, #0]
 8004726:	685b      	ldr	r3, [r3, #4]
 8004728:	f7fb feca 	bl	80004c0 <__aeabi_dadd>
 800472c:	9b00      	ldr	r3, [sp, #0]
 800472e:	3b01      	subs	r3, #1
 8004730:	9300      	str	r3, [sp, #0]
 8004732:	e741      	b.n	80045b8 <__kernel_rem_pio2+0x4fc>
 8004734:	9b05      	ldr	r3, [sp, #20]
 8004736:	9a05      	ldr	r2, [sp, #20]
 8004738:	601d      	str	r5, [r3, #0]
 800473a:	2380      	movs	r3, #128	@ 0x80
 800473c:	061b      	lsls	r3, r3, #24
 800473e:	18f4      	adds	r4, r6, r3
 8004740:	6054      	str	r4, [r2, #4]
 8004742:	9a00      	ldr	r2, [sp, #0]
 8004744:	9c05      	ldr	r4, [sp, #20]
 8004746:	60a2      	str	r2, [r4, #8]
 8004748:	001a      	movs	r2, r3
 800474a:	9c01      	ldr	r4, [sp, #4]
 800474c:	18e3      	adds	r3, r4, r3
 800474e:	9c05      	ldr	r4, [sp, #20]
 8004750:	60e3      	str	r3, [r4, #12]
 8004752:	188b      	adds	r3, r1, r2
 8004754:	6120      	str	r0, [r4, #16]
 8004756:	6163      	str	r3, [r4, #20]
 8004758:	e710      	b.n	800457c <__kernel_rem_pio2+0x4c0>
 800475a:	46c0      	nop			@ (mov r8, r8)
 800475c:	41700000 	.word	0x41700000
 8004760:	3e700000 	.word	0x3e700000

08004764 <scalbn>:
 8004764:	004b      	lsls	r3, r1, #1
 8004766:	b570      	push	{r4, r5, r6, lr}
 8004768:	0d5b      	lsrs	r3, r3, #21
 800476a:	0014      	movs	r4, r2
 800476c:	000d      	movs	r5, r1
 800476e:	2b00      	cmp	r3, #0
 8004770:	d10f      	bne.n	8004792 <scalbn+0x2e>
 8004772:	004b      	lsls	r3, r1, #1
 8004774:	085b      	lsrs	r3, r3, #1
 8004776:	4303      	orrs	r3, r0
 8004778:	d012      	beq.n	80047a0 <scalbn+0x3c>
 800477a:	4b23      	ldr	r3, [pc, #140]	@ (8004808 <scalbn+0xa4>)
 800477c:	2200      	movs	r2, #0
 800477e:	f7fc fe9f 	bl	80014c0 <__aeabi_dmul>
 8004782:	4b22      	ldr	r3, [pc, #136]	@ (800480c <scalbn+0xa8>)
 8004784:	429c      	cmp	r4, r3
 8004786:	da0c      	bge.n	80047a2 <scalbn+0x3e>
 8004788:	4a21      	ldr	r2, [pc, #132]	@ (8004810 <scalbn+0xac>)
 800478a:	4b22      	ldr	r3, [pc, #136]	@ (8004814 <scalbn+0xb0>)
 800478c:	f7fc fe98 	bl	80014c0 <__aeabi_dmul>
 8004790:	e006      	b.n	80047a0 <scalbn+0x3c>
 8004792:	4a21      	ldr	r2, [pc, #132]	@ (8004818 <scalbn+0xb4>)
 8004794:	4293      	cmp	r3, r2
 8004796:	d108      	bne.n	80047aa <scalbn+0x46>
 8004798:	0002      	movs	r2, r0
 800479a:	000b      	movs	r3, r1
 800479c:	f7fb fe90 	bl	80004c0 <__aeabi_dadd>
 80047a0:	bd70      	pop	{r4, r5, r6, pc}
 80047a2:	000d      	movs	r5, r1
 80047a4:	004b      	lsls	r3, r1, #1
 80047a6:	0d5b      	lsrs	r3, r3, #21
 80047a8:	3b36      	subs	r3, #54	@ 0x36
 80047aa:	4a1c      	ldr	r2, [pc, #112]	@ (800481c <scalbn+0xb8>)
 80047ac:	4294      	cmp	r4, r2
 80047ae:	dd0a      	ble.n	80047c6 <scalbn+0x62>
 80047b0:	4c1b      	ldr	r4, [pc, #108]	@ (8004820 <scalbn+0xbc>)
 80047b2:	4d1c      	ldr	r5, [pc, #112]	@ (8004824 <scalbn+0xc0>)
 80047b4:	2900      	cmp	r1, #0
 80047b6:	da01      	bge.n	80047bc <scalbn+0x58>
 80047b8:	4c19      	ldr	r4, [pc, #100]	@ (8004820 <scalbn+0xbc>)
 80047ba:	4d1b      	ldr	r5, [pc, #108]	@ (8004828 <scalbn+0xc4>)
 80047bc:	4a18      	ldr	r2, [pc, #96]	@ (8004820 <scalbn+0xbc>)
 80047be:	4b19      	ldr	r3, [pc, #100]	@ (8004824 <scalbn+0xc0>)
 80047c0:	0020      	movs	r0, r4
 80047c2:	0029      	movs	r1, r5
 80047c4:	e7e2      	b.n	800478c <scalbn+0x28>
 80047c6:	18e2      	adds	r2, r4, r3
 80047c8:	4b18      	ldr	r3, [pc, #96]	@ (800482c <scalbn+0xc8>)
 80047ca:	429a      	cmp	r2, r3
 80047cc:	dcf0      	bgt.n	80047b0 <scalbn+0x4c>
 80047ce:	2a00      	cmp	r2, #0
 80047d0:	dd05      	ble.n	80047de <scalbn+0x7a>
 80047d2:	4b17      	ldr	r3, [pc, #92]	@ (8004830 <scalbn+0xcc>)
 80047d4:	0512      	lsls	r2, r2, #20
 80047d6:	402b      	ands	r3, r5
 80047d8:	4313      	orrs	r3, r2
 80047da:	0019      	movs	r1, r3
 80047dc:	e7e0      	b.n	80047a0 <scalbn+0x3c>
 80047de:	0013      	movs	r3, r2
 80047e0:	3335      	adds	r3, #53	@ 0x35
 80047e2:	da08      	bge.n	80047f6 <scalbn+0x92>
 80047e4:	4c0a      	ldr	r4, [pc, #40]	@ (8004810 <scalbn+0xac>)
 80047e6:	4d0b      	ldr	r5, [pc, #44]	@ (8004814 <scalbn+0xb0>)
 80047e8:	2900      	cmp	r1, #0
 80047ea:	da01      	bge.n	80047f0 <scalbn+0x8c>
 80047ec:	4c08      	ldr	r4, [pc, #32]	@ (8004810 <scalbn+0xac>)
 80047ee:	4d11      	ldr	r5, [pc, #68]	@ (8004834 <scalbn+0xd0>)
 80047f0:	4a07      	ldr	r2, [pc, #28]	@ (8004810 <scalbn+0xac>)
 80047f2:	4b08      	ldr	r3, [pc, #32]	@ (8004814 <scalbn+0xb0>)
 80047f4:	e7e4      	b.n	80047c0 <scalbn+0x5c>
 80047f6:	4b0e      	ldr	r3, [pc, #56]	@ (8004830 <scalbn+0xcc>)
 80047f8:	3236      	adds	r2, #54	@ 0x36
 80047fa:	401d      	ands	r5, r3
 80047fc:	0512      	lsls	r2, r2, #20
 80047fe:	432a      	orrs	r2, r5
 8004800:	0011      	movs	r1, r2
 8004802:	4b0d      	ldr	r3, [pc, #52]	@ (8004838 <scalbn+0xd4>)
 8004804:	2200      	movs	r2, #0
 8004806:	e7c1      	b.n	800478c <scalbn+0x28>
 8004808:	43500000 	.word	0x43500000
 800480c:	ffff3cb0 	.word	0xffff3cb0
 8004810:	c2f8f359 	.word	0xc2f8f359
 8004814:	01a56e1f 	.word	0x01a56e1f
 8004818:	000007ff 	.word	0x000007ff
 800481c:	0000c350 	.word	0x0000c350
 8004820:	8800759c 	.word	0x8800759c
 8004824:	7e37e43c 	.word	0x7e37e43c
 8004828:	fe37e43c 	.word	0xfe37e43c
 800482c:	000007fe 	.word	0x000007fe
 8004830:	800fffff 	.word	0x800fffff
 8004834:	81a56e1f 	.word	0x81a56e1f
 8004838:	3c900000 	.word	0x3c900000

0800483c <floor>:
 800483c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800483e:	004b      	lsls	r3, r1, #1
 8004840:	4a36      	ldr	r2, [pc, #216]	@ (800491c <floor+0xe0>)
 8004842:	0d5b      	lsrs	r3, r3, #21
 8004844:	189e      	adds	r6, r3, r2
 8004846:	000c      	movs	r4, r1
 8004848:	0005      	movs	r5, r0
 800484a:	9001      	str	r0, [sp, #4]
 800484c:	2e13      	cmp	r6, #19
 800484e:	dc2f      	bgt.n	80048b0 <floor+0x74>
 8004850:	2e00      	cmp	r6, #0
 8004852:	da14      	bge.n	800487e <floor+0x42>
 8004854:	4a32      	ldr	r2, [pc, #200]	@ (8004920 <floor+0xe4>)
 8004856:	4b33      	ldr	r3, [pc, #204]	@ (8004924 <floor+0xe8>)
 8004858:	f7fb fe32 	bl	80004c0 <__aeabi_dadd>
 800485c:	2200      	movs	r2, #0
 800485e:	2300      	movs	r3, #0
 8004860:	f7fb fdfc 	bl	800045c <__aeabi_dcmpgt>
 8004864:	2800      	cmp	r0, #0
 8004866:	d007      	beq.n	8004878 <floor+0x3c>
 8004868:	2c00      	cmp	r4, #0
 800486a:	da50      	bge.n	800490e <floor+0xd2>
 800486c:	0064      	lsls	r4, r4, #1
 800486e:	0864      	lsrs	r4, r4, #1
 8004870:	4325      	orrs	r5, r4
 8004872:	d14f      	bne.n	8004914 <floor+0xd8>
 8004874:	2480      	movs	r4, #128	@ 0x80
 8004876:	0624      	lsls	r4, r4, #24
 8004878:	0021      	movs	r1, r4
 800487a:	0028      	movs	r0, r5
 800487c:	e022      	b.n	80048c4 <floor+0x88>
 800487e:	4f2a      	ldr	r7, [pc, #168]	@ (8004928 <floor+0xec>)
 8004880:	4137      	asrs	r7, r6
 8004882:	003b      	movs	r3, r7
 8004884:	400b      	ands	r3, r1
 8004886:	4303      	orrs	r3, r0
 8004888:	d01c      	beq.n	80048c4 <floor+0x88>
 800488a:	4a25      	ldr	r2, [pc, #148]	@ (8004920 <floor+0xe4>)
 800488c:	4b25      	ldr	r3, [pc, #148]	@ (8004924 <floor+0xe8>)
 800488e:	f7fb fe17 	bl	80004c0 <__aeabi_dadd>
 8004892:	2200      	movs	r2, #0
 8004894:	2300      	movs	r3, #0
 8004896:	f7fb fde1 	bl	800045c <__aeabi_dcmpgt>
 800489a:	2800      	cmp	r0, #0
 800489c:	d0ec      	beq.n	8004878 <floor+0x3c>
 800489e:	2c00      	cmp	r4, #0
 80048a0:	da03      	bge.n	80048aa <floor+0x6e>
 80048a2:	2380      	movs	r3, #128	@ 0x80
 80048a4:	035b      	lsls	r3, r3, #13
 80048a6:	4133      	asrs	r3, r6
 80048a8:	18e4      	adds	r4, r4, r3
 80048aa:	2500      	movs	r5, #0
 80048ac:	43bc      	bics	r4, r7
 80048ae:	e7e3      	b.n	8004878 <floor+0x3c>
 80048b0:	2e33      	cmp	r6, #51	@ 0x33
 80048b2:	dd09      	ble.n	80048c8 <floor+0x8c>
 80048b4:	2380      	movs	r3, #128	@ 0x80
 80048b6:	00db      	lsls	r3, r3, #3
 80048b8:	429e      	cmp	r6, r3
 80048ba:	d103      	bne.n	80048c4 <floor+0x88>
 80048bc:	0002      	movs	r2, r0
 80048be:	000b      	movs	r3, r1
 80048c0:	f7fb fdfe 	bl	80004c0 <__aeabi_dadd>
 80048c4:	b003      	add	sp, #12
 80048c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80048c8:	2701      	movs	r7, #1
 80048ca:	4a18      	ldr	r2, [pc, #96]	@ (800492c <floor+0xf0>)
 80048cc:	427f      	negs	r7, r7
 80048ce:	189b      	adds	r3, r3, r2
 80048d0:	40df      	lsrs	r7, r3
 80048d2:	4238      	tst	r0, r7
 80048d4:	d0f6      	beq.n	80048c4 <floor+0x88>
 80048d6:	4a12      	ldr	r2, [pc, #72]	@ (8004920 <floor+0xe4>)
 80048d8:	4b12      	ldr	r3, [pc, #72]	@ (8004924 <floor+0xe8>)
 80048da:	f7fb fdf1 	bl	80004c0 <__aeabi_dadd>
 80048de:	2200      	movs	r2, #0
 80048e0:	2300      	movs	r3, #0
 80048e2:	f7fb fdbb 	bl	800045c <__aeabi_dcmpgt>
 80048e6:	2800      	cmp	r0, #0
 80048e8:	d0c6      	beq.n	8004878 <floor+0x3c>
 80048ea:	2c00      	cmp	r4, #0
 80048ec:	da02      	bge.n	80048f4 <floor+0xb8>
 80048ee:	2e14      	cmp	r6, #20
 80048f0:	d102      	bne.n	80048f8 <floor+0xbc>
 80048f2:	3401      	adds	r4, #1
 80048f4:	43bd      	bics	r5, r7
 80048f6:	e7bf      	b.n	8004878 <floor+0x3c>
 80048f8:	2234      	movs	r2, #52	@ 0x34
 80048fa:	2301      	movs	r3, #1
 80048fc:	1b92      	subs	r2, r2, r6
 80048fe:	4093      	lsls	r3, r2
 8004900:	18ed      	adds	r5, r5, r3
 8004902:	9b01      	ldr	r3, [sp, #4]
 8004904:	429d      	cmp	r5, r3
 8004906:	419b      	sbcs	r3, r3
 8004908:	425b      	negs	r3, r3
 800490a:	18e4      	adds	r4, r4, r3
 800490c:	e7f2      	b.n	80048f4 <floor+0xb8>
 800490e:	2500      	movs	r5, #0
 8004910:	002c      	movs	r4, r5
 8004912:	e7b1      	b.n	8004878 <floor+0x3c>
 8004914:	2500      	movs	r5, #0
 8004916:	4c06      	ldr	r4, [pc, #24]	@ (8004930 <floor+0xf4>)
 8004918:	e7ae      	b.n	8004878 <floor+0x3c>
 800491a:	46c0      	nop			@ (mov r8, r8)
 800491c:	fffffc01 	.word	0xfffffc01
 8004920:	8800759c 	.word	0x8800759c
 8004924:	7e37e43c 	.word	0x7e37e43c
 8004928:	000fffff 	.word	0x000fffff
 800492c:	fffffbed 	.word	0xfffffbed
 8004930:	bff00000 	.word	0xbff00000

08004934 <_init>:
 8004934:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004936:	46c0      	nop			@ (mov r8, r8)
 8004938:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800493a:	bc08      	pop	{r3}
 800493c:	469e      	mov	lr, r3
 800493e:	4770      	bx	lr

08004940 <_fini>:
 8004940:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004942:	46c0      	nop			@ (mov r8, r8)
 8004944:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004946:	bc08      	pop	{r3}
 8004948:	469e      	mov	lr, r3
 800494a:	4770      	bx	lr
